{"version":3,"file":"js/chunks/js/inventory/stock-transfer/edit.js?id=b07f963082850c2c","mappings":";;;;;;;;;;;;;;AAyBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAKA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;ACvSA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AASA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AASA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/inventory/stock-transfer/edit.vue","webpack://InstiKit/resources/js/views/inventory/stock-transfer/form.vue","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/edit.vue","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/form.vue","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/edit.vue?73d5","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/form.vue?b168","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/edit.vue?98e5","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/form.vue?2407","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/edit.vue?b137"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('inventory.edit_stock_transfer')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/inventory/stock/transfer')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('inventory.stock_transfer')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card card-form\">\r\n                <div class=\"card-body p-t-20\">\r\n                    <stock-transfer-form :id=\"id\"></stock-transfer-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import stockTransferForm from './form';\r\n\r\n    export default {\r\n        components : { stockTransferForm },\r\n        data() {\r\n            return {\r\n                id:this.$route.params.id\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('edit-stock-transfer')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n        }\r\n    }\r\n</script>","<template>\r\n\t<div>\r\n        <form @submit.prevent=\"proceed\" @keydown=\"stockTransferForm.errors.clear($event.target.name)\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('inventory.stock_transfer_date')}}</label>\r\n                        <datepicker v-model=\"stockTransferForm.date\" :bootstrapStyling=\"true\" @selected=\"stockTransferForm.errors.clear('date')\" :placeholder=\"trans('inventory.stock_transfer_date')\"></datepicker>\r\n                        <show-error :form-name=\"stockTransferForm\" prop-name=\"date\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('inventory.stock_transfer_return_due_date')}}</label>\r\n                        <datepicker v-model=\"stockTransferForm.return_due_\" :bootstrapStyling=\"true\" @selected=\"stockTransferForm.errors.clear('return_due_')\" :placeholder=\"trans('inventory.stock_transfer_return_due_date')\"></datepicker>\r\n                        <show-error :form-name=\"stockTransferForm\" prop-name=\"return_due_\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"radio radio-success m-t-20\">\r\n                            <input type=\"radio\" value=\"room\" id=\"type_room\" v-model=\"stockTransferForm.type\" :checked=\"stockTransferForm.type == 'room'\" name=\"type\" @click=\"stockTransferForm.errors.clear('type')\">\r\n                            <label for=\"type_room\">{{trans('asset.room')}}</label> <br />\r\n                            <input type=\"radio\" value=\"student\" id=\"type_student\" v-model=\"stockTransferForm.type\" :checked=\"stockTransferForm.type == 'student'\" name=\"type\" @click=\"stockTransferForm.errors.clear('type')\">\r\n                            <label for=\"type_student\">{{trans('student.student')}}</label> <br />\r\n                            <input type=\"radio\" value=\"employee\" id=\"type_employee\" v-model=\"stockTransferForm.type\" :checked=\"stockTransferForm.type == 'employee'\" name=\"type\" @click=\"stockTransferForm.errors.clear('type')\">\r\n                            <label for=\"type_employee\">{{trans('employee.employee')}}</label>\r\n                        </div>\r\n                        <show-error :form-name=\"stockTransferForm\" prop-name=\"type\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\" v-if=\"stockTransferForm.type == 'room'\">\r\n                        <label for=\"\">{{trans('asset.room')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_room\" name=\"room_id\" id=\"room_id\" :options=\"rooms\" :placeholder=\"trans('inventory.select_room')\" @select=\"onRoomSelect\" @close=\"stockTransferForm.errors.clear('room_id')\" @remove=\"stockTransferForm.room_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!rooms.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"stockTransferForm\" prop-name=\"room_id\"></show-error>\r\n                    </div>\r\n                    <div class=\"form-group\" v-if=\"stockTransferForm.type == 'student'\">\r\n                        <label for=\"\">{{trans('student.student')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_student\" name=\"student_id\" id=\"student_id\" :options=\"students\" :placeholder=\"trans('student.select_student')\" @select=\"onStudentSelect\" @close=\"stockTransferForm.errors.clear('student_id')\" @remove=\"stockTransferForm.student_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!students.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"stockTransferForm\" prop-name=\"student_id\"></show-error>\r\n                    </div>\r\n                    <div class=\"form-group\" v-if=\"stockTransferForm.type == 'employee'\">\r\n                        <label for=\"\">{{trans('employee.employee')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_employee\" name=\"employee_id\" id=\"employee_id\" :options=\"employees\" :placeholder=\"trans('employee.select_employee')\" @select=\"onEmployeeSelect\" @close=\"stockTransferForm.errors.clear('employee_id')\" @remove=\"stockTransferForm.employee_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employees.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"stockTransferForm\" prop-name=\"employee_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('inventory.stock_transfer_description')}}</label>\r\n                        <autosize-textarea v-model=\"stockTransferForm.description\" rows=\"1\" name=\"description\" :placeholder=\"trans('inventory.stock_transfer_description')\"></autosize-textarea>\r\n                        <show-error :form-name=\"stockTransferForm\" prop-name=\"description\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-t-20 border-top\">\r\n                <div class=\"row\" v-for=\"(detail, index) in stockTransferForm.details\">\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">\r\n                                {{trans('inventory.stock_item')}}\r\n                                <button type=\"button\" class=\"btn btn-xs btn-danger\" :key=\"`${index}_delete_detail`\" v-confirm=\"{ok: confirmDelete(index)}\" v-tooltip=\"trans('general.delete')\"><i class=\"fas fa-times\"></i></button>\r\n                            </label>\r\n                            <v-select label=\"name\" v-model=\"detail.selected_stock_item\" :name=\"getStockItemName(index)\" :id=\"getStockItemName(index)\" :options=\"stock_items\" :placeholder=\"trans('inventory.select_stock_item')\" @select=\"onStockItemSelect\" @close=\"stockTransferForm.errors.clear(getStockItemName(index))\" @remove=\"onStockItemRemove\">\r\n                                <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!stock_items.length\">\r\n                                    {{trans('general.no_option_found')}}\r\n                                </div>\r\n                            </v-select>\r\n                            <show-error :form-name=\"stockTransferForm\" :prop-name=\"getStockItemName(index)\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('inventory.stock_transfer_quantity')}}</label>\r\n                            <input class=\"form-control\" type=\"text\" v-model=\"detail.quantity\" :name=\"getQuantityName(index)\" :placeholder=\"trans('inventory.stock_transfer_quantity')\">\r\n                            <show-error :form-name=\"stockTransferForm\" :prop-name=\"getQuantityName(index)\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">\r\n                                {{trans('inventory.stock_item_description')}}\r\n                            </label>\r\n                            <input class=\"form-control\" type=\"text\" v-model=\"detail.description\" :name=\"getDescriptionName(index)\" :placeholder=\"trans('inventory.stock_item_description')\">\r\n                            <show-error :form-name=\"stockTransferForm\" :prop-name=\"getDescriptionName(index)\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" @click=\"addRow\" class=\"btn btn-info btn-sm waves-effect waves-light\">{{trans('inventory.add_new_stock_item')}}</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <div class=\"form-group\">\r\n                            <file-upload-input :button-text=\"trans('general.upload_document')\" :token=\"stockTransferForm.upload_token\" module=\"stock_transfer\" :clear-file=\"clearAttachment\" :module-id=\"module_id\"></file-upload-input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer text-right\">\r\n                <button v-show=\"id\" type=\"button\" class=\"btn btn-danger \" @click=\"$router.push('/inventory/stock/transfer')\">{{trans('general.cancel')}}</button>\r\n                <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.save')}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    export default {\r\n        components: {},\r\n        props: ['id'],\r\n        data(){\r\n            return {\r\n                stockTransferForm: new Form({\r\n                    type: 'room',\r\n                    date: '',\r\n                    return_due_date: '',\r\n                    room_id: '',\r\n                    student_id: '',\r\n                    employee_id: '',\r\n                    description: '',\r\n                    details: [],\r\n                    upload_token: ''\r\n                }),\r\n                stock_items: [],\r\n                rooms: [],\r\n                selected_room: null,\r\n                employees: [],\r\n                selected_employee: null,\r\n                students: [],\r\n                selected_student: null,\r\n                module_id: '',\r\n                clearAttachment: true\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!this.id)\r\n                this.addRow();\r\n\r\n            if(this.id)\r\n                this.get();\r\n            else\r\n                this.stockTransferForm.upload_token = this.$uuid.v4();\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            proceed(){\r\n                if(this.id)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            }, \r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/stock/transfer/pre-requisite')\r\n                    .then(response => {\r\n                        this.rooms = response.rooms;\r\n                        this.students = response.students;\r\n                        this.employees = response.employees;\r\n                        this.stock_items = response.stock_items;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            addRow(){\r\n                let new_index = this.stockTransferForm.details.push({\r\n                    quantity: '',\r\n                    stock_item_id: '',\r\n                    description: '',\r\n                    selected_stock_item: null\r\n                })\r\n            },\r\n            getStockItemName(index){\r\n                return index+'_stock_item_id';\r\n            },\r\n            getDescriptionName(index){\r\n                return index+'_description';\r\n            },\r\n            getQuantityName(index){\r\n                return index+'_quantity';\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/stock/transfer/'+this.id)\r\n                    .then(response => {\r\n                        this.stockTransferForm.type = response.stock_transfer.type;\r\n                        this.stockTransferForm.upload_token = response.stock_transfer.upload_token;\r\n                        this.module_id = response.stock_transfer.id;\r\n                        this.stockTransferForm.number = response.stock_transfer.number;\r\n                        this.stockTransferForm.date = response.stock_transfer.date;\r\n                        this.stockTransferForm.return_due_date = response.stock_transfer.return_due_date;\r\n                        this.stockTransferForm.description = response.stock_transfer.description;\r\n                        this.stockTransferForm.room_id = response.stock_transfer.room_id;\r\n                        this.selected_room = response.selected_room;\r\n                        this.stockTransferForm.employee_id = response.stock_transfer.employee_id;\r\n                        this.selected_employee = response.selected_employee;\r\n                        this.stockTransferForm.student_id = response.stock_transfer.student_id;\r\n                        this.selected_student = response.selected_student;\r\n                        response.stock_transfer.details.forEach(detail => {\r\n                            this.stockTransferForm.details.push({\r\n                                quantity: detail.quantity,\r\n                                stock_item_id: detail.stock_item_id,\r\n                                selected_stock_item: (detail.stock_item_id) ? {id: detail.stock_item_id, name: detail.item.name} : null,\r\n                                description: detail.description\r\n                            });\r\n                        });\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.stockTransferForm.post('/api/stock/transfer')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.selected_room = null;\r\n                        this.selected_student = null;\r\n                        this.selected_employee = null;\r\n                        this.stockTransferForm.details = [];\r\n                        this.clearAttachment = !this.clearAttachment;\r\n                        this.stockTransferForm.upload_token = this.$uuid.v4();\r\n                        this.addRow();\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.stockTransferForm.patch('/api/stock/transfer/'+this.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/inventory/stock/transfer');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            onRoomSelect(selectedOption){\r\n                this.stockTransferForm.room_id = selectedOption.id;\r\n            },\r\n            onEmployeeSelect(selectedOption){\r\n                this.stockTransferForm.employee_id = selectedOption.id;\r\n            },\r\n            onStudentSelect(selectedOption){\r\n                this.stockTransferForm.student_id = selectedOption.id;\r\n            },\r\n            confirmDelete(index){\r\n                return dialog => this.deleteDetail(index);\r\n            },\r\n            deleteDetail(index){\r\n                this.stockTransferForm.details.splice(index, 1);\r\n            },\r\n            onStockItemSelect(selectedOption, id){\r\n                let index = id.split(\"_\")[0];\r\n                let detail = this.stockTransferForm.details[index];\r\n                detail.stock_item_id = selectedOption.id;\r\n            },\r\n            onStockItemRemove(removedOption, id){\r\n                let index = id.split(\"_\")[0];\r\n                let detail = this.stockTransferForm.details[index];\r\n                detail.stock_item_id = '';\r\n            }\r\n        },\r\n        computed:{\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"inventory.edit_stock_transfer\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/inventory/stock/transfer\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"inventory.stock_transfer\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"card-body p-t-20\" },\n          [_c(\"stock-transfer-form\", { attrs: { id: _vm.id } })],\n          1\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.stockTransferForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"inventory.stock_transfer_date\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\"inventory.stock_transfer_date\"),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.stockTransferForm.errors.clear(\"date\")\n                    },\n                  },\n                  model: {\n                    value: _vm.stockTransferForm.date,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.stockTransferForm, \"date\", $$v)\n                    },\n                    expression: \"stockTransferForm.date\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.stockTransferForm,\n                    \"prop-name\": \"date\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(\n                      _vm.trans(\"inventory.stock_transfer_return_due_date\")\n                    )\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\n                      \"inventory.stock_transfer_return_due_date\"\n                    ),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.stockTransferForm.errors.clear(\"return_due_\")\n                    },\n                  },\n                  model: {\n                    value: _vm.stockTransferForm.return_due_,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.stockTransferForm, \"return_due_\", $$v)\n                    },\n                    expression: \"stockTransferForm.return_due_\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.stockTransferForm,\n                    \"prop-name\": \"return_due_\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"div\", { staticClass: \"radio radio-success m-t-20\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.stockTransferForm.type,\n                        expression: \"stockTransferForm.type\",\n                      },\n                    ],\n                    attrs: {\n                      type: \"radio\",\n                      value: \"room\",\n                      id: \"type_room\",\n                      name: \"type\",\n                    },\n                    domProps: {\n                      checked: _vm.stockTransferForm.type == \"room\",\n                      checked: _vm._q(_vm.stockTransferForm.type, \"room\"),\n                    },\n                    on: {\n                      click: function ($event) {\n                        return _vm.stockTransferForm.errors.clear(\"type\")\n                      },\n                      change: function ($event) {\n                        return _vm.$set(_vm.stockTransferForm, \"type\", \"room\")\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"label\", { attrs: { for: \"type_room\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"asset.room\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"br\"),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.stockTransferForm.type,\n                        expression: \"stockTransferForm.type\",\n                      },\n                    ],\n                    attrs: {\n                      type: \"radio\",\n                      value: \"student\",\n                      id: \"type_student\",\n                      name: \"type\",\n                    },\n                    domProps: {\n                      checked: _vm.stockTransferForm.type == \"student\",\n                      checked: _vm._q(_vm.stockTransferForm.type, \"student\"),\n                    },\n                    on: {\n                      click: function ($event) {\n                        return _vm.stockTransferForm.errors.clear(\"type\")\n                      },\n                      change: function ($event) {\n                        return _vm.$set(\n                          _vm.stockTransferForm,\n                          \"type\",\n                          \"student\"\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"label\", { attrs: { for: \"type_student\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"student.student\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"br\"),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.stockTransferForm.type,\n                        expression: \"stockTransferForm.type\",\n                      },\n                    ],\n                    attrs: {\n                      type: \"radio\",\n                      value: \"employee\",\n                      id: \"type_employee\",\n                      name: \"type\",\n                    },\n                    domProps: {\n                      checked: _vm.stockTransferForm.type == \"employee\",\n                      checked: _vm._q(_vm.stockTransferForm.type, \"employee\"),\n                    },\n                    on: {\n                      click: function ($event) {\n                        return _vm.stockTransferForm.errors.clear(\"type\")\n                      },\n                      change: function ($event) {\n                        return _vm.$set(\n                          _vm.stockTransferForm,\n                          \"type\",\n                          \"employee\"\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"label\", { attrs: { for: \"type_employee\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.stockTransferForm,\n                    \"prop-name\": \"type\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _vm.stockTransferForm.type == \"room\"\n              ? _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"asset.room\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"v-select\",\n                      {\n                        attrs: {\n                          label: \"name\",\n                          name: \"room_id\",\n                          id: \"room_id\",\n                          options: _vm.rooms,\n                          placeholder: _vm.trans(\"inventory.select_room\"),\n                        },\n                        on: {\n                          select: _vm.onRoomSelect,\n                          close: function ($event) {\n                            return _vm.stockTransferForm.errors.clear(\"room_id\")\n                          },\n                          remove: function ($event) {\n                            _vm.stockTransferForm.room_id = \"\"\n                          },\n                        },\n                        model: {\n                          value: _vm.selected_room,\n                          callback: function ($$v) {\n                            _vm.selected_room = $$v\n                          },\n                          expression: \"selected_room\",\n                        },\n                      },\n                      [\n                        !_vm.rooms.length\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"multiselect__option\",\n                                attrs: { slot: \"afterList\" },\n                                slot: \"afterList\",\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                \" +\n                                    _vm._s(\n                                      _vm.trans(\"general.no_option_found\")\n                                    ) +\n                                    \"\\n                            \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.stockTransferForm,\n                        \"prop-name\": \"room_id\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.stockTransferForm.type == \"student\"\n              ? _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"student.student\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"v-select\",\n                      {\n                        attrs: {\n                          label: \"name\",\n                          name: \"student_id\",\n                          id: \"student_id\",\n                          options: _vm.students,\n                          placeholder: _vm.trans(\"student.select_student\"),\n                        },\n                        on: {\n                          select: _vm.onStudentSelect,\n                          close: function ($event) {\n                            return _vm.stockTransferForm.errors.clear(\n                              \"student_id\"\n                            )\n                          },\n                          remove: function ($event) {\n                            _vm.stockTransferForm.student_id = \"\"\n                          },\n                        },\n                        model: {\n                          value: _vm.selected_student,\n                          callback: function ($$v) {\n                            _vm.selected_student = $$v\n                          },\n                          expression: \"selected_student\",\n                        },\n                      },\n                      [\n                        !_vm.students.length\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"multiselect__option\",\n                                attrs: { slot: \"afterList\" },\n                                slot: \"afterList\",\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                \" +\n                                    _vm._s(\n                                      _vm.trans(\"general.no_option_found\")\n                                    ) +\n                                    \"\\n                            \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.stockTransferForm,\n                        \"prop-name\": \"student_id\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.stockTransferForm.type == \"employee\"\n              ? _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"v-select\",\n                      {\n                        attrs: {\n                          label: \"name\",\n                          name: \"employee_id\",\n                          id: \"employee_id\",\n                          options: _vm.employees,\n                          placeholder: _vm.trans(\"employee.select_employee\"),\n                        },\n                        on: {\n                          select: _vm.onEmployeeSelect,\n                          close: function ($event) {\n                            return _vm.stockTransferForm.errors.clear(\n                              \"employee_id\"\n                            )\n                          },\n                          remove: function ($event) {\n                            _vm.stockTransferForm.employee_id = \"\"\n                          },\n                        },\n                        model: {\n                          value: _vm.selected_employee,\n                          callback: function ($$v) {\n                            _vm.selected_employee = $$v\n                          },\n                          expression: \"selected_employee\",\n                        },\n                      },\n                      [\n                        !_vm.employees.length\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"multiselect__option\",\n                                attrs: { slot: \"afterList\" },\n                                slot: \"afterList\",\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                \" +\n                                    _vm._s(\n                                      _vm.trans(\"general.no_option_found\")\n                                    ) +\n                                    \"\\n                            \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.stockTransferForm,\n                        \"prop-name\": \"employee_id\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"inventory.stock_transfer_description\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"autosize-textarea\", {\n                  attrs: {\n                    rows: \"1\",\n                    name: \"description\",\n                    placeholder: _vm.trans(\n                      \"inventory.stock_transfer_description\"\n                    ),\n                  },\n                  model: {\n                    value: _vm.stockTransferForm.description,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.stockTransferForm, \"description\", $$v)\n                    },\n                    expression: \"stockTransferForm.description\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.stockTransferForm,\n                    \"prop-name\": \"description\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"p-t-20 border-top\" },\n          [\n            _vm._l(_vm.stockTransferForm.details, function (detail, index) {\n              return _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          \"\\n                                \" +\n                            _vm._s(_vm.trans(\"inventory.stock_item\")) +\n                            \"\\n                                \"\n                        ),\n                        _c(\n                          \"button\",\n                          {\n                            directives: [\n                              {\n                                name: \"confirm\",\n                                rawName: \"v-confirm\",\n                                value: { ok: _vm.confirmDelete(index) },\n                                expression: \"{ok: confirmDelete(index)}\",\n                              },\n                              {\n                                name: \"tooltip\",\n                                rawName: \"v-tooltip\",\n                                value: _vm.trans(\"general.delete\"),\n                                expression: \"trans('general.delete')\",\n                              },\n                            ],\n                            key: `${index}_delete_detail`,\n                            staticClass: \"btn btn-xs btn-danger\",\n                            attrs: { type: \"button\" },\n                          },\n                          [_c(\"i\", { staticClass: \"fas fa-times\" })]\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-select\",\n                        {\n                          attrs: {\n                            label: \"name\",\n                            name: _vm.getStockItemName(index),\n                            id: _vm.getStockItemName(index),\n                            options: _vm.stock_items,\n                            placeholder: _vm.trans(\n                              \"inventory.select_stock_item\"\n                            ),\n                          },\n                          on: {\n                            select: _vm.onStockItemSelect,\n                            close: function ($event) {\n                              _vm.stockTransferForm.errors.clear(\n                                _vm.getStockItemName(index)\n                              )\n                            },\n                            remove: _vm.onStockItemRemove,\n                          },\n                          model: {\n                            value: detail.selected_stock_item,\n                            callback: function ($$v) {\n                              _vm.$set(detail, \"selected_stock_item\", $$v)\n                            },\n                            expression: \"detail.selected_stock_item\",\n                          },\n                        },\n                        [\n                          !_vm.stock_items.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  attrs: { slot: \"afterList\" },\n                                  slot: \"afterList\",\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                                    \" +\n                                      _vm._s(\n                                        _vm.trans(\"general.no_option_found\")\n                                      ) +\n                                      \"\\n                                \"\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.stockTransferForm,\n                          \"prop-name\": _vm.getStockItemName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"inventory.stock_transfer_quantity\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: detail.quantity,\n                            expression: \"detail.quantity\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: _vm.getQuantityName(index),\n                          placeholder: _vm.trans(\n                            \"inventory.stock_transfer_quantity\"\n                          ),\n                        },\n                        domProps: { value: detail.quantity },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(detail, \"quantity\", $event.target.value)\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.stockTransferForm,\n                          \"prop-name\": _vm.getQuantityName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          \"\\n                                \" +\n                            _vm._s(\n                              _vm.trans(\"inventory.stock_item_description\")\n                            ) +\n                            \"\\n                            \"\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: detail.description,\n                            expression: \"detail.description\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: _vm.getDescriptionName(index),\n                          placeholder: _vm.trans(\n                            \"inventory.stock_item_description\"\n                          ),\n                        },\n                        domProps: { value: detail.description },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(detail, \"description\", $event.target.value)\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.stockTransferForm,\n                          \"prop-name\": _vm.getDescriptionName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ])\n            }),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12\" }, [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      staticClass:\n                        \"btn btn-info btn-sm waves-effect waves-light\",\n                      attrs: { type: \"button\" },\n                      on: { click: _vm.addRow },\n                    },\n                    [_vm._v(_vm._s(_vm.trans(\"inventory.add_new_stock_item\")))]\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"file-upload-input\", {\n                      attrs: {\n                        \"button-text\": _vm.trans(\"general.upload_document\"),\n                        token: _vm.stockTransferForm.upload_token,\n                        module: \"stock_transfer\",\n                        \"clear-file\": _vm.clearAttachment,\n                        \"module-id\": _vm.module_id,\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n            ]),\n          ],\n          2\n        ),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n          _c(\n            \"button\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.id,\n                  expression: \"id\",\n                },\n              ],\n              staticClass: \"btn btn-danger\",\n              attrs: { type: \"button\" },\n              on: {\n                click: function ($event) {\n                  return _vm.$router.push(\"/inventory/stock/transfer\")\n                },\n              },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n          ),\n          _vm._v(\" \"),\n          !_vm.id\n            ? _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-danger\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.$emit(\"cancel\")\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info waves-effect waves-light\",\n              attrs: { type: \"submit\" },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n          ),\n        ]),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=0d4b0395&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0d4b0395')) {\n      api.createRecord('0d4b0395', component.options)\n    } else {\n      api.reload('0d4b0395', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=0d4b0395&\", function () {\n      api.rerender('0d4b0395', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/inventory/stock-transfer/edit.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=6bec9562&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6bec9562')) {\n      api.createRecord('6bec9562', component.options)\n    } else {\n      api.reload('6bec9562', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=6bec9562&\", function () {\n      api.rerender('6bec9562', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/inventory/stock-transfer/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=0d4b0395&\""],"names":[],"sourceRoot":""}