{"version":3,"file":"js/chunks/js/inventory/stock-transfer/index.js?id=973b6007738f88f0","mappings":";;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAKA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;ACxgBA;AACA;AACA;AACA;AACA;AASA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AASA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;ACnxBA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAeuBA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAMA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAuCA;AAAA;AAWA;AAsHA;AACA;AAGA;AACA;AAEA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AAEA;AAQA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AASA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AAOA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/inventory/stock-transfer/form.vue","webpack://InstiKit/resources/js/views/inventory/stock-transfer/index.vue","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/form.vue","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/index.vue","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/form.vue?b168","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/index.vue?c139","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/form.vue?2407","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/index.vue?1702","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/form.vue?5c16","webpack://InstiKit/./resources/js/views/inventory/stock-transfer/index.vue?be57"],"sourcesContent":["<template>\r\n\t<div>\r\n        <form @submit.prevent=\"proceed\" @keydown=\"stockTransferForm.errors.clear($event.target.name)\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('inventory.stock_transfer_date')}}</label>\r\n                        <datepicker v-model=\"stockTransferForm.date\" :bootstrapStyling=\"true\" @selected=\"stockTransferForm.errors.clear('date')\" :placeholder=\"trans('inventory.stock_transfer_date')\"></datepicker>\r\n                        <show-error :form-name=\"stockTransferForm\" prop-name=\"date\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('inventory.stock_transfer_return_due_date')}}</label>\r\n                        <datepicker v-model=\"stockTransferForm.return_due_\" :bootstrapStyling=\"true\" @selected=\"stockTransferForm.errors.clear('return_due_')\" :placeholder=\"trans('inventory.stock_transfer_return_due_date')\"></datepicker>\r\n                        <show-error :form-name=\"stockTransferForm\" prop-name=\"return_due_\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <div class=\"radio radio-success m-t-20\">\r\n                            <input type=\"radio\" value=\"room\" id=\"type_room\" v-model=\"stockTransferForm.type\" :checked=\"stockTransferForm.type == 'room'\" name=\"type\" @click=\"stockTransferForm.errors.clear('type')\">\r\n                            <label for=\"type_room\">{{trans('asset.room')}}</label> <br />\r\n                            <input type=\"radio\" value=\"student\" id=\"type_student\" v-model=\"stockTransferForm.type\" :checked=\"stockTransferForm.type == 'student'\" name=\"type\" @click=\"stockTransferForm.errors.clear('type')\">\r\n                            <label for=\"type_student\">{{trans('student.student')}}</label> <br />\r\n                            <input type=\"radio\" value=\"employee\" id=\"type_employee\" v-model=\"stockTransferForm.type\" :checked=\"stockTransferForm.type == 'employee'\" name=\"type\" @click=\"stockTransferForm.errors.clear('type')\">\r\n                            <label for=\"type_employee\">{{trans('employee.employee')}}</label>\r\n                        </div>\r\n                        <show-error :form-name=\"stockTransferForm\" prop-name=\"type\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\" v-if=\"stockTransferForm.type == 'room'\">\r\n                        <label for=\"\">{{trans('asset.room')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_room\" name=\"room_id\" id=\"room_id\" :options=\"rooms\" :placeholder=\"trans('inventory.select_room')\" @select=\"onRoomSelect\" @close=\"stockTransferForm.errors.clear('room_id')\" @remove=\"stockTransferForm.room_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!rooms.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"stockTransferForm\" prop-name=\"room_id\"></show-error>\r\n                    </div>\r\n                    <div class=\"form-group\" v-if=\"stockTransferForm.type == 'student'\">\r\n                        <label for=\"\">{{trans('student.student')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_student\" name=\"student_id\" id=\"student_id\" :options=\"students\" :placeholder=\"trans('student.select_student')\" @select=\"onStudentSelect\" @close=\"stockTransferForm.errors.clear('student_id')\" @remove=\"stockTransferForm.student_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!students.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"stockTransferForm\" prop-name=\"student_id\"></show-error>\r\n                    </div>\r\n                    <div class=\"form-group\" v-if=\"stockTransferForm.type == 'employee'\">\r\n                        <label for=\"\">{{trans('employee.employee')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_employee\" name=\"employee_id\" id=\"employee_id\" :options=\"employees\" :placeholder=\"trans('employee.select_employee')\" @select=\"onEmployeeSelect\" @close=\"stockTransferForm.errors.clear('employee_id')\" @remove=\"stockTransferForm.employee_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employees.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"stockTransferForm\" prop-name=\"employee_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('inventory.stock_transfer_description')}}</label>\r\n                        <autosize-textarea v-model=\"stockTransferForm.description\" rows=\"1\" name=\"description\" :placeholder=\"trans('inventory.stock_transfer_description')\"></autosize-textarea>\r\n                        <show-error :form-name=\"stockTransferForm\" prop-name=\"description\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-t-20 border-top\">\r\n                <div class=\"row\" v-for=\"(detail, index) in stockTransferForm.details\">\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">\r\n                                {{trans('inventory.stock_item')}}\r\n                                <button type=\"button\" class=\"btn btn-xs btn-danger\" :key=\"`${index}_delete_detail`\" v-confirm=\"{ok: confirmDelete(index)}\" v-tooltip=\"trans('general.delete')\"><i class=\"fas fa-times\"></i></button>\r\n                            </label>\r\n                            <v-select label=\"name\" v-model=\"detail.selected_stock_item\" :name=\"getStockItemName(index)\" :id=\"getStockItemName(index)\" :options=\"stock_items\" :placeholder=\"trans('inventory.select_stock_item')\" @select=\"onStockItemSelect\" @close=\"stockTransferForm.errors.clear(getStockItemName(index))\" @remove=\"onStockItemRemove\">\r\n                                <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!stock_items.length\">\r\n                                    {{trans('general.no_option_found')}}\r\n                                </div>\r\n                            </v-select>\r\n                            <show-error :form-name=\"stockTransferForm\" :prop-name=\"getStockItemName(index)\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('inventory.stock_transfer_quantity')}}</label>\r\n                            <input class=\"form-control\" type=\"text\" v-model=\"detail.quantity\" :name=\"getQuantityName(index)\" :placeholder=\"trans('inventory.stock_transfer_quantity')\">\r\n                            <show-error :form-name=\"stockTransferForm\" :prop-name=\"getQuantityName(index)\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">\r\n                                {{trans('inventory.stock_item_description')}}\r\n                            </label>\r\n                            <input class=\"form-control\" type=\"text\" v-model=\"detail.description\" :name=\"getDescriptionName(index)\" :placeholder=\"trans('inventory.stock_item_description')\">\r\n                            <show-error :form-name=\"stockTransferForm\" :prop-name=\"getDescriptionName(index)\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" @click=\"addRow\" class=\"btn btn-info btn-sm waves-effect waves-light\">{{trans('inventory.add_new_stock_item')}}</button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <div class=\"form-group\">\r\n                            <file-upload-input :button-text=\"trans('general.upload_document')\" :token=\"stockTransferForm.upload_token\" module=\"stock_transfer\" :clear-file=\"clearAttachment\" :module-id=\"module_id\"></file-upload-input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer text-right\">\r\n                <button v-show=\"id\" type=\"button\" class=\"btn btn-danger \" @click=\"$router.push('/inventory/stock/transfer')\">{{trans('general.cancel')}}</button>\r\n                <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.save')}}</button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    export default {\r\n        components: {},\r\n        props: ['id'],\r\n        data(){\r\n            return {\r\n                stockTransferForm: new Form({\r\n                    type: 'room',\r\n                    date: '',\r\n                    return_due_date: '',\r\n                    room_id: '',\r\n                    student_id: '',\r\n                    employee_id: '',\r\n                    description: '',\r\n                    details: [],\r\n                    upload_token: ''\r\n                }),\r\n                stock_items: [],\r\n                rooms: [],\r\n                selected_room: null,\r\n                employees: [],\r\n                selected_employee: null,\r\n                students: [],\r\n                selected_student: null,\r\n                module_id: '',\r\n                clearAttachment: true\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!this.id)\r\n                this.addRow();\r\n\r\n            if(this.id)\r\n                this.get();\r\n            else\r\n                this.stockTransferForm.upload_token = this.$uuid.v4();\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            proceed(){\r\n                if(this.id)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            }, \r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/stock/transfer/pre-requisite')\r\n                    .then(response => {\r\n                        this.rooms = response.rooms;\r\n                        this.students = response.students;\r\n                        this.employees = response.employees;\r\n                        this.stock_items = response.stock_items;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            addRow(){\r\n                let new_index = this.stockTransferForm.details.push({\r\n                    quantity: '',\r\n                    stock_item_id: '',\r\n                    description: '',\r\n                    selected_stock_item: null\r\n                })\r\n            },\r\n            getStockItemName(index){\r\n                return index+'_stock_item_id';\r\n            },\r\n            getDescriptionName(index){\r\n                return index+'_description';\r\n            },\r\n            getQuantityName(index){\r\n                return index+'_quantity';\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/stock/transfer/'+this.id)\r\n                    .then(response => {\r\n                        this.stockTransferForm.type = response.stock_transfer.type;\r\n                        this.stockTransferForm.upload_token = response.stock_transfer.upload_token;\r\n                        this.module_id = response.stock_transfer.id;\r\n                        this.stockTransferForm.number = response.stock_transfer.number;\r\n                        this.stockTransferForm.date = response.stock_transfer.date;\r\n                        this.stockTransferForm.return_due_date = response.stock_transfer.return_due_date;\r\n                        this.stockTransferForm.description = response.stock_transfer.description;\r\n                        this.stockTransferForm.room_id = response.stock_transfer.room_id;\r\n                        this.selected_room = response.selected_room;\r\n                        this.stockTransferForm.employee_id = response.stock_transfer.employee_id;\r\n                        this.selected_employee = response.selected_employee;\r\n                        this.stockTransferForm.student_id = response.stock_transfer.student_id;\r\n                        this.selected_student = response.selected_student;\r\n                        response.stock_transfer.details.forEach(detail => {\r\n                            this.stockTransferForm.details.push({\r\n                                quantity: detail.quantity,\r\n                                stock_item_id: detail.stock_item_id,\r\n                                selected_stock_item: (detail.stock_item_id) ? {id: detail.stock_item_id, name: detail.item.name} : null,\r\n                                description: detail.description\r\n                            });\r\n                        });\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.stockTransferForm.post('/api/stock/transfer')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.selected_room = null;\r\n                        this.selected_student = null;\r\n                        this.selected_employee = null;\r\n                        this.stockTransferForm.details = [];\r\n                        this.clearAttachment = !this.clearAttachment;\r\n                        this.stockTransferForm.upload_token = this.$uuid.v4();\r\n                        this.addRow();\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.stockTransferForm.patch('/api/stock/transfer/'+this.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/inventory/stock/transfer');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            onRoomSelect(selectedOption){\r\n                this.stockTransferForm.room_id = selectedOption.id;\r\n            },\r\n            onEmployeeSelect(selectedOption){\r\n                this.stockTransferForm.employee_id = selectedOption.id;\r\n            },\r\n            onStudentSelect(selectedOption){\r\n                this.stockTransferForm.student_id = selectedOption.id;\r\n            },\r\n            confirmDelete(index){\r\n                return dialog => this.deleteDetail(index);\r\n            },\r\n            deleteDetail(index){\r\n                this.stockTransferForm.details.splice(index, 1);\r\n            },\r\n            onStockItemSelect(selectedOption, id){\r\n                let index = id.split(\"_\")[0];\r\n                let detail = this.stockTransferForm.details[index];\r\n                detail.stock_item_id = selectedOption.id;\r\n            },\r\n            onStockItemRemove(removedOption, id){\r\n                let index = id.split(\"_\")[0];\r\n                let detail = this.stockTransferForm.details[index];\r\n                detail.stock_item_id = '';\r\n            }\r\n        },\r\n        computed:{\r\n        }\r\n    }\r\n</script>","<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('inventory.stock_transfer')}}\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"stock_transfers.total\">{{trans('general.total_result_found',{count : stock_transfers.total, from: stock_transfers.from, to: stock_transfers.to})}}</span>\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\r\n                    </h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"stock_transfers.total && !showCreatePanel && hasPermission('create-stock-transfer')\" @click=\"showCreatePanel = !showCreatePanel\" v-tooltip=\"trans('general.add_new')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('inventory.add_new_stock_transfer')}}</span></button>\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\r\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\r\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\r\n                            </button>\r\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\r\n                            </div>\r\n                        </div>\r\n                        <help-button @clicked=\"help_topic = 'inventory.stock.transfer'\"></help-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <transition name=\"fade\">\r\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('general.filter')}}</h4>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('asset.room')}}</label>\r\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_rooms\" name=\"room_id\" id=\"room_id\" :options=\"rooms\" :placeholder=\"trans('inventory.select_room')\" @select=\"onRoomSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onRoomRemove\" :selected=\"selected_rooms\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!rooms.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <date-range-picker :start-date.sync=\"filter.date_start_date\" :end-date.sync=\"filter.date_end_date\" :label=\"trans('general.date_between')\"></date-range-picker>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-footer text-right\">\r\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\r\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getStockTransfers\">{{trans('general.filter')}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <transition name=\"fade\" v-if=\"hasPermission('create-stock-transfer')\">\r\n                <div class=\"card card-form\" v-if=\"showCreatePanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('inventory.add_new_stock_transfer')}}</h4>\r\n                        <stock-transfer-form @completed=\"getStockTransfers\" @cancel=\"showCreatePanel = !showCreatePanel\"></stock-transfer-form>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\" v-if=\"stock_transfers.total\">\r\n                        <table class=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{{trans('inventory.stock_transfer_detail')}}</th>\r\n                                    <th>{{trans('inventory.stock_transfer_date')}}</th>\r\n                                    <th>{{trans('inventory.stock_transfer_return_due_date')}}</th>\r\n                                    <th>{{trans('inventory.stock_transfer_description')}}</th>\r\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"stock_transfer in stock_transfers.data\">\r\n                                    <td>\r\n                                        <template v-if=\"stock_transfer.type == 'employee'\">\r\n                                            {{trans('employee.employee_name')+': '+getEmployeeName(stock_transfer.employee)}} <br />\r\n                                            {{getEmployeeDesignationOnDate(stock_transfer.employee, stock_transfer.date)}}\r\n                                        </template>\r\n                                        <template v-else-if=\"stock_transfer.type == 'student'\">\r\n                                            {{trans('student.student_name')+': '+getStudentName(stock_transfer.student)}} <br />\r\n                                            {{trans('student.first_guardian_name')+': '+stock_transfer.student.parent.first_guardian_name}} <br />\r\n                                            {{trans('student.contact_number')+': '+stock_transfer.student.contact_number}} <br />\r\n                                        </template>\r\n                                        <template v-else-if=\"stock_transfer.type == 'room'\">\r\n                                            {{trans('asset.room')}}: {{stock_transfer.room.name}}\r\n                                        </template>\r\n                                    </td>\r\n                                    </td>\r\n                                    <td>{{stock_transfer.date | moment}}</td>\r\n                                    <td>\r\n                                        <template v-if=\"stock_transfer.return_due_date\">\r\n                                            {{stock_transfer.return_due_date | moment}}\r\n                                        </template>\r\n                                        <template v-else>-</template>\r\n                                    </td>\r\n                                    <td v-text=\"stock_transfer.description\"></td>\r\n                                    <td class=\"table-option\">\r\n                                        <div class=\"btn-group\">\r\n                                            <button class=\"btn btn-success btn-sm\" v-tooltip=\"trans('inventory.stock_transfer_detail')\" @click=\"$router.push('/inventory/stock/transfer/'+stock_transfer.id)\"><i class=\"fas fa-arrow-circle-right\"></i></button>\r\n                                            <button class=\"btn btn-info btn-sm\" v-if=\"hasPermission('edit-stock-transfer')\" v-tooltip=\"trans('inventory.edit_stock_transfer')\" @click.prevent=\"editStockTransfer(stock_transfer)\"><i class=\"fas fa-edit\"></i></button>\r\n                                            <button class=\"btn btn-danger btn-sm\" v-if=\"hasPermission('delete-stock-transfer')\" :key=\"stock_transfer.id\" v-confirm=\"{ok: confirmDelete(stock_transfer)}\" v-tooltip=\"trans('inventory.delete_stock_transfer')\"><i class=\"fas fa-trash\"></i></button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <module-info v-if=\"!stock_transfers.total\" module=\"inventory\" title=\"stock_transfer_module_title\" description=\"stock_transfer_module_description\" icon=\"list\">\r\n                        <div slot=\"btn\">\r\n                            <button class=\"btn btn-info btn-md\" v-if=\"!showCreatePanel && hasPermission('create-stock-transfer')\" @click=\"showCreatePanel = !showCreatePanel\"><i class=\"fas fa-plus\"></i> {{trans('general.add_new')}}</button>\r\n                        </div>\r\n                    </module-info>\r\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"stock_transfers\" @updateRecords=\"getStockTransfers\"></pagination-record>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <right-panel :topic=\"help_topic\"></right-panel>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import stockTransferForm from './form'\r\n\r\n    export default {\r\n        components : { stockTransferForm },\r\n        data() {\r\n            return {\r\n                stock_transfers: {\r\n                    total: 0,\r\n                    data: []\r\n                },\r\n                filter: {\r\n                    sort_by : 'date',\r\n                    order: 'desc',\r\n                    room_id: [],\r\n                    date_start_date: '',\r\n                    date_end_date: '',\r\n                    page_length: helper.getConfig('page_length')\r\n                },\r\n                orderByOptions: [\r\n                    {\r\n                        value: 'date',\r\n                        translation: i18n.inventory.stock_transfer_date\r\n                    },\r\n                    {\r\n                        value: 'created_at',\r\n                        translation: i18n.general.created_at\r\n                    }\r\n                ],\r\n                showFilterPanel: false,\r\n                showCreatePanel: false,\r\n                rooms: [],\r\n                selected_rooms: null,\r\n                help_topic: ''\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('list-stock-transfer')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.getStockTransfers();\r\n            helper.showDemoNotification(['inventory']);\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            getStudentName(student){\r\n                return helper.getStudentName(student);\r\n            },\r\n            getEmployeeName(employee){\r\n                return helper.getEmployeeName(employee);\r\n            },\r\n            getEmployeeDesignationOnDate(employee, date){\r\n                return helper.getEmployeeDesignationOnDate(employee, date);\r\n            },\r\n            getStockTransfers(page){\r\n                let loader = this.$loading.show();\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                this.filter.date_start_date = helper.toDate(this.filter.date_start_date);\r\n                this.filter.date_end_date = helper.toDate(this.filter.date_end_date);\r\n                let url = helper.getFilterURL(this.filter);\r\n                axios.get('/api/stock/transfer?page=' + page + url)\r\n                    .then(response => {\r\n                        this.stock_transfers = response.stock_transfers;\r\n                        this.rooms = response.filters.rooms;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            editStockTransfer(stock_transfer){\r\n                this.$router.push('/inventory/stock/transfer/'+stock_transfer.id+'/edit');\r\n            },\r\n            confirmDelete(stock_transfer){\r\n                return dialog => this.deleteStockTransfer(stock_transfer);\r\n            },\r\n            deleteStockTransfer(stock_transfer){\r\n                let loader = this.$loading.show();\r\n                axios.delete('/api/stock/transfer/'+stock_transfer.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getStockTransfers();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getConfig(config) {\r\n                return helper.getConfig(config)\r\n            },\r\n            print(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/stock/transfer/print',{filter: this.filter})\r\n                    .then(response => {\r\n                        let print = window.open(\"/print\");\r\n                        loader.hide();\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            pdf(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/stock/transfer/pdf',{filter: this.filter})\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        window.open('/download/report/'+response+'?token='+this.authToken);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onRoomSelect(selectedOption){\r\n                this.filter.room_id.push(selectedOption.id);\r\n            },\r\n            onRoomRemove(removedOption){\r\n                this.filter.room_id.splice(this.filter.room_id.indexOf(removedOption.id), 1);\r\n            },\r\n            formatCurrency(amount) {\r\n                return helper.formatCurrency(amount);\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          },\r\n          momentTime(time) {\r\n            return helper.formatTime(time);\r\n          }\r\n        },\r\n        watch: {\r\n            'filter.sort_by': function(val){\r\n                this.getStockTransfers();\r\n            },\r\n            'filter.order': function(val){\r\n                this.getStockTransfers();\r\n            },\r\n            'filter.page_length': function(val){\r\n                this.getStockTransfers();\r\n            }\r\n        },\r\n        computed: {\r\n            authToken(){\r\n                return helper.getAuthToken();\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.stockTransferForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"inventory.stock_transfer_date\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\"inventory.stock_transfer_date\"),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.stockTransferForm.errors.clear(\"date\")\n                    },\n                  },\n                  model: {\n                    value: _vm.stockTransferForm.date,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.stockTransferForm, \"date\", $$v)\n                    },\n                    expression: \"stockTransferForm.date\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.stockTransferForm,\n                    \"prop-name\": \"date\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(\n                      _vm.trans(\"inventory.stock_transfer_return_due_date\")\n                    )\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\n                      \"inventory.stock_transfer_return_due_date\"\n                    ),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.stockTransferForm.errors.clear(\"return_due_\")\n                    },\n                  },\n                  model: {\n                    value: _vm.stockTransferForm.return_due_,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.stockTransferForm, \"return_due_\", $$v)\n                    },\n                    expression: \"stockTransferForm.return_due_\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.stockTransferForm,\n                    \"prop-name\": \"return_due_\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"div\", { staticClass: \"radio radio-success m-t-20\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.stockTransferForm.type,\n                        expression: \"stockTransferForm.type\",\n                      },\n                    ],\n                    attrs: {\n                      type: \"radio\",\n                      value: \"room\",\n                      id: \"type_room\",\n                      name: \"type\",\n                    },\n                    domProps: {\n                      checked: _vm.stockTransferForm.type == \"room\",\n                      checked: _vm._q(_vm.stockTransferForm.type, \"room\"),\n                    },\n                    on: {\n                      click: function ($event) {\n                        return _vm.stockTransferForm.errors.clear(\"type\")\n                      },\n                      change: function ($event) {\n                        return _vm.$set(_vm.stockTransferForm, \"type\", \"room\")\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"label\", { attrs: { for: \"type_room\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"asset.room\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"br\"),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.stockTransferForm.type,\n                        expression: \"stockTransferForm.type\",\n                      },\n                    ],\n                    attrs: {\n                      type: \"radio\",\n                      value: \"student\",\n                      id: \"type_student\",\n                      name: \"type\",\n                    },\n                    domProps: {\n                      checked: _vm.stockTransferForm.type == \"student\",\n                      checked: _vm._q(_vm.stockTransferForm.type, \"student\"),\n                    },\n                    on: {\n                      click: function ($event) {\n                        return _vm.stockTransferForm.errors.clear(\"type\")\n                      },\n                      change: function ($event) {\n                        return _vm.$set(\n                          _vm.stockTransferForm,\n                          \"type\",\n                          \"student\"\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"label\", { attrs: { for: \"type_student\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"student.student\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"br\"),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.stockTransferForm.type,\n                        expression: \"stockTransferForm.type\",\n                      },\n                    ],\n                    attrs: {\n                      type: \"radio\",\n                      value: \"employee\",\n                      id: \"type_employee\",\n                      name: \"type\",\n                    },\n                    domProps: {\n                      checked: _vm.stockTransferForm.type == \"employee\",\n                      checked: _vm._q(_vm.stockTransferForm.type, \"employee\"),\n                    },\n                    on: {\n                      click: function ($event) {\n                        return _vm.stockTransferForm.errors.clear(\"type\")\n                      },\n                      change: function ($event) {\n                        return _vm.$set(\n                          _vm.stockTransferForm,\n                          \"type\",\n                          \"employee\"\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"label\", { attrs: { for: \"type_employee\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.stockTransferForm,\n                    \"prop-name\": \"type\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _vm.stockTransferForm.type == \"room\"\n              ? _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"asset.room\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"v-select\",\n                      {\n                        attrs: {\n                          label: \"name\",\n                          name: \"room_id\",\n                          id: \"room_id\",\n                          options: _vm.rooms,\n                          placeholder: _vm.trans(\"inventory.select_room\"),\n                        },\n                        on: {\n                          select: _vm.onRoomSelect,\n                          close: function ($event) {\n                            return _vm.stockTransferForm.errors.clear(\"room_id\")\n                          },\n                          remove: function ($event) {\n                            _vm.stockTransferForm.room_id = \"\"\n                          },\n                        },\n                        model: {\n                          value: _vm.selected_room,\n                          callback: function ($$v) {\n                            _vm.selected_room = $$v\n                          },\n                          expression: \"selected_room\",\n                        },\n                      },\n                      [\n                        !_vm.rooms.length\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"multiselect__option\",\n                                attrs: { slot: \"afterList\" },\n                                slot: \"afterList\",\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                \" +\n                                    _vm._s(\n                                      _vm.trans(\"general.no_option_found\")\n                                    ) +\n                                    \"\\n                            \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.stockTransferForm,\n                        \"prop-name\": \"room_id\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.stockTransferForm.type == \"student\"\n              ? _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"student.student\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"v-select\",\n                      {\n                        attrs: {\n                          label: \"name\",\n                          name: \"student_id\",\n                          id: \"student_id\",\n                          options: _vm.students,\n                          placeholder: _vm.trans(\"student.select_student\"),\n                        },\n                        on: {\n                          select: _vm.onStudentSelect,\n                          close: function ($event) {\n                            return _vm.stockTransferForm.errors.clear(\n                              \"student_id\"\n                            )\n                          },\n                          remove: function ($event) {\n                            _vm.stockTransferForm.student_id = \"\"\n                          },\n                        },\n                        model: {\n                          value: _vm.selected_student,\n                          callback: function ($$v) {\n                            _vm.selected_student = $$v\n                          },\n                          expression: \"selected_student\",\n                        },\n                      },\n                      [\n                        !_vm.students.length\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"multiselect__option\",\n                                attrs: { slot: \"afterList\" },\n                                slot: \"afterList\",\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                \" +\n                                    _vm._s(\n                                      _vm.trans(\"general.no_option_found\")\n                                    ) +\n                                    \"\\n                            \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.stockTransferForm,\n                        \"prop-name\": \"student_id\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.stockTransferForm.type == \"employee\"\n              ? _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"v-select\",\n                      {\n                        attrs: {\n                          label: \"name\",\n                          name: \"employee_id\",\n                          id: \"employee_id\",\n                          options: _vm.employees,\n                          placeholder: _vm.trans(\"employee.select_employee\"),\n                        },\n                        on: {\n                          select: _vm.onEmployeeSelect,\n                          close: function ($event) {\n                            return _vm.stockTransferForm.errors.clear(\n                              \"employee_id\"\n                            )\n                          },\n                          remove: function ($event) {\n                            _vm.stockTransferForm.employee_id = \"\"\n                          },\n                        },\n                        model: {\n                          value: _vm.selected_employee,\n                          callback: function ($$v) {\n                            _vm.selected_employee = $$v\n                          },\n                          expression: \"selected_employee\",\n                        },\n                      },\n                      [\n                        !_vm.employees.length\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"multiselect__option\",\n                                attrs: { slot: \"afterList\" },\n                                slot: \"afterList\",\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                \" +\n                                    _vm._s(\n                                      _vm.trans(\"general.no_option_found\")\n                                    ) +\n                                    \"\\n                            \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.stockTransferForm,\n                        \"prop-name\": \"employee_id\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"inventory.stock_transfer_description\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"autosize-textarea\", {\n                  attrs: {\n                    rows: \"1\",\n                    name: \"description\",\n                    placeholder: _vm.trans(\n                      \"inventory.stock_transfer_description\"\n                    ),\n                  },\n                  model: {\n                    value: _vm.stockTransferForm.description,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.stockTransferForm, \"description\", $$v)\n                    },\n                    expression: \"stockTransferForm.description\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.stockTransferForm,\n                    \"prop-name\": \"description\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"p-t-20 border-top\" },\n          [\n            _vm._l(_vm.stockTransferForm.details, function (detail, index) {\n              return _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          \"\\n                                \" +\n                            _vm._s(_vm.trans(\"inventory.stock_item\")) +\n                            \"\\n                                \"\n                        ),\n                        _c(\n                          \"button\",\n                          {\n                            directives: [\n                              {\n                                name: \"confirm\",\n                                rawName: \"v-confirm\",\n                                value: { ok: _vm.confirmDelete(index) },\n                                expression: \"{ok: confirmDelete(index)}\",\n                              },\n                              {\n                                name: \"tooltip\",\n                                rawName: \"v-tooltip\",\n                                value: _vm.trans(\"general.delete\"),\n                                expression: \"trans('general.delete')\",\n                              },\n                            ],\n                            key: `${index}_delete_detail`,\n                            staticClass: \"btn btn-xs btn-danger\",\n                            attrs: { type: \"button\" },\n                          },\n                          [_c(\"i\", { staticClass: \"fas fa-times\" })]\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-select\",\n                        {\n                          attrs: {\n                            label: \"name\",\n                            name: _vm.getStockItemName(index),\n                            id: _vm.getStockItemName(index),\n                            options: _vm.stock_items,\n                            placeholder: _vm.trans(\n                              \"inventory.select_stock_item\"\n                            ),\n                          },\n                          on: {\n                            select: _vm.onStockItemSelect,\n                            close: function ($event) {\n                              _vm.stockTransferForm.errors.clear(\n                                _vm.getStockItemName(index)\n                              )\n                            },\n                            remove: _vm.onStockItemRemove,\n                          },\n                          model: {\n                            value: detail.selected_stock_item,\n                            callback: function ($$v) {\n                              _vm.$set(detail, \"selected_stock_item\", $$v)\n                            },\n                            expression: \"detail.selected_stock_item\",\n                          },\n                        },\n                        [\n                          !_vm.stock_items.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  attrs: { slot: \"afterList\" },\n                                  slot: \"afterList\",\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                                    \" +\n                                      _vm._s(\n                                        _vm.trans(\"general.no_option_found\")\n                                      ) +\n                                      \"\\n                                \"\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.stockTransferForm,\n                          \"prop-name\": _vm.getStockItemName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"inventory.stock_transfer_quantity\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: detail.quantity,\n                            expression: \"detail.quantity\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: _vm.getQuantityName(index),\n                          placeholder: _vm.trans(\n                            \"inventory.stock_transfer_quantity\"\n                          ),\n                        },\n                        domProps: { value: detail.quantity },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(detail, \"quantity\", $event.target.value)\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.stockTransferForm,\n                          \"prop-name\": _vm.getQuantityName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          \"\\n                                \" +\n                            _vm._s(\n                              _vm.trans(\"inventory.stock_item_description\")\n                            ) +\n                            \"\\n                            \"\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: detail.description,\n                            expression: \"detail.description\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: _vm.getDescriptionName(index),\n                          placeholder: _vm.trans(\n                            \"inventory.stock_item_description\"\n                          ),\n                        },\n                        domProps: { value: detail.description },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(detail, \"description\", $event.target.value)\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.stockTransferForm,\n                          \"prop-name\": _vm.getDescriptionName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ])\n            }),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12\" }, [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      staticClass:\n                        \"btn btn-info btn-sm waves-effect waves-light\",\n                      attrs: { type: \"button\" },\n                      on: { click: _vm.addRow },\n                    },\n                    [_vm._v(_vm._s(_vm.trans(\"inventory.add_new_stock_item\")))]\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"file-upload-input\", {\n                      attrs: {\n                        \"button-text\": _vm.trans(\"general.upload_document\"),\n                        token: _vm.stockTransferForm.upload_token,\n                        module: \"stock_transfer\",\n                        \"clear-file\": _vm.clearAttachment,\n                        \"module-id\": _vm.module_id,\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n            ]),\n          ],\n          2\n        ),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n          _c(\n            \"button\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.id,\n                  expression: \"id\",\n                },\n              ],\n              staticClass: \"btn btn-danger\",\n              attrs: { type: \"button\" },\n              on: {\n                click: function ($event) {\n                  return _vm.$router.push(\"/inventory/stock/transfer\")\n                },\n              },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n          ),\n          _vm._v(\" \"),\n          !_vm.id\n            ? _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-danger\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.$emit(\"cancel\")\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info waves-effect waves-light\",\n              attrs: { type: \"submit\" },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n          ),\n        ]),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"inventory.stock_transfer\")) +\n                  \"\\n                    \"\n              ),\n              _vm.stock_transfers.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.stock_transfers.total,\n                            from: _vm.stock_transfers.from,\n                            to: _vm.stock_transfers.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _vm.stock_transfers.total &&\n                !_vm.showCreatePanel &&\n                _vm.hasPermission(\"create-stock-transfer\")\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"general.add_new\"),\n                            expression: \"trans('general.add_new')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showCreatePanel = !_vm.showCreatePanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"inventory.add_new_stock_transfer\")\n                            )\n                          ),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"inventory.stock.transfer\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"asset.room\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"room_id\",\n                                  id: \"room_id\",\n                                  options: _vm.rooms,\n                                  placeholder: _vm.trans(\n                                    \"inventory.select_room\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_rooms,\n                                },\n                                on: {\n                                  select: _vm.onRoomSelect,\n                                  remove: _vm.onRoomRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_rooms,\n                                  callback: function ($$v) {\n                                    _vm.selected_rooms = $$v\n                                  },\n                                  expression: \"selected_rooms\",\n                                },\n                              },\n                              [\n                                !_vm.rooms.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-sm-6\" },\n                        [\n                          _c(\"date-range-picker\", {\n                            attrs: {\n                              \"start-date\": _vm.filter.date_start_date,\n                              \"end-date\": _vm.filter.date_end_date,\n                              label: _vm.trans(\"general.date_between\"),\n                            },\n                            on: {\n                              \"update:startDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:start-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:endDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_end_date\",\n                                  $event\n                                )\n                              },\n                              \"update:end-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_end_date\",\n                                  $event\n                                )\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getStockTransfers },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _vm.hasPermission(\"create-stock-transfer\")\n            ? _c(\"transition\", { attrs: { name: \"fade\" } }, [\n                _vm.showCreatePanel\n                  ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"card-body\" },\n                        [\n                          _c(\"h4\", { staticClass: \"card-title\" }, [\n                            _vm._v(\n                              _vm._s(\n                                _vm.trans(\"inventory.add_new_stock_transfer\")\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"stock-transfer-form\", {\n                            on: {\n                              completed: _vm.getStockTransfers,\n                              cancel: function ($event) {\n                                _vm.showCreatePanel = !_vm.showCreatePanel\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.stock_transfers.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"inventory.stock_transfer_detail\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"inventory.stock_transfer_date\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\n                                    \"inventory.stock_transfer_return_due_date\"\n                                  )\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\n                                    \"inventory.stock_transfer_description\"\n                                  )\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", { staticClass: \"table-option\" }, [\n                              _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(\n                            _vm.stock_transfers.data,\n                            function (stock_transfer) {\n                              return _c(\"tr\", [\n                                _c(\n                                  \"td\",\n                                  [\n                                    stock_transfer.type == \"employee\"\n                                      ? [\n                                          _vm._v(\n                                            \"\\n                                        \" +\n                                              _vm._s(\n                                                _vm.trans(\n                                                  \"employee.employee_name\"\n                                                ) +\n                                                  \": \" +\n                                                  _vm.getEmployeeName(\n                                                    stock_transfer.employee\n                                                  )\n                                              ) +\n                                              \" \"\n                                          ),\n                                          _c(\"br\"),\n                                          _vm._v(\n                                            \"\\n                                        \" +\n                                              _vm._s(\n                                                _vm.getEmployeeDesignationOnDate(\n                                                  stock_transfer.employee,\n                                                  stock_transfer.date\n                                                )\n                                              ) +\n                                              \"\\n                                    \"\n                                          ),\n                                        ]\n                                      : stock_transfer.type == \"student\"\n                                      ? [\n                                          _vm._v(\n                                            \"\\n                                        \" +\n                                              _vm._s(\n                                                _vm.trans(\n                                                  \"student.student_name\"\n                                                ) +\n                                                  \": \" +\n                                                  _vm.getStudentName(\n                                                    stock_transfer.student\n                                                  )\n                                              ) +\n                                              \" \"\n                                          ),\n                                          _c(\"br\"),\n                                          _vm._v(\n                                            \"\\n                                        \" +\n                                              _vm._s(\n                                                _vm.trans(\n                                                  \"student.first_guardian_name\"\n                                                ) +\n                                                  \": \" +\n                                                  stock_transfer.student.parent\n                                                    .first_guardian_name\n                                              ) +\n                                              \" \"\n                                          ),\n                                          _c(\"br\"),\n                                          _vm._v(\n                                            \"\\n                                        \" +\n                                              _vm._s(\n                                                _vm.trans(\n                                                  \"student.contact_number\"\n                                                ) +\n                                                  \": \" +\n                                                  stock_transfer.student\n                                                    .contact_number\n                                              ) +\n                                              \" \"\n                                          ),\n                                          _c(\"br\"),\n                                        ]\n                                      : stock_transfer.type == \"room\"\n                                      ? [\n                                          _vm._v(\n                                            \"\\n                                        \" +\n                                              _vm._s(_vm.trans(\"asset.room\")) +\n                                              \": \" +\n                                              _vm._s(stock_transfer.room.name) +\n                                              \"\\n                                    \"\n                                          ),\n                                        ]\n                                      : _vm._e(),\n                                  ],\n                                  2\n                                ),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm._f(\"moment\")(stock_transfer.date)\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"td\",\n                                  [\n                                    stock_transfer.return_due_date\n                                      ? [\n                                          _vm._v(\n                                            \"\\n                                        \" +\n                                              _vm._s(\n                                                _vm._f(\"moment\")(\n                                                  stock_transfer.return_due_date\n                                                )\n                                              ) +\n                                              \"\\n                                    \"\n                                          ),\n                                        ]\n                                      : [_vm._v(\"-\")],\n                                  ],\n                                  2\n                                ),\n                                _vm._v(\" \"),\n                                _c(\"td\", {\n                                  domProps: {\n                                    textContent: _vm._s(\n                                      stock_transfer.description\n                                    ),\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"td\", { staticClass: \"table-option\" }, [\n                                  _c(\"div\", { staticClass: \"btn-group\" }, [\n                                    _c(\n                                      \"button\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"tooltip\",\n                                            rawName: \"v-tooltip\",\n                                            value: _vm.trans(\n                                              \"inventory.stock_transfer_detail\"\n                                            ),\n                                            expression:\n                                              \"trans('inventory.stock_transfer_detail')\",\n                                          },\n                                        ],\n                                        staticClass: \"btn btn-success btn-sm\",\n                                        on: {\n                                          click: function ($event) {\n                                            return _vm.$router.push(\n                                              \"/inventory/stock/transfer/\" +\n                                                stock_transfer.id\n                                            )\n                                          },\n                                        },\n                                      },\n                                      [\n                                        _c(\"i\", {\n                                          staticClass:\n                                            \"fas fa-arrow-circle-right\",\n                                        }),\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _vm.hasPermission(\"edit-stock-transfer\")\n                                      ? _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"tooltip\",\n                                                rawName: \"v-tooltip\",\n                                                value: _vm.trans(\n                                                  \"inventory.edit_stock_transfer\"\n                                                ),\n                                                expression:\n                                                  \"trans('inventory.edit_stock_transfer')\",\n                                              },\n                                            ],\n                                            staticClass: \"btn btn-info btn-sm\",\n                                            on: {\n                                              click: function ($event) {\n                                                $event.preventDefault()\n                                                return _vm.editStockTransfer(\n                                                  stock_transfer\n                                                )\n                                              },\n                                            },\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-edit\",\n                                            }),\n                                          ]\n                                        )\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _vm.hasPermission(\"delete-stock-transfer\")\n                                      ? _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"confirm\",\n                                                rawName: \"v-confirm\",\n                                                value: {\n                                                  ok: _vm.confirmDelete(\n                                                    stock_transfer\n                                                  ),\n                                                },\n                                                expression:\n                                                  \"{ok: confirmDelete(stock_transfer)}\",\n                                              },\n                                              {\n                                                name: \"tooltip\",\n                                                rawName: \"v-tooltip\",\n                                                value: _vm.trans(\n                                                  \"inventory.delete_stock_transfer\"\n                                                ),\n                                                expression:\n                                                  \"trans('inventory.delete_stock_transfer')\",\n                                              },\n                                            ],\n                                            key: stock_transfer.id,\n                                            staticClass:\n                                              \"btn btn-danger btn-sm\",\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-trash\",\n                                            }),\n                                          ]\n                                        )\n                                      : _vm._e(),\n                                  ]),\n                                ]),\n                              ])\n                            }\n                          ),\n                          0\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.stock_transfers.total\n                  ? _c(\n                      \"module-info\",\n                      {\n                        attrs: {\n                          module: \"inventory\",\n                          title: \"stock_transfer_module_title\",\n                          description: \"stock_transfer_module_description\",\n                          icon: \"list\",\n                        },\n                      },\n                      [\n                        _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                          !_vm.showCreatePanel &&\n                          _vm.hasPermission(\"create-stock-transfer\")\n                            ? _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-info btn-md\",\n                                  on: {\n                                    click: function ($event) {\n                                      _vm.showCreatePanel = !_vm.showCreatePanel\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                  _vm._v(\n                                    \" \" + _vm._s(_vm.trans(\"general.add_new\"))\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.stock_transfers,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getStockTransfers,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=6bec9562&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6bec9562')) {\n      api.createRecord('6bec9562', component.options)\n    } else {\n      api.reload('6bec9562', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=6bec9562&\", function () {\n      api.rerender('6bec9562', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/inventory/stock-transfer/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=4465ae52&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4465ae52')) {\n      api.createRecord('4465ae52', component.options)\n    } else {\n      api.reload('4465ae52', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=4465ae52&\", function () {\n      api.rerender('4465ae52', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/inventory/stock-transfer/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=6bec9562&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=4465ae52&\""],"names":[],"sourceRoot":""}