{"version":3,"file":"js/chunks/js/transport/vehicle/document/edit.js?id=0708d2049b861fcd","mappings":";;;;;;;;;;;;;;AAyBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACkFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACxRA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAWA;AAAA;AACA;AAAA;AAKA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;;;ACzxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/transport/vehicle/document/edit.vue","webpack://InstiKit/resources/js/views/transport/vehicle/document/form.vue","webpack://InstiKit/./resources/js/views/transport/vehicle/document/edit.vue","webpack://InstiKit/./resources/js/views/transport/vehicle/document/form.vue","webpack://InstiKit/./resources/js/views/transport/vehicle/document/edit.vue?20c6","webpack://InstiKit/./resources/js/views/transport/vehicle/document/form.vue?92ec","webpack://InstiKit/./resources/js/views/transport/vehicle/document/edit.vue?b10c","webpack://InstiKit/./resources/js/views/transport/vehicle/document/form.vue?7b91","webpack://InstiKit/./resources/js/views/transport/vehicle/document/edit.vue?017e"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('transport.edit_vehicle_document')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/transport/vehicle/document')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('transport.vehicle_document')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card card-form\">\r\n                <div class=\"card-body p-t-20\">\r\n                    <vehicle-document-form :id=\"id\"></vehicle-document-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import vehicleDocumentForm from './form';\r\n\r\n    export default {\r\n        components : { vehicleDocumentForm },\r\n        data() {\r\n            return {\r\n                id:this.$route.params.id\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('edit-vehicle-document')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","<template>\r\n\t<div>\r\n        <form @submit.prevent=\"proceed\" @keydown=\"vehicleDocumentForm.errors.clear($event.target.name)\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('transport.vehicle')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_vehicle\" name=\"vehicle_id\" id=\"vehicle_id\" :options=\"vehicles\" :placeholder=\"trans('general.select_one')\" @select=\"onVehicleSelect\" @close=\"vehicleDocumentForm.errors.clear('vehicle_id')\" @remove=\"vehicleDocumentForm.vehicle_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!vehicles.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"vehicleDocumentForm\" prop-name=\"vehicle_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-9\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('transport.vehicle_document_title')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"vehicleDocumentForm.title\" name=\"title\" :placeholder=\"trans('transport.vehicle_document_title')\">\r\n                        <show-error :form-name=\"vehicleDocumentForm\" prop-name=\"title\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('transport.vehicle_document_type')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_vehicle_document_type\" name=\"vehicle_document_type_id\" id=\"vehicle_document_type_id\" :options=\"vehicle_document_types\" :placeholder=\"trans('general.select_one')\" @select=\"onDocumentTypeSelect\" @close=\"vehicleDocumentForm.errors.clear('vehicle_document_type_id')\" @remove=\"vehicleDocumentForm.vehicle_document_type_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!vehicle_document_types.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"vehicleDocumentForm\" prop-name=\"vehicle_document_type_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n\t            <div class=\"col-12 col-sm-3\" v-if=\"expiry_date\">\r\n\t                <div class=\"form-group\">\r\n\t                    <label for=\"\">{{trans('transport.date_of_expiry')}}</label>\r\n\t                    <datepicker v-model=\"vehicleDocumentForm.date_of_expiry\" :bootstrapStyling=\"true\" @selected=\"vehicleDocumentForm.errors.clear('date_of_expiry')\" :placeholder=\"trans('transport.date_of_expiry')\"></datepicker>\r\n\t                    <show-error :form-name=\"vehicleDocumentForm\" prop-name=\"date_of_expiry\"></show-error>\r\n\t                </div>\r\n\t            </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('transport.vehicle_document_description')}}</label>\r\n                        <autosize-textarea v-model=\"vehicleDocumentForm.description\" rows=\"2\" name=\"description\" :placeholder=\"trans('vehicle.vehicle_document_description')\"></autosize-textarea>\r\n                        <show-error :form-name=\"vehicleDocumentForm\" prop-name=\"description\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <template v-if=\"insurance_document\">\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('transport.vehicle_policy_number')}}</label>\r\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleDocumentForm.policy_number\" name=\"policy_number\" :placeholder=\"trans('transport.vehicle_policy_number')\">\r\n                            <show-error :form-name=\"vehicleDocumentForm\" prop-name=\"policy_number\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('transport.vehicle_insurance_date')}}</label>\r\n                            <datepicker v-model=\"vehicleDocumentForm.insurance_date\" :bootstrapStyling=\"true\" @selected=\"vehicleDocumentForm.errors.clear('insurance_date')\" :placeholder=\"trans('transport.vehicle_insurance_date')\"></datepicker>\r\n                            <show-error :form-name=\"vehicleDocumentForm\" prop-name=\"insurance_date\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('transport.vehicle_insurance_amount')}}</label>\r\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleDocumentForm.insurance_amount\" name=\"insurance_amount\" :placeholder=\"trans('transport.vehicle_insurance_amount')\">\r\n                            <show-error :form-name=\"vehicleDocumentForm\" prop-name=\"insurance_amount\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('transport.vehicle_insured_amount')}}</label>\r\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleDocumentForm.insured_amount\" name=\"insured_amount\" :placeholder=\"trans('transport.vehicle_insured_amount')\">\r\n                            <show-error :form-name=\"vehicleDocumentForm\" prop-name=\"insured_amount\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('transport.vehicle_insurance_company_name')}}</label>\r\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleDocumentForm.insurance_company_name\" name=\"insurance_company_name\" :placeholder=\"trans('transport.vehicle_insurance_company_name')\">\r\n                            <show-error :form-name=\"vehicleDocumentForm\" prop-name=\"insurance_company_name\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('transport.vehicle_insurance_agent_name')}}</label>\r\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleDocumentForm.insurance_agent_name\" name=\"insurance_agent_name\" :placeholder=\"trans('transport.vehicle_insurance_agent_name')\">\r\n                            <show-error :form-name=\"vehicleDocumentForm\" prop-name=\"insurance_agent_name\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('transport.vehicle_insurance_agent_contact_number')}}</label>\r\n                            <input class=\"form-control\" type=\"text\" v-model=\"vehicleDocumentForm.insurance_agent_contact_number\" name=\"insurance_agent_contact_number\" :placeholder=\"trans('transport.vehicle_insurance_agent_contact_number')\">\r\n                            <show-error :form-name=\"vehicleDocumentForm\" prop-name=\"insurance_agent_contact_number\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <label>&nbsp;</label>\r\n                    <div class=\"form-group\">\r\n                        <file-upload-input :button-text=\"trans('general.upload_document')\" :token=\"vehicleDocumentForm.upload_token\" module=\"vehicle_document\" :clear-file=\"clearAttachment\" :module-id=\"module_id\"></file-upload-input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer text-right\">\r\n                <router-link to=\"/transport/vehicle/document\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\r\n                <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n                    <span v-if=\"id\">{{trans('general.update')}}</span>\r\n                    <span v-else>{{trans('general.save')}}</span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n    export default {\r\n        components:{},\r\n        props: ['id'],\r\n        data() {\r\n            return {\r\n                vehicleDocumentForm: new Form({\r\n                    title : '',\r\n                    vehicle_id: '',\r\n                    vehicle_document_type_id: '',\r\n                    date_of_expiry: '',\r\n                    description : '',\r\n                    policy_number : '',\r\n                    insurance_date : '',\r\n                    insurance_amount : '',\r\n                    insured_amount : '',\r\n                    insurance_company_name : '',\r\n                    insurance_agent_name : '',\r\n                    insurance_agent_contact_number : '',\r\n                    upload_token: ''\r\n                }),\r\n                vehicles: [],\r\n                selected_vehicle: null,\r\n                selected_vehicle_document_type: null,\r\n                vehicle_document_types: [],\r\n                vehicle_document_type_details: [],\r\n                clearAttachment: false,\r\n                expiry_date: false,\r\n                insurance_document: false,\r\n                module_id: ''\r\n            };\r\n        },\r\n        mounted() {\r\n            this.vehicleDocumentForm.upload_token = this.$uuid.v4();\r\n\r\n            this.getPreRequisite();\r\n\r\n            if (this.id)\r\n                this.getDocument();\r\n        },\r\n        methods: {\r\n            proceed(){\r\n                if(this.id)\r\n                    this.updateDocument();\r\n                else\r\n                    this.storeDocument();\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/vehicle/document/pre-requisite')\r\n                    .then(response => {\r\n                        this.vehicles = response.vehicles;\r\n                        this.vehicle_document_types = response.vehicle_document_types;\r\n                        this.vehicle_document_type_details = response.vehicle_document_type_details;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            storeDocument(){\r\n                let loader = this.$loading.show();\r\n                this.vehicleDocumentForm.post('/api/vehicle/document')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.clearAttachment = !this.clearAttachment;\r\n                        this.$emit('completed');\r\n                        this.vehicleDocumentForm.upload_token = this.$uuid.v4();\r\n                        this.selected_vehicle_document_type = null;\r\n                        this.selected_vehicle = null;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getDocument(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/vehicle/document/'+this.id)\r\n                    .then(response => {\r\n                        this.vehicleDocumentForm.title = response.vehicle_document.title;\r\n                        this.vehicleDocumentForm.vehicle_id = response.vehicle_document.vehicle_id;\r\n                        this.vehicleDocumentForm.date_of_expiry = response.vehicle_document.date_of_expiry;\r\n                        this.vehicleDocumentForm.vehicle_document_type_id = response.vehicle_document.vehicle_document_type_id;\r\n                        this.selected_vehicle_document_type = {id: response.vehicle_document.vehicle_document_type_id, name: response.vehicle_document.vehicle_document_type.name};\r\n                        this.selected_vehicle = {id: response.vehicle_document.vehicle_id, name: response.vehicle_document.vehicle.name};\r\n                        this.vehicleDocumentForm.description = response.vehicle_document.description;\r\n                        this.vehicleDocumentForm.upload_token = response.vehicle_document.upload_token;\r\n                        this.expiry_date = response.vehicle_document.vehicle_document_type.has_expiry_date ? true : false;\r\n                        this.insurance_document = response.vehicle_document.vehicle_document_type.is_insurance_document ? true : false;\r\n                        this.module_id = response.vehicle_document.id;\r\n\r\n                        let insurance_info = response.vehicle_document.options && response.vehicle_document.options.hasOwnProperty(\"insurance\") ? response.vehicle_document.options.insurance : {\r\n                            policy_number : '',\r\n                            insurance_date : '',\r\n                            insurance_amount : '',\r\n                            insured_amount : '',\r\n                            insurance_company_name : '',\r\n                            insurance_agent_name : '',\r\n                            insurance_agent_contact_number : '',\r\n                        };\r\n                        this.vehicleDocumentForm.policy_number = insurance_info.policy_number; \r\n                        this.vehicleDocumentForm.insurance_date = insurance_info.insurance_date; \r\n                        this.vehicleDocumentForm.insurance_amount = insurance_info.insurance_amount; \r\n                        this.vehicleDocumentForm.insured_amount = insurance_info.insured_amount; \r\n                        this.vehicleDocumentForm.insurance_company_name = insurance_info.insurance_company_name; \r\n                        this.vehicleDocumentForm.insurance_agent_name = insurance_info.insurance_agent_name; \r\n                        this.vehicleDocumentForm.insurance_agent_contact_number = insurance_info.insurance_agent_contact_number; \r\n\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        this.$router.push('/transport/vehicle/document');\r\n                    });\r\n            },\r\n            updateDocument(){\r\n                let loader = this.$loading.show();\r\n                this.vehicleDocumentForm.patch('/api/vehicle/document/'+this.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                        this.$router.push('/transport/vehicle/document');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onDocumentTypeSelect(selectedOption){\r\n            \tthis.vehicleDocumentForm.vehicle_document_type_id = selectedOption.id;\r\n                let vehicle_document_type = this.vehicle_document_type_details.find(o => o.id == selectedOption.id);\r\n\r\n                if (vehicle_document_type.has_expiry_date) {\r\n                    this.expiry_date = true;\r\n                } else {\r\n                    this.expiry_date = false;\r\n                }\r\n\r\n                if (vehicle_document_type.is_insurance_document) {\r\n                    this.insurance_document = true;\r\n                } else {\r\n                    this.insurance_document = false;\r\n                }\r\n            },\r\n            onVehicleSelect(selectedOption){\r\n            \tthis.vehicleDocumentForm.vehicle_id = selectedOption.id;\r\n            }\r\n        },\r\n        watch: {\r\n            'vehicleDocumentForm.vehicle_document_type_id': function(val){\r\n                if (!val) {\r\n                    this.expiry_date = false;\r\n                }\r\n            },\r\n        }\r\n    }\r\n</script>\r\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"transport.edit_vehicle_document\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/transport/vehicle/document\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"transport.vehicle_document\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"card-body p-t-20\" },\n          [_c(\"vehicle-document-form\", { attrs: { id: _vm.id } })],\n          1\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.vehicleDocumentForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\n          \"div\",\n          { staticClass: \"row\" },\n          [\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"transport.vehicle\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"vehicle_id\",\n                        id: \"vehicle_id\",\n                        options: _vm.vehicles,\n                        placeholder: _vm.trans(\"general.select_one\"),\n                      },\n                      on: {\n                        select: _vm.onVehicleSelect,\n                        close: function ($event) {\n                          return _vm.vehicleDocumentForm.errors.clear(\n                            \"vehicle_id\"\n                          )\n                        },\n                        remove: function ($event) {\n                          _vm.vehicleDocumentForm.vehicle_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_vehicle,\n                        callback: function ($$v) {\n                          _vm.selected_vehicle = $$v\n                        },\n                        expression: \"selected_vehicle\",\n                      },\n                    },\n                    [\n                      !_vm.vehicles.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                                \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                            \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleDocumentForm,\n                      \"prop-name\": \"vehicle_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-9\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"transport.vehicle_document_title\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.vehicleDocumentForm.title,\n                        expression: \"vehicleDocumentForm.title\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"title\",\n                      placeholder: _vm.trans(\n                        \"transport.vehicle_document_title\"\n                      ),\n                    },\n                    domProps: { value: _vm.vehicleDocumentForm.title },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(\n                          _vm.vehicleDocumentForm,\n                          \"title\",\n                          $event.target.value\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleDocumentForm,\n                      \"prop-name\": \"title\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"transport.vehicle_document_type\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"vehicle_document_type_id\",\n                        id: \"vehicle_document_type_id\",\n                        options: _vm.vehicle_document_types,\n                        placeholder: _vm.trans(\"general.select_one\"),\n                      },\n                      on: {\n                        select: _vm.onDocumentTypeSelect,\n                        close: function ($event) {\n                          return _vm.vehicleDocumentForm.errors.clear(\n                            \"vehicle_document_type_id\"\n                          )\n                        },\n                        remove: function ($event) {\n                          _vm.vehicleDocumentForm.vehicle_document_type_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_vehicle_document_type,\n                        callback: function ($$v) {\n                          _vm.selected_vehicle_document_type = $$v\n                        },\n                        expression: \"selected_vehicle_document_type\",\n                      },\n                    },\n                    [\n                      !_vm.vehicle_document_types.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                                \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                            \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleDocumentForm,\n                      \"prop-name\": \"vehicle_document_type_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _vm.expiry_date\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"transport.date_of_expiry\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          bootstrapStyling: true,\n                          placeholder: _vm.trans(\"transport.date_of_expiry\"),\n                        },\n                        on: {\n                          selected: function ($event) {\n                            return _vm.vehicleDocumentForm.errors.clear(\n                              \"date_of_expiry\"\n                            )\n                          },\n                        },\n                        model: {\n                          value: _vm.vehicleDocumentForm.date_of_expiry,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.vehicleDocumentForm,\n                              \"date_of_expiry\",\n                              $$v\n                            )\n                          },\n                          expression: \"vehicleDocumentForm.date_of_expiry\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.vehicleDocumentForm,\n                          \"prop-name\": \"date_of_expiry\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(\n                        _vm.trans(\"transport.vehicle_document_description\")\n                      )\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"autosize-textarea\", {\n                    attrs: {\n                      rows: \"2\",\n                      name: \"description\",\n                      placeholder: _vm.trans(\n                        \"vehicle.vehicle_document_description\"\n                      ),\n                    },\n                    model: {\n                      value: _vm.vehicleDocumentForm.description,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.vehicleDocumentForm, \"description\", $$v)\n                      },\n                      expression: \"vehicleDocumentForm.description\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.vehicleDocumentForm,\n                      \"prop-name\": \"description\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _vm.insurance_document\n              ? [\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"transport.vehicle_policy_number\"))\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.vehicleDocumentForm.policy_number,\n                              expression: \"vehicleDocumentForm.policy_number\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"policy_number\",\n                            placeholder: _vm.trans(\n                              \"transport.vehicle_policy_number\"\n                            ),\n                          },\n                          domProps: {\n                            value: _vm.vehicleDocumentForm.policy_number,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.vehicleDocumentForm,\n                                \"policy_number\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.vehicleDocumentForm,\n                            \"prop-name\": \"policy_number\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"transport.vehicle_insurance_date\")\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"datepicker\", {\n                          attrs: {\n                            bootstrapStyling: true,\n                            placeholder: _vm.trans(\n                              \"transport.vehicle_insurance_date\"\n                            ),\n                          },\n                          on: {\n                            selected: function ($event) {\n                              return _vm.vehicleDocumentForm.errors.clear(\n                                \"insurance_date\"\n                              )\n                            },\n                          },\n                          model: {\n                            value: _vm.vehicleDocumentForm.insurance_date,\n                            callback: function ($$v) {\n                              _vm.$set(\n                                _vm.vehicleDocumentForm,\n                                \"insurance_date\",\n                                $$v\n                              )\n                            },\n                            expression: \"vehicleDocumentForm.insurance_date\",\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.vehicleDocumentForm,\n                            \"prop-name\": \"insurance_date\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"transport.vehicle_insurance_amount\")\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.vehicleDocumentForm.insurance_amount,\n                              expression:\n                                \"vehicleDocumentForm.insurance_amount\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"insurance_amount\",\n                            placeholder: _vm.trans(\n                              \"transport.vehicle_insurance_amount\"\n                            ),\n                          },\n                          domProps: {\n                            value: _vm.vehicleDocumentForm.insurance_amount,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.vehicleDocumentForm,\n                                \"insurance_amount\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.vehicleDocumentForm,\n                            \"prop-name\": \"insurance_amount\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"transport.vehicle_insured_amount\")\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.vehicleDocumentForm.insured_amount,\n                              expression: \"vehicleDocumentForm.insured_amount\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"insured_amount\",\n                            placeholder: _vm.trans(\n                              \"transport.vehicle_insured_amount\"\n                            ),\n                          },\n                          domProps: {\n                            value: _vm.vehicleDocumentForm.insured_amount,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.vehicleDocumentForm,\n                                \"insured_amount\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.vehicleDocumentForm,\n                            \"prop-name\": \"insured_amount\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"transport.vehicle_insurance_company_name\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value:\n                                _vm.vehicleDocumentForm.insurance_company_name,\n                              expression:\n                                \"vehicleDocumentForm.insurance_company_name\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"insurance_company_name\",\n                            placeholder: _vm.trans(\n                              \"transport.vehicle_insurance_company_name\"\n                            ),\n                          },\n                          domProps: {\n                            value:\n                              _vm.vehicleDocumentForm.insurance_company_name,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.vehicleDocumentForm,\n                                \"insurance_company_name\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.vehicleDocumentForm,\n                            \"prop-name\": \"insurance_company_name\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"transport.vehicle_insurance_agent_name\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value:\n                                _vm.vehicleDocumentForm.insurance_agent_name,\n                              expression:\n                                \"vehicleDocumentForm.insurance_agent_name\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"insurance_agent_name\",\n                            placeholder: _vm.trans(\n                              \"transport.vehicle_insurance_agent_name\"\n                            ),\n                          },\n                          domProps: {\n                            value: _vm.vehicleDocumentForm.insurance_agent_name,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.vehicleDocumentForm,\n                                \"insurance_agent_name\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.vehicleDocumentForm,\n                            \"prop-name\": \"insurance_agent_name\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"transport.vehicle_insurance_agent_contact_number\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value:\n                                _vm.vehicleDocumentForm\n                                  .insurance_agent_contact_number,\n                              expression:\n                                \"vehicleDocumentForm.insurance_agent_contact_number\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"insurance_agent_contact_number\",\n                            placeholder: _vm.trans(\n                              \"transport.vehicle_insurance_agent_contact_number\"\n                            ),\n                          },\n                          domProps: {\n                            value:\n                              _vm.vehicleDocumentForm\n                                .insurance_agent_contact_number,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.vehicleDocumentForm,\n                                \"insurance_agent_contact_number\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.vehicleDocumentForm,\n                            \"prop-name\": \"insurance_agent_contact_number\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]\n              : _vm._e(),\n          ],\n          2\n        ),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\"label\", [_vm._v(\" \")]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"file-upload-input\", {\n                  attrs: {\n                    \"button-text\": _vm.trans(\"general.upload_document\"),\n                    token: _vm.vehicleDocumentForm.upload_token,\n                    module: \"vehicle_document\",\n                    \"clear-file\": _vm.clearAttachment,\n                    \"module-id\": _vm.module_id,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"card-footer text-right\" },\n          [\n            _c(\n              \"router-link\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.id,\n                    expression: \"id\",\n                  },\n                ],\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { to: \"/transport/vehicle/document\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            !_vm.id\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-danger waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: {\n                      click: function ($event) {\n                        return _vm.$emit(\"cancel\")\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [\n                _vm.id\n                  ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                  : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n              ]\n            ),\n          ],\n          1\n        ),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=44acd146&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('44acd146')) {\n      api.createRecord('44acd146', component.options)\n    } else {\n      api.reload('44acd146', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=44acd146&\", function () {\n      api.rerender('44acd146', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/transport/vehicle/document/edit.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=016b8300&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('016b8300')) {\n      api.createRecord('016b8300', component.options)\n    } else {\n      api.reload('016b8300', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=016b8300&\", function () {\n      api.rerender('016b8300', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/transport/vehicle/document/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=44acd146&\""],"names":[],"sourceRoot":""}