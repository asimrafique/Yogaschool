{"version":3,"file":"js/chunks/js/transport/vehicle/serviceRecord/edit.js?id=9952b80e39cc146f","mappings":";;;;;;;;;;;;;;AAyBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC2CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9LA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAKA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/transport/vehicle/service-record/edit.vue","webpack://InstiKit/resources/js/views/transport/vehicle/service-record/form.vue","webpack://InstiKit/./resources/js/views/transport/vehicle/service-record/edit.vue","webpack://InstiKit/./resources/js/views/transport/vehicle/service-record/form.vue","webpack://InstiKit/./resources/js/views/transport/vehicle/service-record/edit.vue?08b0","webpack://InstiKit/./resources/js/views/transport/vehicle/service-record/form.vue?f302","webpack://InstiKit/./resources/js/views/transport/vehicle/service-record/edit.vue?6a5a","webpack://InstiKit/./resources/js/views/transport/vehicle/service-record/form.vue?ecdc","webpack://InstiKit/./resources/js/views/transport/vehicle/service-record/edit.vue?07ed"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('transport.edit_vehicle_service_record')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/transport/vehicle/service/record')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('transport.vehicle_service_record')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card card-form\">\r\n                <div class=\"card-body p-t-20\">\r\n                    <vehicle-service-record-form :id=\"id\"></vehicle-service-record-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import vehicleServiceRecordForm from './form';\r\n\r\n    export default {\r\n        components : { vehicleServiceRecordForm },\r\n        data() {\r\n            return {\r\n                id:this.$route.params.id\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('edit-vehicle-service-record')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","<template>\r\n\t<div>\r\n        <form @submit.prevent=\"proceed\" @keydown=\"vehicleServiceRecordForm.errors.clear($event.target.name)\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('transport.vehicle')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_vehicle\" name=\"vehicle_id\" id=\"vehicle_id\" :options=\"vehicles\" :placeholder=\"trans('general.select_one')\" @select=\"onVehicleSelect\" @close=\"vehicleServiceRecordForm.errors.clear('vehicle_id')\" @remove=\"vehicleServiceRecordForm.vehicle_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!vehicles.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"vehicleServiceRecordForm\" prop-name=\"vehicle_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('transport.vehicle_service_center')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_vehicle_service_center\" name=\"vehicle_service_center_id\" id=\"vehicle_service_center_id\" :options=\"vehicle_service_centers\" :placeholder=\"trans('general.select_one')\" @select=\"onVehicleServiceCenterSelect\" @close=\"vehicleServiceRecordForm.errors.clear('vehicle_service_center_id')\" @remove=\"vehicleServiceRecordForm.vehicle_service_center_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!vehicles.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"vehicleServiceRecordForm\" prop-name=\"vehicle_service_center_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n\t            <div class=\"col-12 col-sm-3\">\r\n\t                <div class=\"form-group\">\r\n\t                    <label for=\"\">{{trans('transport.date_of_service')}}</label>\r\n\t                    <datepicker v-model=\"vehicleServiceRecordForm.date_of_service\" :bootstrapStyling=\"true\" @selected=\"vehicleServiceRecordForm.errors.clear('date_of_service')\" :placeholder=\"trans('transport.date_of_service')\"></datepicker>\r\n\t                    <show-error :form-name=\"vehicleServiceRecordForm\" prop-name=\"date_of_service\"></show-error>\r\n\t                </div>\r\n\t            </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('transport.vehicle_service_record_amount')}}</label>\r\n                        <currency-input :position=\"default_currency.position\" :symbol=\"default_currency.symbol\" name=\"amount\" :placeholder=\"trans('transport.vehicle_service_record_amount')\" v-model=\"vehicleServiceRecordForm.amount\" @input.native=\"vehicleServiceRecordForm.errors.clear('amount')\"></currency-input>\r\n                        <show-error :form-name=\"vehicleServiceRecordForm\" prop-name=\"amount\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('transport.vehicle_log_log')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"vehicleServiceRecordForm.log\" name=\"log\" :placeholder=\"trans('transport.vehicle_log_log')\">\r\n                        <show-error :form-name=\"vehicleServiceRecordForm\" prop-name=\"log\"></show-error>\r\n                    </div>\r\n                </div>\r\n\t            <div class=\"col-12 col-sm-3\">\r\n\t                <div class=\"form-group\">\r\n\t                    <label for=\"\">{{trans('transport.vehicle_service_record_next_due_date')}}</label>\r\n\t                    <datepicker v-model=\"vehicleServiceRecordForm.next_due_date\" :bootstrapStyling=\"true\" @selected=\"vehicleServiceRecordForm.errors.clear('vehicle_service_record_next_due_date')\" :placeholder=\"trans('transport.vehicle_service_record_next_due_date')\"></datepicker>\r\n\t                    <show-error :form-name=\"vehicleServiceRecordForm\" prop-name=\"next_due_date\"></show-error>\r\n\t                </div>\r\n\t            </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('transport.vehicle_service_record_description')}}</label>\r\n                        <autosize-textarea v-model=\"vehicleServiceRecordForm.description\" rows=\"2\" name=\"description\" :placeholder=\"trans('vehicle.vehicle_service_record_description')\"></autosize-textarea>\r\n                        <show-error :form-name=\"vehicleServiceRecordForm\" prop-name=\"description\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <label></label>\r\n                    <div class=\"form-group\">\r\n                        <file-upload-input :button-text=\"trans('general.upload_document')\" :token=\"vehicleServiceRecordForm.upload_token\" module=\"vehicle_service_record\" :clear-file=\"clearAttachment\" :module-id=\"id\"></file-upload-input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer text-right\">\r\n                <router-link to=\"/transport/vehicle/service/record\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\r\n                <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n                    <span v-if=\"id\">{{trans('general.update')}}</span>\r\n                    <span v-else>{{trans('general.save')}}</span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n    export default {\r\n        components:{},\r\n        props: ['id'],\r\n        data() {\r\n            return {\r\n                vehicleServiceRecordForm: new Form({\r\n                    amount : '',\r\n                    log: '',\r\n                    next_due_date: '',\r\n                    vehicle_id: '',\r\n                    vehicle_service_center_id: '',\r\n                    date_of_service: '',\r\n                    description : '',\r\n                    upload_token: ''\r\n                }),\r\n                default_currency: helper.getConfig('default_currency'),\r\n                vehicles: [],\r\n                vehicle_service_centers: [],\r\n                selected_vehicle: null,\r\n                selected_vehicle_service_center: null,\r\n                clearAttachment: false\r\n            };\r\n        },\r\n        mounted() {\r\n            this.vehicleServiceRecordForm.upload_token = this.$uuid.v4();\r\n\r\n            let loader = this.$loading.show();\r\n            axios.get('/api/vehicle/service/record/pre-requisite')\r\n            \t.then(response => {\r\n            \t\tthis.vehicles = response.vehicles;\r\n                    this.vehicle_service_centers = response.vehicle_service_centers;\r\n                    loader.hide();\r\n            \t})\r\n            \t.catch(error => {\r\n                    loader.hide();\r\n            \t\thelper.showErrorMsg(error);\r\n            \t})\r\n\r\n            if (this.id)\r\n                this.getServiceRecord();\r\n        },\r\n        methods: {\r\n            proceed(){\r\n                if(this.id)\r\n                    this.updateServiceRecord();\r\n                else\r\n                    this.storeServiceRecord();\r\n            },\r\n            storeServiceRecord(){\r\n                let loader = this.$loading.show();\r\n                this.vehicleServiceRecordForm.post('/api/vehicle/service/record')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.clearAttachment = !this.clearAttachment;\r\n                        this.$emit('completed');\r\n                        this.vehicleServiceRecordForm.upload_token = this.$uuid.v4();\r\n                        this.selected_vehicle = null;\r\n                        this.selected_vehicle_service_center = null;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getServiceRecord(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/vehicle/service/record/'+this.id)\r\n                    .then(response => {\r\n                        this.vehicleServiceRecordForm.amount = response.vehicle_service_record.amount;\r\n                        this.vehicleServiceRecordForm.log = response.vehicle_service_record.log;\r\n                        this.vehicleServiceRecordForm.vehicle_id = response.vehicle_service_record.vehicle_id;\r\n                        this.vehicleServiceRecordForm.vehicle_service_center_id = response.vehicle_service_record.vehicle_service_center_id;\r\n                        this.vehicleServiceRecordForm.date_of_service = response.vehicle_service_record.date_of_service;\r\n                        this.vehicleServiceRecordForm.next_due_date = response.vehicle_service_record.next_due_date;\r\n                        this.selected_vehicle = {id: response.vehicle_service_record.vehicle_id, name: response.vehicle_service_record.vehicle.name};\r\n                        this.selected_vehicle_service_center = response.vehicle_service_record.vehicle_service_center_id ?  {id: response.vehicle_service_record.vehicle_service_center_id, name: response.vehicle_service_record.vehicle_service_center.name} : null;\r\n                        this.vehicleServiceRecordForm.description = response.vehicle_service_record.description;\r\n                        this.vehicleServiceRecordForm.upload_token = response.vehicle_service_record.upload_token;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        this.$router.push('/transport/vehicle/service/record');\r\n                    });\r\n            },\r\n            updateServiceRecord(){\r\n                let loader = this.$loading.show();\r\n                this.vehicleServiceRecordForm.patch('/api/vehicle/service/record/'+this.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                        this.$router.push('/transport/vehicle/service/record');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onVehicleSelect(selectedOption){\r\n            \tthis.vehicleServiceRecordForm.vehicle_id = selectedOption.id;\r\n            },\r\n            onVehicleServiceCenterSelect(selectedOption){\r\n                this.vehicleServiceRecordForm.vehicle_service_center_id = selectedOption.id;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"transport.edit_vehicle_service_record\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/transport/vehicle/service/record\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"transport.vehicle_service_record\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"card-body p-t-20\" },\n          [_c(\"vehicle-service-record-form\", { attrs: { id: _vm.id } })],\n          1\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.vehicleServiceRecordForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"transport.vehicle\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      name: \"vehicle_id\",\n                      id: \"vehicle_id\",\n                      options: _vm.vehicles,\n                      placeholder: _vm.trans(\"general.select_one\"),\n                    },\n                    on: {\n                      select: _vm.onVehicleSelect,\n                      close: function ($event) {\n                        return _vm.vehicleServiceRecordForm.errors.clear(\n                          \"vehicle_id\"\n                        )\n                      },\n                      remove: function ($event) {\n                        _vm.vehicleServiceRecordForm.vehicle_id = \"\"\n                      },\n                    },\n                    model: {\n                      value: _vm.selected_vehicle,\n                      callback: function ($$v) {\n                        _vm.selected_vehicle = $$v\n                      },\n                      expression: \"selected_vehicle\",\n                    },\n                  },\n                  [\n                    !_vm.vehicles.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                                \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                            \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.vehicleServiceRecordForm,\n                    \"prop-name\": \"vehicle_id\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"transport.vehicle_service_center\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      name: \"vehicle_service_center_id\",\n                      id: \"vehicle_service_center_id\",\n                      options: _vm.vehicle_service_centers,\n                      placeholder: _vm.trans(\"general.select_one\"),\n                    },\n                    on: {\n                      select: _vm.onVehicleServiceCenterSelect,\n                      close: function ($event) {\n                        return _vm.vehicleServiceRecordForm.errors.clear(\n                          \"vehicle_service_center_id\"\n                        )\n                      },\n                      remove: function ($event) {\n                        _vm.vehicleServiceRecordForm.vehicle_service_center_id =\n                          \"\"\n                      },\n                    },\n                    model: {\n                      value: _vm.selected_vehicle_service_center,\n                      callback: function ($$v) {\n                        _vm.selected_vehicle_service_center = $$v\n                      },\n                      expression: \"selected_vehicle_service_center\",\n                    },\n                  },\n                  [\n                    !_vm.vehicles.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                                \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                            \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.vehicleServiceRecordForm,\n                    \"prop-name\": \"vehicle_service_center_id\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"transport.date_of_service\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\"transport.date_of_service\"),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.vehicleServiceRecordForm.errors.clear(\n                        \"date_of_service\"\n                      )\n                    },\n                  },\n                  model: {\n                    value: _vm.vehicleServiceRecordForm.date_of_service,\n                    callback: function ($$v) {\n                      _vm.$set(\n                        _vm.vehicleServiceRecordForm,\n                        \"date_of_service\",\n                        $$v\n                      )\n                    },\n                    expression: \"vehicleServiceRecordForm.date_of_service\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.vehicleServiceRecordForm,\n                    \"prop-name\": \"date_of_service\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"transport.vehicle_service_record_amount\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"currency-input\", {\n                  attrs: {\n                    position: _vm.default_currency.position,\n                    symbol: _vm.default_currency.symbol,\n                    name: \"amount\",\n                    placeholder: _vm.trans(\n                      \"transport.vehicle_service_record_amount\"\n                    ),\n                  },\n                  nativeOn: {\n                    input: function ($event) {\n                      return _vm.vehicleServiceRecordForm.errors.clear(\"amount\")\n                    },\n                  },\n                  model: {\n                    value: _vm.vehicleServiceRecordForm.amount,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.vehicleServiceRecordForm, \"amount\", $$v)\n                    },\n                    expression: \"vehicleServiceRecordForm.amount\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.vehicleServiceRecordForm,\n                    \"prop-name\": \"amount\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"transport.vehicle_log_log\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.vehicleServiceRecordForm.log,\n                      expression: \"vehicleServiceRecordForm.log\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"log\",\n                    placeholder: _vm.trans(\"transport.vehicle_log_log\"),\n                  },\n                  domProps: { value: _vm.vehicleServiceRecordForm.log },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.vehicleServiceRecordForm,\n                        \"log\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.vehicleServiceRecordForm,\n                    \"prop-name\": \"log\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(\n                      _vm.trans(\n                        \"transport.vehicle_service_record_next_due_date\"\n                      )\n                    )\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\n                      \"transport.vehicle_service_record_next_due_date\"\n                    ),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.vehicleServiceRecordForm.errors.clear(\n                        \"vehicle_service_record_next_due_date\"\n                      )\n                    },\n                  },\n                  model: {\n                    value: _vm.vehicleServiceRecordForm.next_due_date,\n                    callback: function ($$v) {\n                      _vm.$set(\n                        _vm.vehicleServiceRecordForm,\n                        \"next_due_date\",\n                        $$v\n                      )\n                    },\n                    expression: \"vehicleServiceRecordForm.next_due_date\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.vehicleServiceRecordForm,\n                    \"prop-name\": \"next_due_date\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(\n                      _vm.trans(\"transport.vehicle_service_record_description\")\n                    )\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"autosize-textarea\", {\n                  attrs: {\n                    rows: \"2\",\n                    name: \"description\",\n                    placeholder: _vm.trans(\n                      \"vehicle.vehicle_service_record_description\"\n                    ),\n                  },\n                  model: {\n                    value: _vm.vehicleServiceRecordForm.description,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.vehicleServiceRecordForm, \"description\", $$v)\n                    },\n                    expression: \"vehicleServiceRecordForm.description\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.vehicleServiceRecordForm,\n                    \"prop-name\": \"description\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\"label\"),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"file-upload-input\", {\n                  attrs: {\n                    \"button-text\": _vm.trans(\"general.upload_document\"),\n                    token: _vm.vehicleServiceRecordForm.upload_token,\n                    module: \"vehicle_service_record\",\n                    \"clear-file\": _vm.clearAttachment,\n                    \"module-id\": _vm.id,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"card-footer text-right\" },\n          [\n            _c(\n              \"router-link\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.id,\n                    expression: \"id\",\n                  },\n                ],\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { to: \"/transport/vehicle/service/record\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            !_vm.id\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-danger waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: {\n                      click: function ($event) {\n                        return _vm.$emit(\"cancel\")\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [\n                _vm.id\n                  ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                  : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n              ]\n            ),\n          ],\n          1\n        ),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=21870bb8&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('21870bb8')) {\n      api.createRecord('21870bb8', component.options)\n    } else {\n      api.reload('21870bb8', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=21870bb8&\", function () {\n      api.rerender('21870bb8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/transport/vehicle/service-record/edit.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=4374851c&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4374851c')) {\n      api.createRecord('4374851c', component.options)\n    } else {\n      api.reload('4374851c', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=4374851c&\", function () {\n      api.rerender('4374851c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/transport/vehicle/service-record/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=21870bb8&\""],"names":[],"sourceRoot":""}