"use strict";(self.webpackChunkInstiKit=self.webpackChunkInstiKit||[]).push([[4346],{61689:(t,r,e)=>{e.d(r,{Z:()=>p});var s=e(94015),o=e.n(s),n=e(23645),a=e.n(n)()(o());a.push([t.id,".loading-overlay.is-full-page{z-index:1060}","",{version:3,sources:["webpack://./resources/js/views/transport/route/form.vue"],names:[],mappings:"AAkKA,8BACA,YACA",sourcesContent:['<template>\r\n    <div>\r\n        <form @submit.prevent="proceed" @keydown="transportRouteForm.errors.clear($event.target.name)">\r\n            <div class="row">\r\n                <div class="col-12 col-sm-4">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'transport.route_name\')}}</label>\r\n                        <input class="form-control" type="text" v-model="transportRouteForm.name" name="name" :placeholder="trans(\'transport.route_name\')">\r\n                        <show-error :form-name="transportRouteForm" prop-name="name"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class="col-12 col-sm-4">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'transport.route_description\')}}</label>\r\n                        <input class="form-control" type="text" v-model="transportRouteForm.description" name="description" :placeholder="trans(\'transport.route_description\')">\r\n                        <show-error :form-name="transportRouteForm" prop-name="description"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="row">\r\n                <div class="col-12 col-sm-3">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'transport.stoppage\')}} </label> \r\n                        <v-select label="name" track-by="id" v-model="selected_transport_stoppages" name="transport_stoppages" id="transport_stoppages" :options="transport_stoppages" :placeholder="trans(\'transport.select_stoppage\')" @select="onTransportStoppageSelect" :multiple="true" :close-on-select="false" :clear-on-select="false" :hide-selected="true" @remove="onTransportStoppageRemove" :selected="selected_transport_stoppages">\r\n                            <div class="multiselect__option" slot="afterList" v-if="!transport_stoppages.length">\r\n                                {{trans(\'general.no_option_found\')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name="transportRouteForm" prop-name="transport_stoppages"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="card-footer">\r\n                <div class="row">\r\n                    <div class="col-12 col-sm-6">\r\n                    </div>\r\n                    <div class="col-12 col-sm-6 text-right">\r\n                        <router-link to="/transport/route" class="btn btn-danger waves-effect waves-light " v-show="id">{{trans(\'general.cancel\')}}</router-link>\r\n                        <button v-if="!id" type="button" class="btn btn-danger waves-effect waves-light " @click="$emit(\'cancel\')">{{trans(\'general.cancel\')}}</button>\r\n                        <button type="submit" class="btn btn-info waves-effect waves-light">\r\n                            <span v-if="id">{{trans(\'general.update\')}}</span>\r\n                            <span v-else>{{trans(\'general.save\')}}</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    export default {\r\n        components: {},\r\n        data() {\r\n            return {\r\n                transportRouteForm: new Form({\r\n                    name : \'\',\r\n                    description : \'\',\r\n                    transport_stoppages: []\r\n                }),\r\n                transport_stoppages: [],\r\n                selected_transport_stoppages: null,\r\n                showTransportStoppageModal: false\r\n            };\r\n        },\r\n        props: [\'id\'],\r\n        mounted() {\r\n            if(!helper.hasPermission(\'create-transport-route\') && !helper.hasPermission(\'edit-transport-route\')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push(\'/dashboard\');\r\n            }\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            proceed(){\r\n                if(this.id)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                this.showTransportStoppageModal = false;\r\n                axios.get(\'/api/transport/route/pre-requisite\')\r\n                    .then(response => {\r\n                        this.transport_stoppages = response;\r\n\r\n                        if(this.id)\r\n                            this.get();\r\n\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.transportRouteForm.post(\'/api/transport/route\')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.transportRouteForm.transport_stoppages = [];\r\n                        this.selected_transport_stoppages = null;\r\n                        this.$emit(\'completed\');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get(\'/api/transport/route/\'+this.id)\r\n                    .then(response => {\r\n                        this.transportRouteForm.name = response.transport_route.name;\r\n                        this.transportRouteForm.description = response.transport_route.description;\r\n                        this.selected_transport_stoppages = response.selected_transport_stoppages;\r\n                        response.selected_transport_stoppages.forEach(transport_route => {\r\n                            this.transportRouteForm.transport_stoppages.push(transport_route.id);\r\n                        });\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push(\'/transport/route\');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.transportRouteForm.patch(\'/api/transport/route/\'+this.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push(\'/transport/route\');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getConfig(config) {\r\n                return helper.getConfig(config);\r\n            },\r\n            onTransportStoppageSelect(selectedOption){\r\n                this.transportRouteForm.transport_stoppages.push(selectedOption.id);\r\n            },\r\n            onTransportStoppageRemove(removedOption){\r\n                this.transportRouteForm.transport_stoppages.splice(this.transportRouteForm.transport_stoppages.indexOf(removedOption.id), 1);\r\n            }\r\n        }\r\n    }\r\n<\/script>\r\n\r\n<style>\r\n.loading-overlay.is-full-page{\r\n    z-index: 1060;\r\n}\r\n</style>\r\n'],sourceRoot:""}]);const p=a},23239:(t,r,e)=>{e.r(r),e.d(r,{default:()=>o});const s={components:{transportRouteForm:e(8950).Z},data:function(){return{id:this.$route.params.id}},mounted:function(){helper.hasPermission("edit-transport-route")||(helper.notAccessibleMsg(),this.$router.push("/dashboard"))}};const o=(0,e(51900).Z)(s,(function(){var t=this,r=t._self._c;return r("div",[r("div",{staticClass:"page-titles"},[r("div",{staticClass:"row"},[r("div",{staticClass:"col-12 col-sm-6"},[r("h3",{staticClass:"text-themecolor"},[t._v(t._s(t.trans("transport.edit_route")))])]),t._v(" "),r("div",{staticClass:"col-12 col-sm-6"},[r("div",{staticClass:"action-buttons pull-right"},[r("button",{staticClass:"btn btn-info btn-sm",on:{click:function(r){return t.$router.push("/transport/route")}}},[r("i",{staticClass:"fas fa-list"}),t._v(" "),r("span",{staticClass:"d-none d-sm-inline"},[t._v(t._s(t.trans("transport.edit_route")))])])])])])]),t._v(" "),r("div",{staticClass:"container-fluid"},[r("div",{staticClass:"card card-form"},[r("div",{staticClass:"card-body p-t-20"},[r("transport-route-form",{attrs:{id:t.id}})],1)])])])}),[],!1,null,null,null).exports},8950:(t,r,e)=>{e.d(r,{Z:()=>i});const s={components:{},data:function(){return{transportRouteForm:new Form({name:"",description:"",transport_stoppages:[]}),transport_stoppages:[],selected_transport_stoppages:null,showTransportStoppageModal:!1}},props:["id"],mounted:function(){helper.hasPermission("create-transport-route")||helper.hasPermission("edit-transport-route")||(helper.notAccessibleMsg(),this.$router.push("/dashboard")),this.getPreRequisite()},methods:{hasPermission:function(t){return helper.hasPermission(t)},proceed:function(){this.id?this.update():this.store()},getPreRequisite:function(){var t=this,r=this.$loading.show();this.showTransportStoppageModal=!1,axios.get("/api/transport/route/pre-requisite").then((function(e){t.transport_stoppages=e,t.id&&t.get(),r.hide()})).catch((function(t){r.hide(),helper.showErrorMsg(t)}))},store:function(){var t=this,r=this.$loading.show();this.transportRouteForm.post("/api/transport/route").then((function(e){toastr.success(e.message),t.transportRouteForm.transport_stoppages=[],t.selected_transport_stoppages=null,t.$emit("completed"),r.hide()})).catch((function(t){r.hide(),helper.showErrorMsg(t)}))},get:function(){var t=this,r=this.$loading.show();axios.get("/api/transport/route/"+this.id).then((function(e){t.transportRouteForm.name=e.transport_route.name,t.transportRouteForm.description=e.transport_route.description,t.selected_transport_stoppages=e.selected_transport_stoppages,e.selected_transport_stoppages.forEach((function(r){t.transportRouteForm.transport_stoppages.push(r.id)})),r.hide()})).catch((function(e){r.hide(),helper.showErrorMsg(e),t.$router.push("/transport/route")}))},update:function(){var t=this,r=this.$loading.show();this.transportRouteForm.patch("/api/transport/route/"+this.id).then((function(e){toastr.success(e.message),r.hide(),t.$router.push("/transport/route")})).catch((function(t){r.hide(),helper.showErrorMsg(t)}))},getConfig:function(t){return helper.getConfig(t)},onTransportStoppageSelect:function(t){this.transportRouteForm.transport_stoppages.push(t.id)},onTransportStoppageRemove:function(t){this.transportRouteForm.transport_stoppages.splice(this.transportRouteForm.transport_stoppages.indexOf(t.id),1)}}};var o=e(93379),n=e.n(o),a=e(61689),p={insert:"head",singleton:!1};n()(a.Z,p);a.Z.locals;const i=(0,e(51900).Z)(s,(function(){var t=this,r=t._self._c;return r("div",[r("form",{on:{submit:function(r){return r.preventDefault(),t.proceed.apply(null,arguments)},keydown:function(r){return t.transportRouteForm.errors.clear(r.target.name)}}},[r("div",{staticClass:"row"},[r("div",{staticClass:"col-12 col-sm-4"},[r("div",{staticClass:"form-group"},[r("label",{attrs:{for:""}},[t._v(t._s(t.trans("transport.route_name")))]),t._v(" "),r("input",{directives:[{name:"model",rawName:"v-model",value:t.transportRouteForm.name,expression:"transportRouteForm.name"}],staticClass:"form-control",attrs:{type:"text",name:"name",placeholder:t.trans("transport.route_name")},domProps:{value:t.transportRouteForm.name},on:{input:function(r){r.target.composing||t.$set(t.transportRouteForm,"name",r.target.value)}}}),t._v(" "),r("show-error",{attrs:{"form-name":t.transportRouteForm,"prop-name":"name"}})],1)]),t._v(" "),r("div",{staticClass:"col-12 col-sm-4"},[r("div",{staticClass:"form-group"},[r("label",{attrs:{for:""}},[t._v(t._s(t.trans("transport.route_description")))]),t._v(" "),r("input",{directives:[{name:"model",rawName:"v-model",value:t.transportRouteForm.description,expression:"transportRouteForm.description"}],staticClass:"form-control",attrs:{type:"text",name:"description",placeholder:t.trans("transport.route_description")},domProps:{value:t.transportRouteForm.description},on:{input:function(r){r.target.composing||t.$set(t.transportRouteForm,"description",r.target.value)}}}),t._v(" "),r("show-error",{attrs:{"form-name":t.transportRouteForm,"prop-name":"description"}})],1)])]),t._v(" "),r("div",{staticClass:"row"},[r("div",{staticClass:"col-12 col-sm-3"},[r("div",{staticClass:"form-group"},[r("label",{attrs:{for:""}},[t._v(t._s(t.trans("transport.stoppage"))+" ")]),t._v(" "),r("v-select",{attrs:{label:"name","track-by":"id",name:"transport_stoppages",id:"transport_stoppages",options:t.transport_stoppages,placeholder:t.trans("transport.select_stoppage"),multiple:!0,"close-on-select":!1,"clear-on-select":!1,"hide-selected":!0,selected:t.selected_transport_stoppages},on:{select:t.onTransportStoppageSelect,remove:t.onTransportStoppageRemove},model:{value:t.selected_transport_stoppages,callback:function(r){t.selected_transport_stoppages=r},expression:"selected_transport_stoppages"}},[t.transport_stoppages.length?t._e():r("div",{staticClass:"multiselect__option",attrs:{slot:"afterList"},slot:"afterList"},[t._v("\n                            "+t._s(t.trans("general.no_option_found"))+"\n                        ")])]),t._v(" "),r("show-error",{attrs:{"form-name":t.transportRouteForm,"prop-name":"transport_stoppages"}})],1)])]),t._v(" "),r("div",{staticClass:"card-footer"},[r("div",{staticClass:"row"},[r("div",{staticClass:"col-12 col-sm-6"}),t._v(" "),r("div",{staticClass:"col-12 col-sm-6 text-right"},[r("router-link",{directives:[{name:"show",rawName:"v-show",value:t.id,expression:"id"}],staticClass:"btn btn-danger waves-effect waves-light",attrs:{to:"/transport/route"}},[t._v(t._s(t.trans("general.cancel")))]),t._v(" "),t.id?t._e():r("button",{staticClass:"btn btn-danger waves-effect waves-light",attrs:{type:"button"},on:{click:function(r){return t.$emit("cancel")}}},[t._v(t._s(t.trans("general.cancel")))]),t._v(" "),r("button",{staticClass:"btn btn-info waves-effect waves-light",attrs:{type:"submit"}},[t.id?r("span",[t._v(t._s(t.trans("general.update")))]):r("span",[t._v(t._s(t.trans("general.save")))])])],1)])])])])}),[],!1,null,null,null).exports}}]);