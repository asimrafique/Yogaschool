{"version":3,"file":"js/chunks/js/transport/route/edit.js?id=9f19d1e44e89d786","mappings":";;;;;;;;;;;;;;AAyBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9JA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAiBA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACvCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/transport/route/edit.vue","webpack://InstiKit/resources/js/views/transport/route/form.vue","webpack://InstiKit/./resources/js/views/transport/route/edit.vue","webpack://InstiKit/./resources/js/views/transport/route/form.vue","webpack://InstiKit/./resources/js/views/transport/route/form.vue?e400","webpack://InstiKit/./resources/js/views/transport/route/form.vue?f747","webpack://InstiKit/./resources/js/views/transport/route/edit.vue?a618","webpack://InstiKit/./resources/js/views/transport/route/form.vue?de41","webpack://InstiKit/./resources/js/views/transport/route/edit.vue?9b41","webpack://InstiKit/./resources/js/views/transport/route/form.vue?aa0e","webpack://InstiKit/./resources/js/views/transport/route/edit.vue?3eb2"],"sourcesContent":["<template>\n    <div>\n        <div class=\"page-titles\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('transport.edit_route')}}</h3>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"action-buttons pull-right\">\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/transport/route')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('transport.edit_route')}}</span></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <div class=\"card card-form\">\n                <div class=\"card-body p-t-20\">\n                    <transport-route-form :id=\"id\"></transport-route-form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import transportRouteForm from './form';\n\n    export default {\n        components : { transportRouteForm },\n        data() {\n            return {\n                id:this.$route.params.id\n            }\n        },\n        mounted(){\n            if(!helper.hasPermission('edit-transport-route')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n        }\n    }\n</script>\n","<template>\n    <div>\n        <form @submit.prevent=\"proceed\" @keydown=\"transportRouteForm.errors.clear($event.target.name)\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('transport.route_name')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"transportRouteForm.name\" name=\"name\" :placeholder=\"trans('transport.route_name')\">\n                        <show-error :form-name=\"transportRouteForm\" prop-name=\"name\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('transport.route_description')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"transportRouteForm.description\" name=\"description\" :placeholder=\"trans('transport.route_description')\">\n                        <show-error :form-name=\"transportRouteForm\" prop-name=\"description\"></show-error>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('transport.stoppage')}} </label> \n                        <v-select label=\"name\" track-by=\"id\" v-model=\"selected_transport_stoppages\" name=\"transport_stoppages\" id=\"transport_stoppages\" :options=\"transport_stoppages\" :placeholder=\"trans('transport.select_stoppage')\" @select=\"onTransportStoppageSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onTransportStoppageRemove\" :selected=\"selected_transport_stoppages\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!transport_stoppages.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n                        <show-error :form-name=\"transportRouteForm\" prop-name=\"transport_stoppages\"></show-error>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                    </div>\n                    <div class=\"col-12 col-sm-6 text-right\">\n                        <router-link to=\"/transport/route\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\n                        <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n                        <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n                            <span v-if=\"id\">{{trans('general.update')}}</span>\n                            <span v-else>{{trans('general.save')}}</span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</template>\n\n\n<script>\n    export default {\n        components: {},\n        data() {\n            return {\n                transportRouteForm: new Form({\n                    name : '',\n                    description : '',\n                    transport_stoppages: []\n                }),\n                transport_stoppages: [],\n                selected_transport_stoppages: null,\n                showTransportStoppageModal: false\n            };\n        },\n        props: ['id'],\n        mounted() {\n            if(!helper.hasPermission('create-transport-route') && !helper.hasPermission('edit-transport-route')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getPreRequisite();\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            proceed(){\n                if(this.id)\n                    this.update();\n                else\n                    this.store();\n            },\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                this.showTransportStoppageModal = false;\n                axios.get('/api/transport/route/pre-requisite')\n                    .then(response => {\n                        this.transport_stoppages = response;\n\n                        if(this.id)\n                            this.get();\n\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            store(){\n                let loader = this.$loading.show();\n                this.transportRouteForm.post('/api/transport/route')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.transportRouteForm.transport_stoppages = [];\n                        this.selected_transport_stoppages = null;\n                        this.$emit('completed');\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/transport/route/'+this.id)\n                    .then(response => {\n                        this.transportRouteForm.name = response.transport_route.name;\n                        this.transportRouteForm.description = response.transport_route.description;\n                        this.selected_transport_stoppages = response.selected_transport_stoppages;\n                        response.selected_transport_stoppages.forEach(transport_route => {\n                            this.transportRouteForm.transport_stoppages.push(transport_route.id);\n                        });\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        this.$router.push('/transport/route');\n                    });\n            },\n            update(){\n                let loader = this.$loading.show();\n                this.transportRouteForm.patch('/api/transport/route/'+this.id)\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/transport/route');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getConfig(config) {\n                return helper.getConfig(config);\n            },\n            onTransportStoppageSelect(selectedOption){\n                this.transportRouteForm.transport_stoppages.push(selectedOption.id);\n            },\n            onTransportStoppageRemove(removedOption){\n                this.transportRouteForm.transport_stoppages.splice(this.transportRouteForm.transport_stoppages.indexOf(removedOption.id), 1);\n            }\n        }\n    }\n</script>\n\n<style>\n.loading-overlay.is-full-page{\n    z-index: 1060;\n}\n</style>\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"transport.edit_route\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/transport/route\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"transport.edit_route\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"card-body p-t-20\" },\n          [_c(\"transport-route-form\", { attrs: { id: _vm.id } })],\n          1\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.transportRouteForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"transport.route_name\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.transportRouteForm.name,\n                      expression: \"transportRouteForm.name\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"name\",\n                    placeholder: _vm.trans(\"transport.route_name\"),\n                  },\n                  domProps: { value: _vm.transportRouteForm.name },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.transportRouteForm,\n                        \"name\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.transportRouteForm,\n                    \"prop-name\": \"name\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"transport.route_description\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.transportRouteForm.description,\n                      expression: \"transportRouteForm.description\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"description\",\n                    placeholder: _vm.trans(\"transport.route_description\"),\n                  },\n                  domProps: { value: _vm.transportRouteForm.description },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.transportRouteForm,\n                        \"description\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.transportRouteForm,\n                    \"prop-name\": \"description\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"transport.stoppage\")) + \" \"),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      \"track-by\": \"id\",\n                      name: \"transport_stoppages\",\n                      id: \"transport_stoppages\",\n                      options: _vm.transport_stoppages,\n                      placeholder: _vm.trans(\"transport.select_stoppage\"),\n                      multiple: true,\n                      \"close-on-select\": false,\n                      \"clear-on-select\": false,\n                      \"hide-selected\": true,\n                      selected: _vm.selected_transport_stoppages,\n                    },\n                    on: {\n                      select: _vm.onTransportStoppageSelect,\n                      remove: _vm.onTransportStoppageRemove,\n                    },\n                    model: {\n                      value: _vm.selected_transport_stoppages,\n                      callback: function ($$v) {\n                        _vm.selected_transport_stoppages = $$v\n                      },\n                      expression: \"selected_transport_stoppages\",\n                    },\n                  },\n                  [\n                    !_vm.transport_stoppages.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                        \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.transportRouteForm,\n                    \"prop-name\": \"transport_stoppages\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"card-footer\" }, [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"col-12 col-sm-6 text-right\" },\n              [\n                _c(\n                  \"router-link\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.id,\n                        expression: \"id\",\n                      },\n                    ],\n                    staticClass: \"btn btn-danger waves-effect waves-light\",\n                    attrs: { to: \"/transport/route\" },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                ),\n                _vm._v(\" \"),\n                !_vm.id\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-danger waves-effect waves-light\",\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.$emit(\"cancel\")\n                          },\n                        },\n                      },\n                      [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info waves-effect waves-light\",\n                    attrs: { type: \"submit\" },\n                  },\n                  [\n                    _vm.id\n                      ? _c(\"span\", [\n                          _vm._v(_vm._s(_vm.trans(\"general.update\"))),\n                        ])\n                      : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n                  ]\n                ),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.loading-overlay.is-full-page{\\n    z-index: 1060;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/transport/route/form.vue\"],\"names\":[],\"mappings\":\";AAkKA;IACA,aAAA;AACA\",\"sourcesContent\":[\"<template>\\n    <div>\\n        <form @submit.prevent=\\\"proceed\\\" @keydown=\\\"transportRouteForm.errors.clear($event.target.name)\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-sm-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"\\\">{{trans('transport.route_name')}}</label>\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"transportRouteForm.name\\\" name=\\\"name\\\" :placeholder=\\\"trans('transport.route_name')\\\">\\n                        <show-error :form-name=\\\"transportRouteForm\\\" prop-name=\\\"name\\\"></show-error>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-12 col-sm-4\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"\\\">{{trans('transport.route_description')}}</label>\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"transportRouteForm.description\\\" name=\\\"description\\\" :placeholder=\\\"trans('transport.route_description')\\\">\\n                        <show-error :form-name=\\\"transportRouteForm\\\" prop-name=\\\"description\\\"></show-error>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-sm-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"\\\">{{trans('transport.stoppage')}} </label> \\n                        <v-select label=\\\"name\\\" track-by=\\\"id\\\" v-model=\\\"selected_transport_stoppages\\\" name=\\\"transport_stoppages\\\" id=\\\"transport_stoppages\\\" :options=\\\"transport_stoppages\\\" :placeholder=\\\"trans('transport.select_stoppage')\\\" @select=\\\"onTransportStoppageSelect\\\" :multiple=\\\"true\\\" :close-on-select=\\\"false\\\" :clear-on-select=\\\"false\\\" :hide-selected=\\\"true\\\" @remove=\\\"onTransportStoppageRemove\\\" :selected=\\\"selected_transport_stoppages\\\">\\n                            <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!transport_stoppages.length\\\">\\n                                {{trans('general.no_option_found')}}\\n                            </div>\\n                        </v-select>\\n                        <show-error :form-name=\\\"transportRouteForm\\\" prop-name=\\\"transport_stoppages\\\"></show-error>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"card-footer\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-12 col-sm-6\\\">\\n                    </div>\\n                    <div class=\\\"col-12 col-sm-6 text-right\\\">\\n                        <router-link to=\\\"/transport/route\\\" class=\\\"btn btn-danger waves-effect waves-light \\\" v-show=\\\"id\\\">{{trans('general.cancel')}}</router-link>\\n                        <button v-if=\\\"!id\\\" type=\\\"button\\\" class=\\\"btn btn-danger waves-effect waves-light \\\" @click=\\\"$emit('cancel')\\\">{{trans('general.cancel')}}</button>\\n                        <button type=\\\"submit\\\" class=\\\"btn btn-info waves-effect waves-light\\\">\\n                            <span v-if=\\\"id\\\">{{trans('general.update')}}</span>\\n                            <span v-else>{{trans('general.save')}}</span>\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</template>\\n\\n\\n<script>\\n    export default {\\n        components: {},\\n        data() {\\n            return {\\n                transportRouteForm: new Form({\\n                    name : '',\\n                    description : '',\\n                    transport_stoppages: []\\n                }),\\n                transport_stoppages: [],\\n                selected_transport_stoppages: null,\\n                showTransportStoppageModal: false\\n            };\\n        },\\n        props: ['id'],\\n        mounted() {\\n            if(!helper.hasPermission('create-transport-route') && !helper.hasPermission('edit-transport-route')){\\n                helper.notAccessibleMsg();\\n                this.$router.push('/dashboard');\\n            }\\n\\n            this.getPreRequisite();\\n        },\\n        methods: {\\n            hasPermission(permission){\\n                return helper.hasPermission(permission);\\n            },\\n            proceed(){\\n                if(this.id)\\n                    this.update();\\n                else\\n                    this.store();\\n            },\\n            getPreRequisite(){\\n                let loader = this.$loading.show();\\n                this.showTransportStoppageModal = false;\\n                axios.get('/api/transport/route/pre-requisite')\\n                    .then(response => {\\n                        this.transport_stoppages = response;\\n\\n                        if(this.id)\\n                            this.get();\\n\\n                        loader.hide();\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                    });\\n            },\\n            store(){\\n                let loader = this.$loading.show();\\n                this.transportRouteForm.post('/api/transport/route')\\n                    .then(response => {\\n                        toastr.success(response.message);\\n                        this.transportRouteForm.transport_stoppages = [];\\n                        this.selected_transport_stoppages = null;\\n                        this.$emit('completed');\\n                        loader.hide();\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                    });\\n            },\\n            get(){\\n                let loader = this.$loading.show();\\n                axios.get('/api/transport/route/'+this.id)\\n                    .then(response => {\\n                        this.transportRouteForm.name = response.transport_route.name;\\n                        this.transportRouteForm.description = response.transport_route.description;\\n                        this.selected_transport_stoppages = response.selected_transport_stoppages;\\n                        response.selected_transport_stoppages.forEach(transport_route => {\\n                            this.transportRouteForm.transport_stoppages.push(transport_route.id);\\n                        });\\n                        loader.hide();\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                        this.$router.push('/transport/route');\\n                    });\\n            },\\n            update(){\\n                let loader = this.$loading.show();\\n                this.transportRouteForm.patch('/api/transport/route/'+this.id)\\n                    .then(response => {\\n                        toastr.success(response.message);\\n                        loader.hide();\\n                        this.$router.push('/transport/route');\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                    });\\n            },\\n            getConfig(config) {\\n                return helper.getConfig(config);\\n            },\\n            onTransportStoppageSelect(selectedOption){\\n                this.transportRouteForm.transport_stoppages.push(selectedOption.id);\\n            },\\n            onTransportStoppageRemove(removedOption){\\n                this.transportRouteForm.transport_stoppages.splice(this.transportRouteForm.transport_stoppages.indexOf(removedOption.id), 1);\\n            }\\n        }\\n    }\\n</script>\\n\\n<style>\\n.loading-overlay.is-full-page{\\n    z-index: 1060;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&id=765d8622&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=08128b35&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('08128b35')) {\n      api.createRecord('08128b35', component.options)\n    } else {\n      api.reload('08128b35', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=08128b35&\", function () {\n      api.rerender('08128b35', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/transport/route/edit.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=765d8622&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\nimport style0 from \"./form.vue?vue&type=style&index=0&id=765d8622&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('765d8622')) {\n      api.createRecord('765d8622', component.options)\n    } else {\n      api.reload('765d8622', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=765d8622&\", function () {\n      api.rerender('765d8622', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/transport/route/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=08128b35&\""],"names":[],"sourceRoot":""}