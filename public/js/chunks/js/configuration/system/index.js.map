{"version":3,"file":"js/chunks/js/configuration/system/index.js?id=f9eb7dff803cb640","mappings":";;;;;;;;;;;;;AAsjCA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAIA;AACA;AAGA;AAEA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AASA;AAKA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAcA;AAEA;AAAA;AAAA;AACA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;AC97CA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/configuration/system/form.vue","webpack://InstiKit/resources/js/views/configuration/system/index.vue","webpack://InstiKit/./resources/js/views/configuration/system/form.vue","webpack://InstiKit/./resources/js/views/configuration/system/index.vue","webpack://InstiKit/./resources/js/views/configuration/system/form.vue?a508","webpack://InstiKit/./resources/js/views/configuration/system/index.vue?0690","webpack://InstiKit/./resources/js/views/configuration/system/form.vue?523a","webpack://InstiKit/./resources/js/views/configuration/system/index.vue?cefa","webpack://InstiKit/./resources/js/views/configuration/system/index.vue?0b0e"],"sourcesContent":["<template>\r\n    <div class=\"card\">\r\n        <div class=\"card-body p-4\">\r\n            <form @submit.prevent=\"submit\" @keydown=\"configForm.errors.clear($event.target.name)\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12 col-sm-6\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.default_color_theme')}}</label>\r\n                                    <select v-model=\"configForm.color_theme\" class=\"custom-select col-12\" name=\"color_theme\" @change=\"configForm.errors.clear('color_theme')\">\r\n                                      <option v-for=\"option in systemConfigVariables.color_themes\" v-bind:value=\"option.value\">\r\n                                        {{ option.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"color_theme\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.default_direction')}}</label>\r\n                                    <select v-model=\"configForm.direction\" class=\"custom-select col-12\" name=\"direction\" @change=\"configForm.errors.clear('direction')\">\r\n                                      <option v-for=\"option in systemConfigVariables.directions\" v-bind:value=\"option.value\">\r\n                                        {{ option.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"direction\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.default_sidebar')}}</label>\r\n                                    <select v-model=\"configForm.sidebar\" class=\"custom-select col-12\" name=\"sidebar\" @change=\"configForm.errors.clear('sidebar')\">\r\n                                      <option v-for=\"option in systemConfigVariables.sidebar\" v-bind:value=\"option.value\">\r\n                                        {{ option.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"sidebar\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\" v-if=\"getConfig('multilingual')\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.default_locale')}}</label>\r\n                                    <select v-model=\"configForm.locale\" class=\"custom-select col-12\" name=\"locale\" @change=\"configForm.errors.clear('locale')\">\r\n                                      <option v-for=\"option in systemConfigVariables.locales\" v-bind:value=\"option.value\">\r\n                                        {{ option.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"locale\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.date_format')}}</label>\r\n                                    <select v-model=\"configForm.date_format\" class=\"custom-select col-12\" name=\"date_format\" @change=\"configForm.errors.clear('date_format')\">\r\n                                      <option v-for=\"option in systemConfigVariables.date_formats\" v-bind:value=\"option.value\">\r\n                                        {{ option.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"date_format\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.time_format')}}</label>\r\n                                    <select v-model=\"configForm.time_format\" class=\"custom-select col-12\" name=\"time_format\" @change=\"configForm.errors.clear('time_format')\">\r\n                                      <option v-for=\"option in systemConfigVariables.time_formats\" v-bind:value=\"option.value\">\r\n                                        {{ option.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"time_format\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.notification_position')}}</label>\r\n                                    <select v-model=\"configForm.notification_position\" class=\"custom-select col-12\" name=\"notification_position\" @change=\"configForm.errors.clear('notification_position')\">\r\n                                      <option v-for=\"option in systemConfigVariables.notification_positions\" v-bind:value=\"option.value\">\r\n                                        {{ option.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"notification_position\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.timezone')}}</label>\r\n                                    <select v-model=\"configForm.timezone\" class=\"custom-select col-12\" name=\"timezone\" @change=\"configForm.errors.clear('timezone')\">\r\n                                      <option v-for=\"option in systemConfigVariables.timezones\" v-bind:value=\"option.value\">\r\n                                        {{ option.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"timezone\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('calendar.first_day_of_week')}}</label>\r\n                                    <select v-model=\"configForm.first_day_of_week\" class=\"custom-select col-12\" name=\"first_day_of_week\" @change=\"configForm.errors.clear('first_day_of_week')\">\r\n                                      <option v-for=\"option in systemConfigVariables.days\" v-bind:value=\"option.value\">\r\n                                        {{ option.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"first_day_of_week\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.currency')}}</label>\r\n                                    <select v-model=\"configForm.currency\" class=\"custom-select col-12\" name=\"currency\" @change=\"configForm.errors.clear('currency')\">\r\n                                      <option v-for=\"option in systemConfigVariables.currencies\" v-bind:value=\"option.value\">\r\n                                        {{ option.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"currency\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.page_length')}}</label>\r\n                                    <select v-model=\"configForm.page_length\" class=\"custom-select col-12\" name=\"page_length\" @change=\"configForm.errors.clear('page_length')\">\r\n                                      <option v-for=\"option in getConfig('pagination')\" v-bind:value=\"option\">\r\n                                        {{ option+' '+trans('general.per_page') }}\r\n                                      </option>\r\n                                    </select>\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"page_length\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-8\" v-if=\"getConfig('show_footer_credit')\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.footer_credit')}}</label>\r\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.footer_credit\" name=\"footer_credit\" :placeholder=\"trans('configuration.footer_credit')\">\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"footer_credit\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.biometric_auth_token')}}</label>\r\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.biometric_auth_token\" name=\"biometric_auth_token\" :placeholder=\"trans('configuration.biometric_auth_token')\">\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"biometric_auth_token\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.pusher_auth_token')}}</label>\r\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.pusher_auth_token\" name=\"pusher_auth_token\" :placeholder=\"trans('configuration.pusher_auth_token')\">\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"pusher_auth_token\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.https')}}</label>\r\n                                    <div>\r\n                                        <switches class=\"\" v-model=\"configForm.https\" theme=\"bootstrap\" color=\"success\"></switches>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.error_display')}}</label>\r\n                                    <div>\r\n                                        <switches class=\"\" v-model=\"configForm.error_display\" theme=\"bootstrap\" color=\"success\"></switches>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.multilingual')}}</label>\r\n                                    <div>\r\n                                        <switches class=\"\" v-model=\"configForm.multilingual\" theme=\"bootstrap\" color=\"success\"></switches>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('frontend.enable_frontend_website')}}</label>\r\n                                    <div>\r\n                                        <switches class=\"\" v-model=\"configForm.frontend_website\" theme=\"bootstrap\" color=\"success\"></switches>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('student.enable_online_registration')}}</label>\r\n                                    <div>\r\n                                        <switches class=\"\" v-model=\"configForm.online_registration\" theme=\"bootstrap\" color=\"success\"></switches>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('student.online_registration_header')}}</label>\r\n                                    <autosize-textarea row=\"1\" class=\"form-control\" v-model=\"configForm.online_registration_header\" :placeholder=\"trans('configuration.online_registration_header')\" rows=\"2\" name=\"online_registration_header\"></autosize-textarea>\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"online_registration_header\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('student.online_registration_success_message')}}</label>\r\n                                    <autosize-textarea row=\"1\" class=\"form-control\" v-model=\"configForm.online_registration_success_message\" :placeholder=\"trans('configuration.online_registration_success_message')\" rows=\"2\" name=\"online_registration_success_message\"></autosize-textarea>\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"online_registration_success_message\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('utility.ip_filter')}}</label>\r\n                                    <div>\r\n                                        <switches class=\"\" v-model=\"configForm.ip_filter\" theme=\"bootstrap\" color=\"success\"></switches>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <!-- <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('utility.email_log')}}</label>\r\n                                    <div>\r\n                                        <switches class=\"\" v-model=\"configForm.email_log\" theme=\"bootstrap\" color=\"success\"></switches>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('utility.email_template')}}</label>\r\n                                    <div>\r\n                                        <switches class=\"\" v-model=\"configForm.email_template\" theme=\"bootstrap\" color=\"success\"></switches>\r\n                                    </div>\r\n                                </div>\r\n                            </div> -->\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('utility.todo')}}</label>\r\n                                    <div>\r\n                                        <switches class=\"\" v-model=\"configForm.todo\" theme=\"bootstrap\" color=\"success\"></switches>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('utility.backup')}}</label>\r\n                                    <div>\r\n                                        <switches class=\"\" v-model=\"configForm.backup\" theme=\"bootstrap\" color=\"success\"></switches>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.maintenance_mode')}}</label>\r\n                                    <div>\r\n                                        <switches class=\"\" v-model=\"configForm.maintenance_mode\" theme=\"bootstrap\" color=\"success\"></switches>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <div class=\"form-group\" v-if=\"configForm.maintenance_mode\">\r\n                                    <label for=\"\">{{trans('configuration.maintenance_mode_message')}}</label>\r\n                                    <autosize-textarea row=\"1\" class=\"form-control\" v-model=\"configForm.maintenance_mode_message\" :placeholder=\"trans('configuration.maintenance_mode_message')\" rows=\"1\" name=\"maintenance_mode_message\"></autosize-textarea>\r\n                                    <show-error :form-name=\"configForm\" prop-name=\"maintenance_mode_message\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" v-if=\"!setupWizard\" class=\"btn btn-info waves-effect waves-light pull-right m-t-10\">{{trans('general.save')}}</button>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            setupWizard: {\r\n                default: false\r\n            },\r\n            configurations: {\r\n                required: false\r\n            }\r\n        },\r\n        components : { },\r\n        data() {\r\n            return {\r\n                configForm: new Form({\r\n                    color_theme: '',\r\n                    direction: '',\r\n                    sidebar: '',\r\n                    date_format: '',\r\n                    time_format: '',\r\n                    notification_position: '',\r\n                    timezone: '',\r\n                    first_day_of_week: '',\r\n                    page_length: 10,\r\n                    locale: '',\r\n                    currency: '',\r\n                    footer_credit: '',\r\n                    biometric_auth_token: '',\r\n                    pusher_auth_token: '',\r\n                    https: 0,\r\n                    error_display: 0,\r\n                    frontend_website: 0,\r\n                    online_registration: 0,\r\n                    multilingual: 0,\r\n                    ip_filter: 0,\r\n                    email_log: 0,\r\n                    email_template: 0,\r\n                    todo: 0,\r\n                    backup: 0,\r\n                    maintenance_mode: 0,\r\n                    maintenance_mode_message: '',\r\n                    online_registration_header: '',\r\n                    online_registration_success_message: '',\r\n                    config_type: ''\r\n                }, false),\r\n                systemConfigVariables: {\r\n                    color_themes: [],\r\n                    directions: [],\r\n                    sidebar: [],\r\n                    date_formats: [],\r\n                    time_formats: [],\r\n                    notification_positions: [],\r\n                    timezones: [],\r\n                    locales: [],\r\n                    currencies: [],\r\n                    days: []\r\n                },\r\n                direction: '',\r\n                locale: '',\r\n                sidebar: ''\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('access-configuration')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n            this.getPreRequisite();\r\n\r\n            if(!this.setupWizard)\r\n                this.getConfiguration();\r\n        },\r\n        methods: {\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/configuration/variable?type=system')\r\n                    .then(response => {\r\n                        this.systemConfigVariables.color_themes = response.color_themes;\r\n                        this.systemConfigVariables.directions = response.directions;\r\n                        this.systemConfigVariables.currencies = response.currencies;\r\n                        this.systemConfigVariables.sidebar = response.sidebar;\r\n                        this.systemConfigVariables.date_formats = response.date_formats;\r\n                        this.systemConfigVariables.time_formats = response.time_formats;\r\n                        this.systemConfigVariables.days = response.days;\r\n                        this.systemConfigVariables.notification_positions = response.notification_positions;\r\n                        this.systemConfigVariables.timezones = response.timezones;\r\n                        this.systemConfigVariables.locales = response.locales;\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getConfiguration(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/configuration')\r\n                    .then(response => {\r\n                        this.configForm = helper.formAssign(this.configForm, response);\r\n                        this.direction = response.direction;\r\n                        this.locale = response.locale;\r\n                        this.sidebar = response.sidebar;\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            submit(){\r\n                let loader = this.$loading.show();\r\n                this.configForm.config_type = 'system';\r\n                this.configForm.https = (this.configForm.https) ? 1 : 0;\r\n                this.configForm.error_display = (this.configForm.error_display) ? 1 : 0;\r\n                this.configForm.frontend_website = (this.configForm.frontend_website) ? 1 : 0;\r\n                this.configForm.online_registration = (this.configForm.online_registration) ? 1 : 0;\r\n                this.configForm.multilingual = (this.configForm.multilingual) ? 1 : 0;\r\n                this.configForm.ip_filter = (this.configForm.ip_filter) ? 1 : 0;\r\n                this.configForm.email_log = (this.configForm.email_log) ? 1 : 0;\r\n                this.configForm.email_template = (this.configForm.email_template) ? 1 : 0;\r\n                this.configForm.todo = (this.configForm.todo) ? 1 : 0;\r\n                this.configForm.backup = (this.configForm.backup) ? 1 : 0;\r\n                this.configForm.maintenance_mode = (this.configForm.maintenance_mode) ? 1 : 0;\r\n                return this.configForm.post('/api/configuration')\r\n                    .then(response => {\r\n                        this.$store.dispatch('setConfig',{loaded: false});\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        return true;\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        return false;\r\n                    });\r\n            },\r\n            getConfig(config){\r\n                return helper.getConfig(config);\r\n            }\r\n        },\r\n        watch: {\r\n            configurations(val){\r\n                if (val)\r\n                    helper.formAssign(this.configForm,val);\r\n            }\r\n        }\r\n    }\t\r\n</script>","<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('configuration.system_configuration')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/dashboard')\"><i class=\"fas fa-home\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.home')}}</span></button>\r\n                        <help-button @clicked=\"help_topic = 'configuration.system.configuration'\"></help-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <system-form></system-form>\r\n        </div>\r\n        <right-panel :topic=\"help_topic\"></right-panel>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import systemForm from './form'\r\n\r\n    export default {\r\n        components: {systemForm},\r\n        data() {\r\n            return {\r\n                help_topic: ''\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"card\" }, [\n    _c(\"div\", { staticClass: \"card-body p-4\" }, [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function ($event) {\n              $event.preventDefault()\n              return _vm.submit.apply(null, arguments)\n            },\n            keydown: function ($event) {\n              return _vm.configForm.errors.clear($event.target.name)\n            },\n          },\n        },\n        [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"configuration.default_color_theme\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.color_theme,\n                              expression: \"configForm.color_theme\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"color_theme\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"color_theme\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"color_theme\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.color_themes,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"color_theme\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"configuration.default_direction\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.direction,\n                              expression: \"configForm.direction\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"direction\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"direction\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\"direction\")\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.directions,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"direction\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"configuration.default_sidebar\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.sidebar,\n                              expression: \"configForm.sidebar\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"sidebar\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"sidebar\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\"sidebar\")\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.sidebar,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"sidebar\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _vm.getConfig(\"multilingual\")\n                  ? _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"configuration.default_locale\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.configForm.locale,\n                                  expression: \"configForm.locale\",\n                                },\n                              ],\n                              staticClass: \"custom-select col-12\",\n                              attrs: { name: \"locale\" },\n                              on: {\n                                change: [\n                                  function ($event) {\n                                    var $$selectedVal = Array.prototype.filter\n                                      .call(\n                                        $event.target.options,\n                                        function (o) {\n                                          return o.selected\n                                        }\n                                      )\n                                      .map(function (o) {\n                                        var val =\n                                          \"_value\" in o ? o._value : o.value\n                                        return val\n                                      })\n                                    _vm.$set(\n                                      _vm.configForm,\n                                      \"locale\",\n                                      $event.target.multiple\n                                        ? $$selectedVal\n                                        : $$selectedVal[0]\n                                    )\n                                  },\n                                  function ($event) {\n                                    return _vm.configForm.errors.clear(\"locale\")\n                                  },\n                                ],\n                              },\n                            },\n                            _vm._l(\n                              _vm.systemConfigVariables.locales,\n                              function (option) {\n                                return _c(\n                                  \"option\",\n                                  { domProps: { value: option.value } },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                    \" +\n                                        _vm._s(option.text) +\n                                        \"\\n                                  \"\n                                    ),\n                                  ]\n                                )\n                              }\n                            ),\n                            0\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.configForm,\n                              \"prop-name\": \"locale\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.date_format\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.date_format,\n                              expression: \"configForm.date_format\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"date_format\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"date_format\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"date_format\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.date_formats,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"date_format\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.time_format\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.time_format,\n                              expression: \"configForm.time_format\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"time_format\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"time_format\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"time_format\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.time_formats,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"time_format\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"configuration.notification_position\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.notification_position,\n                              expression: \"configForm.notification_position\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"notification_position\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"notification_position\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"notification_position\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.notification_positions,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"notification_position\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.timezone\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.timezone,\n                              expression: \"configForm.timezone\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"timezone\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"timezone\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\"timezone\")\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.timezones,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"timezone\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"calendar.first_day_of_week\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.first_day_of_week,\n                              expression: \"configForm.first_day_of_week\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"first_day_of_week\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"first_day_of_week\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"first_day_of_week\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.days,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"first_day_of_week\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.currency\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.currency,\n                              expression: \"configForm.currency\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"currency\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"currency\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\"currency\")\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.currencies,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"currency\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.page_length\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.page_length,\n                              expression: \"configForm.page_length\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"page_length\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"page_length\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"page_length\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(_vm.getConfig(\"pagination\"), function (option) {\n                          return _c(\"option\", { domProps: { value: option } }, [\n                            _vm._v(\n                              \"\\n                                    \" +\n                                _vm._s(\n                                  option + \" \" + _vm.trans(\"general.per_page\")\n                                ) +\n                                \"\\n                                  \"\n                            ),\n                          ])\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"page_length\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _vm.getConfig(\"show_footer_credit\")\n                  ? _c(\"div\", { staticClass: \"col-12 col-sm-8\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"configuration.footer_credit\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.configForm.footer_credit,\n                                expression: \"configForm.footer_credit\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: \"footer_credit\",\n                              placeholder: _vm.trans(\n                                \"configuration.footer_credit\"\n                              ),\n                            },\n                            domProps: { value: _vm.configForm.footer_credit },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"footer_credit\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.configForm,\n                              \"prop-name\": \"footer_credit\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"configuration.biometric_auth_token\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.configForm.biometric_auth_token,\n                            expression: \"configForm.biometric_auth_token\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"biometric_auth_token\",\n                          placeholder: _vm.trans(\n                            \"configuration.biometric_auth_token\"\n                          ),\n                        },\n                        domProps: {\n                          value: _vm.configForm.biometric_auth_token,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.configForm,\n                              \"biometric_auth_token\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"biometric_auth_token\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"configuration.pusher_auth_token\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.configForm.pusher_auth_token,\n                            expression: \"configForm.pusher_auth_token\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"pusher_auth_token\",\n                          placeholder: _vm.trans(\n                            \"configuration.pusher_auth_token\"\n                          ),\n                        },\n                        domProps: { value: _vm.configForm.pusher_auth_token },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.configForm,\n                              \"pusher_auth_token\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"pusher_auth_token\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"configuration.https\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.https,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"https\", $$v)\n                            },\n                            expression: \"configForm.https\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"configuration.error_display\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.error_display,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"error_display\", $$v)\n                            },\n                            expression: \"configForm.error_display\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"configuration.multilingual\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.multilingual,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"multilingual\", $$v)\n                            },\n                            expression: \"configForm.multilingual\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"frontend.enable_frontend_website\"))\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.frontend_website,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"frontend_website\", $$v)\n                            },\n                            expression: \"configForm.frontend_website\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"student.enable_online_registration\"))\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.online_registration,\n                            callback: function ($$v) {\n                              _vm.$set(\n                                _vm.configForm,\n                                \"online_registration\",\n                                $$v\n                              )\n                            },\n                            expression: \"configForm.online_registration\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"student.online_registration_header\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"autosize-textarea\", {\n                        staticClass: \"form-control\",\n                        attrs: {\n                          row: \"1\",\n                          placeholder: _vm.trans(\n                            \"configuration.online_registration_header\"\n                          ),\n                          rows: \"2\",\n                          name: \"online_registration_header\",\n                        },\n                        model: {\n                          value: _vm.configForm.online_registration_header,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.configForm,\n                              \"online_registration_header\",\n                              $$v\n                            )\n                          },\n                          expression: \"configForm.online_registration_header\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"online_registration_header\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\n                              \"student.online_registration_success_message\"\n                            )\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"autosize-textarea\", {\n                        staticClass: \"form-control\",\n                        attrs: {\n                          row: \"1\",\n                          placeholder: _vm.trans(\n                            \"configuration.online_registration_success_message\"\n                          ),\n                          rows: \"2\",\n                          name: \"online_registration_success_message\",\n                        },\n                        model: {\n                          value:\n                            _vm.configForm.online_registration_success_message,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.configForm,\n                              \"online_registration_success_message\",\n                              $$v\n                            )\n                          },\n                          expression:\n                            \"configForm.online_registration_success_message\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"online_registration_success_message\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"utility.ip_filter\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.ip_filter,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"ip_filter\", $$v)\n                            },\n                            expression: \"configForm.ip_filter\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"utility.todo\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.todo,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"todo\", $$v)\n                            },\n                            expression: \"configForm.todo\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"utility.backup\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.backup,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"backup\", $$v)\n                            },\n                            expression: \"configForm.backup\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"configuration.maintenance_mode\"))\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.maintenance_mode,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"maintenance_mode\", $$v)\n                            },\n                            expression: \"configForm.maintenance_mode\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                  _vm.configForm.maintenance_mode\n                    ? _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(\n                                _vm.trans(\n                                  \"configuration.maintenance_mode_message\"\n                                )\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"autosize-textarea\", {\n                            staticClass: \"form-control\",\n                            attrs: {\n                              row: \"1\",\n                              placeholder: _vm.trans(\n                                \"configuration.maintenance_mode_message\"\n                              ),\n                              rows: \"1\",\n                              name: \"maintenance_mode_message\",\n                            },\n                            model: {\n                              value: _vm.configForm.maintenance_mode_message,\n                              callback: function ($$v) {\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"maintenance_mode_message\",\n                                  $$v\n                                )\n                              },\n                              expression: \"configForm.maintenance_mode_message\",\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.configForm,\n                              \"prop-name\": \"maintenance_mode_message\",\n                            },\n                          }),\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                ]),\n              ]),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          !_vm.setupWizard\n            ? _c(\n                \"button\",\n                {\n                  staticClass:\n                    \"btn btn-info waves-effect waves-light pull-right m-t-10\",\n                  attrs: { type: \"submit\" },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n              )\n            : _vm._e(),\n        ]\n      ),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(_vm._s(_vm.trans(\"configuration.system_configuration\"))),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info btn-sm\",\n                    on: {\n                      click: function ($event) {\n                        return _vm.$router.push(\"/dashboard\")\n                      },\n                    },\n                  },\n                  [\n                    _c(\"i\", { staticClass: \"fas fa-home\" }),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.home\"))),\n                    ]),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"configuration.system.configuration\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"container-fluid\" }, [_c(\"system-form\")], 1),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=9d9258c8&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9d9258c8')) {\n      api.createRecord('9d9258c8', component.options)\n    } else {\n      api.reload('9d9258c8', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=9d9258c8&\", function () {\n      api.rerender('9d9258c8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/system/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=477857ac&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('477857ac')) {\n      api.createRecord('477857ac', component.options)\n    } else {\n      api.reload('477857ac', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=477857ac&\", function () {\n      api.rerender('477857ac', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/system/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=477857ac&\""],"names":[],"sourceRoot":""}