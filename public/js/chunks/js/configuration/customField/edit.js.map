{"version":3,"file":"js/chunks/js/configuration/customField/edit.js?id=9427f010c76640e8","mappings":";;;;;;;;;;;;;;AAyBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC6FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;;;;;;;;;;;;;;;AClQA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAIA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAWA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAWA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAmBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAMA;AAQA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;;;ACv2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/configuration/custom-field/edit.vue","webpack://InstiKit/resources/js/views/configuration/custom-field/form.vue","webpack://InstiKit/./resources/js/views/configuration/custom-field/edit.vue","webpack://InstiKit/./resources/js/views/configuration/custom-field/form.vue","webpack://InstiKit/./resources/js/views/configuration/custom-field/edit.vue?1a39","webpack://InstiKit/./resources/js/views/configuration/custom-field/form.vue?1a1c","webpack://InstiKit/./resources/js/views/configuration/custom-field/edit.vue?3879","webpack://InstiKit/./resources/js/views/configuration/custom-field/form.vue?78de","webpack://InstiKit/./resources/js/views/configuration/custom-field/edit.vue?1515"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('configuration.edit_custom_field')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/configuration/custom-field')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('configuration.custom_field')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card card-form\">\r\n                <div class=\"card-body p-t-20\">\r\n                    <custom-field-form :id=\"id\"></custom-field-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import customFieldForm from './form';\r\n\r\n    export default {\r\n        components : { customFieldForm },\r\n        data() {\r\n            return {\r\n                id:this.$route.params.id\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('access-configuration')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","<template>\r\n\t<div>\r\n\t    <form @submit.prevent=\"proceed\" @keydown=\"customFieldForm.errors.clear($event.target.name)\">\r\n\t        <div class=\"row\">\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('configuration.custom_field_form')}}</label>\r\n                        <select v-model=\"customFieldForm.form\" :placeholder=\"trans('general.select_one')\" class=\"custom-select col-12\" name=\"form\" @change=\"customFieldForm.errors.clear('form')\">\r\n                          <option value=\"\">{{trans('general.select_one')}}</option>\r\n                          <option v-for=\"form in forms\" v-bind:value=\"form.value\">\r\n                            {{ form.text }}\r\n                          </option>\r\n                        </select>\r\n                        <show-error :form-name=\"customFieldForm\" prop-name=\"form\"></show-error>\r\n                    </div>\r\n                </div>\r\n\t            <div class=\"col-12 col-sm-4\">\r\n\t                <div class=\"form-group\">\r\n\t                    <label for=\"\">{{trans('configuration.custom_field_name')}}</label>\r\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"customFieldForm.name\" name=\"name\" :placeholder=\"trans('configuration.custom_field_name')\">\r\n\t                    <show-error :form-name=\"customFieldForm\" prop-name=\"name\"></show-error>\r\n\t                </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"custom-control custom-checkbox m-t-20\"> <br />\r\n                            <input type=\"checkbox\" class=\"custom-control-input\" v-model=\"customFieldForm.is_required\" value=\"1\" name=\"is_required\">\r\n                            <span class=\"custom-control-label\">{{trans('configuration.custom_field_required')}}</span>\r\n                        </label>\r\n                        <show-error :form-name=\"customFieldForm\" prop-name=\"is_required\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('configuration.custom_field_type')}}</label>\r\n                        <select v-model=\"customFieldForm.type\" class=\"custom-select col-12\" name=\"type\" @change=\"customFieldForm.errors.clear('type')\">\r\n                          <option value=\"\">{{trans('general.select_one')}}</option>\r\n                          <option v-for=\"type in types\" v-bind:value=\"type.value\">\r\n                            {{ type.text }}\r\n                          </option>\r\n                        </select>\r\n                        <show-error :form-name=\"customFieldForm\" prop-name=\"type\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <template v-if=\"customFieldForm.type === 'numeric_input'\">\r\n                    <div class=\"col-12 col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('configuration.custom_field_min_value')}}</label>\r\n                            <input class=\"form-control\" type=\"number\" v-model=\"customFieldForm.min_value\" name=\"min_value\" :placeholder=\"trans('configuration.custom_field_min_value')\">\r\n                            <show-error :form-name=\"customFieldForm\" prop-name=\"min_value\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('configuration.custom_field_max_value')}}</label>\r\n                            <input class=\"form-control\" type=\"number\" v-model=\"customFieldForm.max_value\" name=\"max_value\" :placeholder=\"trans('configuration.custom_field_max_value')\">\r\n                            <show-error :form-name=\"customFieldForm\" prop-name=\"max_value\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('configuration.custom_field_decimal_place')}}</label>\r\n                            <input class=\"form-control\" type=\"number\" v-model=\"customFieldForm.decimal_place\" name=\"decimal_place\" :placeholder=\"trans('configuration.custom_field_decimal_place')\">\r\n                            <show-error :form-name=\"customFieldForm\" prop-name=\"decimal_place\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n                <template v-if=\"customFieldForm.type === 'text_input' || customFieldForm.type === 'multi_line_input'\">\r\n                    <div class=\"col-12 col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('configuration.custom_field_min_length')}}</label>\r\n                            <input class=\"form-control\" type=\"number\" v-model=\"customFieldForm.min_length\" name=\"min_length\" :placeholder=\"trans('configuration.custom_field_min_length')\">\r\n                            <show-error :form-name=\"customFieldForm\" prop-name=\"min_length\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('configuration.custom_field_max_length')}}</label>\r\n                            <input class=\"form-control\" type=\"number\" v-model=\"customFieldForm.max_length\" name=\"max_length\" :placeholder=\"trans('configuration.custom_field_max_length')\">\r\n                            <show-error :form-name=\"customFieldForm\" prop-name=\"max_length\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('configuration.custom_field_width')}}</label>\r\n                        <select v-model=\"customFieldForm.width\" class=\"custom-select col-12\" name=\"width\" @change=\"customFieldForm.errors.clear('width')\">\r\n                          <option value=\"\">{{trans('general.select_one')}}</option>\r\n                          <option v-for=\"width in widths\" v-bind:value=\"width.value\">\r\n                            {{ width.text }}\r\n                          </option>\r\n                        </select>\r\n                        <show-error :form-name=\"customFieldForm\" prop-name=\"width\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-4\" v-if=\"showValue\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">&nbsp;</label> <br />\r\n                        <button type=\"button\" @click=\"addRow\" class=\"btn btn-info btn-sm waves-effect waves-light\">{{trans('configuration.add_new_custom_field_value')}}</button>\r\n                    </div>\r\n\t            </div>\r\n            </div>\r\n            <div class=\"row\" v-if=\"showValue\">\r\n\t            <div class=\"col-12 col-sm-6\">\r\n\t            \t<div class=\"form-group\" v-for=\"(value, index) in customFieldForm.values\">\r\n\t        \t\t\t<label for=\"\">{{trans('configuration.custom_field_value')}} {{index+1}}</label>\r\n\t        \t\t\t<div class=\"row\">\r\n\t                \t\t<div class=\"col-12 col-sm-8\">\r\n\t\t                        <input class=\"form-control\" type=\"text\" v-model=\"value.name\" :name=\"getValueName(index)\" :placeholder=\"trans('configuration.custom_field_value_name')\">\r\n\t\t                        <show-error :form-name=\"customFieldForm\" :prop-name=\"getValueName(index)\"></show-error>\r\n\t                \t\t</div>\r\n\t                \t\t<div class=\"col-12 col-sm-4\">\r\n\t\t                        <label for=\"\">\r\n\t\t                            <button type=\"button\" class=\"btn btn-xs btn-danger\" :key=\"`${index}_delete_value`\" v-confirm=\"{ok: confirmDeleteValue(index)}\" v-tooltip=\"trans('configuration.delete_custom_field_value')\"><i class=\"fas fa-times\"></i></button>\r\n\t\t                        </label>\r\n\t                \t\t</div>\r\n\t                \t</div>\r\n\t                </div>\r\n\t            </div>\r\n\t        </div>\r\n\t        <div class=\"card-footer text-right\">\r\n\t            <router-link to=\"/configuration/custom-field\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\r\n\t            <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n\t            <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n\t                <span v-if=\"id\">{{trans('general.update')}}</span>\r\n\t                <span v-else>{{trans('general.save')}}</span>\r\n\t            </button>\r\n\t        </div>\r\n\t    </form>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                customFieldForm: new Form({\r\n                    name : '',\r\n                    type: '',\r\n                    width: '',\r\n                    form: '',\r\n                    min_length: '',\r\n                    max_length: '',\r\n                    min_value: '',\r\n                    max_value: '',\r\n                    decimal_place: 2,\r\n                    is_required: false,\r\n                    values: []\r\n                }),\r\n                forms: [],\r\n                types: [],\r\n                widths: []\r\n            };\r\n        },\r\n        props: ['id'],\r\n        mounted() {\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n        \tgetPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/custom-field/pre-requisite')\r\n                    .then(response => {\r\n                        this.forms = response.forms;\r\n                        this.types = response.types;\r\n                        this.widths = response.widths;\r\n                        \r\n                        if(this.id)\r\n                            this.get();\r\n\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n        \t},\r\n            addRow(){\r\n                let new_index = this.customFieldForm.values.push({\r\n                    name: ''\r\n                })\r\n            },\r\n            getValueName(index){\r\n                return index+'_value_name';\r\n            },\r\n            confirmDeleteValue(index){\r\n                return dialog => this.deleteValue(index);\r\n            },\r\n            deleteValue(index){\r\n                this.customFieldForm.values.splice(index, 1);\r\n            },\r\n            proceed(){\r\n                if(this.id)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.customFieldForm.post('/api/custom-field')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.customFieldForm.values = [];\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/custom-field/'+this.id)\r\n                    .then(response => {\r\n                        this.customFieldForm.name = response.name;\r\n                        this.customFieldForm.type = response.type;\r\n                        this.customFieldForm.form = response.form;\r\n                        this.customFieldForm.width = response.width;\r\n                        this.customFieldForm.is_required = response.is_required;\r\n                        this.customFieldForm.min_length = response.options.hasOwnProperty('min_length') ? response.options.min_length : '';\r\n                        this.customFieldForm.max_length = response.options.hasOwnProperty('max_length') ? response.options.max_length : '';\r\n                        this.customFieldForm.min_value = response.options.hasOwnProperty('min_value') ? response.options.min_value : '';\r\n                        this.customFieldForm.max_value = response.options.hasOwnProperty('max_value') ? response.options.max_value : '';\r\n                        this.customFieldForm.decimal_place = response.options.hasOwnProperty('decimal_place') ? response.options.decimal_place : '';\r\n                        response.values.forEach(value => {\r\n                        \tthis.customFieldForm.values.push({name: value});\r\n                        });\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/configuration/custom-field');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.customFieldForm.patch('/api/custom-field/'+this.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/configuration/custom-field');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            }\r\n        },\r\n        computed: {\r\n            showValue() {\r\n                if (this.customFieldForm.type == 'checkbox_input' || this.customFieldForm.type == 'radio_input' || this.customFieldForm.type == 'dropdown_input')\r\n                    return true;\r\n                else\r\n                    return false;\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"configuration.edit_custom_field\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/configuration/custom-field\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"configuration.custom_field\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"card-body p-t-20\" },\n          [_c(\"custom-field-form\", { attrs: { id: _vm.id } })],\n          1\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.customFieldForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\n          \"div\",\n          { staticClass: \"row\" },\n          [\n            _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"configuration.custom_field_form\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.customFieldForm.form,\n                          expression: \"customFieldForm.form\",\n                        },\n                      ],\n                      staticClass: \"custom-select col-12\",\n                      attrs: {\n                        placeholder: _vm.trans(\"general.select_one\"),\n                        name: \"form\",\n                      },\n                      on: {\n                        change: [\n                          function ($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function (o) {\n                                return o.selected\n                              })\n                              .map(function (o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.$set(\n                              _vm.customFieldForm,\n                              \"form\",\n                              $event.target.multiple\n                                ? $$selectedVal\n                                : $$selectedVal[0]\n                            )\n                          },\n                          function ($event) {\n                            return _vm.customFieldForm.errors.clear(\"form\")\n                          },\n                        ],\n                      },\n                    },\n                    [\n                      _c(\"option\", { attrs: { value: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _vm._l(_vm.forms, function (form) {\n                        return _c(\n                          \"option\",\n                          { domProps: { value: form.value } },\n                          [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(form.text) +\n                                \"\\n                          \"\n                            ),\n                          ]\n                        )\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.customFieldForm,\n                      \"prop-name\": \"form\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"configuration.custom_field_name\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.customFieldForm.name,\n                        expression: \"customFieldForm.name\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"name\",\n                      placeholder: _vm.trans(\"configuration.custom_field_name\"),\n                    },\n                    domProps: { value: _vm.customFieldForm.name },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(\n                          _vm.customFieldForm,\n                          \"name\",\n                          $event.target.value\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.customFieldForm,\n                      \"prop-name\": \"name\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\n                    \"label\",\n                    { staticClass: \"custom-control custom-checkbox m-t-20\" },\n                    [\n                      _c(\"br\"),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.customFieldForm.is_required,\n                            expression: \"customFieldForm.is_required\",\n                          },\n                        ],\n                        staticClass: \"custom-control-input\",\n                        attrs: {\n                          type: \"checkbox\",\n                          value: \"1\",\n                          name: \"is_required\",\n                        },\n                        domProps: {\n                          checked: Array.isArray(\n                            _vm.customFieldForm.is_required\n                          )\n                            ? _vm._i(_vm.customFieldForm.is_required, \"1\") > -1\n                            : _vm.customFieldForm.is_required,\n                        },\n                        on: {\n                          change: function ($event) {\n                            var $$a = _vm.customFieldForm.is_required,\n                              $$el = $event.target,\n                              $$c = $$el.checked ? true : false\n                            if (Array.isArray($$a)) {\n                              var $$v = \"1\",\n                                $$i = _vm._i($$a, $$v)\n                              if ($$el.checked) {\n                                $$i < 0 &&\n                                  _vm.$set(\n                                    _vm.customFieldForm,\n                                    \"is_required\",\n                                    $$a.concat([$$v])\n                                  )\n                              } else {\n                                $$i > -1 &&\n                                  _vm.$set(\n                                    _vm.customFieldForm,\n                                    \"is_required\",\n                                    $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                  )\n                              }\n                            } else {\n                              _vm.$set(_vm.customFieldForm, \"is_required\", $$c)\n                            }\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"custom-control-label\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"configuration.custom_field_required\")\n                          )\n                        ),\n                      ]),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.customFieldForm,\n                      \"prop-name\": \"is_required\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"configuration.custom_field_type\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.customFieldForm.type,\n                          expression: \"customFieldForm.type\",\n                        },\n                      ],\n                      staticClass: \"custom-select col-12\",\n                      attrs: { name: \"type\" },\n                      on: {\n                        change: [\n                          function ($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function (o) {\n                                return o.selected\n                              })\n                              .map(function (o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.$set(\n                              _vm.customFieldForm,\n                              \"type\",\n                              $event.target.multiple\n                                ? $$selectedVal\n                                : $$selectedVal[0]\n                            )\n                          },\n                          function ($event) {\n                            return _vm.customFieldForm.errors.clear(\"type\")\n                          },\n                        ],\n                      },\n                    },\n                    [\n                      _c(\"option\", { attrs: { value: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _vm._l(_vm.types, function (type) {\n                        return _c(\n                          \"option\",\n                          { domProps: { value: type.value } },\n                          [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(type.text) +\n                                \"\\n                          \"\n                            ),\n                          ]\n                        )\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.customFieldForm,\n                      \"prop-name\": \"type\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _vm.customFieldForm.type === \"numeric_input\"\n              ? [\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"configuration.custom_field_min_value\")\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.customFieldForm.min_value,\n                              expression: \"customFieldForm.min_value\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"number\",\n                            name: \"min_value\",\n                            placeholder: _vm.trans(\n                              \"configuration.custom_field_min_value\"\n                            ),\n                          },\n                          domProps: { value: _vm.customFieldForm.min_value },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.customFieldForm,\n                                \"min_value\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.customFieldForm,\n                            \"prop-name\": \"min_value\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"configuration.custom_field_max_value\")\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.customFieldForm.max_value,\n                              expression: \"customFieldForm.max_value\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"number\",\n                            name: \"max_value\",\n                            placeholder: _vm.trans(\n                              \"configuration.custom_field_max_value\"\n                            ),\n                          },\n                          domProps: { value: _vm.customFieldForm.max_value },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.customFieldForm,\n                                \"max_value\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.customFieldForm,\n                            \"prop-name\": \"max_value\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"configuration.custom_field_decimal_place\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.customFieldForm.decimal_place,\n                              expression: \"customFieldForm.decimal_place\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"number\",\n                            name: \"decimal_place\",\n                            placeholder: _vm.trans(\n                              \"configuration.custom_field_decimal_place\"\n                            ),\n                          },\n                          domProps: {\n                            value: _vm.customFieldForm.decimal_place,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.customFieldForm,\n                                \"decimal_place\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.customFieldForm,\n                            \"prop-name\": \"decimal_place\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.customFieldForm.type === \"text_input\" ||\n            _vm.customFieldForm.type === \"multi_line_input\"\n              ? [\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"configuration.custom_field_min_length\")\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.customFieldForm.min_length,\n                              expression: \"customFieldForm.min_length\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"number\",\n                            name: \"min_length\",\n                            placeholder: _vm.trans(\n                              \"configuration.custom_field_min_length\"\n                            ),\n                          },\n                          domProps: { value: _vm.customFieldForm.min_length },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.customFieldForm,\n                                \"min_length\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.customFieldForm,\n                            \"prop-name\": \"min_length\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"configuration.custom_field_max_length\")\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.customFieldForm.max_length,\n                              expression: \"customFieldForm.max_length\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"number\",\n                            name: \"max_length\",\n                            placeholder: _vm.trans(\n                              \"configuration.custom_field_max_length\"\n                            ),\n                          },\n                          domProps: { value: _vm.customFieldForm.max_length },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.customFieldForm,\n                                \"max_length\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.customFieldForm,\n                            \"prop-name\": \"max_length\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"configuration.custom_field_width\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.customFieldForm.width,\n                          expression: \"customFieldForm.width\",\n                        },\n                      ],\n                      staticClass: \"custom-select col-12\",\n                      attrs: { name: \"width\" },\n                      on: {\n                        change: [\n                          function ($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function (o) {\n                                return o.selected\n                              })\n                              .map(function (o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.$set(\n                              _vm.customFieldForm,\n                              \"width\",\n                              $event.target.multiple\n                                ? $$selectedVal\n                                : $$selectedVal[0]\n                            )\n                          },\n                          function ($event) {\n                            return _vm.customFieldForm.errors.clear(\"width\")\n                          },\n                        ],\n                      },\n                    },\n                    [\n                      _c(\"option\", { attrs: { value: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _vm._l(_vm.widths, function (width) {\n                        return _c(\n                          \"option\",\n                          { domProps: { value: width.value } },\n                          [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(width.text) +\n                                \"\\n                          \"\n                            ),\n                          ]\n                        )\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.customFieldForm,\n                      \"prop-name\": \"width\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _vm.showValue\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [_vm._v(\" \")]),\n                    _vm._v(\" \"),\n                    _c(\"br\"),\n                    _vm._v(\" \"),\n                    _c(\n                      \"button\",\n                      {\n                        staticClass:\n                          \"btn btn-info btn-sm waves-effect waves-light\",\n                        attrs: { type: \"button\" },\n                        on: { click: _vm.addRow },\n                      },\n                      [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\n                              \"configuration.add_new_custom_field_value\"\n                            )\n                          )\n                        ),\n                      ]\n                    ),\n                  ]),\n                ])\n              : _vm._e(),\n          ],\n          2\n        ),\n        _vm._v(\" \"),\n        _vm.showValue\n          ? _c(\"div\", { staticClass: \"row\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-sm-6\" },\n                _vm._l(_vm.customFieldForm.values, function (value, index) {\n                  return _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"configuration.custom_field_value\")) +\n                          \" \" +\n                          _vm._s(index + 1)\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-sm-8\" },\n                        [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: value.name,\n                                expression: \"value.name\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: _vm.getValueName(index),\n                              placeholder: _vm.trans(\n                                \"configuration.custom_field_value_name\"\n                              ),\n                            },\n                            domProps: { value: value.name },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(value, \"name\", $event.target.value)\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.customFieldForm,\n                              \"prop-name\": _vm.getValueName(index),\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _c(\n                            \"button\",\n                            {\n                              directives: [\n                                {\n                                  name: \"confirm\",\n                                  rawName: \"v-confirm\",\n                                  value: { ok: _vm.confirmDeleteValue(index) },\n                                  expression: \"{ok: confirmDeleteValue(index)}\",\n                                },\n                                {\n                                  name: \"tooltip\",\n                                  rawName: \"v-tooltip\",\n                                  value: _vm.trans(\n                                    \"configuration.delete_custom_field_value\"\n                                  ),\n                                  expression:\n                                    \"trans('configuration.delete_custom_field_value')\",\n                                },\n                              ],\n                              key: `${index}_delete_value`,\n                              staticClass: \"btn btn-xs btn-danger\",\n                              attrs: { type: \"button\" },\n                            },\n                            [_c(\"i\", { staticClass: \"fas fa-times\" })]\n                          ),\n                        ]),\n                      ]),\n                    ]),\n                  ])\n                }),\n                0\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"card-footer text-right\" },\n          [\n            _c(\n              \"router-link\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.id,\n                    expression: \"id\",\n                  },\n                ],\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { to: \"/configuration/custom-field\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            !_vm.id\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-danger waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: {\n                      click: function ($event) {\n                        return _vm.$emit(\"cancel\")\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [\n                _vm.id\n                  ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                  : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n              ]\n            ),\n          ],\n          1\n        ),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=59e1d153&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('59e1d153')) {\n      api.createRecord('59e1d153', component.options)\n    } else {\n      api.reload('59e1d153', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=59e1d153&\", function () {\n      api.rerender('59e1d153', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/custom-field/edit.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=16a0830d&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('16a0830d')) {\n      api.createRecord('16a0830d', component.options)\n    } else {\n      api.reload('16a0830d', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=16a0830d&\", function () {\n      api.rerender('16a0830d', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/custom-field/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=59e1d153&\""],"names":[],"sourceRoot":""}