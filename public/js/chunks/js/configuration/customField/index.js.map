{"version":3,"file":"js/chunks/js/configuration/customField/index.js?id=e5a3d699c02c91ea","mappings":";;;;;;;;;;;;;AAqIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;;;;;;;;;;;;;;;AC3GA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChmBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAMA;AAQA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;ACv2BA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAeA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAOA;AAMA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAQA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AAAA;AAAA;AAAA;AASA;AAQA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AASA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAqDA;AAAA;AAWA;AAaA;AACA;AACA;AACA;AAuIA;AAAA;AACA;AAAA;AAWA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAOA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAKA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAAA;AAIA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;ACj1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/configuration/custom-field/form.vue","webpack://InstiKit/resources/js/views/configuration/custom-field/index.vue","webpack://InstiKit/./resources/js/views/configuration/custom-field/form.vue","webpack://InstiKit/./resources/js/views/configuration/custom-field/index.vue","webpack://InstiKit/./resources/js/views/configuration/custom-field/form.vue?1a1c","webpack://InstiKit/./resources/js/views/configuration/custom-field/index.vue?1c2c","webpack://InstiKit/./resources/js/views/configuration/custom-field/form.vue?78de","webpack://InstiKit/./resources/js/views/configuration/custom-field/index.vue?3033","webpack://InstiKit/./resources/js/views/configuration/custom-field/form.vue?d439","webpack://InstiKit/./resources/js/views/configuration/custom-field/index.vue?6024"],"sourcesContent":["<template>\r\n\t<div>\r\n\t    <form @submit.prevent=\"proceed\" @keydown=\"customFieldForm.errors.clear($event.target.name)\">\r\n\t        <div class=\"row\">\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('configuration.custom_field_form')}}</label>\r\n                        <select v-model=\"customFieldForm.form\" :placeholder=\"trans('general.select_one')\" class=\"custom-select col-12\" name=\"form\" @change=\"customFieldForm.errors.clear('form')\">\r\n                          <option value=\"\">{{trans('general.select_one')}}</option>\r\n                          <option v-for=\"form in forms\" v-bind:value=\"form.value\">\r\n                            {{ form.text }}\r\n                          </option>\r\n                        </select>\r\n                        <show-error :form-name=\"customFieldForm\" prop-name=\"form\"></show-error>\r\n                    </div>\r\n                </div>\r\n\t            <div class=\"col-12 col-sm-4\">\r\n\t                <div class=\"form-group\">\r\n\t                    <label for=\"\">{{trans('configuration.custom_field_name')}}</label>\r\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"customFieldForm.name\" name=\"name\" :placeholder=\"trans('configuration.custom_field_name')\">\r\n\t                    <show-error :form-name=\"customFieldForm\" prop-name=\"name\"></show-error>\r\n\t                </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"custom-control custom-checkbox m-t-20\"> <br />\r\n                            <input type=\"checkbox\" class=\"custom-control-input\" v-model=\"customFieldForm.is_required\" value=\"1\" name=\"is_required\">\r\n                            <span class=\"custom-control-label\">{{trans('configuration.custom_field_required')}}</span>\r\n                        </label>\r\n                        <show-error :form-name=\"customFieldForm\" prop-name=\"is_required\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('configuration.custom_field_type')}}</label>\r\n                        <select v-model=\"customFieldForm.type\" class=\"custom-select col-12\" name=\"type\" @change=\"customFieldForm.errors.clear('type')\">\r\n                          <option value=\"\">{{trans('general.select_one')}}</option>\r\n                          <option v-for=\"type in types\" v-bind:value=\"type.value\">\r\n                            {{ type.text }}\r\n                          </option>\r\n                        </select>\r\n                        <show-error :form-name=\"customFieldForm\" prop-name=\"type\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <template v-if=\"customFieldForm.type === 'numeric_input'\">\r\n                    <div class=\"col-12 col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('configuration.custom_field_min_value')}}</label>\r\n                            <input class=\"form-control\" type=\"number\" v-model=\"customFieldForm.min_value\" name=\"min_value\" :placeholder=\"trans('configuration.custom_field_min_value')\">\r\n                            <show-error :form-name=\"customFieldForm\" prop-name=\"min_value\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('configuration.custom_field_max_value')}}</label>\r\n                            <input class=\"form-control\" type=\"number\" v-model=\"customFieldForm.max_value\" name=\"max_value\" :placeholder=\"trans('configuration.custom_field_max_value')\">\r\n                            <show-error :form-name=\"customFieldForm\" prop-name=\"max_value\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('configuration.custom_field_decimal_place')}}</label>\r\n                            <input class=\"form-control\" type=\"number\" v-model=\"customFieldForm.decimal_place\" name=\"decimal_place\" :placeholder=\"trans('configuration.custom_field_decimal_place')\">\r\n                            <show-error :form-name=\"customFieldForm\" prop-name=\"decimal_place\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n                <template v-if=\"customFieldForm.type === 'text_input' || customFieldForm.type === 'multi_line_input'\">\r\n                    <div class=\"col-12 col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('configuration.custom_field_min_length')}}</label>\r\n                            <input class=\"form-control\" type=\"number\" v-model=\"customFieldForm.min_length\" name=\"min_length\" :placeholder=\"trans('configuration.custom_field_min_length')\">\r\n                            <show-error :form-name=\"customFieldForm\" prop-name=\"min_length\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('configuration.custom_field_max_length')}}</label>\r\n                            <input class=\"form-control\" type=\"number\" v-model=\"customFieldForm.max_length\" name=\"max_length\" :placeholder=\"trans('configuration.custom_field_max_length')\">\r\n                            <show-error :form-name=\"customFieldForm\" prop-name=\"max_length\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('configuration.custom_field_width')}}</label>\r\n                        <select v-model=\"customFieldForm.width\" class=\"custom-select col-12\" name=\"width\" @change=\"customFieldForm.errors.clear('width')\">\r\n                          <option value=\"\">{{trans('general.select_one')}}</option>\r\n                          <option v-for=\"width in widths\" v-bind:value=\"width.value\">\r\n                            {{ width.text }}\r\n                          </option>\r\n                        </select>\r\n                        <show-error :form-name=\"customFieldForm\" prop-name=\"width\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-4\" v-if=\"showValue\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">&nbsp;</label> <br />\r\n                        <button type=\"button\" @click=\"addRow\" class=\"btn btn-info btn-sm waves-effect waves-light\">{{trans('configuration.add_new_custom_field_value')}}</button>\r\n                    </div>\r\n\t            </div>\r\n            </div>\r\n            <div class=\"row\" v-if=\"showValue\">\r\n\t            <div class=\"col-12 col-sm-6\">\r\n\t            \t<div class=\"form-group\" v-for=\"(value, index) in customFieldForm.values\">\r\n\t        \t\t\t<label for=\"\">{{trans('configuration.custom_field_value')}} {{index+1}}</label>\r\n\t        \t\t\t<div class=\"row\">\r\n\t                \t\t<div class=\"col-12 col-sm-8\">\r\n\t\t                        <input class=\"form-control\" type=\"text\" v-model=\"value.name\" :name=\"getValueName(index)\" :placeholder=\"trans('configuration.custom_field_value_name')\">\r\n\t\t                        <show-error :form-name=\"customFieldForm\" :prop-name=\"getValueName(index)\"></show-error>\r\n\t                \t\t</div>\r\n\t                \t\t<div class=\"col-12 col-sm-4\">\r\n\t\t                        <label for=\"\">\r\n\t\t                            <button type=\"button\" class=\"btn btn-xs btn-danger\" :key=\"`${index}_delete_value`\" v-confirm=\"{ok: confirmDeleteValue(index)}\" v-tooltip=\"trans('configuration.delete_custom_field_value')\"><i class=\"fas fa-times\"></i></button>\r\n\t\t                        </label>\r\n\t                \t\t</div>\r\n\t                \t</div>\r\n\t                </div>\r\n\t            </div>\r\n\t        </div>\r\n\t        <div class=\"card-footer text-right\">\r\n\t            <router-link to=\"/configuration/custom-field\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\r\n\t            <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n\t            <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n\t                <span v-if=\"id\">{{trans('general.update')}}</span>\r\n\t                <span v-else>{{trans('general.save')}}</span>\r\n\t            </button>\r\n\t        </div>\r\n\t    </form>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                customFieldForm: new Form({\r\n                    name : '',\r\n                    type: '',\r\n                    width: '',\r\n                    form: '',\r\n                    min_length: '',\r\n                    max_length: '',\r\n                    min_value: '',\r\n                    max_value: '',\r\n                    decimal_place: 2,\r\n                    is_required: false,\r\n                    values: []\r\n                }),\r\n                forms: [],\r\n                types: [],\r\n                widths: []\r\n            };\r\n        },\r\n        props: ['id'],\r\n        mounted() {\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n        \tgetPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/custom-field/pre-requisite')\r\n                    .then(response => {\r\n                        this.forms = response.forms;\r\n                        this.types = response.types;\r\n                        this.widths = response.widths;\r\n                        \r\n                        if(this.id)\r\n                            this.get();\r\n\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n        \t},\r\n            addRow(){\r\n                let new_index = this.customFieldForm.values.push({\r\n                    name: ''\r\n                })\r\n            },\r\n            getValueName(index){\r\n                return index+'_value_name';\r\n            },\r\n            confirmDeleteValue(index){\r\n                return dialog => this.deleteValue(index);\r\n            },\r\n            deleteValue(index){\r\n                this.customFieldForm.values.splice(index, 1);\r\n            },\r\n            proceed(){\r\n                if(this.id)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.customFieldForm.post('/api/custom-field')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.customFieldForm.values = [];\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/custom-field/'+this.id)\r\n                    .then(response => {\r\n                        this.customFieldForm.name = response.name;\r\n                        this.customFieldForm.type = response.type;\r\n                        this.customFieldForm.form = response.form;\r\n                        this.customFieldForm.width = response.width;\r\n                        this.customFieldForm.is_required = response.is_required;\r\n                        this.customFieldForm.min_length = response.options.hasOwnProperty('min_length') ? response.options.min_length : '';\r\n                        this.customFieldForm.max_length = response.options.hasOwnProperty('max_length') ? response.options.max_length : '';\r\n                        this.customFieldForm.min_value = response.options.hasOwnProperty('min_value') ? response.options.min_value : '';\r\n                        this.customFieldForm.max_value = response.options.hasOwnProperty('max_value') ? response.options.max_value : '';\r\n                        this.customFieldForm.decimal_place = response.options.hasOwnProperty('decimal_place') ? response.options.decimal_place : '';\r\n                        response.values.forEach(value => {\r\n                        \tthis.customFieldForm.values.push({name: value});\r\n                        });\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/configuration/custom-field');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.customFieldForm.patch('/api/custom-field/'+this.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/configuration/custom-field');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            }\r\n        },\r\n        computed: {\r\n            showValue() {\r\n                if (this.customFieldForm.type == 'checkbox_input' || this.customFieldForm.type == 'radio_input' || this.customFieldForm.type == 'dropdown_input')\r\n                    return true;\r\n                else\r\n                    return false;\r\n            }\r\n        }\r\n    }\r\n</script>","<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('configuration.custom_field')}} \r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"custom_fields.total\">{{trans('general.total_result_found',{count : custom_fields.total, from: custom_fields.from, to: custom_fields.to})}}</span>\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\r\n                    </h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"custom_fields.total && !showCreatePanel\" @click=\"showCreatePanel = !showCreatePanel\" v-tooltip=\"trans('general.add_new')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('configuration.add_new_custom_field')}}</span></button>\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\r\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\r\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\r\n                            </button>\r\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\r\n                            </div>\r\n                        </div>\r\n                        <help-button @clicked=\"help_topic = 'configuration.custom_field'\"></help-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <transition name=\"fade\">\r\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('general.filter')}}</h4>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('configuration.custom_field_form')}}</label>\r\n                                    <select v-model=\"filter.form\" class=\"custom-select col-12\">\r\n                                      <option value=\"\" selected>{{trans('general.select_one')}}</option>\r\n                                      <option v-for=\"form in forms\" v-bind:value=\"form.value\">\r\n                                        {{ form.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-footer text-right\">\r\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\r\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getCustomFields\">{{trans('general.filter')}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <transition name=\"fade\">\r\n                <div class=\"card card-form\" v-if=\"showCreatePanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('configuration.add_new_custom_field')}}</h4>\r\n                        <custom-field-form @completed=\"getCustomFields\" @cancel=\"showCreatePanel = !showCreatePanel\"></custom-field-form>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\" v-if=\"custom_fields.total\">\r\n                        <table class=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{{trans('configuration.custom_field_form')}}</th>\r\n                                    <th>{{trans('configuration.custom_field_name')}}</th>\r\n                                    <th>{{trans('configuration.custom_field_type')}}</th>\r\n                                    <th>{{trans('configuration.custom_field_width')}}</th>\r\n                                    <th>{{trans('configuration.custom_field_required')}}</th>\r\n                                    <th>{{trans('configuration.custom_field_value')}}</th>\r\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"custom_field in custom_fields.data\">\r\n                                    <td>{{ trans('configuration.custom_field_form_'+custom_field.form) }}\r\n                                    </td>\r\n                                    <td v-text=\"custom_field.name\"></td>\r\n                                    <td>\r\n                                        {{ trans('list.'+custom_field.type) }}\r\n                                        <span v-if=\"custom_field.type == 'numeric_input'\">\r\n                                            <br /> <small>{{trans('configuration.custom_field_min_value')}}: {{custom_field.options.hasOwnProperty('min_value') ? custom_field.options.min_value : ''}}</small>\r\n                                            <br /> <small>{{trans('configuration.custom_field_max_value')}}: {{custom_field.options.hasOwnProperty('max_value') ? custom_field.options.max_value : ''}}</small>\r\n                                            <br /> <small>{{trans('configuration.custom_field_decimal_place')}}: {{custom_field.options.hasOwnProperty('decimal_place') ? custom_field.options.decimal_place : ''}}</small>\r\n                                        </span>\r\n                                        <span v-if=\"custom_field.type == 'text_input' || custom_field.type == 'multi_line_input'\">\r\n                                            <br /> <small>{{trans('configuration.custom_field_min_length')}}: {{custom_field.options.hasOwnProperty('min_length') ? custom_field.options.min_length : ''}}</small>\r\n                                            <br /> <small>{{trans('configuration.custom_field_max_length')}}: {{custom_field.options.hasOwnProperty('max_length') ? custom_field.options.max_length : ''}}</small>\r\n                                        </span>\r\n                                    </td>\r\n                                    <td>{{ trans('list.'+custom_field.width) }}</td>\r\n                                    <td>\r\n                                        <i class=\"fas fa-check\" v-if=\"custom_field.is_required\"></i>\r\n                                        <i class=\"fas fa-times\" v-else></i>\r\n                                    </td>\r\n                                    <td>\r\n                                        {{custom_field.values.join(', ')}}\r\n                                    </td>\r\n                                    <td class=\"table-option\">\r\n                                        <div class=\"btn-group\">\r\n                                            <button class=\"btn btn-success btn-sm\" v-tooltip=\"trans('configuration.reorder_custom_field')\" @click.prevent=\"showReorderAction(custom_field.form)\"><i class=\"fas fa-arrows-alt\"></i></button>\r\n                                            <button class=\"btn btn-info btn-sm\" v-tooltip=\"trans('configuration.edit_custom_field')\" @click.prevent=\"editCustomField(custom_field)\"><i class=\"fas fa-edit\"></i></button>\r\n                                            <button class=\"btn btn-danger btn-sm\" :key=\"custom_field.id\" v-confirm=\"{ok: confirmDelete(custom_field)}\" v-tooltip=\"trans('configuration.delete_custom_field')\"><i class=\"fas fa-trash\"></i></button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <module-info v-if=\"!custom_fields.total\" module=\"configuration\" title=\"custom_field_module_title\" description=\"custom_field_module_description\" icon=\"list\">\r\n                        <div slot=\"btn\">\r\n                            <button class=\"btn btn-info btn-md\" v-if=\"!showCreatePanel\" @click=\"showCreatePanel = !showCreatePanel\"><i class=\"fas fa-plus\"></i> {{trans('general.add_new')}}</button>\r\n                        </div>\r\n                    </module-info>\r\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"custom_fields\" @updateRecords=\"getCustomFields\" @change.native=\"getCustomFields\"></pagination-record>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <right-panel :topic=\"help_topic\"></right-panel>\r\n\r\n        <transition name=\"modal\" v-if=\"showReorderModal\">\r\n            <div class=\"modal-mask\">\r\n                <div class=\"modal-wrapper\">\r\n                    <div class=\"modal-container modal-lg\">\r\n                        <div class=\"modal-header\">\r\n                            <slot name=\"header\">\r\n                                {{trans('configuration.reorder_custom_field')}}\r\n                                <span class=\"float-right pointer\" @click=\"showReorderModal = false\">x</span>\r\n                            </slot>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <slot name=\"body\">\r\n                                <draggable v-model=\"reorder_custom_fields\" @start=\"drag=true\" @end=\"drag=false\" class=\"list-group\">\r\n                                    <div class=\"list-group-item pointer\" v-for=\"item in reorder_custom_fields\" :key=\"item.id\"><i class=\"fas fa-arrows-alt\"></i> {{item.name}}</div>\r\n                                </draggable>\r\n                                <button type=\"button\" class=\"btn btn-info pull-right m-t-10\" @click=\"reorderCustomField\">{{trans('general.save')}}</button>\r\n                            </slot>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </transition>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import customFieldForm from './form'\r\n\r\n    export default {\r\n        components : { customFieldForm },\r\n        data() {\r\n            return {\r\n                custom_fields: {\r\n                    total: 0,\r\n                    data: []\r\n                },\r\n                reorder_custom_fields: [],\r\n                filter: {\r\n                    sort_by: 'position',\r\n                    order: 'asc',\r\n                    form: '',\r\n                    page_length: helper.getConfig('page_length')\r\n                },\r\n                orderByOptions: [\r\n                    {\r\n                        value: 'name',\r\n                        translation: i18n.configuration.custom_field_name\r\n                    },\r\n                    {\r\n                        value: 'position',\r\n                        translation: i18n.configuration.custom_field_position\r\n                    },\r\n                    {\r\n                        value: 'form',\r\n                        translation: i18n.configuration.custom_field_form\r\n                    },\r\n                    {\r\n                        value: 'type',\r\n                        translation: i18n.configuration.custom_field_type\r\n                    }\r\n                ],\r\n                forms: [],\r\n                showCreatePanel: false,\r\n                showFilterPanel: false,\r\n                showReorderModal: false,\r\n                help_topic: ''\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('access-configuration')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.getCustomFields();\r\n        },\r\n        methods: {\r\n            getConfig(config){\r\n                return helper.getConfig(config);\r\n            },\r\n            hasPermission(permission) {\r\n                return helper.hasPermission(permission);\r\n            },\r\n            getCustomFields(page){\r\n                let loader = this.$loading.show();\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                let url = helper.getFilterURL(this.filter);\r\n                axios.get('/api/custom-field?page=' + page + url)\r\n                    .then(response => {\r\n                        this.custom_fields = response.custom_fields;\r\n                        this.forms = response.filters.forms;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            editCustomField(custom_field){\r\n                this.$router.push('/configuration/custom-field/'+custom_field.id+'/edit');\r\n            },\r\n            confirmDelete(custom_field){\r\n                return dialog => this.deleteCustomField(custom_field);\r\n            },\r\n            deleteCustomField(custom_field){\r\n                let loader = this.$loading.show();\r\n                axios.delete('/api/custom-field/'+custom_field.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getCustomFields();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            print(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/custom-field/print',{filter: this.filter})\r\n                    .then(response => {\r\n                        let print = window.open(\"/print\");\r\n                        loader.hide();\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            pdf(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/custom-field/pdf',{filter: this.filter})\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        window.open('/download/report/'+response+'?token='+this.authToken);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            showReorderAction(form)\r\n            {\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/custom-field/fetch?form='+form)\r\n                    .then(response => {\r\n                        this.reorder_custom_fields = response;\r\n                        loader.hide();\r\n                        this.showReorderModal = true;\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            reorderCustomField()\r\n            {\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/custom-field/reorder', {\r\n                        list: this.reorder_custom_fields\r\n                    })\r\n                    .then(response => {\r\n                        this.showReorderModal = false;\r\n                        loader.hide();\r\n                        toastr.success(response.message);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            }\r\n        },\r\n        filters: {\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        },\r\n        watch: {\r\n            'filter.sort_by': function(val){\r\n                this.getCustomFields();\r\n            },\r\n            'filter.order': function(val){\r\n                this.getCustomFields();\r\n            },\r\n            'filter.page_length': function(val){\r\n                this.getCustomFields();\r\n            }\r\n        },\r\n        computed: {\r\n            authToken(){\r\n                return helper.getAuthToken();\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.customFieldForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\n          \"div\",\n          { staticClass: \"row\" },\n          [\n            _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"configuration.custom_field_form\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.customFieldForm.form,\n                          expression: \"customFieldForm.form\",\n                        },\n                      ],\n                      staticClass: \"custom-select col-12\",\n                      attrs: {\n                        placeholder: _vm.trans(\"general.select_one\"),\n                        name: \"form\",\n                      },\n                      on: {\n                        change: [\n                          function ($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function (o) {\n                                return o.selected\n                              })\n                              .map(function (o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.$set(\n                              _vm.customFieldForm,\n                              \"form\",\n                              $event.target.multiple\n                                ? $$selectedVal\n                                : $$selectedVal[0]\n                            )\n                          },\n                          function ($event) {\n                            return _vm.customFieldForm.errors.clear(\"form\")\n                          },\n                        ],\n                      },\n                    },\n                    [\n                      _c(\"option\", { attrs: { value: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _vm._l(_vm.forms, function (form) {\n                        return _c(\n                          \"option\",\n                          { domProps: { value: form.value } },\n                          [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(form.text) +\n                                \"\\n                          \"\n                            ),\n                          ]\n                        )\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.customFieldForm,\n                      \"prop-name\": \"form\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"configuration.custom_field_name\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.customFieldForm.name,\n                        expression: \"customFieldForm.name\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"name\",\n                      placeholder: _vm.trans(\"configuration.custom_field_name\"),\n                    },\n                    domProps: { value: _vm.customFieldForm.name },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(\n                          _vm.customFieldForm,\n                          \"name\",\n                          $event.target.value\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.customFieldForm,\n                      \"prop-name\": \"name\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\n                    \"label\",\n                    { staticClass: \"custom-control custom-checkbox m-t-20\" },\n                    [\n                      _c(\"br\"),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.customFieldForm.is_required,\n                            expression: \"customFieldForm.is_required\",\n                          },\n                        ],\n                        staticClass: \"custom-control-input\",\n                        attrs: {\n                          type: \"checkbox\",\n                          value: \"1\",\n                          name: \"is_required\",\n                        },\n                        domProps: {\n                          checked: Array.isArray(\n                            _vm.customFieldForm.is_required\n                          )\n                            ? _vm._i(_vm.customFieldForm.is_required, \"1\") > -1\n                            : _vm.customFieldForm.is_required,\n                        },\n                        on: {\n                          change: function ($event) {\n                            var $$a = _vm.customFieldForm.is_required,\n                              $$el = $event.target,\n                              $$c = $$el.checked ? true : false\n                            if (Array.isArray($$a)) {\n                              var $$v = \"1\",\n                                $$i = _vm._i($$a, $$v)\n                              if ($$el.checked) {\n                                $$i < 0 &&\n                                  _vm.$set(\n                                    _vm.customFieldForm,\n                                    \"is_required\",\n                                    $$a.concat([$$v])\n                                  )\n                              } else {\n                                $$i > -1 &&\n                                  _vm.$set(\n                                    _vm.customFieldForm,\n                                    \"is_required\",\n                                    $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                  )\n                              }\n                            } else {\n                              _vm.$set(_vm.customFieldForm, \"is_required\", $$c)\n                            }\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"custom-control-label\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"configuration.custom_field_required\")\n                          )\n                        ),\n                      ]),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.customFieldForm,\n                      \"prop-name\": \"is_required\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"configuration.custom_field_type\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.customFieldForm.type,\n                          expression: \"customFieldForm.type\",\n                        },\n                      ],\n                      staticClass: \"custom-select col-12\",\n                      attrs: { name: \"type\" },\n                      on: {\n                        change: [\n                          function ($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function (o) {\n                                return o.selected\n                              })\n                              .map(function (o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.$set(\n                              _vm.customFieldForm,\n                              \"type\",\n                              $event.target.multiple\n                                ? $$selectedVal\n                                : $$selectedVal[0]\n                            )\n                          },\n                          function ($event) {\n                            return _vm.customFieldForm.errors.clear(\"type\")\n                          },\n                        ],\n                      },\n                    },\n                    [\n                      _c(\"option\", { attrs: { value: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _vm._l(_vm.types, function (type) {\n                        return _c(\n                          \"option\",\n                          { domProps: { value: type.value } },\n                          [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(type.text) +\n                                \"\\n                          \"\n                            ),\n                          ]\n                        )\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.customFieldForm,\n                      \"prop-name\": \"type\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _vm.customFieldForm.type === \"numeric_input\"\n              ? [\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"configuration.custom_field_min_value\")\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.customFieldForm.min_value,\n                              expression: \"customFieldForm.min_value\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"number\",\n                            name: \"min_value\",\n                            placeholder: _vm.trans(\n                              \"configuration.custom_field_min_value\"\n                            ),\n                          },\n                          domProps: { value: _vm.customFieldForm.min_value },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.customFieldForm,\n                                \"min_value\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.customFieldForm,\n                            \"prop-name\": \"min_value\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"configuration.custom_field_max_value\")\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.customFieldForm.max_value,\n                              expression: \"customFieldForm.max_value\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"number\",\n                            name: \"max_value\",\n                            placeholder: _vm.trans(\n                              \"configuration.custom_field_max_value\"\n                            ),\n                          },\n                          domProps: { value: _vm.customFieldForm.max_value },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.customFieldForm,\n                                \"max_value\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.customFieldForm,\n                            \"prop-name\": \"max_value\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"configuration.custom_field_decimal_place\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.customFieldForm.decimal_place,\n                              expression: \"customFieldForm.decimal_place\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"number\",\n                            name: \"decimal_place\",\n                            placeholder: _vm.trans(\n                              \"configuration.custom_field_decimal_place\"\n                            ),\n                          },\n                          domProps: {\n                            value: _vm.customFieldForm.decimal_place,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.customFieldForm,\n                                \"decimal_place\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.customFieldForm,\n                            \"prop-name\": \"decimal_place\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.customFieldForm.type === \"text_input\" ||\n            _vm.customFieldForm.type === \"multi_line_input\"\n              ? [\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"configuration.custom_field_min_length\")\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.customFieldForm.min_length,\n                              expression: \"customFieldForm.min_length\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"number\",\n                            name: \"min_length\",\n                            placeholder: _vm.trans(\n                              \"configuration.custom_field_min_length\"\n                            ),\n                          },\n                          domProps: { value: _vm.customFieldForm.min_length },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.customFieldForm,\n                                \"min_length\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.customFieldForm,\n                            \"prop-name\": \"min_length\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"configuration.custom_field_max_length\")\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.customFieldForm.max_length,\n                              expression: \"customFieldForm.max_length\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"number\",\n                            name: \"max_length\",\n                            placeholder: _vm.trans(\n                              \"configuration.custom_field_max_length\"\n                            ),\n                          },\n                          domProps: { value: _vm.customFieldForm.max_length },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.customFieldForm,\n                                \"max_length\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.customFieldForm,\n                            \"prop-name\": \"max_length\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"configuration.custom_field_width\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.customFieldForm.width,\n                          expression: \"customFieldForm.width\",\n                        },\n                      ],\n                      staticClass: \"custom-select col-12\",\n                      attrs: { name: \"width\" },\n                      on: {\n                        change: [\n                          function ($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function (o) {\n                                return o.selected\n                              })\n                              .map(function (o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.$set(\n                              _vm.customFieldForm,\n                              \"width\",\n                              $event.target.multiple\n                                ? $$selectedVal\n                                : $$selectedVal[0]\n                            )\n                          },\n                          function ($event) {\n                            return _vm.customFieldForm.errors.clear(\"width\")\n                          },\n                        ],\n                      },\n                    },\n                    [\n                      _c(\"option\", { attrs: { value: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _vm._l(_vm.widths, function (width) {\n                        return _c(\n                          \"option\",\n                          { domProps: { value: width.value } },\n                          [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(width.text) +\n                                \"\\n                          \"\n                            ),\n                          ]\n                        )\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.customFieldForm,\n                      \"prop-name\": \"width\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _vm.showValue\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [_vm._v(\" \")]),\n                    _vm._v(\" \"),\n                    _c(\"br\"),\n                    _vm._v(\" \"),\n                    _c(\n                      \"button\",\n                      {\n                        staticClass:\n                          \"btn btn-info btn-sm waves-effect waves-light\",\n                        attrs: { type: \"button\" },\n                        on: { click: _vm.addRow },\n                      },\n                      [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\n                              \"configuration.add_new_custom_field_value\"\n                            )\n                          )\n                        ),\n                      ]\n                    ),\n                  ]),\n                ])\n              : _vm._e(),\n          ],\n          2\n        ),\n        _vm._v(\" \"),\n        _vm.showValue\n          ? _c(\"div\", { staticClass: \"row\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"col-12 col-sm-6\" },\n                _vm._l(_vm.customFieldForm.values, function (value, index) {\n                  return _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"configuration.custom_field_value\")) +\n                          \" \" +\n                          _vm._s(index + 1)\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-sm-8\" },\n                        [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: value.name,\n                                expression: \"value.name\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: _vm.getValueName(index),\n                              placeholder: _vm.trans(\n                                \"configuration.custom_field_value_name\"\n                              ),\n                            },\n                            domProps: { value: value.name },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(value, \"name\", $event.target.value)\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.customFieldForm,\n                              \"prop-name\": _vm.getValueName(index),\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _c(\n                            \"button\",\n                            {\n                              directives: [\n                                {\n                                  name: \"confirm\",\n                                  rawName: \"v-confirm\",\n                                  value: { ok: _vm.confirmDeleteValue(index) },\n                                  expression: \"{ok: confirmDeleteValue(index)}\",\n                                },\n                                {\n                                  name: \"tooltip\",\n                                  rawName: \"v-tooltip\",\n                                  value: _vm.trans(\n                                    \"configuration.delete_custom_field_value\"\n                                  ),\n                                  expression:\n                                    \"trans('configuration.delete_custom_field_value')\",\n                                },\n                              ],\n                              key: `${index}_delete_value`,\n                              staticClass: \"btn btn-xs btn-danger\",\n                              attrs: { type: \"button\" },\n                            },\n                            [_c(\"i\", { staticClass: \"fas fa-times\" })]\n                          ),\n                        ]),\n                      ]),\n                    ]),\n                  ])\n                }),\n                0\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"card-footer text-right\" },\n          [\n            _c(\n              \"router-link\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.id,\n                    expression: \"id\",\n                  },\n                ],\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { to: \"/configuration/custom-field\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            !_vm.id\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-danger waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: {\n                      click: function ($event) {\n                        return _vm.$emit(\"cancel\")\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [\n                _vm.id\n                  ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                  : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n              ]\n            ),\n          ],\n          1\n        ),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"configuration.custom_field\")) +\n                  \" \\n                    \"\n              ),\n              _vm.custom_fields.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.custom_fields.total,\n                            from: _vm.custom_fields.from,\n                            to: _vm.custom_fields.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _vm.custom_fields.total && !_vm.showCreatePanel\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"general.add_new\"),\n                            expression: \"trans('general.add_new')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showCreatePanel = !_vm.showCreatePanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"configuration.add_new_custom_field\")\n                            )\n                          ),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"configuration.custom_field\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(\n                                _vm.trans(\"configuration.custom_field_form\")\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.filter.form,\n                                  expression: \"filter.form\",\n                                },\n                              ],\n                              staticClass: \"custom-select col-12\",\n                              on: {\n                                change: function ($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function (o) {\n                                      return o.selected\n                                    })\n                                    .map(function (o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.filter,\n                                    \"form\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _c(\n                                \"option\",\n                                { attrs: { value: \"\", selected: \"\" } },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"general.select_one\"))\n                                  ),\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.forms, function (form) {\n                                return _c(\n                                  \"option\",\n                                  { domProps: { value: form.value } },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                    \" +\n                                        _vm._s(form.text) +\n                                        \"\\n                                  \"\n                                    ),\n                                  ]\n                                )\n                              }),\n                            ],\n                            2\n                          ),\n                        ]),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getCustomFields },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showCreatePanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"card-body\" },\n                    [\n                      _c(\"h4\", { staticClass: \"card-title\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"configuration.add_new_custom_field\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"custom-field-form\", {\n                        on: {\n                          completed: _vm.getCustomFields,\n                          cancel: function ($event) {\n                            _vm.showCreatePanel = !_vm.showCreatePanel\n                          },\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.custom_fields.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"configuration.custom_field_form\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"configuration.custom_field_name\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"configuration.custom_field_type\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"configuration.custom_field_width\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\n                                    \"configuration.custom_field_required\"\n                                  )\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"configuration.custom_field_value\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", { staticClass: \"table-option\" }, [\n                              _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(\n                            _vm.custom_fields.data,\n                            function (custom_field) {\n                              return _c(\"tr\", [\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\n                                        \"configuration.custom_field_form_\" +\n                                          custom_field.form\n                                      )\n                                    ) + \"\\n                                \"\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", {\n                                  domProps: {\n                                    textContent: _vm._s(custom_field.name),\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    \"\\n                                    \" +\n                                      _vm._s(\n                                        _vm.trans(\"list.\" + custom_field.type)\n                                      ) +\n                                      \"\\n                                    \"\n                                  ),\n                                  custom_field.type == \"numeric_input\"\n                                    ? _c(\"span\", [\n                                        _c(\"br\"),\n                                        _vm._v(\" \"),\n                                        _c(\"small\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"configuration.custom_field_min_value\"\n                                              )\n                                            ) +\n                                              \": \" +\n                                              _vm._s(\n                                                custom_field.options.hasOwnProperty(\n                                                  \"min_value\"\n                                                )\n                                                  ? custom_field.options\n                                                      .min_value\n                                                  : \"\"\n                                              )\n                                          ),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"br\"),\n                                        _vm._v(\" \"),\n                                        _c(\"small\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"configuration.custom_field_max_value\"\n                                              )\n                                            ) +\n                                              \": \" +\n                                              _vm._s(\n                                                custom_field.options.hasOwnProperty(\n                                                  \"max_value\"\n                                                )\n                                                  ? custom_field.options\n                                                      .max_value\n                                                  : \"\"\n                                              )\n                                          ),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"br\"),\n                                        _vm._v(\" \"),\n                                        _c(\"small\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"configuration.custom_field_decimal_place\"\n                                              )\n                                            ) +\n                                              \": \" +\n                                              _vm._s(\n                                                custom_field.options.hasOwnProperty(\n                                                  \"decimal_place\"\n                                                )\n                                                  ? custom_field.options\n                                                      .decimal_place\n                                                  : \"\"\n                                              )\n                                          ),\n                                        ]),\n                                      ])\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  custom_field.type == \"text_input\" ||\n                                  custom_field.type == \"multi_line_input\"\n                                    ? _c(\"span\", [\n                                        _c(\"br\"),\n                                        _vm._v(\" \"),\n                                        _c(\"small\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"configuration.custom_field_min_length\"\n                                              )\n                                            ) +\n                                              \": \" +\n                                              _vm._s(\n                                                custom_field.options.hasOwnProperty(\n                                                  \"min_length\"\n                                                )\n                                                  ? custom_field.options\n                                                      .min_length\n                                                  : \"\"\n                                              )\n                                          ),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"br\"),\n                                        _vm._v(\" \"),\n                                        _c(\"small\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"configuration.custom_field_max_length\"\n                                              )\n                                            ) +\n                                              \": \" +\n                                              _vm._s(\n                                                custom_field.options.hasOwnProperty(\n                                                  \"max_length\"\n                                                )\n                                                  ? custom_field.options\n                                                      .max_length\n                                                  : \"\"\n                                              )\n                                          ),\n                                        ]),\n                                      ])\n                                    : _vm._e(),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"list.\" + custom_field.width)\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  custom_field.is_required\n                                    ? _c(\"i\", { staticClass: \"fas fa-check\" })\n                                    : _c(\"i\", { staticClass: \"fas fa-times\" }),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    \"\\n                                    \" +\n                                      _vm._s(custom_field.values.join(\", \")) +\n                                      \"\\n                                \"\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", { staticClass: \"table-option\" }, [\n                                  _c(\"div\", { staticClass: \"btn-group\" }, [\n                                    _c(\n                                      \"button\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"tooltip\",\n                                            rawName: \"v-tooltip\",\n                                            value: _vm.trans(\n                                              \"configuration.reorder_custom_field\"\n                                            ),\n                                            expression:\n                                              \"trans('configuration.reorder_custom_field')\",\n                                          },\n                                        ],\n                                        staticClass: \"btn btn-success btn-sm\",\n                                        on: {\n                                          click: function ($event) {\n                                            $event.preventDefault()\n                                            return _vm.showReorderAction(\n                                              custom_field.form\n                                            )\n                                          },\n                                        },\n                                      },\n                                      [\n                                        _c(\"i\", {\n                                          staticClass: \"fas fa-arrows-alt\",\n                                        }),\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"button\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"tooltip\",\n                                            rawName: \"v-tooltip\",\n                                            value: _vm.trans(\n                                              \"configuration.edit_custom_field\"\n                                            ),\n                                            expression:\n                                              \"trans('configuration.edit_custom_field')\",\n                                          },\n                                        ],\n                                        staticClass: \"btn btn-info btn-sm\",\n                                        on: {\n                                          click: function ($event) {\n                                            $event.preventDefault()\n                                            return _vm.editCustomField(\n                                              custom_field\n                                            )\n                                          },\n                                        },\n                                      },\n                                      [_c(\"i\", { staticClass: \"fas fa-edit\" })]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"button\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"confirm\",\n                                            rawName: \"v-confirm\",\n                                            value: {\n                                              ok: _vm.confirmDelete(\n                                                custom_field\n                                              ),\n                                            },\n                                            expression:\n                                              \"{ok: confirmDelete(custom_field)}\",\n                                          },\n                                          {\n                                            name: \"tooltip\",\n                                            rawName: \"v-tooltip\",\n                                            value: _vm.trans(\n                                              \"configuration.delete_custom_field\"\n                                            ),\n                                            expression:\n                                              \"trans('configuration.delete_custom_field')\",\n                                          },\n                                        ],\n                                        key: custom_field.id,\n                                        staticClass: \"btn btn-danger btn-sm\",\n                                      },\n                                      [_c(\"i\", { staticClass: \"fas fa-trash\" })]\n                                    ),\n                                  ]),\n                                ]),\n                              ])\n                            }\n                          ),\n                          0\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.custom_fields.total\n                  ? _c(\n                      \"module-info\",\n                      {\n                        attrs: {\n                          module: \"configuration\",\n                          title: \"custom_field_module_title\",\n                          description: \"custom_field_module_description\",\n                          icon: \"list\",\n                        },\n                      },\n                      [\n                        _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                          !_vm.showCreatePanel\n                            ? _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-info btn-md\",\n                                  on: {\n                                    click: function ($event) {\n                                      _vm.showCreatePanel = !_vm.showCreatePanel\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                  _vm._v(\n                                    \" \" + _vm._s(_vm.trans(\"general.add_new\"))\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.custom_fields,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getCustomFields,\n                  },\n                  nativeOn: {\n                    change: function ($event) {\n                      return _vm.getCustomFields.apply(null, arguments)\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n      _vm._v(\" \"),\n      _vm.showReorderModal\n        ? _c(\"transition\", { attrs: { name: \"modal\" } }, [\n            _c(\"div\", { staticClass: \"modal-mask\" }, [\n              _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n                _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-header\" },\n                    [\n                      _vm._t(\"header\", function () {\n                        return [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(\n                                _vm.trans(\"configuration.reorder_custom_field\")\n                              ) +\n                              \"\\n                            \"\n                          ),\n                          _c(\n                            \"span\",\n                            {\n                              staticClass: \"float-right pointer\",\n                              on: {\n                                click: function ($event) {\n                                  _vm.showReorderModal = false\n                                },\n                              },\n                            },\n                            [_vm._v(\"x\")]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-body\" },\n                    [\n                      _vm._t(\"body\", function () {\n                        return [\n                          _c(\n                            \"draggable\",\n                            {\n                              staticClass: \"list-group\",\n                              on: {\n                                start: function ($event) {\n                                  _vm.drag = true\n                                },\n                                end: function ($event) {\n                                  _vm.drag = false\n                                },\n                              },\n                              model: {\n                                value: _vm.reorder_custom_fields,\n                                callback: function ($$v) {\n                                  _vm.reorder_custom_fields = $$v\n                                },\n                                expression: \"reorder_custom_fields\",\n                              },\n                            },\n                            _vm._l(_vm.reorder_custom_fields, function (item) {\n                              return _c(\n                                \"div\",\n                                {\n                                  key: item.id,\n                                  staticClass: \"list-group-item pointer\",\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-arrows-alt\" }),\n                                  _vm._v(\" \" + _vm._s(item.name)),\n                                ]\n                              )\n                            }),\n                            0\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"button\",\n                            {\n                              staticClass: \"btn btn-info pull-right m-t-10\",\n                              attrs: { type: \"button\" },\n                              on: { click: _vm.reorderCustomField },\n                            },\n                            [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                ]),\n              ]),\n            ]),\n          ])\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=16a0830d&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('16a0830d')) {\n      api.createRecord('16a0830d', component.options)\n    } else {\n      api.reload('16a0830d', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=16a0830d&\", function () {\n      api.rerender('16a0830d', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/custom-field/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=241012d9&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('241012d9')) {\n      api.createRecord('241012d9', component.options)\n    } else {\n      api.reload('241012d9', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=241012d9&\", function () {\n      api.rerender('241012d9', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/custom-field/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=16a0830d&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=241012d9&\""],"names":[],"sourceRoot":""}