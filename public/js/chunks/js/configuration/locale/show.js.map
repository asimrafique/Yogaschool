{"version":3,"file":"js/chunks/js/configuration/locale/show.js?id=87531b2e5f9e2d06","mappings":";;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnJA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAUA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAMA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAQA;AAAA;AAQA;AAMA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAMA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AAKA;AAMA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAGA;AAGA;AAEA;AAAA;AAEA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAiBA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AAEA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AAKA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AASA;AAAA;AASA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC9RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACvCA","sources":["webpack://InstiKit/resources/js/views/configuration/locale/show.vue","webpack://InstiKit/./resources/js/views/configuration/locale/show.vue","webpack://InstiKit/./resources/js/views/configuration/locale/show.vue?83b0","webpack://InstiKit/./resources/js/views/configuration/locale/show.vue?05fb","webpack://InstiKit/./resources/js/views/configuration/locale/show.vue?120b","webpack://InstiKit/./resources/js/views/configuration/locale/show.vue?548a","webpack://InstiKit/./resources/js/views/configuration/locale/show.vue?42ad","webpack://InstiKit/./resources/js/views/configuration/locale/show.vue?f653"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('configuration.translation')}} ({{locale.name}}) </h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/configuration/locale')\"><i class=\"fas fa-globe\"></i> <span class=\"d-none d-sm-inline\">{{trans('configuration.locale')}}</span></button>\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" style=\"margin-top:-5px;\" class=\"btn btn-info btn-sm\" href=\"#\" role=\"button\" id=\"moduleLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                <i class=\"fas fa-boxes\"></i> <span class=\"d-none d-sm-inline\">{{trans('configuration.locale_module')}} <span>({{toWord(module)}})</span> <i class=\"fas fa-chevron-down\"></i> </span>\r\n                            </button>\r\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moduleLink\">\r\n                                <button style=\"cursor:pointer;\" class=\"dropdown-item\" v-for=\"mod in modules\" @click=\"$router.push('/configuration/locale/'+locale.locale+'/'+mod)\">\r\n                                    {{toWord(mod)}} <span v-if=\"mod == module\" class=\"pull-right\"><i class=\"fas fa-check\"></i></span> \r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <help-button @clicked=\"help_topic = 'configuration.locale.translation'\"></help-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body p-4\">\r\n                    <div v-if=\"getWordCount\">\r\n                        <div class=\"row\">\r\n                            <template v-for=\"(word,index) in words\">\r\n                                <template v-if=\"typeof word === 'object'\">\r\n                                    <div class=\"col-12 col-sm-4\" v-for=\"(wrd,i) in word\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"\" style=\"color:red;\">{{trans(module+'.'+index+'.'+i)}}</label>\r\n                                            <!-- <label for=\"\">{{index}}_{{i}}</label> -->\r\n                                            <input class=\"form-control\" type=\"text\" v-model=\"words[index][i]\" :name=\"`${index}_${i}`\">\r\n                                        </div>\r\n                                    </div>\r\n                                </template>\r\n                                <template v-else>\r\n                                    <div class=\"col-12 col-sm-4\">\r\n                                        <div class=\"form-group\">\r\n                                            <label for=\"\" class=\"font-weight-bold\">{{trans(module+'.'+index)}}</label>\r\n                                            <!-- <label for=\"\">{{index}}</label> -->\r\n                                            <input class=\"form-control\" type=\"text\" v-model=\"words[index]\" :name=\"index\">\r\n                                        </div>\r\n                                    </div>\r\n                                </template>\r\n                            </template>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <button class=\"btn btn-info btn-sm pull-right\" @click=\"saveTranslation\">{{trans('general.save')}}</button>\r\n                        </div>\r\n                    </div>\r\n                    <div v-if=\"!getWordCount\">\r\n                        <p class=\"alert alert-danger\">{{trans('general.no_result_found')}}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <right-panel :topic=\"help_topic\"></right-panel>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    export default {\r\n        data() {\r\n            return {\r\n                modules: {},\r\n                words: {},\r\n                locale: {},\r\n                module: (this.$route.params.module) ? this.$route.params.module : 'auth',\r\n                help_topic: ''\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('access-configuration')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            if(!helper.featureAvailable('multilingual')){\r\n                helper.featureNotAvailableMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.fetchWords();\r\n        },\r\n        methods: {\r\n            fetchWords(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/locale/fetch',{\r\n                    locale: this.$route.params.locale,\r\n                    module: this.module\r\n                    })\r\n                    .then(response => {\r\n                        this.modules = response.modules;\r\n                        this.words = response.words;\r\n                        this.locale = response.locale;\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/configuration/locale');\r\n                    });\r\n            },\r\n            getName(name){\r\n                name = helper.ucword(name);\r\n                return name.replace(/_/g, ' ');\r\n            },\r\n            getModuleLink(module){\r\n                return '/configuration/locale/'+this.$route.params.locale+'/'+module\r\n            },\r\n            saveTranslation(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/locale/translate',{\r\n                    locale: this.$route.params.locale,\r\n                    module: this.module,\r\n                    words: this.words\r\n                }).then(response => {\r\n                    toastr.success(response.message);\r\n                    loader.hide();\r\n                }).catch(error => {\r\n                    loader.hide();\r\n                    helper.showErrorMsg(error);\r\n                });\r\n            },\r\n            getConfig(config){\r\n                return helper.getConfig(config);\r\n            },\r\n            toWord(word){\r\n                return helper.toWord(word);\r\n            }\r\n        },\r\n        watch: {\r\n            '$route.params.module'(newModule, oldModule) {\r\n                this.module = newModule;\r\n                this.fetchWords();\r\n            }\r\n        },\r\n        computed: {\r\n            getWordCount(){\r\n                return _size(this.words);\r\n            }\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n    .list-group-item .active {color:#ffffff;}\r\n</style>\r\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"configuration.translation\")) +\n                  \" (\" +\n                  _vm._s(_vm.locale.name) +\n                  \") \"\n              ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info btn-sm\",\n                    on: {\n                      click: function ($event) {\n                        return _vm.$router.push(\"/configuration/locale\")\n                      },\n                    },\n                  },\n                  [\n                    _c(\"i\", { staticClass: \"fas fa-globe\" }),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"configuration.locale\"))),\n                    ]),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-info btn-sm\",\n                      staticStyle: { \"margin-top\": \"-5px\" },\n                      attrs: {\n                        type: \"button\",\n                        href: \"#\",\n                        role: \"button\",\n                        id: \"moduleLink\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-boxes\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"configuration.locale_module\")) + \" \"\n                        ),\n                        _c(\"span\", [\n                          _vm._v(\"(\" + _vm._s(_vm.toWord(_vm.module)) + \")\"),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"i\", { staticClass: \"fas fa-chevron-down\" }),\n                      ]),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moduleLink\" },\n                    },\n                    _vm._l(_vm.modules, function (mod) {\n                      return _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item\",\n                          staticStyle: { cursor: \"pointer\" },\n                          on: {\n                            click: function ($event) {\n                              return _vm.$router.push(\n                                \"/configuration/locale/\" +\n                                  _vm.locale.locale +\n                                  \"/\" +\n                                  mod\n                              )\n                            },\n                          },\n                        },\n                        [\n                          _vm._v(\n                            \"\\n                                \" +\n                              _vm._s(_vm.toWord(mod)) +\n                              \" \"\n                          ),\n                          mod == _vm.module\n                            ? _c(\"span\", { staticClass: \"pull-right\" }, [\n                                _c(\"i\", { staticClass: \"fas fa-check\" }),\n                              ])\n                            : _vm._e(),\n                        ]\n                      )\n                    }),\n                    0\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"configuration.locale.translation\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"container-fluid\" }, [\n        _c(\"div\", { staticClass: \"card\" }, [\n          _c(\"div\", { staticClass: \"card-body p-4\" }, [\n            _vm.getWordCount\n              ? _c(\"div\", [\n                  _c(\n                    \"div\",\n                    { staticClass: \"row\" },\n                    [\n                      _vm._l(_vm.words, function (word, index) {\n                        return [\n                          typeof word === \"object\"\n                            ? _vm._l(word, function (wrd, i) {\n                                return _c(\n                                  \"div\",\n                                  { staticClass: \"col-12 col-sm-4\" },\n                                  [\n                                    _c(\"div\", { staticClass: \"form-group\" }, [\n                                      _c(\n                                        \"label\",\n                                        {\n                                          staticStyle: { color: \"red\" },\n                                          attrs: { for: \"\" },\n                                        },\n                                        [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.trans(\n                                                _vm.module +\n                                                  \".\" +\n                                                  index +\n                                                  \".\" +\n                                                  i\n                                              )\n                                            )\n                                          ),\n                                        ]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: _vm.words[index][i],\n                                            expression: \"words[index][i]\",\n                                          },\n                                        ],\n                                        staticClass: \"form-control\",\n                                        attrs: {\n                                          type: \"text\",\n                                          name: `${index}_${i}`,\n                                        },\n                                        domProps: {\n                                          value: _vm.words[index][i],\n                                        },\n                                        on: {\n                                          input: function ($event) {\n                                            if ($event.target.composing) return\n                                            _vm.$set(\n                                              _vm.words[index],\n                                              i,\n                                              $event.target.value\n                                            )\n                                          },\n                                        },\n                                      }),\n                                    ]),\n                                  ]\n                                )\n                              })\n                            : [\n                                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                                  _c(\"div\", { staticClass: \"form-group\" }, [\n                                    _c(\n                                      \"label\",\n                                      {\n                                        staticClass: \"font-weight-bold\",\n                                        attrs: { for: \"\" },\n                                      },\n                                      [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(_vm.module + \".\" + index)\n                                          )\n                                        ),\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\"input\", {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value: _vm.words[index],\n                                          expression: \"words[index]\",\n                                        },\n                                      ],\n                                      staticClass: \"form-control\",\n                                      attrs: { type: \"text\", name: index },\n                                      domProps: { value: _vm.words[index] },\n                                      on: {\n                                        input: function ($event) {\n                                          if ($event.target.composing) return\n                                          _vm.$set(\n                                            _vm.words,\n                                            index,\n                                            $event.target.value\n                                          )\n                                        },\n                                      },\n                                    }),\n                                  ]),\n                                ]),\n                              ],\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm pull-right\",\n                        on: { click: _vm.saveTranslation },\n                      },\n                      [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                    ),\n                  ]),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            !_vm.getWordCount\n              ? _c(\"div\", [\n                  _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                    _vm._v(_vm._s(_vm.trans(\"general.no_result_found\"))),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.list-group-item .active {color:#ffffff;}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/configuration/locale/show.vue\"],\"names\":[],\"mappings\":\";AAyJA,0BAAA,aAAA,CAAA\",\"sourcesContent\":[\"<template>\\r\\n    <div>\\r\\n        <div class=\\\"page-titles\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12 col-sm-6\\\">\\r\\n                    <h3 class=\\\"text-themecolor\\\">{{trans('configuration.translation')}} ({{locale.name}}) </h3>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-sm-6\\\">\\r\\n                    <div class=\\\"action-buttons pull-right\\\">\\r\\n                        <button class=\\\"btn btn-info btn-sm\\\" @click=\\\"$router.push('/configuration/locale')\\\"><i class=\\\"fas fa-globe\\\"></i> <span class=\\\"d-none d-sm-inline\\\">{{trans('configuration.locale')}}</span></button>\\r\\n                        <div class=\\\"btn-group\\\">\\r\\n                            <button type=\\\"button\\\" style=\\\"margin-top:-5px;\\\" class=\\\"btn btn-info btn-sm\\\" href=\\\"#\\\" role=\\\"button\\\" id=\\\"moduleLink\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                <i class=\\\"fas fa-boxes\\\"></i> <span class=\\\"d-none d-sm-inline\\\">{{trans('configuration.locale_module')}} <span>({{toWord(module)}})</span> <i class=\\\"fas fa-chevron-down\\\"></i> </span>\\r\\n                            </button>\\r\\n                            <div :class=\\\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\\\" aria-labelledby=\\\"moduleLink\\\">\\r\\n                                <button style=\\\"cursor:pointer;\\\" class=\\\"dropdown-item\\\" v-for=\\\"mod in modules\\\" @click=\\\"$router.push('/configuration/locale/'+locale.locale+'/'+mod)\\\">\\r\\n                                    {{toWord(mod)}} <span v-if=\\\"mod == module\\\" class=\\\"pull-right\\\"><i class=\\\"fas fa-check\\\"></i></span> \\r\\n                                </button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <help-button @clicked=\\\"help_topic = 'configuration.locale.translation'\\\"></help-button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body p-4\\\">\\r\\n                    <div v-if=\\\"getWordCount\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <template v-for=\\\"(word,index) in words\\\">\\r\\n                                <template v-if=\\\"typeof word === 'object'\\\">\\r\\n                                    <div class=\\\"col-12 col-sm-4\\\" v-for=\\\"(wrd,i) in word\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"\\\" style=\\\"color:red;\\\">{{trans(module+'.'+index+'.'+i)}}</label>\\r\\n                                            <!-- <label for=\\\"\\\">{{index}}_{{i}}</label> -->\\r\\n                                            <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"words[index][i]\\\" :name=\\\"`${index}_${i}`\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </template>\\r\\n                                <template v-else>\\r\\n                                    <div class=\\\"col-12 col-sm-4\\\">\\r\\n                                        <div class=\\\"form-group\\\">\\r\\n                                            <label for=\\\"\\\" class=\\\"font-weight-bold\\\">{{trans(module+'.'+index)}}</label>\\r\\n                                            <!-- <label for=\\\"\\\">{{index}}</label> -->\\r\\n                                            <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"words[index]\\\" :name=\\\"index\\\">\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                </template>\\r\\n                            </template>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <button class=\\\"btn btn-info btn-sm pull-right\\\" @click=\\\"saveTranslation\\\">{{trans('general.save')}}</button>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div v-if=\\\"!getWordCount\\\">\\r\\n                        <p class=\\\"alert alert-danger\\\">{{trans('general.no_result_found')}}</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <right-panel :topic=\\\"help_topic\\\"></right-panel>\\r\\n    </div>\\r\\n</template>\\r\\n\\r\\n\\r\\n<script>\\r\\n    export default {\\r\\n        data() {\\r\\n            return {\\r\\n                modules: {},\\r\\n                words: {},\\r\\n                locale: {},\\r\\n                module: (this.$route.params.module) ? this.$route.params.module : 'auth',\\r\\n                help_topic: ''\\r\\n            };\\r\\n        },\\r\\n        mounted(){\\r\\n            if(!helper.hasPermission('access-configuration')){\\r\\n                helper.notAccessibleMsg();\\r\\n                this.$router.push('/dashboard');\\r\\n            }\\r\\n\\r\\n            if(!helper.featureAvailable('multilingual')){\\r\\n                helper.featureNotAvailableMsg();\\r\\n                this.$router.push('/dashboard');\\r\\n            }\\r\\n\\r\\n            this.fetchWords();\\r\\n        },\\r\\n        methods: {\\r\\n            fetchWords(){\\r\\n                let loader = this.$loading.show();\\r\\n                axios.post('/api/locale/fetch',{\\r\\n                    locale: this.$route.params.locale,\\r\\n                    module: this.module\\r\\n                    })\\r\\n                    .then(response => {\\r\\n                        this.modules = response.modules;\\r\\n                        this.words = response.words;\\r\\n                        this.locale = response.locale;\\r\\n                        loader.hide();\\r\\n                    }).catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                        this.$router.push('/configuration/locale');\\r\\n                    });\\r\\n            },\\r\\n            getName(name){\\r\\n                name = helper.ucword(name);\\r\\n                return name.replace(/_/g, ' ');\\r\\n            },\\r\\n            getModuleLink(module){\\r\\n                return '/configuration/locale/'+this.$route.params.locale+'/'+module\\r\\n            },\\r\\n            saveTranslation(){\\r\\n                let loader = this.$loading.show();\\r\\n                axios.post('/api/locale/translate',{\\r\\n                    locale: this.$route.params.locale,\\r\\n                    module: this.module,\\r\\n                    words: this.words\\r\\n                }).then(response => {\\r\\n                    toastr.success(response.message);\\r\\n                    loader.hide();\\r\\n                }).catch(error => {\\r\\n                    loader.hide();\\r\\n                    helper.showErrorMsg(error);\\r\\n                });\\r\\n            },\\r\\n            getConfig(config){\\r\\n                return helper.getConfig(config);\\r\\n            },\\r\\n            toWord(word){\\r\\n                return helper.toWord(word);\\r\\n            }\\r\\n        },\\r\\n        watch: {\\r\\n            '$route.params.module'(newModule, oldModule) {\\r\\n                this.module = newModule;\\r\\n                this.fetchWords();\\r\\n            }\\r\\n        },\\r\\n        computed: {\\r\\n            getWordCount(){\\r\\n                return _size(this.words);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n</script>\\r\\n<style>\\r\\n    .list-group-item .active {color:#ffffff;}\\r\\n</style>\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=style&index=0&id=2eb4c18a&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./show.vue?vue&type=template&id=2eb4c18a&\"\nimport script from \"./show.vue?vue&type=script&lang=js&\"\nexport * from \"./show.vue?vue&type=script&lang=js&\"\nimport style0 from \"./show.vue?vue&type=style&index=0&id=2eb4c18a&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2eb4c18a')) {\n      api.createRecord('2eb4c18a', component.options)\n    } else {\n      api.reload('2eb4c18a', component.options)\n    }\n    module.hot.accept(\"./show.vue?vue&type=template&id=2eb4c18a&\", function () {\n      api.rerender('2eb4c18a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/locale/show.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=template&id=2eb4c18a&\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=style&index=0&id=2eb4c18a&lang=css&\""],"names":[],"sourceRoot":""}