{"version":3,"file":"js/chunks/js/communication/meeting/index.js?id=b308fd03d38f2062","mappings":";;;;;;;;;;;;;AA+CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACzFA;AACA;AACA;;;;;;;;;;;;;;;ACqGA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxrUA;AACA;AACA;AACA;AAEA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAUA;AAAA;AAQA;AAAA;AAOA;AAAA;AAKA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAQA;AAAA;AAGA;AAAA;AAWA;AAAA;AAUA;AAAA;AAGA;AAAA;AAgBA;AAMA;AAAA;AAOA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAQA;AAAA;AACA;AAAA;AAQA;AAAA;AAGA;AAAA;AAgBA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;AC1NA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AAYA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAcA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AAeA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AAWA;AACA;AACA;;;;;;;;;;;;;;;;AC/JA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAAA;AAiBA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAGA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AAAA;AAQA;AAYA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;AChyBA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAGA;AAAA;AAGA;AAAA;AAYA;AAAA;AACA;AAAA;AAqCA;AAAA;AASA;AAUA;AAAA;AAcA;AAAA;AAkDA;AAAA;AAAA;AACA;AA+BA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAQA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAOA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC71BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/components/user-search.vue","webpack://InstiKit/resources/js/views/communication/meeting/audience.vue","webpack://InstiKit/resources/js/views/communication/meeting/form.vue","webpack://InstiKit/resources/js/views/communication/meeting/index.vue","webpack://InstiKit/./resources/js/components/user-search.vue","webpack://InstiKit/./resources/js/views/communication/meeting/audience.vue","webpack://InstiKit/./resources/js/views/communication/meeting/form.vue","webpack://InstiKit/./resources/js/views/communication/meeting/index.vue","webpack://InstiKit/./resources/js/views/communication/meeting/form.vue?7d57","webpack://InstiKit/./resources/js/components/user-search.vue?18f5","webpack://InstiKit/./resources/js/views/communication/meeting/form.vue?ccd8","webpack://InstiKit/./resources/js/components/user-search.vue?21a6","webpack://InstiKit/./resources/js/components/user-search.vue?853e","webpack://InstiKit/./resources/js/views/communication/meeting/audience.vue?5794","webpack://InstiKit/./resources/js/views/communication/meeting/form.vue?6a9d","webpack://InstiKit/./resources/js/views/communication/meeting/index.vue?72f0","webpack://InstiKit/./resources/js/components/user-search.vue?22ef","webpack://InstiKit/./resources/js/views/communication/meeting/audience.vue?813a","webpack://InstiKit/./resources/js/views/communication/meeting/form.vue?f6ed","webpack://InstiKit/./resources/js/views/communication/meeting/index.vue?57f5","webpack://InstiKit/./resources/js/views/communication/meeting/audience.vue?1958","webpack://InstiKit/./resources/js/views/communication/meeting/form.vue?17f6","webpack://InstiKit/./resources/js/views/communication/meeting/index.vue?4a45","webpack://InstiKit/./resources/js/views/communication/meeting/form.vue?04be"],"sourcesContent":["<template>\n\t<div class=\"form-group\">\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search Student or Employee\" v-model=\"search\" @keydown=\"displayResult = true\" @focus=\"displayResult = true\">\n        <template v-if=\"displayResult\">\n            <ul class=\"autocomplete-results\" v-if=\"search.length\">\n\n\t\t\t  <li class=\"autocomplete-no-result\" v-if=\"search.length && search.length < 3\">{{trans('general.type_min_3_char_for_search_result')}}</li>\n\t\t\t  <li class=\"autocomplete-no-result\" v-else-if=\"search.length >= 3 && resultLoading\">{{trans('general.loading_progress')}}</li>\n\t\t\t  <li class=\"autocomplete-no-result\" v-else-if=\"search.length >= 3 && !student_search_results.length && !employee_search_results.length && search.length && !resultLoading\">{{trans('general.no_result_found')}}</li>\n\n\t\t\t  <template v-if=\"student_search_results.length\">\n\t              <li class=\"autocomplete-heading\">{{trans('student.student')}}</li>\n\t              <li class=\"autocomplete-result pointer\" v-for=\"result in student_search_results\">\n\t                <div class=\"item-info\" @click=\"submitStudent(result)\">\n\t                    <h5 class=\"item-heading\">{{getStudentName(result.student)}}</h5>\n\t                    <div class=\"item-meta\">\n\t                        <span class=\"father-name\">{{result.student.parent.first_guardian_name}}</span>\n\t                        <span class=\"contact\"> / {{result.student.contact_number}}</span>\n\t                    </div>\n\t                    <div class=\"item-meta\">\n\t                        <span class=\"course-batch\">{{result.batch.course.name+' '+result.batch.name}}</span>\n\t                    </div>\n\t                </div>\n\t              </li>\n\t\t\t  </template>\n\n\t\t\t  <template v-if=\"employee_search_results.length\">\n\t              <li class=\"autocomplete-heading\">{{trans('employee.employee')}}</li>\n\n\t              <li class=\"autocomplete-result pointer\" v-for=\"result in employee_search_results\">\n\t                <div class=\"item-info\" @click=\"submitEmployee(result)\">\n\t                    <h5 class=\"item-heading\">{{getEmployeeName(result)}}</h5>\n\t                    <div class=\"item-meta\">\n\t                        <span class=\"contact\"> / {{result.contact_number}}</span>\n\t                    </div>\n\t                    <div class=\"item-meta\">\n\t                        <span class=\"course-batch\">{{getEmployeeDesignationOnDate(result)}}</span>\n\t                    </div>\n\t                </div>\n\t              </li>\n\t          </template>\n            </ul>\n        </template>\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tsearch: '',\n                student_search_results: [],\n                employee_search_results: [],\n                displayResult: false,\n                resultLoading: false,\n                timeout: null\n\t\t\t}\n\t\t},\n\t\tmethods: {\n            searchResult(){\n            \tthis.resultLoading = true;\n\n                clearTimeout(this.timeout);\n                \n                var self = this;\n                this.timeout = setTimeout(function () {\n                    if (self.search.length < 3) {\n                        return\n                    }\n\n                    axios.get('/api/search?q='+self.search)\n                        .then(response => {\n                            self.student_search_results = response.student_records;\n                            self.employee_search_results = response.employees;\n                            self.resultLoading = false;\n                        })\n                        .catch(error => {\n                            self.resultLoading = false;\n                            helper.showErrorMsg(error);\n                        })\n                }, 1000);\n\n            },\n            getStudentName(student){\n                return helper.getStudentName(student);\n            },\n            getEmployeeName(employee){\n                return helper.getEmployeeName(employee);\n            },\n            getEmployeeDesignationOnDate(employee){\n            \treturn helper.getEmployeeDesignationOnDate(employee);\n            },\n            submitStudent(student_record) {\n            \tthis.$emit('searched', {\n            \t\ttype: 'student',\n            \t\tid: student_record.id,\n            \t\tkey: 'student_'+student_record.id,\n            \t\tname: student_record.student.name,\n            \t\tdescription_1: student_record.batch.course.name+' '+student_record.batch.name,\n            \t\tdescription_2: student_record.student.parent.first_guardian_name,\n            \t\tcontact_number: student_record.student.contact_number\n            \t})\n            \tthis.displayResult = false\n            \tthis.search = ''\n            },\n            submitEmployee(employee) {\n            \tthis.$emit('searched', {\n            \t\ttype: 'employee',\n            \t\tkey: 'employee_'+employee.id,\n            \t\tid: employee.id,\n            \t\tname: employee.name,\n            \t\tdescription_1: this.getEmployeeDesignationOnDate(employee),\n            \t\tdescription_2: employee.employee_code,\n            \t\tcontact_number: employee.contact_number\n            \t})\n            \tthis.displayResult = false\n            \tthis.search = ''\n            }\n\t\t},\n        watch: {\n            search(val){\n                if(val.length >= 3) {\n                    this.searchResult();\n                } else {\n                    this.student_search_results = [];\n                    this.employee_search_results = [];\n                }\n            }\n        }\n\t}\n</script>\n\n\n<style lang=\"scss\" scoped>\n    .topbar .top-navbar .app-search input {\n        background: rgba(0,20,40,0.1);\n        color: #f1f2f4;\n        border: 1px solid rgba(0,20,40,0.1);\n        border-radius: 2px;\n        width: 240px;\n    }\n    .topbar .top-navbar .app-search input::placeholder {\n        color: rgba(255,255,255,0.4);\n    }\n    .topbar .top-navbar .app-search input:focus {\n        background: rgba(0,20,40,0.2);\n        color: #ffffff;\n        border: 1px solid rgba(0,20,40,0.2);\n    }\n\n    ul.autocomplete-results {\n        padding: 0;\n        margin: 0;\n        max-height: 350px;\n        overflow: auto;\n        position: absolute;\n        width: 100%;\n        background: #ffffff;\n        border: 1px solid #d1d2d5;\n        border-top: none;\n        box-shadow: 0 2px 10px rgba(0,20,40,0.2);\n        border-radius: 0 0 6px 6px;\n        z-index: 999999;\n\n        li.autocomplete-heading {\n            font-size: 16px;\n            padding: 8px;\n            letter-spacing: 0.2px;\n            color: rgba(0,20,40,0.4);\n            border-bottom: 1px solid rgba(0,20,40,0.2);\n        }\n        li.autocomplete-no-result {\n            font-size: 12px;\n            padding: 8px;\n            letter-spacing: 0.2px;\n            color: rgba(0,20,40,0.4);\n            border-bottom: 1px solid rgba(0,20,40,0.2);\n        }\n    }\n    ul.autocomplete-results > li.autocomplete-result {\n        display: flex;\n        list-style: none;\n        text-align: left;\n        width: 100%;\n\n        .item-info {\n            margin: 0;\n            flex-grow: 2;\n            padding: 5px 8px;\n\n            .item-heading {\n                font-size: 13px;\n                margin-bottom: 0;\n            }\n\n            .item-meta {\n                font-size: 11px;\n            }\n        }\n    }\n    ul.autocomplete-results > li.autocomplete-result:nth-child(even) {\n        background: rgba(210,215,220,0.2);\n    }\n    ul.autocomplete-results > li.autocomplete-result + li.autocomplete-result {\n        border-top: 1px solid rgba(0,20,40,0.1);\n    }\n    ul.autocomplete-results > li.autocomplete-result:hover {\n        background: rgba(200,205,215,0.5);\n        color: rgba(0,20,40,0.8);\n\n        .item-heading, .item-meta {\n            color: inherit;\n        }\n    }\n</style>","<template>\n    <div>\n        <template v-if=\"meeting.audience == 'selected_course'\">\n            {{trans('academic.course')}} <br />\n            <ul style=\"list-style:none;padding:0;margin:0;\">\n                <li v-for=\"course in meeting.courses\">{{course.name+'('+course.course_group.name+')'}}</li>\n            </ul>\n        </template>\n        <template v-else-if=\"meeting.audience == 'selected_batch'\">\n            {{trans('academic.batch')}} <br />\n            <ul style=\"list-style:none;padding:0;margin:0;\">\n                <li v-for=\"batch in meeting.batches\">{{batch.name+'('+batch.course.name+')'}}</li>\n            </ul>\n        </template>\n        <template v-else-if=\"meeting.audience == 'selected_department'\">\n            {{trans('employee.department')}} <br />\n            <ul style=\"list-style:none;padding:0;margin:0;\">\n                <li v-for=\"department in meeting.departments\">{{department.name}}</li>\n            </ul>\n        </template>\n        <template v-else-if=\"meeting.audience == 'selected_employee_category'\">\n            {{trans('employee.category')}} <br />\n            <ul style=\"list-style:none;padding:0;margin:0;\">\n                <li v-for=\"employee_category in meeting.employee_categorys\">{{employee_category.name}}</li>\n            </ul>\n        </template>\n        <template v-if=\"meeting.options.individual_students && meeting.options.individual_students.length\">\n            <ul style=\"list-style:none;padding:0;margin:0;\">\n                <li>{{trans('communication.count_individual_students', {attribute: meeting.options.individual_students.length})}}</li>\n            </ul>\n        </template>\n        <template v-if=\"meeting.options.individual_employees && meeting.options.individual_employees.length\">\n            <ul style=\"list-style:none;padding:0;margin:0;\">\n                <li>{{trans('communication.count_individual_employees', {attribute: meeting.options.individual_employees.length})}}</li>\n            </ul>\n        </template>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: ['meeting']\n}\n</script>\n\n<style>\n\n</style>","<template>\n    <div>\n        <form @submit.prevent=\"proceed\" @keydown=\"meetingForm.errors.clear($event.target.name)\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('communication.meeting_title')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"meetingForm.title\" name=\"title\" :placeholder=\"trans('communication.meeting_title')\">\n                        <show-error :form-name=\"meetingForm\" prop-name=\"title\"></show-error>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-6\">\n                            <div class=\"form-group\">\n                                <label for=\"\">{{trans('communication.meeting_date')}}</label>\n                                <datepicker v-model=\"meetingForm.date\" :bootstrapStyling=\"true\" @selected=\"meetingForm.errors.clear('date')\" :placeholder=\"trans('communication.meeting_date')\"></datepicker>\n                                <show-error :form-name=\"meetingForm\" prop-name=\"date\"></show-error>\n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-6\">\n                            <div class=\"form-group\">\n                                <label for=\"\">{{trans('communication.meeting_start_time')}}</label>\n                                <timepicker :hour.sync=\"start_time.hour\" :minute.sync=\"start_time.minute\" :meridiem.sync=\"start_time.meridiem\"></timepicker>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-6\">\n                            <div class=\"form-group\">\n                                <label for=\"\">{{trans('communication.meeting_end_time')}}</label>\n                                <timepicker :hour.sync=\"end_time.hour\" :minute.sync=\"end_time.minute\" :meridiem.sync=\"end_time.meridiem\"></timepicker>\n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-6\">\n                            <!-- <div class=\"form-group\">\n                                <label class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" value=\"1\" v-model=\"meetingForm.owner_video_preference\">\n                                    <span class=\"custom-control-label\"><small>{{trans('communication.owner_video_preference')}}</small></span>\n                                </label> \n                            </div> -->\n                            <div class=\"form-group\">\n                                <label class=\"custom-control custom-checkbox\">\n                                    <input type=\"checkbox\" class=\"custom-control-input\" value=\"1\" v-model=\"meetingForm.audience_video_preference\">\n                                    <span class=\"custom-control-label\"><small>{{trans('communication.audience_video_preference')}}</small></span>\n                                </label> \n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-6\">\n                            <div class=\"form-group\">\n                                <label for=\"\">{{trans('communication.meeting_audience')}}</label>\n                                <select v-model=\"meetingForm.audience\" class=\"custom-select col-12\" name=\"audience\" @change=\"meetingForm.errors.clear('audience')\">\n                                  <option value=null selected>{{trans('general.select_one')}}</option>\n                                  <option v-for=\"option in audiences\" v-bind:value=\"option.value\">\n                                    {{ option.text }}\n                                  </option>\n                                </select>\n                                <show-error :form-name=\"meetingForm\" prop-name=\"audience\"></show-error>\n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-6\" v-if=\"meetingForm.audience == 'selected_course'\">\n                            <div class=\"form-group\">\n                                <label for=\"\">{{trans('academic.course')}}</label>\n                                <v-select label=\"name\" track-by=\"id\" v-model=\"selected_courses\" group-values=\"courses\" group-label=\"course_group\" :group-select=\"false\" name=\"course_id\" id=\"course_id\" :options=\"courses\" :placeholder=\"trans('academic.select_course')\" @select=\"onCourseSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onCourseRemove\" :selected=\"selected_courses\">\n                                    <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!courses.length\">\n                                        {{trans('general.no_option_found')}}\n                                    </div>\n                                </v-select>\n                                <show-error :form-name=\"meetingForm\" prop-name=\"course_id\"></show-error>\n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-6\" v-if=\"meetingForm.audience == 'selected_batch'\">\n                            <div class=\"form-group\">\n                                <label for=\"\">{{trans('academic.batch')}}</label>\n                                <v-select label=\"name\" track-by=\"id\" v-model=\"selected_batches\" group-values=\"batches\" group-label=\"course_group\" :group-select=\"false\" name=\"batch_id\" id=\"batch_id\" :options=\"batches\" :placeholder=\"trans('academic.select_batch')\" @select=\"onBatchSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onBatchRemove\" :selected=\"selected_batches\">\n                                    <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!batches.length\">\n                                        {{trans('general.no_option_found')}}\n                                    </div>\n                                </v-select>\n                                <show-error :form-name=\"meetingForm\" prop-name=\"batch_id\"></show-error>\n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-6\" v-if=\"meetingForm.audience == 'selected_department'\">\n                            <div class=\"form-group\">\n                                <label for=\"\">{{trans('employee.department')}}</label>\n                                <v-select label=\"name\" track-by=\"id\" v-model=\"selected_departments\" name=\"department_id\" id=\"department_id\" :options=\"departments\" :placeholder=\"trans('employee.select_department')\" @select=\"onDepartmentSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onDepartmentRemove\" :selected=\"selected_departments\">\n                                    <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!departments.length\">\n                                        {{trans('general.no_option_found')}}\n                                    </div>\n                                </v-select>\n                                <show-error :form-name=\"meetingForm\" prop-name=\"department_id\"></show-error>\n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-6\" v-if=\"meetingForm.audience == 'selected_employee_category'\">\n                            <div class=\"form-group\">\n                                <label for=\"\">{{trans('employee.category')}}</label>\n                                <v-select label=\"name\" track-by=\"id\" v-model=\"selected_employee_categories\" name=\"employee_category_id\" id=\"employee_category_id\" :options=\"employee_categories\" :placeholder=\"trans('employee.select_category')\" @select=\"onEmployeeCategorySelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onEmployeeCategoryRemove\" :selected=\"selected_employee_categories\">\n                                    <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employee_categories.length\">\n                                        {{trans('general.no_option_found')}}\n                                    </div>\n                                </v-select>\n                                <show-error :form-name=\"meetingForm\" prop-name=\"employee_category_id\"></show-error>\n                            </div>\n                        </div>\n                        <div class=\"col-12\" v-if=\"! uuid\">\n                            <user-search @searched=\"addToSearchResult\"></user-search>\n\n                            <div class=\"form-group\">\n                                <ul class=\"font-80pc\">\n                                    <li v-for=\"result in searchResults\" :key=\"result.key\">\n                                        {{result.name+' '+result.description_1}} <span class=\"text-right text-danger\" @click=\"deleteResult(result)\"><i class=\"fas fa-times-circle\"></i></span>\n                                        <span class=\"d-block\">{{result.description_2}} {{result.contact_number}}</span>\n                                    </li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <file-upload-input :button-text=\"trans('general.upload_document')\" :token=\"meetingForm.upload_token\" module=\"meeting\" :clear-file=\"clearAttachment\" :module-id=\"module_id\"></file-upload-input>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"form-group\">\n                        <html-editor name=\"description\" :model.sync=\"meetingForm.description\" height=\"300\" :isUpdate=\"uuid ? true : false\" @clearErrors=\"meetingForm.errors.clear('description')\"></html-editor>\n                        <show-error :form-name=\"meetingForm\" prop-name=\"description\"></show-error>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"card-footer text-right\">\n                <router-link to=\"/communication/meeting\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"uuid\">{{trans('general.cancel')}}</router-link>\n                <button v-if=\"!uuid\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n                    <span v-if=\"uuid\">{{trans('general.update')}}</span>\n                    <span v-else>{{trans('general.save')}}</span>\n                </button>\n            </div>\n        </form>\n    </div>\n</template>\n\n\n<script>\n    import userSearch from \"@components/user-search\"\n\n    export default {\n        components: {userSearch},\n        data() {\n            return {\n                meetingForm: new Form({\n                    title: '',\n                    date: '',\n                    start_time: '',\n                    end_time: '',\n                    owner_video_preference: 0,\n                    audience_video_preference: 0,\n                    audience: null,\n                    course_id: [],\n                    batch_id: [],\n                    department_id: [],\n                    employee_category_id: [],\n                    description: '',\n                    upload_token: '',\n                    individual_students: [],\n                    individual_employees: []\n                }),\n                start_time: {\n                    hour: '',\n                    minute: '',\n                    meridiem: 'am'\n                },\n                end_time: {\n                    hour: '',\n                    minute: '',\n                    meridiem: 'am'\n                },\n                audiences: [],\n                courses: [],\n                selected_courses: null,\n                batches: [],\n                selected_batches: null,\n                departments: [],\n                selected_departments: null,\n                employee_categories: [],\n                selected_employee_categories: null,\n                module_id: '',\n                clearAttachment: true,\n                searchResults: []\n            };\n        },\n        props: ['uuid'],\n        mounted() {\n            if(!helper.hasPermission('create-meeting') && !helper.hasPermission('edit-meeting')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getPreRequisite();\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/meeting/pre-requisite')\n                    .then(response => {\n                        this.audiences = response.audiences;\n                        this.courses = response.courses;\n                        this.batches = response.batches;\n                        this.departments = response.departments;\n                        this.employee_categories = response.employee_categories;\n                        \n                        if(this.uuid)\n                            this.get();\n                        else\n                            this.meetingForm.upload_token = this.$uuid.v4();\n\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            proceed(){\n                if(this.uuid)\n                    this.update();\n                else\n                    this.store();\n            },\n            store(){\n                this.meetingForm.individual_students = [];\n                this.meetingForm.individual_employees = [];\n                this.searchResults.forEach(result => {\n                    if (result.type === 'student') {\n                        this.meetingForm.individual_students.push(result.id)\n                    } else {\n                        this.meetingForm.individual_employees.push(result.id)\n                    }\n                })\n                this.meetingForm.start_time = helper.toTime(this.start_time);\n                this.meetingForm.end_time   = helper.toTime(this.end_time);\n                let loader = this.$loading.show();\n                this.meetingForm.post('/api/meeting')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.clearAttachment = !this.clearAttachment;\n                        this.meetingForm.upload_token = this.$uuid.v4();\n                        this.selected_courses = null;\n                        this.selected_batches = null;\n                        this.selected_departments = null;\n                        this.selected_employee_categories = null;\n                        this.meetingForm.individual_students = [];\n                        this.meetingForm.individual_employees = [];\n                        this.searchResults = [];\n                        this.$emit('completed');\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/meeting/'+this.uuid)\n                    .then(response => {\n\n                        if (! response.is_editable) {\n                            toastr.error(i18n.user.permission_denied);\n                            loader.hide();\n                            this.$router.push('/communication/meeting');\n                        }\n\n                        this.meetingForm.title = response.meeting.title;\n                        this.meetingForm.date = response.meeting.date;\n                        this.meetingForm.end_date = response.meeting.end_date;\n                        this.meetingForm.description = response.meeting.description;\n                        this.meetingForm.audience = response.meeting.audience;\n                        this.selected_courses = response.meeting.audience == 'selected_course' ? response.selected_audience : [];\n                        this.meetingForm.course_id = response.meeting.audience == 'selected_course' ? this.setMultiSelect(response.selected_audience) : [];\n                        this.selected_batches = response.meeting.audience == 'selected_batch' ? response.selected_audience : [];\n                        this.meetingForm.batch_id = response.meeting.audience == 'selected_batch' ? this.setMultiSelect(response.selected_audience) : [];\n                        this.selected_departments = response.meeting.audience == 'selected_department' ? response.selected_audience : [];\n                        this.meetingForm.department_id = response.meeting.audience == 'selected_department' ? this.setMultiSelect(response.selected_audience) : [];\n                        this.selected_employee_categories = response.meeting.audience == 'selected_employee_category' ? response.selected_audience : [];\n                        this.meetingForm.employee_category_id = response.meeting.audience == 'selected_employee_category' ? this.setMultiSelect(response.selected_audience) : [];\n                        this.start_time = response.start_time;\n                        this.end_time = response.end_time;\n                        this.meetingForm.upload_token = response.meeting.upload_token;\n                        this.module_id = response.meeting.id;\n                        this.meetingForm.owner_video_preference = response.meeting.owner_video_preference;\n                        this.meetingForm.audience_video_preference = response.meeting.audience_video_preference;\n                        \n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        this.$router.push('/communication/meeting');\n                    });\n            },\n            update(){\n                this.meetingForm.individual_students = [];\n                this.meetingForm.individual_employees = [];\n                this.searchResults.forEach(result => {\n                    if (result.type === 'student') {\n                        this.meetingForm.individual_students.push(result.id)\n                    } else {\n                        this.meetingForm.individual_employees.push(result.id)\n                    }\n                })\n                this.meetingForm.start_time = helper.toTime(this.start_time);\n                this.meetingForm.end_time   = helper.toTime(this.end_time);\n                let loader = this.$loading.show();\n                this.meetingForm.patch('/api/meeting/'+this.uuid)\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/communication/meeting');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            onCourseSelect(selectedOption){\n                this.meetingForm.errors.clear('course_id');\n                this.meetingForm.course_id.push(selectedOption.id);\n            },\n            onCourseRemove(removedOption){\n                this.meetingForm.course_id.splice(this.meetingForm.course_id.indexOf(removedOption.id), 1);\n            },\n            onBatchSelect(selectedOption){\n                this.meetingForm.errors.clear('batch_id');\n                this.meetingForm.batch_id.push(selectedOption.id);\n            },\n            onBatchRemove(removedOption){\n                this.meetingForm.batch_id.splice(this.meetingForm.batch_id.indexOf(removedOption.id), 1);\n            },\n            onDepartmentSelect(selectedOption){\n                this.meetingForm.errors.clear('department_id');\n                this.meetingForm.department_id.push(selectedOption.id);\n            },\n            onDepartmentRemove(removedOption){\n                this.meetingForm.department_id.splice(this.meetingForm.department_id.indexOf(removedOption.id), 1);\n            },\n            onEmployeeCategorySelect(selectedOption){\n                this.meetingForm.errors.clear('employee_category_id');\n                this.meetingForm.employee_category_id.push(selectedOption.id);\n            },\n            onEmployeeCategoryRemove(removedOption){\n                this.meetingForm.employee_category_id.splice(this.meetingForm.employee_category_id.indexOf(removedOption.id), 1);\n            },\n            setMultiSelect(options) {\n                let data = [];\n                options.forEach(option => {\n                    data.push(option.id);\n                })\n\n                return data;\n            },\n            addToSearchResult(result) {\n                let existing_result = this.searchResults.findIndex(o => o.type === result.type && o.id === result.id)\n\n                if (existing_result < 0) {\n                    this.searchResults.push(result)\n                }\n            },\n            deleteResult(result) {\n                let idx = this.searchResults.findIndex(o => o.type === result.type && o.id === result.id)\n                this.searchResults.splice(idx, 1);\n            }\n        }\n    }\n</script>\n\n<style>\n.loading-overlay.is-full-page{\n    z-index: 1060;\n}\n</style>","<template>\n    <div>\n        <div class=\"page-titles\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('communication.meeting')}} \n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"meetings.total\">{{trans('general.total_result_found',{count : meetings.total, from: meetings.from, to: meetings.to})}}</span>\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\n                    </h3>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"action-buttons pull-right\">\n                        <button class=\"btn btn-info btn-sm\" v-if=\"meetings.total && !showCreatePanel && hasPermission('create-meeting')\" @click=\"showCreatePanel = !showCreatePanel\" v-tooltip=\"trans('general.add_new')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('communication.add_new_meeting')}}</span></button>\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\n                        <!-- <div class=\"btn-group\">\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\n                            </button>\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\n                            </div>\n                        </div> -->\n                        <help-button @clicked=\"help_topic = 'meeting'\"></help-button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <transition name=\"fade\">\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{trans('general.filter')}}\n                        </h4>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('academic.course')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_courses\" group-values=\"courses\" group-label=\"course_group\" :group-select=\"false\" name=\"course_id\" id=\"course_id\" :options=\"courses\" :placeholder=\"trans('academic.select_course')\" @select=\"onCourseSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onCourseRemove\" :selected=\"selected_courses\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!courses.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('academic.batch')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_batches\" group-values=\"batches\" group-label=\"course_group\" :group-select=\"false\" name=\"batch_id\" id=\"batch_id\" :options=\"batches\" :placeholder=\"trans('academic.select_batch')\" @select=\"onBatchSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onBatchRemove\" :selected=\"selected_batches\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!batches.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('employee.department')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_departments\" name=\"department_id\" id=\"department_id\" :options=\"departments\" :placeholder=\"trans('employee.select_department')\" @select=\"onDepartmentSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onDepartmentRemove\" :selected=\"selected_departments\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!departments.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('employee.category')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_employee_categories\" name=\"employee_category_id\" id=\"employee_category_id\" :options=\"employee_categories\" :placeholder=\"trans('employee.select_category')\" @select=\"onEmployeeCategorySelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onEmployeeCategoryRemove\" :selected=\"selected_employee_categories\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employee_categories.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('communication.meeting_keyword')}}</label>\n                                    <input class=\"form-control\" name=\"keyword\" v-model=\"filter.keyword\">\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"card-footer text-right\">\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getMeetings\">{{trans('general.filter')}}</button>\n                        </div>\n                    </div>\n                </div>\n            </transition>\n            <transition name=\"fade\" v-if=\"hasPermission('create-meeting')\">\n                <div class=\"card card-form\" v-if=\"showCreatePanel\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{trans('communication.add_new_meeting')}}</h4>\n                        <meeting-form @completed=\"getMeetings\" @cancel=\"showCreatePanel = !showCreatePanel\"></meeting-form>\n                    </div>\n                </div>\n            </transition>\n            <div class=\"card\">\n                <div class=\"card-body\">\n\n                    <p class=\"alert alert-info m-4\" v-if=\"isDemo\">{{trans('communication.demo_mode_meeting_description')}}</p>\n\n                    <div class=\"table-responsive\" v-if=\"meetings.total\">\n                        <table class=\"table table-sm\">\n                            <thead>\n                                <tr>\n                                    <th>{{trans('communication.meeting_title')}}</th>\n                                    <th>{{trans('communication.meeting_duration')}}</th>\n                                    <th>{{trans('communication.meeting_audience')}}</th>\n                                    <th>{{trans('communication.meeting_created_by')}}</th>\n                                    <th>{{trans('general.created_at')}}</th>\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"meeting in meetings.data\">\n                                    <td>\n                                        {{meeting.title}}\n                                        <span v-if=\"meeting.is_live\" class=\"badge badge-success\">{{trans('communication.live')}}</span>\n\n                                        <span v-if=\"meeting.is_expired\" class=\"badge badge-danger\">{{trans('communication.expired')}}</span>\n                                    </td>\n                                    <td>\n                                        {{meeting.date | moment}} <span v-if=\"meeting.start_time\">{{meeting.start_time | momentTime }}</span> \n                                        <span v-if=\"meeting.end_time\"> {{trans('general.to')}} \n                                        {{meeting.end_time | momentTime }}</span>\n                                    </td>\n                                    <td>\n                                        <meeting-audience :meeting=\"meeting\" />\n                                    </td>\n                                    <td>{{getEmployeeName(meeting.user.employee)}} <br > {{getEmployeeDesignationOnDate(meeting.user.employee, meeting.date)}}</td>\n                                    <td>{{meeting.created_at | momentDateTime}}</td>\n                                    <td class=\"table-option\">\n                                        <div class=\"btn-group\">\n                                            <button class=\"btn btn-success btn-sm\" v-tooltip=\"trans('general.view_detail')\" @click.prevent=\"showMeeting(meeting)\"><i class=\"fas fa-arrow-circle-right\"></i></button>\n                                            <button class=\"btn btn-info btn-sm\" v-if=\"hasPermission('edit-meeting')\" v-tooltip=\"trans('communication.edit_meeting')\" @click.prevent=\"editMeeting(meeting)\"><i class=\"fas fa-edit\"></i></button>\n                                            <button class=\"btn btn-danger btn-sm\" v-if=\"hasPermission('delete-meeting')\" :key=\"meeting.id\" v-confirm=\"{ok: confirmDelete(meeting)}\" v-tooltip=\"trans('communication.delete_meeting')\"><i class=\"fas fa-trash\"></i></button>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <module-info v-if=\"!meetings.total\" module=\"communication\" title=\"meeting_module_title\" description=\"meeting_module_description\" icon=\"list\">\n                        <div slot=\"btn\">\n                            <button class=\"btn btn-info btn-md\" v-if=\"!showCreatePanel && hasPermission('create-meeting')\" @click=\"showCreatePanel = !showCreatePanel\"><i class=\"fas fa-plus\"></i> {{trans('general.add_new')}}</button>\n                        </div>\n                    </module-info>\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"meetings\" @updateRecords=\"getMeetings\"></pagination-record>\n                </div>\n            </div>\n        </div>\n        <right-panel :topic=\"help_topic\"></right-panel>\n    </div>\n</template>\n\n<script>\n    import meetingForm from './form'\n    import meetingAudience from './audience'\n\n    export default {\n        components : { meetingForm, meetingAudience},\n        data() {\n            return {\n                meetings: {\n                    total: 0,\n                    data: []\n                },\n                filter: {\n                    sort_by : 'date',\n                    order: 'desc',\n                    keyword: '',\n                    course_id: [],\n                    batch_id: [],\n                    department_id: [],\n                    employee_category_id: [],\n                    page_length: helper.getConfig('page_length')\n                },\n                orderByOptions: [\n                    {\n                        value: 'created_at',\n                        translation: i18n.general.created_at\n                    },\n                    {\n                        value: 'date',\n                        translation: i18n.communication.meeting_date\n                    },\n                    {\n                        value: 'title',\n                        translation: i18n.communication.meeting_title\n                    }\n                ],\n                courses: [],\n                selected_courses: null,\n                batches: [],\n                selected_batches: null,\n                departments: [],\n                selected_departments: null,\n                employee_categories: [],\n                selected_employee_categories: null,\n                showFilterPanel: false,\n                showCreatePanel: false,\n                help_topic: ''\n            };\n        },\n        mounted(){\n            if(!helper.hasPermission('list-meeting')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getMeetings();\n            helper.showDemoNotification(['communication']);\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            getEmployeeName(employee){\n                return helper.getEmployeeName(employee);\n            },\n            getEmployeeDesignationOnDate(employee, date){\n                return helper.getEmployeeDesignationOnDate(employee, date);\n            },\n            getMeetings(page){\n                let loader = this.$loading.show();\n                if (typeof page !== 'number') {\n                    page = 1;\n                }\n                let url = helper.getFilterURL(this.filter);\n                axios.get('/api/meeting?page=' + page + url)\n                    .then(response => {\n                        this.meetings = response.meetings;\n                        this.courses = response.filters.courses;\n                        this.batches = response.filters.batches;\n                        this.departments = response.filters.departments;\n                        this.employee_categories = response.filters.employee_categories;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            showMeeting(meeting){\n                this.$router.push('/communication/meeting/'+meeting.uuid);\n            },\n            editMeeting(meeting){\n                this.$router.push('/communication/meeting/'+meeting.uuid+'/edit');\n            },\n            confirmDelete(meeting){\n                return dialog => this.deleteMeeting(meeting);\n            },\n            deleteMeeting(meeting){\n                let loader = this.$loading.show();\n                axios.delete('/api/meeting/'+meeting.uuid)\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.getMeetings();\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getConfig(config) {\n                return helper.getConfig(config)\n            },\n            onCourseSelect(selectedOption){\n                this.filter.course_id.push(selectedOption.id);\n            },\n            onCourseRemove(removedOption){\n                this.filter.course_id.splice(this.filter.course_id.indexOf(removedOption.id), 1);\n            },\n            onBatchSelect(selectedOption){\n                this.filter.batch_id.push(selectedOption.id);\n            },\n            onBatchRemove(removedOption){\n                this.filter.batch_id.splice(this.filter.batch_id.indexOf(removedOption.id), 1);\n            },\n            onDepartmentSelect(selectedOption){\n                this.filter.department_id.push(selectedOption.id);\n            },\n            onDepartmentRemove(removedOption){\n                this.filter.department_id.splice(this.filter.department_id.indexOf(removedOption.id), 1);\n            },\n            onEmployeeCategorySelect(selectedOption){\n                this.filter.employee_category_id.push(selectedOption.id);\n            },\n            onEmployeeCategoryRemove(removedOption){\n                this.filter.employee_category_id.splice(this.filter.employee_category_id.indexOf(removedOption.id), 1);\n            }\n        },\n        filters: {\n          moment(date) {\n            return helper.formatDate(date);\n          },\n          momentDateTime(date) {\n            return helper.formatDateTime(date);\n          },\n          momentTime(time) {\n            return helper.formatTime(time);\n          }\n        },\n        watch: {\n            'filter.sort_by': function(val){\n                this.getMeetings();\n            },\n            'filter.order': function(val){\n                this.getMeetings();\n            },\n            'filter.page_length': function(val){\n                this.getMeetings();\n            }\n        },\n        computed: {\n            authToken(){\n                return helper.getAuthToken();\n            },\n            isDemo() {\n                return ! helper.getConfig('mode') ? true : false;\n            }\n        }\n    }\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    { staticClass: \"form-group\" },\n    [\n      _c(\"input\", {\n        directives: [\n          {\n            name: \"model\",\n            rawName: \"v-model\",\n            value: _vm.search,\n            expression: \"search\",\n          },\n        ],\n        staticClass: \"form-control\",\n        attrs: { type: \"text\", placeholder: \"Search Student or Employee\" },\n        domProps: { value: _vm.search },\n        on: {\n          keydown: function ($event) {\n            _vm.displayResult = true\n          },\n          focus: function ($event) {\n            _vm.displayResult = true\n          },\n          input: function ($event) {\n            if ($event.target.composing) return\n            _vm.search = $event.target.value\n          },\n        },\n      }),\n      _vm._v(\" \"),\n      _vm.displayResult\n        ? [\n            _vm.search.length\n              ? _c(\n                  \"ul\",\n                  { staticClass: \"autocomplete-results\" },\n                  [\n                    _vm.search.length && _vm.search.length < 3\n                      ? _c(\"li\", { staticClass: \"autocomplete-no-result\" }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"general.type_min_3_char_for_search_result\"\n                              )\n                            )\n                          ),\n                        ])\n                      : _vm.search.length >= 3 && _vm.resultLoading\n                      ? _c(\"li\", { staticClass: \"autocomplete-no-result\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.loading_progress\"))),\n                        ])\n                      : _vm.search.length >= 3 &&\n                        !_vm.student_search_results.length &&\n                        !_vm.employee_search_results.length &&\n                        _vm.search.length &&\n                        !_vm.resultLoading\n                      ? _c(\"li\", { staticClass: \"autocomplete-no-result\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.no_result_found\"))),\n                        ])\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.student_search_results.length\n                      ? [\n                          _c(\"li\", { staticClass: \"autocomplete-heading\" }, [\n                            _vm._v(_vm._s(_vm.trans(\"student.student\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(_vm.student_search_results, function (result) {\n                            return _c(\n                              \"li\",\n                              { staticClass: \"autocomplete-result pointer\" },\n                              [\n                                _c(\n                                  \"div\",\n                                  {\n                                    staticClass: \"item-info\",\n                                    on: {\n                                      click: function ($event) {\n                                        return _vm.submitStudent(result)\n                                      },\n                                    },\n                                  },\n                                  [\n                                    _c(\"h5\", { staticClass: \"item-heading\" }, [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.getStudentName(result.student)\n                                        )\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"div\", { staticClass: \"item-meta\" }, [\n                                      _c(\n                                        \"span\",\n                                        { staticClass: \"father-name\" },\n                                        [\n                                          _vm._v(\n                                            _vm._s(\n                                              result.student.parent\n                                                .first_guardian_name\n                                            )\n                                          ),\n                                        ]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\"span\", { staticClass: \"contact\" }, [\n                                        _vm._v(\n                                          \" / \" +\n                                            _vm._s(\n                                              result.student.contact_number\n                                            )\n                                        ),\n                                      ]),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"div\", { staticClass: \"item-meta\" }, [\n                                      _c(\n                                        \"span\",\n                                        { staticClass: \"course-batch\" },\n                                        [\n                                          _vm._v(\n                                            _vm._s(\n                                              result.batch.course.name +\n                                                \" \" +\n                                                result.batch.name\n                                            )\n                                          ),\n                                        ]\n                                      ),\n                                    ]),\n                                  ]\n                                ),\n                              ]\n                            )\n                          }),\n                        ]\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.employee_search_results.length\n                      ? [\n                          _c(\"li\", { staticClass: \"autocomplete-heading\" }, [\n                            _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(\n                            _vm.employee_search_results,\n                            function (result) {\n                              return _c(\n                                \"li\",\n                                { staticClass: \"autocomplete-result pointer\" },\n                                [\n                                  _c(\n                                    \"div\",\n                                    {\n                                      staticClass: \"item-info\",\n                                      on: {\n                                        click: function ($event) {\n                                          return _vm.submitEmployee(result)\n                                        },\n                                      },\n                                    },\n                                    [\n                                      _c(\n                                        \"h5\",\n                                        { staticClass: \"item-heading\" },\n                                        [\n                                          _vm._v(\n                                            _vm._s(_vm.getEmployeeName(result))\n                                          ),\n                                        ]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\"div\", { staticClass: \"item-meta\" }, [\n                                        _c(\"span\", { staticClass: \"contact\" }, [\n                                          _vm._v(\n                                            \" / \" +\n                                              _vm._s(result.contact_number)\n                                          ),\n                                        ]),\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"div\", { staticClass: \"item-meta\" }, [\n                                        _c(\n                                          \"span\",\n                                          { staticClass: \"course-batch\" },\n                                          [\n                                            _vm._v(\n                                              _vm._s(\n                                                _vm.getEmployeeDesignationOnDate(\n                                                  result\n                                                )\n                                              )\n                                            ),\n                                          ]\n                                        ),\n                                      ]),\n                                    ]\n                                  ),\n                                ]\n                              )\n                            }\n                          ),\n                        ]\n                      : _vm._e(),\n                  ],\n                  2\n                )\n              : _vm._e(),\n          ]\n        : _vm._e(),\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _vm.meeting.audience == \"selected_course\"\n        ? [\n            _vm._v(\"\\n        \" + _vm._s(_vm.trans(\"academic.course\")) + \" \"),\n            _c(\"br\"),\n            _vm._v(\" \"),\n            _c(\n              \"ul\",\n              {\n                staticStyle: {\n                  \"list-style\": \"none\",\n                  padding: \"0\",\n                  margin: \"0\",\n                },\n              },\n              _vm._l(_vm.meeting.courses, function (course) {\n                return _c(\"li\", [\n                  _vm._v(\n                    _vm._s(course.name + \"(\" + course.course_group.name + \")\")\n                  ),\n                ])\n              }),\n              0\n            ),\n          ]\n        : _vm.meeting.audience == \"selected_batch\"\n        ? [\n            _vm._v(\"\\n        \" + _vm._s(_vm.trans(\"academic.batch\")) + \" \"),\n            _c(\"br\"),\n            _vm._v(\" \"),\n            _c(\n              \"ul\",\n              {\n                staticStyle: {\n                  \"list-style\": \"none\",\n                  padding: \"0\",\n                  margin: \"0\",\n                },\n              },\n              _vm._l(_vm.meeting.batches, function (batch) {\n                return _c(\"li\", [\n                  _vm._v(_vm._s(batch.name + \"(\" + batch.course.name + \")\")),\n                ])\n              }),\n              0\n            ),\n          ]\n        : _vm.meeting.audience == \"selected_department\"\n        ? [\n            _vm._v(\n              \"\\n        \" + _vm._s(_vm.trans(\"employee.department\")) + \" \"\n            ),\n            _c(\"br\"),\n            _vm._v(\" \"),\n            _c(\n              \"ul\",\n              {\n                staticStyle: {\n                  \"list-style\": \"none\",\n                  padding: \"0\",\n                  margin: \"0\",\n                },\n              },\n              _vm._l(_vm.meeting.departments, function (department) {\n                return _c(\"li\", [_vm._v(_vm._s(department.name))])\n              }),\n              0\n            ),\n          ]\n        : _vm.meeting.audience == \"selected_employee_category\"\n        ? [\n            _vm._v(\"\\n        \" + _vm._s(_vm.trans(\"employee.category\")) + \" \"),\n            _c(\"br\"),\n            _vm._v(\" \"),\n            _c(\n              \"ul\",\n              {\n                staticStyle: {\n                  \"list-style\": \"none\",\n                  padding: \"0\",\n                  margin: \"0\",\n                },\n              },\n              _vm._l(\n                _vm.meeting.employee_categorys,\n                function (employee_category) {\n                  return _c(\"li\", [_vm._v(_vm._s(employee_category.name))])\n                }\n              ),\n              0\n            ),\n          ]\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.meeting.options.individual_students &&\n      _vm.meeting.options.individual_students.length\n        ? [\n            _c(\n              \"ul\",\n              {\n                staticStyle: {\n                  \"list-style\": \"none\",\n                  padding: \"0\",\n                  margin: \"0\",\n                },\n              },\n              [\n                _c(\"li\", [\n                  _vm._v(\n                    _vm._s(\n                      _vm.trans(\"communication.count_individual_students\", {\n                        attribute:\n                          _vm.meeting.options.individual_students.length,\n                      })\n                    )\n                  ),\n                ]),\n              ]\n            ),\n          ]\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.meeting.options.individual_employees &&\n      _vm.meeting.options.individual_employees.length\n        ? [\n            _c(\n              \"ul\",\n              {\n                staticStyle: {\n                  \"list-style\": \"none\",\n                  padding: \"0\",\n                  margin: \"0\",\n                },\n              },\n              [\n                _c(\"li\", [\n                  _vm._v(\n                    _vm._s(\n                      _vm.trans(\"communication.count_individual_employees\", {\n                        attribute:\n                          _vm.meeting.options.individual_employees.length,\n                      })\n                    )\n                  ),\n                ]),\n              ]\n            ),\n          ]\n        : _vm._e(),\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.meetingForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"communication.meeting_title\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.meetingForm.title,\n                      expression: \"meetingForm.title\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"title\",\n                    placeholder: _vm.trans(\"communication.meeting_title\"),\n                  },\n                  domProps: { value: _vm.meetingForm.title },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(_vm.meetingForm, \"title\", $event.target.value)\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: { \"form-name\": _vm.meetingForm, \"prop-name\": \"title\" },\n                }),\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"communication.meeting_date\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"datepicker\", {\n                      attrs: {\n                        bootstrapStyling: true,\n                        placeholder: _vm.trans(\"communication.meeting_date\"),\n                      },\n                      on: {\n                        selected: function ($event) {\n                          return _vm.meetingForm.errors.clear(\"date\")\n                        },\n                      },\n                      model: {\n                        value: _vm.meetingForm.date,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.meetingForm, \"date\", $$v)\n                        },\n                        expression: \"meetingForm.date\",\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.meetingForm,\n                        \"prop-name\": \"date\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"communication.meeting_start_time\"))\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"timepicker\", {\n                      attrs: {\n                        hour: _vm.start_time.hour,\n                        minute: _vm.start_time.minute,\n                        meridiem: _vm.start_time.meridiem,\n                      },\n                      on: {\n                        \"update:hour\": function ($event) {\n                          return _vm.$set(_vm.start_time, \"hour\", $event)\n                        },\n                        \"update:minute\": function ($event) {\n                          return _vm.$set(_vm.start_time, \"minute\", $event)\n                        },\n                        \"update:meridiem\": function ($event) {\n                          return _vm.$set(_vm.start_time, \"meridiem\", $event)\n                        },\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"communication.meeting_end_time\"))\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"timepicker\", {\n                      attrs: {\n                        hour: _vm.end_time.hour,\n                        minute: _vm.end_time.minute,\n                        meridiem: _vm.end_time.meridiem,\n                      },\n                      on: {\n                        \"update:hour\": function ($event) {\n                          return _vm.$set(_vm.end_time, \"hour\", $event)\n                        },\n                        \"update:minute\": function ($event) {\n                          return _vm.$set(_vm.end_time, \"minute\", $event)\n                        },\n                        \"update:meridiem\": function ($event) {\n                          return _vm.$set(_vm.end_time, \"meridiem\", $event)\n                        },\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"label\",\n                    { staticClass: \"custom-control custom-checkbox\" },\n                    [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.meetingForm.audience_video_preference,\n                            expression: \"meetingForm.audience_video_preference\",\n                          },\n                        ],\n                        staticClass: \"custom-control-input\",\n                        attrs: { type: \"checkbox\", value: \"1\" },\n                        domProps: {\n                          checked: Array.isArray(\n                            _vm.meetingForm.audience_video_preference\n                          )\n                            ? _vm._i(\n                                _vm.meetingForm.audience_video_preference,\n                                \"1\"\n                              ) > -1\n                            : _vm.meetingForm.audience_video_preference,\n                        },\n                        on: {\n                          change: function ($event) {\n                            var $$a = _vm.meetingForm.audience_video_preference,\n                              $$el = $event.target,\n                              $$c = $$el.checked ? true : false\n                            if (Array.isArray($$a)) {\n                              var $$v = \"1\",\n                                $$i = _vm._i($$a, $$v)\n                              if ($$el.checked) {\n                                $$i < 0 &&\n                                  _vm.$set(\n                                    _vm.meetingForm,\n                                    \"audience_video_preference\",\n                                    $$a.concat([$$v])\n                                  )\n                              } else {\n                                $$i > -1 &&\n                                  _vm.$set(\n                                    _vm.meetingForm,\n                                    \"audience_video_preference\",\n                                    $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                                  )\n                              }\n                            } else {\n                              _vm.$set(\n                                _vm.meetingForm,\n                                \"audience_video_preference\",\n                                $$c\n                              )\n                            }\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"custom-control-label\" }, [\n                        _c(\"small\", [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"communication.audience_video_preference\"\n                              )\n                            )\n                          ),\n                        ]),\n                      ]),\n                    ]\n                  ),\n                ]),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"communication.meeting_audience\"))\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"select\",\n                      {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.meetingForm.audience,\n                            expression: \"meetingForm.audience\",\n                          },\n                        ],\n                        staticClass: \"custom-select col-12\",\n                        attrs: { name: \"audience\" },\n                        on: {\n                          change: [\n                            function ($event) {\n                              var $$selectedVal = Array.prototype.filter\n                                .call($event.target.options, function (o) {\n                                  return o.selected\n                                })\n                                .map(function (o) {\n                                  var val = \"_value\" in o ? o._value : o.value\n                                  return val\n                                })\n                              _vm.$set(\n                                _vm.meetingForm,\n                                \"audience\",\n                                $event.target.multiple\n                                  ? $$selectedVal\n                                  : $$selectedVal[0]\n                              )\n                            },\n                            function ($event) {\n                              return _vm.meetingForm.errors.clear(\"audience\")\n                            },\n                          ],\n                        },\n                      },\n                      [\n                        _c(\n                          \"option\",\n                          { attrs: { value: \"null\", selected: \"\" } },\n                          [_vm._v(_vm._s(_vm.trans(\"general.select_one\")))]\n                        ),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.audiences, function (option) {\n                          return _c(\n                            \"option\",\n                            { domProps: { value: option.value } },\n                            [\n                              _vm._v(\n                                \"\\n                                \" +\n                                  _vm._s(option.text) +\n                                  \"\\n                              \"\n                              ),\n                            ]\n                          )\n                        }),\n                      ],\n                      2\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.meetingForm,\n                        \"prop-name\": \"audience\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _vm.meetingForm.audience == \"selected_course\"\n                ? _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"v-select\",\n                          {\n                            attrs: {\n                              label: \"name\",\n                              \"track-by\": \"id\",\n                              \"group-values\": \"courses\",\n                              \"group-label\": \"course_group\",\n                              \"group-select\": false,\n                              name: \"course_id\",\n                              id: \"course_id\",\n                              options: _vm.courses,\n                              placeholder: _vm.trans(\"academic.select_course\"),\n                              multiple: true,\n                              \"close-on-select\": false,\n                              \"clear-on-select\": false,\n                              \"hide-selected\": true,\n                              selected: _vm.selected_courses,\n                            },\n                            on: {\n                              select: _vm.onCourseSelect,\n                              remove: _vm.onCourseRemove,\n                            },\n                            model: {\n                              value: _vm.selected_courses,\n                              callback: function ($$v) {\n                                _vm.selected_courses = $$v\n                              },\n                              expression: \"selected_courses\",\n                            },\n                          },\n                          [\n                            !_vm.courses.length\n                              ? _c(\n                                  \"div\",\n                                  {\n                                    staticClass: \"multiselect__option\",\n                                    attrs: { slot: \"afterList\" },\n                                    slot: \"afterList\",\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                    \" +\n                                        _vm._s(\n                                          _vm.trans(\"general.no_option_found\")\n                                        ) +\n                                        \"\\n                                \"\n                                    ),\n                                  ]\n                                )\n                              : _vm._e(),\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.meetingForm,\n                            \"prop-name\": \"course_id\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.meetingForm.audience == \"selected_batch\"\n                ? _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"academic.batch\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"v-select\",\n                          {\n                            attrs: {\n                              label: \"name\",\n                              \"track-by\": \"id\",\n                              \"group-values\": \"batches\",\n                              \"group-label\": \"course_group\",\n                              \"group-select\": false,\n                              name: \"batch_id\",\n                              id: \"batch_id\",\n                              options: _vm.batches,\n                              placeholder: _vm.trans(\"academic.select_batch\"),\n                              multiple: true,\n                              \"close-on-select\": false,\n                              \"clear-on-select\": false,\n                              \"hide-selected\": true,\n                              selected: _vm.selected_batches,\n                            },\n                            on: {\n                              select: _vm.onBatchSelect,\n                              remove: _vm.onBatchRemove,\n                            },\n                            model: {\n                              value: _vm.selected_batches,\n                              callback: function ($$v) {\n                                _vm.selected_batches = $$v\n                              },\n                              expression: \"selected_batches\",\n                            },\n                          },\n                          [\n                            !_vm.batches.length\n                              ? _c(\n                                  \"div\",\n                                  {\n                                    staticClass: \"multiselect__option\",\n                                    attrs: { slot: \"afterList\" },\n                                    slot: \"afterList\",\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                    \" +\n                                        _vm._s(\n                                          _vm.trans(\"general.no_option_found\")\n                                        ) +\n                                        \"\\n                                \"\n                                    ),\n                                  ]\n                                )\n                              : _vm._e(),\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.meetingForm,\n                            \"prop-name\": \"batch_id\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.meetingForm.audience == \"selected_department\"\n                ? _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"employee.department\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"v-select\",\n                          {\n                            attrs: {\n                              label: \"name\",\n                              \"track-by\": \"id\",\n                              name: \"department_id\",\n                              id: \"department_id\",\n                              options: _vm.departments,\n                              placeholder: _vm.trans(\n                                \"employee.select_department\"\n                              ),\n                              multiple: true,\n                              \"close-on-select\": false,\n                              \"clear-on-select\": false,\n                              \"hide-selected\": true,\n                              selected: _vm.selected_departments,\n                            },\n                            on: {\n                              select: _vm.onDepartmentSelect,\n                              remove: _vm.onDepartmentRemove,\n                            },\n                            model: {\n                              value: _vm.selected_departments,\n                              callback: function ($$v) {\n                                _vm.selected_departments = $$v\n                              },\n                              expression: \"selected_departments\",\n                            },\n                          },\n                          [\n                            !_vm.departments.length\n                              ? _c(\n                                  \"div\",\n                                  {\n                                    staticClass: \"multiselect__option\",\n                                    attrs: { slot: \"afterList\" },\n                                    slot: \"afterList\",\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                    \" +\n                                        _vm._s(\n                                          _vm.trans(\"general.no_option_found\")\n                                        ) +\n                                        \"\\n                                \"\n                                    ),\n                                  ]\n                                )\n                              : _vm._e(),\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.meetingForm,\n                            \"prop-name\": \"department_id\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.meetingForm.audience == \"selected_employee_category\"\n                ? _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"employee.category\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"v-select\",\n                          {\n                            attrs: {\n                              label: \"name\",\n                              \"track-by\": \"id\",\n                              name: \"employee_category_id\",\n                              id: \"employee_category_id\",\n                              options: _vm.employee_categories,\n                              placeholder: _vm.trans(\n                                \"employee.select_category\"\n                              ),\n                              multiple: true,\n                              \"close-on-select\": false,\n                              \"clear-on-select\": false,\n                              \"hide-selected\": true,\n                              selected: _vm.selected_employee_categories,\n                            },\n                            on: {\n                              select: _vm.onEmployeeCategorySelect,\n                              remove: _vm.onEmployeeCategoryRemove,\n                            },\n                            model: {\n                              value: _vm.selected_employee_categories,\n                              callback: function ($$v) {\n                                _vm.selected_employee_categories = $$v\n                              },\n                              expression: \"selected_employee_categories\",\n                            },\n                          },\n                          [\n                            !_vm.employee_categories.length\n                              ? _c(\n                                  \"div\",\n                                  {\n                                    staticClass: \"multiselect__option\",\n                                    attrs: { slot: \"afterList\" },\n                                    slot: \"afterList\",\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                    \" +\n                                        _vm._s(\n                                          _vm.trans(\"general.no_option_found\")\n                                        ) +\n                                        \"\\n                                \"\n                                    ),\n                                  ]\n                                )\n                              : _vm._e(),\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.meetingForm,\n                            \"prop-name\": \"employee_category_id\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              !_vm.uuid\n                ? _c(\n                    \"div\",\n                    { staticClass: \"col-12\" },\n                    [\n                      _c(\"user-search\", {\n                        on: { searched: _vm.addToSearchResult },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\n                          \"ul\",\n                          { staticClass: \"font-80pc\" },\n                          _vm._l(_vm.searchResults, function (result) {\n                            return _c(\"li\", { key: result.key }, [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(\n                                    result.name + \" \" + result.description_1\n                                  ) +\n                                  \" \"\n                              ),\n                              _c(\n                                \"span\",\n                                {\n                                  staticClass: \"text-right text-danger\",\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.deleteResult(result)\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", {\n                                    staticClass: \"fas fa-times-circle\",\n                                  }),\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"span\", { staticClass: \"d-block\" }, [\n                                _vm._v(\n                                  _vm._s(result.description_2) +\n                                    \" \" +\n                                    _vm._s(result.contact_number)\n                                ),\n                              ]),\n                            ])\n                          }),\n                          0\n                        ),\n                      ]),\n                    ],\n                    1\n                  )\n                : _vm._e(),\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"file-upload-input\", {\n                  attrs: {\n                    \"button-text\": _vm.trans(\"general.upload_document\"),\n                    token: _vm.meetingForm.upload_token,\n                    module: \"meeting\",\n                    \"clear-file\": _vm.clearAttachment,\n                    \"module-id\": _vm.module_id,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"html-editor\", {\n                  attrs: {\n                    name: \"description\",\n                    model: _vm.meetingForm.description,\n                    height: \"300\",\n                    isUpdate: _vm.uuid ? true : false,\n                  },\n                  on: {\n                    \"update:model\": function ($event) {\n                      return _vm.$set(_vm.meetingForm, \"description\", $event)\n                    },\n                    clearErrors: function ($event) {\n                      return _vm.meetingForm.errors.clear(\"description\")\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.meetingForm,\n                    \"prop-name\": \"description\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"card-footer text-right\" },\n          [\n            _c(\n              \"router-link\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.uuid,\n                    expression: \"uuid\",\n                  },\n                ],\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { to: \"/communication/meeting\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            !_vm.uuid\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-danger waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: {\n                      click: function ($event) {\n                        return _vm.$emit(\"cancel\")\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [\n                _vm.uuid\n                  ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                  : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n              ]\n            ),\n          ],\n          1\n        ),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"communication.meeting\")) +\n                  \" \\n                    \"\n              ),\n              _vm.meetings.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.meetings.total,\n                            from: _vm.meetings.from,\n                            to: _vm.meetings.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _vm.meetings.total &&\n                !_vm.showCreatePanel &&\n                _vm.hasPermission(\"create-meeting\")\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"general.add_new\"),\n                            expression: \"trans('general.add_new')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showCreatePanel = !_vm.showCreatePanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"communication.add_new_meeting\"))\n                          ),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"meeting\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"general.filter\")) +\n                          \"\\n                    \"\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  \"group-values\": \"courses\",\n                                  \"group-label\": \"course_group\",\n                                  \"group-select\": false,\n                                  name: \"course_id\",\n                                  id: \"course_id\",\n                                  options: _vm.courses,\n                                  placeholder: _vm.trans(\n                                    \"academic.select_course\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_courses,\n                                },\n                                on: {\n                                  select: _vm.onCourseSelect,\n                                  remove: _vm.onCourseRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_courses,\n                                  callback: function ($$v) {\n                                    _vm.selected_courses = $$v\n                                  },\n                                  expression: \"selected_courses\",\n                                },\n                              },\n                              [\n                                !_vm.courses.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"academic.batch\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  \"group-values\": \"batches\",\n                                  \"group-label\": \"course_group\",\n                                  \"group-select\": false,\n                                  name: \"batch_id\",\n                                  id: \"batch_id\",\n                                  options: _vm.batches,\n                                  placeholder: _vm.trans(\n                                    \"academic.select_batch\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_batches,\n                                },\n                                on: {\n                                  select: _vm.onBatchSelect,\n                                  remove: _vm.onBatchRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_batches,\n                                  callback: function ($$v) {\n                                    _vm.selected_batches = $$v\n                                  },\n                                  expression: \"selected_batches\",\n                                },\n                              },\n                              [\n                                !_vm.batches.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"employee.department\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"department_id\",\n                                  id: \"department_id\",\n                                  options: _vm.departments,\n                                  placeholder: _vm.trans(\n                                    \"employee.select_department\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_departments,\n                                },\n                                on: {\n                                  select: _vm.onDepartmentSelect,\n                                  remove: _vm.onDepartmentRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_departments,\n                                  callback: function ($$v) {\n                                    _vm.selected_departments = $$v\n                                  },\n                                  expression: \"selected_departments\",\n                                },\n                              },\n                              [\n                                !_vm.departments.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"employee.category\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"employee_category_id\",\n                                  id: \"employee_category_id\",\n                                  options: _vm.employee_categories,\n                                  placeholder: _vm.trans(\n                                    \"employee.select_category\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_employee_categories,\n                                },\n                                on: {\n                                  select: _vm.onEmployeeCategorySelect,\n                                  remove: _vm.onEmployeeCategoryRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_employee_categories,\n                                  callback: function ($$v) {\n                                    _vm.selected_employee_categories = $$v\n                                  },\n                                  expression: \"selected_employee_categories\",\n                                },\n                              },\n                              [\n                                !_vm.employee_categories.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"communication.meeting_keyword\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.filter.keyword,\n                                expression: \"filter.keyword\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: { name: \"keyword\" },\n                            domProps: { value: _vm.filter.keyword },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.filter,\n                                  \"keyword\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                        ]),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getMeetings },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _vm.hasPermission(\"create-meeting\")\n            ? _c(\"transition\", { attrs: { name: \"fade\" } }, [\n                _vm.showCreatePanel\n                  ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"card-body\" },\n                        [\n                          _c(\"h4\", { staticClass: \"card-title\" }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"communication.add_new_meeting\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"meeting-form\", {\n                            on: {\n                              completed: _vm.getMeetings,\n                              cancel: function ($event) {\n                                _vm.showCreatePanel = !_vm.showCreatePanel\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.isDemo\n                  ? _c(\"p\", { staticClass: \"alert alert-info m-4\" }, [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\n                            \"communication.demo_mode_meeting_description\"\n                          )\n                        )\n                      ),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _vm.meetings.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"communication.meeting_title\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"communication.meeting_duration\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"communication.meeting_audience\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"communication.meeting_created_by\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"general.created_at\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", { staticClass: \"table-option\" }, [\n                              _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(_vm.meetings.data, function (meeting) {\n                            return _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(meeting.title) +\n                                    \"\\n                                    \"\n                                ),\n                                meeting.is_live\n                                  ? _c(\n                                      \"span\",\n                                      { staticClass: \"badge badge-success\" },\n                                      [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\"communication.live\")\n                                          )\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                meeting.is_expired\n                                  ? _c(\n                                      \"span\",\n                                      { staticClass: \"badge badge-danger\" },\n                                      [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\"communication.expired\")\n                                          )\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(_vm._f(\"moment\")(meeting.date)) +\n                                    \" \"\n                                ),\n                                meeting.start_time\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm._f(\"momentTime\")(\n                                            meeting.start_time\n                                          )\n                                        )\n                                      ),\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                meeting.end_time\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \" \" +\n                                          _vm._s(_vm.trans(\"general.to\")) +\n                                          \" \\n                                    \" +\n                                          _vm._s(\n                                            _vm._f(\"momentTime\")(\n                                              meeting.end_time\n                                            )\n                                          )\n                                      ),\n                                    ])\n                                  : _vm._e(),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"td\",\n                                [\n                                  _c(\"meeting-audience\", {\n                                    attrs: { meeting: meeting },\n                                  }),\n                                ],\n                                1\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.getEmployeeName(meeting.user.employee)\n                                  ) + \" \"\n                                ),\n                                _c(\"br\"),\n                                _vm._v(\n                                  \" \" +\n                                    _vm._s(\n                                      _vm.getEmployeeDesignationOnDate(\n                                        meeting.user.employee,\n                                        meeting.date\n                                      )\n                                    )\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"momentDateTime\")(meeting.created_at)\n                                  )\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", { staticClass: \"table-option\" }, [\n                                _c(\"div\", { staticClass: \"btn-group\" }, [\n                                  _c(\n                                    \"button\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"tooltip\",\n                                          rawName: \"v-tooltip\",\n                                          value: _vm.trans(\n                                            \"general.view_detail\"\n                                          ),\n                                          expression:\n                                            \"trans('general.view_detail')\",\n                                        },\n                                      ],\n                                      staticClass: \"btn btn-success btn-sm\",\n                                      on: {\n                                        click: function ($event) {\n                                          $event.preventDefault()\n                                          return _vm.showMeeting(meeting)\n                                        },\n                                      },\n                                    },\n                                    [\n                                      _c(\"i\", {\n                                        staticClass:\n                                          \"fas fa-arrow-circle-right\",\n                                      }),\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _vm.hasPermission(\"edit-meeting\")\n                                    ? _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"tooltip\",\n                                              rawName: \"v-tooltip\",\n                                              value: _vm.trans(\n                                                \"communication.edit_meeting\"\n                                              ),\n                                              expression:\n                                                \"trans('communication.edit_meeting')\",\n                                            },\n                                          ],\n                                          staticClass: \"btn btn-info btn-sm\",\n                                          on: {\n                                            click: function ($event) {\n                                              $event.preventDefault()\n                                              return _vm.editMeeting(meeting)\n                                            },\n                                          },\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-edit\",\n                                          }),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _vm.hasPermission(\"delete-meeting\")\n                                    ? _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"confirm\",\n                                              rawName: \"v-confirm\",\n                                              value: {\n                                                ok: _vm.confirmDelete(meeting),\n                                              },\n                                              expression:\n                                                \"{ok: confirmDelete(meeting)}\",\n                                            },\n                                            {\n                                              name: \"tooltip\",\n                                              rawName: \"v-tooltip\",\n                                              value: _vm.trans(\n                                                \"communication.delete_meeting\"\n                                              ),\n                                              expression:\n                                                \"trans('communication.delete_meeting')\",\n                                            },\n                                          ],\n                                          key: meeting.id,\n                                          staticClass: \"btn btn-danger btn-sm\",\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-trash\",\n                                          }),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                ]),\n                              ]),\n                            ])\n                          }),\n                          0\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.meetings.total\n                  ? _c(\n                      \"module-info\",\n                      {\n                        attrs: {\n                          module: \"communication\",\n                          title: \"meeting_module_title\",\n                          description: \"meeting_module_description\",\n                          icon: \"list\",\n                        },\n                      },\n                      [\n                        _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                          !_vm.showCreatePanel &&\n                          _vm.hasPermission(\"create-meeting\")\n                            ? _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-info btn-md\",\n                                  on: {\n                                    click: function ($event) {\n                                      _vm.showCreatePanel = !_vm.showCreatePanel\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                  _vm._v(\n                                    \" \" + _vm._s(_vm.trans(\"general.add_new\"))\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.meetings,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getMeetings,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.loading-overlay.is-full-page{\\n    z-index: 1060;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/communication/meeting/form.vue\"],\"names\":[],\"mappings\":\";AA2XA;IACA,aAAA;AACA\",\"sourcesContent\":[\"<template>\\n    <div>\\n        <form @submit.prevent=\\\"proceed\\\" @keydown=\\\"meetingForm.errors.clear($event.target.name)\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-sm-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"\\\">{{trans('communication.meeting_title')}}</label>\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"meetingForm.title\\\" name=\\\"title\\\" :placeholder=\\\"trans('communication.meeting_title')\\\">\\n                        <show-error :form-name=\\\"meetingForm\\\" prop-name=\\\"title\\\"></show-error>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12 col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"\\\">{{trans('communication.meeting_date')}}</label>\\n                                <datepicker v-model=\\\"meetingForm.date\\\" :bootstrapStyling=\\\"true\\\" @selected=\\\"meetingForm.errors.clear('date')\\\" :placeholder=\\\"trans('communication.meeting_date')\\\"></datepicker>\\n                                <show-error :form-name=\\\"meetingForm\\\" prop-name=\\\"date\\\"></show-error>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12 col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"\\\">{{trans('communication.meeting_start_time')}}</label>\\n                                <timepicker :hour.sync=\\\"start_time.hour\\\" :minute.sync=\\\"start_time.minute\\\" :meridiem.sync=\\\"start_time.meridiem\\\"></timepicker>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12 col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"\\\">{{trans('communication.meeting_end_time')}}</label>\\n                                <timepicker :hour.sync=\\\"end_time.hour\\\" :minute.sync=\\\"end_time.minute\\\" :meridiem.sync=\\\"end_time.meridiem\\\"></timepicker>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12 col-sm-6\\\">\\n                            <!-- <div class=\\\"form-group\\\">\\n                                <label class=\\\"custom-control custom-checkbox\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\" v-model=\\\"meetingForm.owner_video_preference\\\">\\n                                    <span class=\\\"custom-control-label\\\"><small>{{trans('communication.owner_video_preference')}}</small></span>\\n                                </label> \\n                            </div> -->\\n                            <div class=\\\"form-group\\\">\\n                                <label class=\\\"custom-control custom-checkbox\\\">\\n                                    <input type=\\\"checkbox\\\" class=\\\"custom-control-input\\\" value=\\\"1\\\" v-model=\\\"meetingForm.audience_video_preference\\\">\\n                                    <span class=\\\"custom-control-label\\\"><small>{{trans('communication.audience_video_preference')}}</small></span>\\n                                </label> \\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12 col-sm-6\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"\\\">{{trans('communication.meeting_audience')}}</label>\\n                                <select v-model=\\\"meetingForm.audience\\\" class=\\\"custom-select col-12\\\" name=\\\"audience\\\" @change=\\\"meetingForm.errors.clear('audience')\\\">\\n                                  <option value=null selected>{{trans('general.select_one')}}</option>\\n                                  <option v-for=\\\"option in audiences\\\" v-bind:value=\\\"option.value\\\">\\n                                    {{ option.text }}\\n                                  </option>\\n                                </select>\\n                                <show-error :form-name=\\\"meetingForm\\\" prop-name=\\\"audience\\\"></show-error>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12 col-sm-6\\\" v-if=\\\"meetingForm.audience == 'selected_course'\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"\\\">{{trans('academic.course')}}</label>\\n                                <v-select label=\\\"name\\\" track-by=\\\"id\\\" v-model=\\\"selected_courses\\\" group-values=\\\"courses\\\" group-label=\\\"course_group\\\" :group-select=\\\"false\\\" name=\\\"course_id\\\" id=\\\"course_id\\\" :options=\\\"courses\\\" :placeholder=\\\"trans('academic.select_course')\\\" @select=\\\"onCourseSelect\\\" :multiple=\\\"true\\\" :close-on-select=\\\"false\\\" :clear-on-select=\\\"false\\\" :hide-selected=\\\"true\\\" @remove=\\\"onCourseRemove\\\" :selected=\\\"selected_courses\\\">\\n                                    <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!courses.length\\\">\\n                                        {{trans('general.no_option_found')}}\\n                                    </div>\\n                                </v-select>\\n                                <show-error :form-name=\\\"meetingForm\\\" prop-name=\\\"course_id\\\"></show-error>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12 col-sm-6\\\" v-if=\\\"meetingForm.audience == 'selected_batch'\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"\\\">{{trans('academic.batch')}}</label>\\n                                <v-select label=\\\"name\\\" track-by=\\\"id\\\" v-model=\\\"selected_batches\\\" group-values=\\\"batches\\\" group-label=\\\"course_group\\\" :group-select=\\\"false\\\" name=\\\"batch_id\\\" id=\\\"batch_id\\\" :options=\\\"batches\\\" :placeholder=\\\"trans('academic.select_batch')\\\" @select=\\\"onBatchSelect\\\" :multiple=\\\"true\\\" :close-on-select=\\\"false\\\" :clear-on-select=\\\"false\\\" :hide-selected=\\\"true\\\" @remove=\\\"onBatchRemove\\\" :selected=\\\"selected_batches\\\">\\n                                    <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!batches.length\\\">\\n                                        {{trans('general.no_option_found')}}\\n                                    </div>\\n                                </v-select>\\n                                <show-error :form-name=\\\"meetingForm\\\" prop-name=\\\"batch_id\\\"></show-error>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12 col-sm-6\\\" v-if=\\\"meetingForm.audience == 'selected_department'\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"\\\">{{trans('employee.department')}}</label>\\n                                <v-select label=\\\"name\\\" track-by=\\\"id\\\" v-model=\\\"selected_departments\\\" name=\\\"department_id\\\" id=\\\"department_id\\\" :options=\\\"departments\\\" :placeholder=\\\"trans('employee.select_department')\\\" @select=\\\"onDepartmentSelect\\\" :multiple=\\\"true\\\" :close-on-select=\\\"false\\\" :clear-on-select=\\\"false\\\" :hide-selected=\\\"true\\\" @remove=\\\"onDepartmentRemove\\\" :selected=\\\"selected_departments\\\">\\n                                    <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!departments.length\\\">\\n                                        {{trans('general.no_option_found')}}\\n                                    </div>\\n                                </v-select>\\n                                <show-error :form-name=\\\"meetingForm\\\" prop-name=\\\"department_id\\\"></show-error>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12 col-sm-6\\\" v-if=\\\"meetingForm.audience == 'selected_employee_category'\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"\\\">{{trans('employee.category')}}</label>\\n                                <v-select label=\\\"name\\\" track-by=\\\"id\\\" v-model=\\\"selected_employee_categories\\\" name=\\\"employee_category_id\\\" id=\\\"employee_category_id\\\" :options=\\\"employee_categories\\\" :placeholder=\\\"trans('employee.select_category')\\\" @select=\\\"onEmployeeCategorySelect\\\" :multiple=\\\"true\\\" :close-on-select=\\\"false\\\" :clear-on-select=\\\"false\\\" :hide-selected=\\\"true\\\" @remove=\\\"onEmployeeCategoryRemove\\\" :selected=\\\"selected_employee_categories\\\">\\n                                    <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!employee_categories.length\\\">\\n                                        {{trans('general.no_option_found')}}\\n                                    </div>\\n                                </v-select>\\n                                <show-error :form-name=\\\"meetingForm\\\" prop-name=\\\"employee_category_id\\\"></show-error>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12\\\" v-if=\\\"! uuid\\\">\\n                            <user-search @searched=\\\"addToSearchResult\\\"></user-search>\\n\\n                            <div class=\\\"form-group\\\">\\n                                <ul class=\\\"font-80pc\\\">\\n                                    <li v-for=\\\"result in searchResults\\\" :key=\\\"result.key\\\">\\n                                        {{result.name+' '+result.description_1}} <span class=\\\"text-right text-danger\\\" @click=\\\"deleteResult(result)\\\"><i class=\\\"fas fa-times-circle\\\"></i></span>\\n                                        <span class=\\\"d-block\\\">{{result.description_2}} {{result.contact_number}}</span>\\n                                    </li>\\n                                </ul>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <file-upload-input :button-text=\\\"trans('general.upload_document')\\\" :token=\\\"meetingForm.upload_token\\\" module=\\\"meeting\\\" :clear-file=\\\"clearAttachment\\\" :module-id=\\\"module_id\\\"></file-upload-input>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-12 col-sm-6\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <html-editor name=\\\"description\\\" :model.sync=\\\"meetingForm.description\\\" height=\\\"300\\\" :isUpdate=\\\"uuid ? true : false\\\" @clearErrors=\\\"meetingForm.errors.clear('description')\\\"></html-editor>\\n                        <show-error :form-name=\\\"meetingForm\\\" prop-name=\\\"description\\\"></show-error>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"card-footer text-right\\\">\\n                <router-link to=\\\"/communication/meeting\\\" class=\\\"btn btn-danger waves-effect waves-light \\\" v-show=\\\"uuid\\\">{{trans('general.cancel')}}</router-link>\\n                <button v-if=\\\"!uuid\\\" type=\\\"button\\\" class=\\\"btn btn-danger waves-effect waves-light \\\" @click=\\\"$emit('cancel')\\\">{{trans('general.cancel')}}</button>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-info waves-effect waves-light\\\">\\n                    <span v-if=\\\"uuid\\\">{{trans('general.update')}}</span>\\n                    <span v-else>{{trans('general.save')}}</span>\\n                </button>\\n            </div>\\n        </form>\\n    </div>\\n</template>\\n\\n\\n<script>\\n    import userSearch from \\\"@components/user-search\\\"\\n\\n    export default {\\n        components: {userSearch},\\n        data() {\\n            return {\\n                meetingForm: new Form({\\n                    title: '',\\n                    date: '',\\n                    start_time: '',\\n                    end_time: '',\\n                    owner_video_preference: 0,\\n                    audience_video_preference: 0,\\n                    audience: null,\\n                    course_id: [],\\n                    batch_id: [],\\n                    department_id: [],\\n                    employee_category_id: [],\\n                    description: '',\\n                    upload_token: '',\\n                    individual_students: [],\\n                    individual_employees: []\\n                }),\\n                start_time: {\\n                    hour: '',\\n                    minute: '',\\n                    meridiem: 'am'\\n                },\\n                end_time: {\\n                    hour: '',\\n                    minute: '',\\n                    meridiem: 'am'\\n                },\\n                audiences: [],\\n                courses: [],\\n                selected_courses: null,\\n                batches: [],\\n                selected_batches: null,\\n                departments: [],\\n                selected_departments: null,\\n                employee_categories: [],\\n                selected_employee_categories: null,\\n                module_id: '',\\n                clearAttachment: true,\\n                searchResults: []\\n            };\\n        },\\n        props: ['uuid'],\\n        mounted() {\\n            if(!helper.hasPermission('create-meeting') && !helper.hasPermission('edit-meeting')){\\n                helper.notAccessibleMsg();\\n                this.$router.push('/dashboard');\\n            }\\n\\n            this.getPreRequisite();\\n        },\\n        methods: {\\n            hasPermission(permission){\\n                return helper.hasPermission(permission);\\n            },\\n            getPreRequisite(){\\n                let loader = this.$loading.show();\\n                axios.get('/api/meeting/pre-requisite')\\n                    .then(response => {\\n                        this.audiences = response.audiences;\\n                        this.courses = response.courses;\\n                        this.batches = response.batches;\\n                        this.departments = response.departments;\\n                        this.employee_categories = response.employee_categories;\\n                        \\n                        if(this.uuid)\\n                            this.get();\\n                        else\\n                            this.meetingForm.upload_token = this.$uuid.v4();\\n\\n                        loader.hide();\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                    })\\n            },\\n            proceed(){\\n                if(this.uuid)\\n                    this.update();\\n                else\\n                    this.store();\\n            },\\n            store(){\\n                this.meetingForm.individual_students = [];\\n                this.meetingForm.individual_employees = [];\\n                this.searchResults.forEach(result => {\\n                    if (result.type === 'student') {\\n                        this.meetingForm.individual_students.push(result.id)\\n                    } else {\\n                        this.meetingForm.individual_employees.push(result.id)\\n                    }\\n                })\\n                this.meetingForm.start_time = helper.toTime(this.start_time);\\n                this.meetingForm.end_time   = helper.toTime(this.end_time);\\n                let loader = this.$loading.show();\\n                this.meetingForm.post('/api/meeting')\\n                    .then(response => {\\n                        toastr.success(response.message);\\n                        this.clearAttachment = !this.clearAttachment;\\n                        this.meetingForm.upload_token = this.$uuid.v4();\\n                        this.selected_courses = null;\\n                        this.selected_batches = null;\\n                        this.selected_departments = null;\\n                        this.selected_employee_categories = null;\\n                        this.meetingForm.individual_students = [];\\n                        this.meetingForm.individual_employees = [];\\n                        this.searchResults = [];\\n                        this.$emit('completed');\\n                        loader.hide();\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                    });\\n            },\\n            get(){\\n                let loader = this.$loading.show();\\n                axios.get('/api/meeting/'+this.uuid)\\n                    .then(response => {\\n\\n                        if (! response.is_editable) {\\n                            toastr.error(i18n.user.permission_denied);\\n                            loader.hide();\\n                            this.$router.push('/communication/meeting');\\n                        }\\n\\n                        this.meetingForm.title = response.meeting.title;\\n                        this.meetingForm.date = response.meeting.date;\\n                        this.meetingForm.end_date = response.meeting.end_date;\\n                        this.meetingForm.description = response.meeting.description;\\n                        this.meetingForm.audience = response.meeting.audience;\\n                        this.selected_courses = response.meeting.audience == 'selected_course' ? response.selected_audience : [];\\n                        this.meetingForm.course_id = response.meeting.audience == 'selected_course' ? this.setMultiSelect(response.selected_audience) : [];\\n                        this.selected_batches = response.meeting.audience == 'selected_batch' ? response.selected_audience : [];\\n                        this.meetingForm.batch_id = response.meeting.audience == 'selected_batch' ? this.setMultiSelect(response.selected_audience) : [];\\n                        this.selected_departments = response.meeting.audience == 'selected_department' ? response.selected_audience : [];\\n                        this.meetingForm.department_id = response.meeting.audience == 'selected_department' ? this.setMultiSelect(response.selected_audience) : [];\\n                        this.selected_employee_categories = response.meeting.audience == 'selected_employee_category' ? response.selected_audience : [];\\n                        this.meetingForm.employee_category_id = response.meeting.audience == 'selected_employee_category' ? this.setMultiSelect(response.selected_audience) : [];\\n                        this.start_time = response.start_time;\\n                        this.end_time = response.end_time;\\n                        this.meetingForm.upload_token = response.meeting.upload_token;\\n                        this.module_id = response.meeting.id;\\n                        this.meetingForm.owner_video_preference = response.meeting.owner_video_preference;\\n                        this.meetingForm.audience_video_preference = response.meeting.audience_video_preference;\\n                        \\n                        loader.hide();\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                        this.$router.push('/communication/meeting');\\n                    });\\n            },\\n            update(){\\n                this.meetingForm.individual_students = [];\\n                this.meetingForm.individual_employees = [];\\n                this.searchResults.forEach(result => {\\n                    if (result.type === 'student') {\\n                        this.meetingForm.individual_students.push(result.id)\\n                    } else {\\n                        this.meetingForm.individual_employees.push(result.id)\\n                    }\\n                })\\n                this.meetingForm.start_time = helper.toTime(this.start_time);\\n                this.meetingForm.end_time   = helper.toTime(this.end_time);\\n                let loader = this.$loading.show();\\n                this.meetingForm.patch('/api/meeting/'+this.uuid)\\n                    .then(response => {\\n                        toastr.success(response.message);\\n                        loader.hide();\\n                        this.$router.push('/communication/meeting');\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                    });\\n            },\\n            onCourseSelect(selectedOption){\\n                this.meetingForm.errors.clear('course_id');\\n                this.meetingForm.course_id.push(selectedOption.id);\\n            },\\n            onCourseRemove(removedOption){\\n                this.meetingForm.course_id.splice(this.meetingForm.course_id.indexOf(removedOption.id), 1);\\n            },\\n            onBatchSelect(selectedOption){\\n                this.meetingForm.errors.clear('batch_id');\\n                this.meetingForm.batch_id.push(selectedOption.id);\\n            },\\n            onBatchRemove(removedOption){\\n                this.meetingForm.batch_id.splice(this.meetingForm.batch_id.indexOf(removedOption.id), 1);\\n            },\\n            onDepartmentSelect(selectedOption){\\n                this.meetingForm.errors.clear('department_id');\\n                this.meetingForm.department_id.push(selectedOption.id);\\n            },\\n            onDepartmentRemove(removedOption){\\n                this.meetingForm.department_id.splice(this.meetingForm.department_id.indexOf(removedOption.id), 1);\\n            },\\n            onEmployeeCategorySelect(selectedOption){\\n                this.meetingForm.errors.clear('employee_category_id');\\n                this.meetingForm.employee_category_id.push(selectedOption.id);\\n            },\\n            onEmployeeCategoryRemove(removedOption){\\n                this.meetingForm.employee_category_id.splice(this.meetingForm.employee_category_id.indexOf(removedOption.id), 1);\\n            },\\n            setMultiSelect(options) {\\n                let data = [];\\n                options.forEach(option => {\\n                    data.push(option.id);\\n                })\\n\\n                return data;\\n            },\\n            addToSearchResult(result) {\\n                let existing_result = this.searchResults.findIndex(o => o.type === result.type && o.id === result.id)\\n\\n                if (existing_result < 0) {\\n                    this.searchResults.push(result)\\n                }\\n            },\\n            deleteResult(result) {\\n                let idx = this.searchResults.findIndex(o => o.type === result.type && o.id === result.id)\\n                this.searchResults.splice(idx, 1);\\n            }\\n        }\\n    }\\n</script>\\n\\n<style>\\n.loading-overlay.is-full-page{\\n    z-index: 1060;\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".topbar .top-navbar .app-search input[data-v-369957ef] {\\n  background: rgba(0, 20, 40, 0.1);\\n  color: #f1f2f4;\\n  border: 1px solid rgba(0, 20, 40, 0.1);\\n  border-radius: 2px;\\n  width: 240px;\\n}\\n.topbar .top-navbar .app-search input[data-v-369957ef]::-moz-placeholder {\\n  color: rgba(255, 255, 255, 0.4);\\n}\\n.topbar .top-navbar .app-search input[data-v-369957ef]::placeholder {\\n  color: rgba(255, 255, 255, 0.4);\\n}\\n.topbar .top-navbar .app-search input[data-v-369957ef]:focus {\\n  background: rgba(0, 20, 40, 0.2);\\n  color: #ffffff;\\n  border: 1px solid rgba(0, 20, 40, 0.2);\\n}\\nul.autocomplete-results[data-v-369957ef] {\\n  padding: 0;\\n  margin: 0;\\n  max-height: 350px;\\n  overflow: auto;\\n  position: absolute;\\n  width: 100%;\\n  background: #ffffff;\\n  border: 1px solid #d1d2d5;\\n  border-top: none;\\n  box-shadow: 0 2px 10px rgba(0, 20, 40, 0.2);\\n  border-radius: 0 0 6px 6px;\\n  z-index: 999999;\\n}\\nul.autocomplete-results li.autocomplete-heading[data-v-369957ef] {\\n  font-size: 16px;\\n  padding: 8px;\\n  letter-spacing: 0.2px;\\n  color: rgba(0, 20, 40, 0.4);\\n  border-bottom: 1px solid rgba(0, 20, 40, 0.2);\\n}\\nul.autocomplete-results li.autocomplete-no-result[data-v-369957ef] {\\n  font-size: 12px;\\n  padding: 8px;\\n  letter-spacing: 0.2px;\\n  color: rgba(0, 20, 40, 0.4);\\n  border-bottom: 1px solid rgba(0, 20, 40, 0.2);\\n}\\nul.autocomplete-results > li.autocomplete-result[data-v-369957ef] {\\n  display: flex;\\n  list-style: none;\\n  text-align: left;\\n  width: 100%;\\n}\\nul.autocomplete-results > li.autocomplete-result .item-info[data-v-369957ef] {\\n  margin: 0;\\n  flex-grow: 2;\\n  padding: 5px 8px;\\n}\\nul.autocomplete-results > li.autocomplete-result .item-info .item-heading[data-v-369957ef] {\\n  font-size: 13px;\\n  margin-bottom: 0;\\n}\\nul.autocomplete-results > li.autocomplete-result .item-info .item-meta[data-v-369957ef] {\\n  font-size: 11px;\\n}\\nul.autocomplete-results > li.autocomplete-result[data-v-369957ef]:nth-child(even) {\\n  background: rgba(210, 215, 220, 0.2);\\n}\\nul.autocomplete-results > li.autocomplete-result + li.autocomplete-result[data-v-369957ef] {\\n  border-top: 1px solid rgba(0, 20, 40, 0.1);\\n}\\nul.autocomplete-results > li.autocomplete-result[data-v-369957ef]:hover {\\n  background: rgba(200, 205, 215, 0.5);\\n  color: rgba(0, 20, 40, 0.8);\\n}\\nul.autocomplete-results > li.autocomplete-result:hover .item-heading[data-v-369957ef], ul.autocomplete-results > li.autocomplete-result:hover .item-meta[data-v-369957ef] {\\n  color: inherit;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/components/user-search.vue\"],\"names\":[],\"mappings\":\"AACA;EACI,gCAAA;EACA,cAAA;EACA,sCAAA;EACA,kBAAA;EACA,YAAA;AAAJ;AAEA;EACI,+BAAA;AACJ;AAFA;EACI,+BAAA;AACJ;AACA;EACI,gCAAA;EACA,cAAA;EACA,sCAAA;AAEJ;AACA;EACI,UAAA;EACA,SAAA;EACA,iBAAA;EACA,cAAA;EACA,kBAAA;EACA,WAAA;EACA,mBAAA;EACA,yBAAA;EACA,gBAAA;EACA,2CAAA;EACA,0BAAA;EACA,eAAA;AAEJ;AAAI;EACI,eAAA;EACA,YAAA;EACA,qBAAA;EACA,2BAAA;EACA,6CAAA;AAER;AAAI;EACI,eAAA;EACA,YAAA;EACA,qBAAA;EACA,2BAAA;EACA,6CAAA;AAER;AACA;EACI,aAAA;EACA,gBAAA;EACA,gBAAA;EACA,WAAA;AAEJ;AAAI;EACI,SAAA;EACA,YAAA;EACA,gBAAA;AAER;AAAQ;EACI,eAAA;EACA,gBAAA;AAEZ;AACQ;EACI,eAAA;AACZ;AAGA;EACI,oCAAA;AAAJ;AAEA;EACI,0CAAA;AACJ;AACA;EACI,oCAAA;EACA,2BAAA;AAEJ;AAAI;EACI,cAAA;AAER\",\"sourcesContent\":[\"\\n.topbar .top-navbar .app-search input {\\n    background: rgba(0,20,40,0.1);\\n    color: #f1f2f4;\\n    border: 1px solid rgba(0,20,40,0.1);\\n    border-radius: 2px;\\n    width: 240px;\\n}\\n.topbar .top-navbar .app-search input::placeholder {\\n    color: rgba(255,255,255,0.4);\\n}\\n.topbar .top-navbar .app-search input:focus {\\n    background: rgba(0,20,40,0.2);\\n    color: #ffffff;\\n    border: 1px solid rgba(0,20,40,0.2);\\n}\\n\\nul.autocomplete-results {\\n    padding: 0;\\n    margin: 0;\\n    max-height: 350px;\\n    overflow: auto;\\n    position: absolute;\\n    width: 100%;\\n    background: #ffffff;\\n    border: 1px solid #d1d2d5;\\n    border-top: none;\\n    box-shadow: 0 2px 10px rgba(0,20,40,0.2);\\n    border-radius: 0 0 6px 6px;\\n    z-index: 999999;\\n\\n    li.autocomplete-heading {\\n        font-size: 16px;\\n        padding: 8px;\\n        letter-spacing: 0.2px;\\n        color: rgba(0,20,40,0.4);\\n        border-bottom: 1px solid rgba(0,20,40,0.2);\\n    }\\n    li.autocomplete-no-result {\\n        font-size: 12px;\\n        padding: 8px;\\n        letter-spacing: 0.2px;\\n        color: rgba(0,20,40,0.4);\\n        border-bottom: 1px solid rgba(0,20,40,0.2);\\n    }\\n}\\nul.autocomplete-results > li.autocomplete-result {\\n    display: flex;\\n    list-style: none;\\n    text-align: left;\\n    width: 100%;\\n\\n    .item-info {\\n        margin: 0;\\n        flex-grow: 2;\\n        padding: 5px 8px;\\n\\n        .item-heading {\\n            font-size: 13px;\\n            margin-bottom: 0;\\n        }\\n\\n        .item-meta {\\n            font-size: 11px;\\n        }\\n    }\\n}\\nul.autocomplete-results > li.autocomplete-result:nth-child(even) {\\n    background: rgba(210,215,220,0.2);\\n}\\nul.autocomplete-results > li.autocomplete-result + li.autocomplete-result {\\n    border-top: 1px solid rgba(0,20,40,0.1);\\n}\\nul.autocomplete-results > li.autocomplete-result:hover {\\n    background: rgba(200,205,215,0.5);\\n    color: rgba(0,20,40,0.8);\\n\\n    .item-heading, .item-meta {\\n        color: inherit;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&id=072b1170&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19.use[1]!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19.use[2]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19.use[3]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./user-search.vue?vue&type=style&index=0&id=369957ef&lang=scss&scoped=true&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./user-search.vue?vue&type=template&id=369957ef&scoped=true&\"\nimport script from \"./user-search.vue?vue&type=script&lang=js&\"\nexport * from \"./user-search.vue?vue&type=script&lang=js&\"\nimport style0 from \"./user-search.vue?vue&type=style&index=0&id=369957ef&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"369957ef\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('369957ef')) {\n      api.createRecord('369957ef', component.options)\n    } else {\n      api.reload('369957ef', component.options)\n    }\n    module.hot.accept(\"./user-search.vue?vue&type=template&id=369957ef&scoped=true&\", function () {\n      api.rerender('369957ef', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/components/user-search.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./audience.vue?vue&type=template&id=b67db6a0&\"\nimport script from \"./audience.vue?vue&type=script&lang=js&\"\nexport * from \"./audience.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('b67db6a0')) {\n      api.createRecord('b67db6a0', component.options)\n    } else {\n      api.reload('b67db6a0', component.options)\n    }\n    module.hot.accept(\"./audience.vue?vue&type=template&id=b67db6a0&\", function () {\n      api.rerender('b67db6a0', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/communication/meeting/audience.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=072b1170&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\nimport style0 from \"./form.vue?vue&type=style&index=0&id=072b1170&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('072b1170')) {\n      api.createRecord('072b1170', component.options)\n    } else {\n      api.reload('072b1170', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=072b1170&\", function () {\n      api.rerender('072b1170', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/communication/meeting/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=44d750d6&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('44d750d6')) {\n      api.createRecord('44d750d6', component.options)\n    } else {\n      api.reload('44d750d6', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=44d750d6&\", function () {\n      api.rerender('44d750d6', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/communication/meeting/index.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./user-search.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./user-search.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./audience.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./audience.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./audience.vue?vue&type=template&id=b67db6a0&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=072b1170&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=44d750d6&\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&id=072b1170&lang=css&\""],"names":[],"sourceRoot":""}