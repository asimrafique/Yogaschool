{"version":3,"file":"js/chunks/js/communication/index.js?id=b6010acace6efd50","mappings":";;;;;;;;;;;;;;AAyzqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAMA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AASA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAqCA;AAAA;AAWA;AAYA;AACA;AACA;AACA;AA+BA;AACA;AACA;AACA;AACA;AACA;AAIA;AAWA;AAoBA;AACA;AACA;AACA;AACA;AACA;AAIA;AAUA;AAoBA;AACA;AACA;AACA;AACA;AACA;AAIA;AAKA;AAoBA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAcA;AACA;AACA;AACA;AACA;AACA;AAQA;AAIA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAQA;AAIA;AA+CA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAUA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AAOA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAeA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAKA;AAAA;AAeA;AAAA;AAEA;AAUA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;ACzsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClBA","sources":["webpack://InstiKit/resources/js/views/communication/index.vue","webpack://InstiKit/./resources/js/views/communication/index.vue","webpack://InstiKit/./resources/js/views/communication/index.vue?50dc","webpack://InstiKit/./resources/js/views/communication/show.vue","webpack://InstiKit/./resources/js/views/communication/index.vue?f07f","webpack://InstiKit/./resources/js/views/communication/index.vue?b807"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('communication.communication_history')}} \r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"communications.total\">{{trans('general.total_result_found',{count : communications.total, from: communications.from, to: communications.to})}}</span>\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\r\n                    </h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\r\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\r\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\r\n                            </button>\r\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\r\n                            </div>\r\n                        </div>\r\n                        <help-button @clicked=\"help_topic = 'communication'\"></help-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <transition name=\"fade\">\r\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('general.filter')}}\r\n                        </h4>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-2\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('communication.type')}}</label>\r\n                                    <select v-model=\"filter.type\" class=\"custom-select col-12\">\r\n                                      <option value=\"\" selected>{{trans('general.select_one')}}</option>\r\n                                      <option v-for=\"type in types\" v-bind:value=\"type.value\">\r\n                                        {{ type.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('academic.course')}}</label>\r\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_courses\" group-values=\"courses\" group-label=\"course_group\" :group-select=\"false\" name=\"course_id\" id=\"course_id\" :options=\"courses\" :placeholder=\"trans('academic.select_course')\" @select=\"onCourseSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onCourseRemove\" :selected=\"selected_courses\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!courses.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('academic.batch')}}</label>\r\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_batches\" group-values=\"batches\" group-label=\"course_group\" :group-select=\"false\" name=\"batch_id\" id=\"batch_id\" :options=\"batches\" :placeholder=\"trans('academic.select_batch')\" @select=\"onBatchSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onBatchRemove\" :selected=\"selected_batches\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!batches.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('employee.department')}}</label>\r\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_departments\" name=\"department_id\" id=\"department_id\" :options=\"departments\" :placeholder=\"trans('employee.select_department')\" @select=\"onDepartmentSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onDepartmentRemove\" :selected=\"selected_departments\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!departments.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('employee.category')}}</label>\r\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_employee_categories\" name=\"employee_category_id\" id=\"employee_category_id\" :options=\"employee_categories\" :placeholder=\"trans('employee.select_category')\" @select=\"onEmployeeCategorySelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onEmployeeCategoryRemove\" :selected=\"selected_employee_categories\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employee_categories.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('communication.subject')}}</label>\r\n                                    <input class=\"form-control\" name=\"subject\" v-model=\"filter.subject\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <date-range-picker :start-date.sync=\"filter.start_date\" :end-date.sync=\"filter.end_date\" :label=\"trans('general.date_between')\"></date-range-picker>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"card-footer text-right\">\r\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\r\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getCommunications\">{{trans('general.filter')}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\" v-if=\"communications.total\">\r\n                        <table class=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{{trans('communication.type')}}</th>\r\n                                    <th>{{trans('communication.subject')}}</th>\r\n                                    <th>{{trans('communication.audience')}}</th>\r\n                                    <th>{{trans('communication.recipient_count')}}</th>\r\n                                    <th>{{trans('communication.sent_by')}}</th>\r\n                                    <th>{{trans('general.created_at')}}</th>\r\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"communication in communications.data\">\r\n                                    <td>{{trans('communication.'+communication.type)}}</td>\r\n                                    <td v-text=\"communication.subject\"></td>\r\n                                    <td>\r\n                                        <span v-if=\"communication.audience == 'everyone'\">{{trans('communication.communication_for_everyone')}}</span>\r\n                                        <template v-if=\"communication.audience == 'selected_course'\">\r\n                                            {{trans('academic.course')}} <br />\r\n                                            <ul style=\"list-style:none;padding:0;margin:0;\">\r\n                                                <li v-for=\"course in communication.courses\">{{course.name+'('+course.course_group.name+')'}}</li>\r\n                                            </ul>\r\n                                        </template>\r\n                                        <template v-else-if=\"communication.audience == 'selected_batch'\">\r\n                                            {{trans('academic.batch')}} <br />\r\n                                            <ul style=\"list-style:none;padding:0;margin:0;\">\r\n                                                <li v-for=\"batch in communication.batches\">{{batch.name+'('+batch.course.name+')'}}</li>\r\n                                            </ul>\r\n                                        </template>\r\n                                        <template v-else-if=\"communication.audience == 'selected_department'\">\r\n                                            {{trans('employee.department')}} <br />\r\n                                            <ul style=\"list-style:none;padding:0;margin:0;\">\r\n                                                <li v-for=\"department in communication.departments\">{{department.name}}</li>\r\n                                            </ul>\r\n                                        </template>\r\n                                        <template v-else-if=\"communication.audience == 'selected_employee_category'\">\r\n                                            {{trans('employee.category')}} <br />\r\n                                            <ul style=\"list-style:none;padding:0;margin:0;\">\r\n                                                <li v-for=\"employee_category in communication.employee_categorys\">{{employee_category.name}}</li>\r\n                                            </ul>\r\n                                        </template>\r\n                                        <template v-if=\"communication.options.individual_students && communication.options.individual_students.length\">\r\n                                            <ul style=\"list-style:none;padding:0;margin:0;\">\r\n                                                <li>{{trans('communication.count_individual_students', {attribute: communication.options.individual_students.length})}}</li>\r\n                                            </ul>\r\n                                        </template>\r\n                                        <template v-if=\"communication.options.individual_employees && communication.options.individual_employees.length\">\r\n                                            <ul style=\"list-style:none;padding:0;margin:0;\">\r\n                                                <li>{{trans('communication.count_individual_employees', {attribute: communication.options.individual_employees.length})}}</li>\r\n                                            </ul>\r\n                                        </template>\r\n                                    </td>\r\n                                    <td>{{communication.recipient_count}}</td>\r\n                                    <td>{{getEmployeeName(communication.user.employee)}} <br > {{getEmployeeDesignationOnDate(communication.user.employee, communication.start_date)}}</td>\r\n                                    <td>{{communication.created_at | momentDateTime}}</td>\r\n                                    <td class=\"table-option\">\r\n                                        <div class=\"btn-group\">\r\n                                            <button class=\"btn btn-success btn-sm\" v-tooltip=\"trans('general.view_detail')\" @click.prevent=\"showAction(communication)\"><i class=\"fas fa-arrow-circle-right\"></i></button>\r\n                                            <button class=\"btn btn-danger btn-sm\" v-if=\"hasPermission('delete-communication-history')\" :key=\"communication.id\" v-confirm=\"{ok: confirmDelete(communication)}\" v-tooltip=\"trans('general.delete')\"><i class=\"fas fa-trash\"></i></button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <module-info v-if=\"!communications.total\" module=\"communication\" title=\"communication_module_title\" description=\"communication_module_description\" icon=\"list\">\r\n                        <div slot=\"btn\">\r\n                            <button class=\"btn btn-info btn-md\" v-if=\"hasPermission('send-sms')\" @click=\"$router.push('/communication/sms')\"><i class=\"fas fa-paper-plan\"></i> {{trans('communication.send_sms')}}</button>\r\n                            <button class=\"btn btn-info btn-md\" v-if=\"hasPermission('send-email')\" @click=\"$router.push('/communication/email')\"><i class=\"fas fa-envelop\"></i> {{trans('communication.send_email')}}</button>\r\n                        </div>\r\n                    </module-info>\r\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"communications\" @updateRecords=\"getCommunications\"></pagination-record>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <transition name=\"modal\" v-if=\"showModal\">\r\n            <div class=\"modal-mask\">\r\n                <div class=\"modal-wrapper\">\r\n                    <div class=\"modal-container modal-lg\">\r\n                        <div class=\"modal-header\">\r\n                            <slot name=\"header\">\r\n                                {{communication.subject}}\r\n                                <span class=\"float-right pointer\" @click=\"showModal = false\">x</span>\r\n                            </slot>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <slot name=\"body\">\r\n                                <div class=\"m-t-20\" v-html=\"communication.body\"></div>\r\n                                <hr />\r\n                                <p>\r\n                                    <i class=\"far fa-clock\"></i> <small>{{trans('general.created_at')}} {{communication.created_at | momentDateTime}}</small>\r\n                                    <!-- <span class=\"pull-right\">\r\n                                        <i class=\"far fa-clock\"></i> <small>{{trans('general.updated_at')}} {{communication.updated_at | momentDateTime}}</small>\r\n                                    </span> -->\r\n                                </p>\r\n                                <div class=\"clearfix\"></div>\r\n                            </slot>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </transition>\r\n\r\n        <right-panel :topic=\"help_topic\"></right-panel>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import communicationDetail from './show'\r\n\r\n    export default {\r\n        components : { communicationDetail},\r\n        data() {\r\n            return {\r\n                communications: {\r\n                    total: 0,\r\n                    data: []\r\n                },\r\n                filter: {\r\n                    sort_by : 'created_at',\r\n                    order: 'desc',\r\n                    subject: '',\r\n                    type: '',\r\n                    course_id: [],\r\n                    batch_id: [],\r\n                    department_id: [],\r\n                    employee_category_id: [],\r\n                    start_date: '',\r\n                    end_date: '',\r\n                    page_length: helper.getConfig('page_length')\r\n                },\r\n                orderByOptions: [\r\n                    {\r\n                        value: 'created_at',\r\n                        translation: i18n.general.created_at\r\n                    },\r\n                    {\r\n                        value: 'subject',\r\n                        translation: i18n.communication.subject\r\n                    }\r\n                ],\r\n                types: [],\r\n                courses: [],\r\n                selected_courses: null,\r\n                batches: [],\r\n                selected_batches: null,\r\n                departments: [],\r\n                selected_departments: null,\r\n                employee_categories: [],\r\n                selected_employee_categories: null,\r\n                showFilterPanel: false,\r\n                help_topic: '',\r\n                communication: {},\r\n                showModal: false\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.hasAnyPermission(['send-sms', 'send-email'])){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.getCommunications();\r\n            helper.showDemoNotification(['communication']);\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            hasAnyPermission(permissions){\r\n                return helper.hasAnyPermission(permissions);\r\n            },\r\n            showAction(communication){\r\n                this.communication = communication;\r\n                this.showModal = true;\r\n            },\r\n            getEmployeeName(employee){\r\n                return helper.getEmployeeName(employee);\r\n            },\r\n            getEmployeeDesignationOnDate(employee, date){\r\n                return helper.getEmployeeDesignationOnDate(employee, date);\r\n            },\r\n            getCommunications(page){\r\n                let loader = this.$loading.show();\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                this.filter.start_date = helper.toDate(this.filter.start_date);\r\n                this.filter.end_date = helper.toDate(this.filter.end_date);\r\n                let url = helper.getFilterURL(this.filter);\r\n                axios.get('/api/communication?page=' + page + url)\r\n                    .then(response => {\r\n                        this.communications = response.communications;\r\n                        this.courses = response.filters.courses;\r\n                        this.batches = response.filters.batches;\r\n                        this.departments = response.filters.departments;\r\n                        this.employee_categories = response.filters.employee_categories;\r\n                        this.types = response.filters.types;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            confirmDelete(communication){\r\n                return dialog => this.deleteCommunication(communication);\r\n            },\r\n            deleteCommunication(communication){\r\n                let loader = this.$loading.show();\r\n                axios.delete('/api/communication/'+communication.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getCommunications();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getConfig(config) {\r\n                return helper.getConfig(config)\r\n            },\r\n            print(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/communication/print',{filter: this.filter})\r\n                    .then(response => {\r\n                        let print = window.open(\"/print\");\r\n                        loader.hide();\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            pdf(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/communication/pdf',{filter: this.filter})\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        window.open('/download/report/'+response+'?token='+this.authToken);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onCourseSelect(selectedOption){\r\n                this.filter.course_id.push(selectedOption.id);\r\n            },\r\n            onCourseRemove(removedOption){\r\n                this.filter.course_id.splice(this.filter.course_id.indexOf(removedOption.id), 1);\r\n            },\r\n            onBatchSelect(selectedOption){\r\n                this.filter.batch_id.push(selectedOption.id);\r\n            },\r\n            onBatchRemove(removedOption){\r\n                this.filter.batch_id.splice(this.filter.batch_id.indexOf(removedOption.id), 1);\r\n            },\r\n            onDepartmentSelect(selectedOption){\r\n                this.filter.department_id.push(selectedOption.id);\r\n            },\r\n            onDepartmentRemove(removedOption){\r\n                this.filter.department_id.splice(this.filter.department_id.indexOf(removedOption.id), 1);\r\n            },\r\n            onEmployeeCategorySelect(selectedOption){\r\n                this.filter.employee_category_id.push(selectedOption.id);\r\n            },\r\n            onEmployeeCategoryRemove(removedOption){\r\n                this.filter.employee_category_id.splice(this.filter.employee_category_id.indexOf(removedOption.id), 1);\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          },\r\n          momentTime(time) {\r\n            return helper.formatTime(time);\r\n          }\r\n        },\r\n        watch: {\r\n            'filter.sort_by': function(val){\r\n                this.getCommunications();\r\n            },\r\n            'filter.order': function(val){\r\n                this.getCommunications();\r\n            },\r\n            'filter.page_length': function(val){\r\n                this.getCommunications();\r\n            }\r\n        },\r\n        computed: {\r\n            authToken(){\r\n                return helper.getAuthToken();\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"communication.communication_history\")) +\n                  \" \\n                    \"\n              ),\n              _vm.communications.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.communications.total,\n                            from: _vm.communications.from,\n                            to: _vm.communications.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"communication\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"general.filter\")) +\n                          \"\\n                    \"\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"communication.type\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.filter.type,\n                                  expression: \"filter.type\",\n                                },\n                              ],\n                              staticClass: \"custom-select col-12\",\n                              on: {\n                                change: function ($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function (o) {\n                                      return o.selected\n                                    })\n                                    .map(function (o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.filter,\n                                    \"type\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _c(\n                                \"option\",\n                                { attrs: { value: \"\", selected: \"\" } },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"general.select_one\"))\n                                  ),\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.types, function (type) {\n                                return _c(\n                                  \"option\",\n                                  { domProps: { value: type.value } },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                    \" +\n                                        _vm._s(type.text) +\n                                        \"\\n                                  \"\n                                    ),\n                                  ]\n                                )\n                              }),\n                            ],\n                            2\n                          ),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  \"group-values\": \"courses\",\n                                  \"group-label\": \"course_group\",\n                                  \"group-select\": false,\n                                  name: \"course_id\",\n                                  id: \"course_id\",\n                                  options: _vm.courses,\n                                  placeholder: _vm.trans(\n                                    \"academic.select_course\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_courses,\n                                },\n                                on: {\n                                  select: _vm.onCourseSelect,\n                                  remove: _vm.onCourseRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_courses,\n                                  callback: function ($$v) {\n                                    _vm.selected_courses = $$v\n                                  },\n                                  expression: \"selected_courses\",\n                                },\n                              },\n                              [\n                                !_vm.courses.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"academic.batch\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  \"group-values\": \"batches\",\n                                  \"group-label\": \"course_group\",\n                                  \"group-select\": false,\n                                  name: \"batch_id\",\n                                  id: \"batch_id\",\n                                  options: _vm.batches,\n                                  placeholder: _vm.trans(\n                                    \"academic.select_batch\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_batches,\n                                },\n                                on: {\n                                  select: _vm.onBatchSelect,\n                                  remove: _vm.onBatchRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_batches,\n                                  callback: function ($$v) {\n                                    _vm.selected_batches = $$v\n                                  },\n                                  expression: \"selected_batches\",\n                                },\n                              },\n                              [\n                                !_vm.batches.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"employee.department\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"department_id\",\n                                  id: \"department_id\",\n                                  options: _vm.departments,\n                                  placeholder: _vm.trans(\n                                    \"employee.select_department\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_departments,\n                                },\n                                on: {\n                                  select: _vm.onDepartmentSelect,\n                                  remove: _vm.onDepartmentRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_departments,\n                                  callback: function ($$v) {\n                                    _vm.selected_departments = $$v\n                                  },\n                                  expression: \"selected_departments\",\n                                },\n                              },\n                              [\n                                !_vm.departments.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"employee.category\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"employee_category_id\",\n                                  id: \"employee_category_id\",\n                                  options: _vm.employee_categories,\n                                  placeholder: _vm.trans(\n                                    \"employee.select_category\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_employee_categories,\n                                },\n                                on: {\n                                  select: _vm.onEmployeeCategorySelect,\n                                  remove: _vm.onEmployeeCategoryRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_employee_categories,\n                                  callback: function ($$v) {\n                                    _vm.selected_employee_categories = $$v\n                                  },\n                                  expression: \"selected_employee_categories\",\n                                },\n                              },\n                              [\n                                !_vm.employee_categories.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"communication.subject\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.filter.subject,\n                                expression: \"filter.subject\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: { name: \"subject\" },\n                            domProps: { value: _vm.filter.subject },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.filter,\n                                  \"subject\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-sm-6\" },\n                        [\n                          _c(\"date-range-picker\", {\n                            attrs: {\n                              \"start-date\": _vm.filter.start_date,\n                              \"end-date\": _vm.filter.end_date,\n                              label: _vm.trans(\"general.date_between\"),\n                            },\n                            on: {\n                              \"update:startDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:start-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:endDate\": function ($event) {\n                                return _vm.$set(_vm.filter, \"end_date\", $event)\n                              },\n                              \"update:end-date\": function ($event) {\n                                return _vm.$set(_vm.filter, \"end_date\", $event)\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getCommunications },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.communications.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"communication.type\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"communication.subject\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"communication.audience\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"communication.recipient_count\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"communication.sent_by\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"general.created_at\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", { staticClass: \"table-option\" }, [\n                              _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(\n                            _vm.communications.data,\n                            function (communication) {\n                              return _c(\"tr\", [\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\n                                        \"communication.\" + communication.type\n                                      )\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", {\n                                  domProps: {\n                                    textContent: _vm._s(communication.subject),\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"td\",\n                                  [\n                                    communication.audience == \"everyone\"\n                                      ? _c(\"span\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"communication.communication_for_everyone\"\n                                              )\n                                            )\n                                          ),\n                                        ])\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    communication.audience == \"selected_course\"\n                                      ? [\n                                          _vm._v(\n                                            \"\\n                                        \" +\n                                              _vm._s(\n                                                _vm.trans(\"academic.course\")\n                                              ) +\n                                              \" \"\n                                          ),\n                                          _c(\"br\"),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"ul\",\n                                            {\n                                              staticStyle: {\n                                                \"list-style\": \"none\",\n                                                padding: \"0\",\n                                                margin: \"0\",\n                                              },\n                                            },\n                                            _vm._l(\n                                              communication.courses,\n                                              function (course) {\n                                                return _c(\"li\", [\n                                                  _vm._v(\n                                                    _vm._s(\n                                                      course.name +\n                                                        \"(\" +\n                                                        course.course_group\n                                                          .name +\n                                                        \")\"\n                                                    )\n                                                  ),\n                                                ])\n                                              }\n                                            ),\n                                            0\n                                          ),\n                                        ]\n                                      : communication.audience ==\n                                        \"selected_batch\"\n                                      ? [\n                                          _vm._v(\n                                            \"\\n                                        \" +\n                                              _vm._s(\n                                                _vm.trans(\"academic.batch\")\n                                              ) +\n                                              \" \"\n                                          ),\n                                          _c(\"br\"),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"ul\",\n                                            {\n                                              staticStyle: {\n                                                \"list-style\": \"none\",\n                                                padding: \"0\",\n                                                margin: \"0\",\n                                              },\n                                            },\n                                            _vm._l(\n                                              communication.batches,\n                                              function (batch) {\n                                                return _c(\"li\", [\n                                                  _vm._v(\n                                                    _vm._s(\n                                                      batch.name +\n                                                        \"(\" +\n                                                        batch.course.name +\n                                                        \")\"\n                                                    )\n                                                  ),\n                                                ])\n                                              }\n                                            ),\n                                            0\n                                          ),\n                                        ]\n                                      : communication.audience ==\n                                        \"selected_department\"\n                                      ? [\n                                          _vm._v(\n                                            \"\\n                                        \" +\n                                              _vm._s(\n                                                _vm.trans(\"employee.department\")\n                                              ) +\n                                              \" \"\n                                          ),\n                                          _c(\"br\"),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"ul\",\n                                            {\n                                              staticStyle: {\n                                                \"list-style\": \"none\",\n                                                padding: \"0\",\n                                                margin: \"0\",\n                                              },\n                                            },\n                                            _vm._l(\n                                              communication.departments,\n                                              function (department) {\n                                                return _c(\"li\", [\n                                                  _vm._v(\n                                                    _vm._s(department.name)\n                                                  ),\n                                                ])\n                                              }\n                                            ),\n                                            0\n                                          ),\n                                        ]\n                                      : communication.audience ==\n                                        \"selected_employee_category\"\n                                      ? [\n                                          _vm._v(\n                                            \"\\n                                        \" +\n                                              _vm._s(\n                                                _vm.trans(\"employee.category\")\n                                              ) +\n                                              \" \"\n                                          ),\n                                          _c(\"br\"),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"ul\",\n                                            {\n                                              staticStyle: {\n                                                \"list-style\": \"none\",\n                                                padding: \"0\",\n                                                margin: \"0\",\n                                              },\n                                            },\n                                            _vm._l(\n                                              communication.employee_categorys,\n                                              function (employee_category) {\n                                                return _c(\"li\", [\n                                                  _vm._v(\n                                                    _vm._s(\n                                                      employee_category.name\n                                                    )\n                                                  ),\n                                                ])\n                                              }\n                                            ),\n                                            0\n                                          ),\n                                        ]\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    communication.options.individual_students &&\n                                    communication.options.individual_students\n                                      .length\n                                      ? [\n                                          _c(\n                                            \"ul\",\n                                            {\n                                              staticStyle: {\n                                                \"list-style\": \"none\",\n                                                padding: \"0\",\n                                                margin: \"0\",\n                                              },\n                                            },\n                                            [\n                                              _c(\"li\", [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.trans(\n                                                      \"communication.count_individual_students\",\n                                                      {\n                                                        attribute:\n                                                          communication.options\n                                                            .individual_students\n                                                            .length,\n                                                      }\n                                                    )\n                                                  )\n                                                ),\n                                              ]),\n                                            ]\n                                          ),\n                                        ]\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    communication.options\n                                      .individual_employees &&\n                                    communication.options.individual_employees\n                                      .length\n                                      ? [\n                                          _c(\n                                            \"ul\",\n                                            {\n                                              staticStyle: {\n                                                \"list-style\": \"none\",\n                                                padding: \"0\",\n                                                margin: \"0\",\n                                              },\n                                            },\n                                            [\n                                              _c(\"li\", [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.trans(\n                                                      \"communication.count_individual_employees\",\n                                                      {\n                                                        attribute:\n                                                          communication.options\n                                                            .individual_employees\n                                                            .length,\n                                                      }\n                                                    )\n                                                  )\n                                                ),\n                                              ]),\n                                            ]\n                                          ),\n                                        ]\n                                      : _vm._e(),\n                                  ],\n                                  2\n                                ),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(_vm._s(communication.recipient_count)),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.getEmployeeName(\n                                        communication.user.employee\n                                      )\n                                    ) + \" \"\n                                  ),\n                                  _c(\"br\"),\n                                  _vm._v(\n                                    \" \" +\n                                      _vm._s(\n                                        _vm.getEmployeeDesignationOnDate(\n                                          communication.user.employee,\n                                          communication.start_date\n                                        )\n                                      )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm._f(\"momentDateTime\")(\n                                        communication.created_at\n                                      )\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", { staticClass: \"table-option\" }, [\n                                  _c(\"div\", { staticClass: \"btn-group\" }, [\n                                    _c(\n                                      \"button\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"tooltip\",\n                                            rawName: \"v-tooltip\",\n                                            value: _vm.trans(\n                                              \"general.view_detail\"\n                                            ),\n                                            expression:\n                                              \"trans('general.view_detail')\",\n                                          },\n                                        ],\n                                        staticClass: \"btn btn-success btn-sm\",\n                                        on: {\n                                          click: function ($event) {\n                                            $event.preventDefault()\n                                            return _vm.showAction(communication)\n                                          },\n                                        },\n                                      },\n                                      [\n                                        _c(\"i\", {\n                                          staticClass:\n                                            \"fas fa-arrow-circle-right\",\n                                        }),\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _vm.hasPermission(\n                                      \"delete-communication-history\"\n                                    )\n                                      ? _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"confirm\",\n                                                rawName: \"v-confirm\",\n                                                value: {\n                                                  ok: _vm.confirmDelete(\n                                                    communication\n                                                  ),\n                                                },\n                                                expression:\n                                                  \"{ok: confirmDelete(communication)}\",\n                                              },\n                                              {\n                                                name: \"tooltip\",\n                                                rawName: \"v-tooltip\",\n                                                value:\n                                                  _vm.trans(\"general.delete\"),\n                                                expression:\n                                                  \"trans('general.delete')\",\n                                              },\n                                            ],\n                                            key: communication.id,\n                                            staticClass:\n                                              \"btn btn-danger btn-sm\",\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-trash\",\n                                            }),\n                                          ]\n                                        )\n                                      : _vm._e(),\n                                  ]),\n                                ]),\n                              ])\n                            }\n                          ),\n                          0\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.communications.total\n                  ? _c(\n                      \"module-info\",\n                      {\n                        attrs: {\n                          module: \"communication\",\n                          title: \"communication_module_title\",\n                          description: \"communication_module_description\",\n                          icon: \"list\",\n                        },\n                      },\n                      [\n                        _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                          _vm.hasPermission(\"send-sms\")\n                            ? _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-info btn-md\",\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.$router.push(\n                                        \"/communication/sms\"\n                                      )\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-paper-plan\" }),\n                                  _vm._v(\n                                    \" \" +\n                                      _vm._s(\n                                        _vm.trans(\"communication.send_sms\")\n                                      )\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                          _vm._v(\" \"),\n                          _vm.hasPermission(\"send-email\")\n                            ? _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-info btn-md\",\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.$router.push(\n                                        \"/communication/email\"\n                                      )\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-envelop\" }),\n                                  _vm._v(\n                                    \" \" +\n                                      _vm._s(\n                                        _vm.trans(\"communication.send_email\")\n                                      )\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.communications,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getCommunications,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.showModal\n        ? _c(\"transition\", { attrs: { name: \"modal\" } }, [\n            _c(\"div\", { staticClass: \"modal-mask\" }, [\n              _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n                _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-header\" },\n                    [\n                      _vm._t(\"header\", function () {\n                        return [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(_vm.communication.subject) +\n                              \"\\n                            \"\n                          ),\n                          _c(\n                            \"span\",\n                            {\n                              staticClass: \"float-right pointer\",\n                              on: {\n                                click: function ($event) {\n                                  _vm.showModal = false\n                                },\n                              },\n                            },\n                            [_vm._v(\"x\")]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-body\" },\n                    [\n                      _vm._t(\"body\", function () {\n                        return [\n                          _c(\"div\", {\n                            staticClass: \"m-t-20\",\n                            domProps: {\n                              innerHTML: _vm._s(_vm.communication.body),\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"hr\"),\n                          _vm._v(\" \"),\n                          _c(\"p\", [\n                            _c(\"i\", { staticClass: \"far fa-clock\" }),\n                            _vm._v(\" \"),\n                            _c(\"small\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"general.created_at\")) +\n                                  \" \" +\n                                  _vm._s(\n                                    _vm._f(\"momentDateTime\")(\n                                      _vm.communication.created_at\n                                    )\n                                  )\n                              ),\n                            ]),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"clearfix\" }),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                ]),\n              ]),\n            ]),\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=539460ac&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('539460ac')) {\n      api.createRecord('539460ac', component.options)\n    } else {\n      api.reload('539460ac', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=539460ac&\", function () {\n      api.rerender('539460ac', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/communication/index.vue\"\nexport default component.exports","var render, staticRenderFns\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"resources/js/views/communication/show.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=539460ac&\""],"names":[],"sourceRoot":""}