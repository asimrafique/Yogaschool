{"version":3,"file":"js/chunks/js/resource/lessonPlan/index.js?id=25652088b0ba465c","mappings":";;;;;;;;;;;;;AAyFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACptNA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpGA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAWA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;ACveA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAaqBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AASA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AA6CA;AAAA;AASA;AAEA;AACA;AAMA;AACA;AAGA;AACA;AAKA;AACA;AAGA;AACA;AACA;AACA;AA4CA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAMA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAQA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AASA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAOA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;ACjrBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAGA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AASA;AAAA;AAGA;AACA;AAAA;AA0DA;AAAA;AA+BA;AAAA;AAAA;AACA;AAAA;AAKA;AACA;AACA;AAGA;AACA;AASA;AAOA;AAAA;AAEA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAGA;AAMA;AAKA;AAEA;AAcA;AASA;AAAA;AAcA;AAAA;AACA;AAAA;AAgBA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC7PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/resource/lesson-plan/form.vue","webpack://InstiKit/resources/js/views/resource/lesson-plan/index.vue","webpack://InstiKit/resources/js/views/resource/lesson-plan/show.vue","webpack://InstiKit/./resources/js/views/resource/lesson-plan/form.vue","webpack://InstiKit/./resources/js/views/resource/lesson-plan/index.vue","webpack://InstiKit/./resources/js/views/resource/lesson-plan/show.vue","webpack://InstiKit/./resources/js/views/resource/lesson-plan/form.vue?b5fe","webpack://InstiKit/./resources/js/views/resource/lesson-plan/form.vue?57f9","webpack://InstiKit/./resources/js/views/resource/lesson-plan/form.vue?290f","webpack://InstiKit/./resources/js/views/resource/lesson-plan/index.vue?879a","webpack://InstiKit/./resources/js/views/resource/lesson-plan/show.vue?3c6c","webpack://InstiKit/./resources/js/views/resource/lesson-plan/form.vue?7128","webpack://InstiKit/./resources/js/views/resource/lesson-plan/index.vue?0622","webpack://InstiKit/./resources/js/views/resource/lesson-plan/show.vue?b97b","webpack://InstiKit/./resources/js/views/resource/lesson-plan/form.vue?d1de","webpack://InstiKit/./resources/js/views/resource/lesson-plan/index.vue?3f5d","webpack://InstiKit/./resources/js/views/resource/lesson-plan/show.vue?3d3b","webpack://InstiKit/./resources/js/views/resource/lesson-plan/form.vue?569e"],"sourcesContent":["<template>\r\n    <div>\r\n        <form @submit.prevent=\"proceed\" @keydown=\"lessonPlanForm.errors.clear($event.target.name)\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('academic.batch')}} </label>\r\n                        <v-select label=\"name\" v-model=\"selected_batch\" group-values=\"batches\" group-label=\"course_group\" :group-select=\"false\" name=\"batch_id\" id=\"batch_id\" :options=\"batches\" :placeholder=\"trans('academic.select_batch')\" @select=\"onBatchSelect\" @close=\"lessonPlanForm.errors.clear('batch_id')\" @remove=\"lessonPlanForm.batch_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!batches.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"lessonPlanForm\" prop-name=\"batch_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\" v-if=\"lessonPlanForm.batch_id\">\r\n                        <label for=\"\">{{trans('academic.subject')}} </label>\r\n                        <v-select label=\"name\" v-model=\"selected_subject\" name=\"subject_id\" id=\"subject_id\" :options=\"subjects\" :placeholder=\"trans('resource.select_subject')\" @select=\"onSubjectSelect\" @close=\"lessonPlanForm.errors.clear('subject_id')\" @remove=\"lessonPlanForm.subject_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!subjects.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"lessonPlanForm\" prop-name=\"subject_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('resource.lesson_plan_start_date')}}</label>\r\n                        <datepicker v-model=\"lessonPlanForm.start_date\" :bootstrapStyling=\"true\" @selected=\"lessonPlanForm.errors.clear('start_date')\" :placeholder=\"trans('resource.lesson_plan_start_date')\"></datepicker>\r\n                        <show-error :form-name=\"lessonPlanForm\" prop-name=\"start_date\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('resource.lesson_plan_end_date')}}</label>\r\n                        <datepicker v-model=\"lessonPlanForm.end_date\" :bootstrapStyling=\"true\" @selected=\"lessonPlanForm.errors.clear('end_date')\" :placeholder=\"trans('resource.lesson_plan_end_date')\"></datepicker>\r\n                        <show-error :form-name=\"lessonPlanForm\" prop-name=\"end_date\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('resource.lesson_plan_topic')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"lessonPlanForm.topic\" name=\"topic\" :placeholder=\"trans('resource.lesson_plan_topic')\">\r\n                        <show-error :form-name=\"lessonPlanForm\" prop-name=\"topic\"></show-error>\r\n                    </div>\r\n                    <template v-for=\"(detail,index) in lessonPlanForm.details\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('resource.lesson_plan_detail_title')}} \r\n                                    <button type=\"button\" class=\"btn btn-xs btn-danger m-l-20\" :key=\"`${index}_delete_detail`\" v-confirm=\"{ok: confirmDeleteDetail(index)}\" v-tooltip=\"trans('general.delete')\"><i class=\"fas fa-times\"></i></button></label>\r\n                                    <input class=\"form-control\" type=\"text\" v-model=\"detail.title\" :name=\"getDetailTitleName(index)\" :placeholder=\"trans('resource.lesson_plan_detail_title')\">\r\n                                    <show-error :form-name=\"lessonPlanForm\" :prop-name=\"getDetailTitleName(index)\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('resource.lesson_plan_detail_description')}}</label>\r\n                                    <autosize-textarea v-model=\"detail.description\" rows=\"2\" :name=\"getDetailDescriptionName(index)\" :placeholder=\"trans('resource.lesson_plan_detail_description')\"></autosize-textarea>\r\n                                    <show-error :form-name=\"lessonPlanForm\" :prop-name=\"getDetailDescriptionName(index)\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </template>\r\n                    <div class=\"form-group\">\r\n                        <button type=\"button\" @click=\"addRow\" class=\"btn btn-info btn-sm waves-effect waves-light\">{{trans('resource.lesson_plan_add_new_detail')}}</button>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <file-upload-input :button-text=\"trans('general.upload_document')\" :token=\"lessonPlanForm.upload_token\" module=\"lesson_plan\" :clear-file=\"clearAttachment\" :module-id=\"module_id\"></file-upload-input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer text-right\">\r\n                <router-link to=\"/resource/lesson/plan\" class=\"btn btn-danger waves-effect waves-light \">{{trans('general.cancel')}}</router-link>\r\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n                    <span v-if=\"uuid\">{{trans('general.update')}}</span>\r\n                    <span v-else>{{trans('general.save')}}</span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n    export default {\r\n        components: {},\r\n        data() {\r\n            return {\r\n                lessonPlanForm: new Form({\r\n                    batch_id: '',\r\n                    subject_id: '',\r\n                    topic: '',\r\n                    start_date: '',\r\n                    end_date: '',\r\n                    details: [],\r\n                    upload_token: ''\r\n                }),\r\n                batches: [],\r\n                selected_batch: null,\r\n                subjects: [],\r\n                selected_subject: null,\r\n                subject_detail: [],\r\n                module_id: '',\r\n                clearAttachment: true\r\n            };\r\n        },\r\n        props: ['uuid'],\r\n        mounted() {\r\n            if(!helper.hasPermission('create-lesson-plan') && !helper.hasPermission('edit-lesson-plan')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            if(this.uuid)\r\n                this.get();\r\n            else {\r\n                this.addRow();\r\n                this.lessonPlanForm.upload_token = this.$uuid.v4();\r\n            }\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            addRow(){\r\n                let new_index = this.lessonPlanForm.details.push({\r\n                    title: '',\r\n                    description: ''\r\n                })\r\n            },\r\n            confirmDeleteDetail(index){\r\n                return dialog => this.deleteDetail(index);\r\n            },\r\n            deleteDetail(index){\r\n                this.lessonPlanForm.details.splice(index, 1);\r\n            },\r\n            getDetailTitleName(index){\r\n                return index+'_detail_title';\r\n            },\r\n            getDetailDescriptionName(index){\r\n                return index+'_detail_description';\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/lesson/plan/pre-requisite')\r\n                    .then(response => {\r\n                        this.batches = response.batches;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            getSubjects(){\r\n                if (!this.uuid) {\r\n                    this.lessonPlanForm.subject_id = '';\r\n                    this.selected_subject = null;\r\n                }\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/batch/'+this.lessonPlanForm.batch_id+'/subjects')\r\n                    .then(response => {\r\n                        this.subjects = response.subjects;\r\n                        this.subject_details = response.subject_details;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            proceed(){\r\n                if(this.uuid)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.lessonPlanForm.post('/api/lesson/plan')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.clearAttachment = !this.clearAttachment;\r\n                        this.lessonPlanForm.upload_token = this.$uuid.v4();\r\n                        this.selected_batch = null;\r\n                        this.selected_subject = null;\r\n                        this.lessonPlanForm.details = [];\r\n                        this.addRow();\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/lesson/plan/'+this.uuid)\r\n                    .then(response => {\r\n                        let lesson_plan = response.lesson_plan;\r\n                        this.lessonPlanForm.title = lesson_plan.title;\r\n                        this.lessonPlanForm.topic = lesson_plan.topic;\r\n                        this.lessonPlanForm.start_date = lesson_plan.start_date;\r\n                        this.lessonPlanForm.end_date = lesson_plan.end_date;\r\n                        this.lessonPlanForm.batch_id = lesson_plan.subject.batch_id;\r\n                        this.lessonPlanForm.subject_id = lesson_plan.subject_id;\r\n                        this.selected_batch = this.lessonPlanForm.batch_id ? {id: lesson_plan.subject.batch_id, name: lesson_plan.subject.batch.course.name+' '+lesson_plan.subject.batch.name} : null;\r\n                        this.selected_subject = lesson_plan.subject_id ? {id: lesson_plan.subject_id, name: lesson_plan.subject.name+' ('+lesson_plan.subject.code+')'} : null;\r\n                        this.lessonPlanForm.upload_token = lesson_plan.upload_token;\r\n\r\n                        lesson_plan.lesson_plan_details.forEach(lesson_plan_detail => {\r\n                            this.lessonPlanForm.details.push({\r\n                                title: lesson_plan_detail.title,\r\n                                description: lesson_plan_detail.description\r\n                            });\r\n                        });\r\n                        \r\n                        this.module_id = lesson_plan.id;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/resource/lesson/plan');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.lessonPlanForm.patch('/api/lesson/plan/'+this.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/resource/lesson/plan');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onBatchSelect(selectedOption){\r\n                this.lessonPlanForm.batch_id = selectedOption.id;\r\n            },\r\n            onSubjectSelect(selectedOption){\r\n                this.lessonPlanForm.subject_id = selectedOption.id;\r\n            }\r\n        },\r\n        watch: {\r\n            'lessonPlanForm.batch_id': function(val) {\r\n                if (val) {\r\n                    this.getSubjects();\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n.loading-overlay.is-full-page{\r\n    z-index: 1060;\r\n}\r\n</style>","<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('resource.lesson_plan')}} \r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"lesson_plans.total\">{{trans('general.total_result_found',{count : lesson_plans.total, from: lesson_plans.from, to: lesson_plans.to})}}</span>\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\r\n                    </h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"lesson_plans.total && hasPermission('create-lesson-plan')\" @click=\"$router.push('/resource/lesson/plan/create')\" v-tooltip=\"trans('general.add_new')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('resource.add_new_lesson_plan')}}</span></button>\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\r\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\r\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\r\n                            </button>\r\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\r\n                            </div>\r\n                        </div>\r\n                        <help-button @clicked=\"help_topic = 'resource.lesson_plan'\"></help-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <transition name=\"fade\">\r\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('general.filter')}}</h4>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('academic.batch')}}</label>\r\n                                    <v-select label=\"name\" track-by=\"id\" group-values=\"batches\" group-label=\"course_group\" :group-select=\"false\" v-model=\"selected_batches\" name=\"batch_id\" id=\"batch_id\" :options=\"batches\" :placeholder=\"trans('academic.select_batch')\" @select=\"onBatchSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onBatchRemove\" :selected=\"selected_batches\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!batches.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('resource.lesson_plan_topic')}}</label>\r\n                                    <input class=\"form-control\" name=\"topic\" v-model=\"filter.topic\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-footer text-right\">\r\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\r\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getLessonPlans\">{{trans('general.filter')}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\" v-if=\"lesson_plans.total\">\r\n                        <table class=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{{trans('academic.subject')}}</th>\r\n                                    <th>{{trans('academic.batch')}}</th>\r\n                                    <th>{{trans('resource.lesson_plan_topic')}}</th>\r\n                                    <th>{{trans('resource.lesson_plan_start_date')}}</th>\r\n                                    <th>{{trans('resource.lesson_plan_end_date')}}</th>\r\n                                    <th>{{trans('resource.lesson_plan_created_by')}}</th>\r\n                                    <th>{{trans('general.created_at')}}</th>\r\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"lesson_plan in lesson_plans.data\">\r\n                                    <td v-text=\"lesson_plan.subject.name+' ('+lesson_plan.subject.code+')'\"></td>\r\n                                    <td v-text=\"lesson_plan.subject.batch.course.name+' '+lesson_plan.subject.batch.name\"></td>\r\n                                    <td v-text=\"lesson_plan.topic\"></td>\r\n                                    <td>{{lesson_plan.start_date | moment}}</td>\r\n                                    <td>{{lesson_plan.end_date | moment}}</td>\r\n                                    <td>{{getEmployeeName(lesson_plan.employee)}} <br > {{getEmployeeDesignationOnDate(lesson_plan.employee, lesson_plan.start_date)}}</td>\r\n                                    <td>{{lesson_plan.created_at | momentDateTime}}</td>\r\n                                    <td class=\"table-option\">\r\n                                        <div class=\"btn-group\">\r\n                                            <a target=\"_blank\" :href=\"`/resource/lesson/plan/${lesson_plan.uuid}/print?token=${authToken}`\" v-tooltip=\"trans('general.print')\" class=\"btn btn-secondary btn-sm\">\r\n                                                <i class=\"fas fa-print\"></i>\r\n                                            </a>\r\n                                            <button class=\"btn btn-success btn-sm\" v-tooltip=\"trans('resource.view_lesson_plan')\" @click.prevent=\"showAction(lesson_plan)\"><i class=\"fas fa-arrow-circle-right\"></i></button>\r\n                                            <button class=\"btn btn-info btn-sm\" v-if=\"hasPermission('edit-lesson-plan')\" v-tooltip=\"trans('resource.edit_lesson_plan')\" @click.prevent=\"editLessonPlan(lesson_plan)\"><i class=\"fas fa-edit\"></i></button>\r\n                                            <button class=\"btn btn-danger btn-sm\" v-if=\"hasPermission('delete-lesson-plan')\" :key=\"lesson_plan.id\" v-confirm=\"{ok: confirmDelete(lesson_plan)}\" v-tooltip=\"trans('resource.delete_lesson_plan')\"><i class=\"fas fa-trash\"></i></button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <module-info v-if=\"!lesson_plans.total\" module=\"resource\" title=\"lesson_plan_module_title\" description=\"lesson_plan_module_description\" icon=\"list\">\r\n                        <div slot=\"btn\">\r\n                            <button class=\"btn btn-info btn-md\" v-if=\"hasPermission('create-lesson-plan')\" @click=\"$router.push('/resource/lesson/plan/create')\"><i class=\"fas fa-plus\"></i> {{trans('general.add_new')}}</button>\r\n                        </div>\r\n                    </module-info>\r\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"lesson_plans\" @updateRecords=\"getLessonPlans\"></pagination-record>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <lesson-plan-detail v-if=\"showModal\" @close=\"showModal = false\" :uuid=\"showUuid\"></lesson-plan-detail>\r\n        <right-panel :topic=\"help_topic\"></right-panel>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import lessonPlanForm from './form'\r\n    import lessonPlanDetail from './show'\r\n\r\n    export default {\r\n        components : { lessonPlanForm,lessonPlanDetail},\r\n        data() {\r\n            return {\r\n                lesson_plans: {\r\n                    total: 0,\r\n                    data: []\r\n                },\r\n                filter: {\r\n                    sort_by : 'start_date',\r\n                    order: 'desc',\r\n                    topic: '',\r\n                    batch_id: [],\r\n                    page_length: helper.getConfig('page_length')\r\n                },\r\n                orderByOptions: [\r\n                    {\r\n                        value: 'start_date',\r\n                        translation: i18n.resource.lesson_plan_start_date\r\n                    },\r\n                    {\r\n                        value: 'topic',\r\n                        translation: i18n.resource.lesson_plan_topic\r\n                    }\r\n                ],\r\n                batches: [],\r\n                selected_batches: null,\r\n                showFilterPanel: false,\r\n                showCreatePanel: false,\r\n                help_topic: '',\r\n                showUuid: '',\r\n                showModal: false\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('list-lesson-plan')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.getLessonPlans();\r\n            helper.showDemoNotification(['resource']);\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            showAction(lesson_plan){\r\n                this.showUuid = lesson_plan.uuid;\r\n                this.showModal = true;\r\n            },\r\n            getEmployeeName(employee){\r\n                return helper.getEmployeeName(employee);\r\n            },\r\n            getEmployeeDesignationOnDate(employee, date){\r\n                return helper.getEmployeeDesignationOnDate(employee, date);\r\n            },\r\n            getLessonPlans(page){\r\n                let loader = this.$loading.show();\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                let url = helper.getFilterURL(this.filter);\r\n                axios.get('/api/lesson/plan?page=' + page + url)\r\n                    .then(response => {\r\n                        this.lesson_plans = response.lesson_plans;\r\n                        this.batches = response.filters.batches;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            editLessonPlan(lesson_plan){\r\n                this.$router.push('/resource/lesson/plan/'+lesson_plan.uuid+'/edit');\r\n            },\r\n            confirmDelete(lesson_plan){\r\n                return dialog => this.deleteLessonPlan(lesson_plan);\r\n            },\r\n            deleteLessonPlan(lesson_plan){\r\n                let loader = this.$loading.show();\r\n                axios.delete('/api/lesson/plan/'+lesson_plan.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getLessonPlans();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getConfig(config) {\r\n                return helper.getConfig(config)\r\n            },\r\n            print(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/lesson/plan/print',{filter: this.filter})\r\n                    .then(response => {\r\n                        let print = window.open(\"/print\");\r\n                        loader.hide();\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            pdf(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/lesson/plan/pdf',{filter: this.filter})\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        window.open('/download/report/'+response+'?token='+this.authToken);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onBatchSelect(selectedOption){\r\n                this.filter.batch_id.push(selectedOption.id);\r\n            },\r\n            onBatchRemove(removedOption){\r\n                this.filter.batch_id.splice(this.filter.batch_id.indexOf(removedOption.id), 1);\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        },\r\n        watch: {\r\n            'filter.sort_by': function(val){\r\n                this.getLessonPlans();\r\n            },\r\n            'filter.order': function(val){\r\n                this.getLessonPlans();\r\n            },\r\n            'filter.page_length': function(val){\r\n                this.getLessonPlans();\r\n            }\r\n        },\r\n        computed: {\r\n            authToken(){\r\n                return helper.getAuthToken();\r\n            }\r\n        }\r\n    }\r\n</script>","<template>\r\n    <transition name=\"modal\">\r\n        <div class=\"modal-mask\">\r\n            <div class=\"modal-wrapper\">\r\n                <div class=\"modal-container modal-lg\">\r\n                    <div class=\"modal-header\" v-if=\"lesson_plan.id\">\r\n                        <slot name=\"header\">\r\n                            <span>{{lesson_plan.topic}}</span>\r\n                            <span class=\"float-right pointer\" @click=\"$emit('close')\">x</span>\r\n                        </slot>\r\n                    </div>\r\n                    <div class=\"modal-body\" v-if=\"lesson_plan.id\">\r\n                        <slot name=\"body\">\r\n                            <h6 class=\"card-title\">\r\n                                <strong>{{trans('academic.subject')}}:</strong> {{lesson_plan.subject.name+' ('+lesson_plan.subject.code+')'}} \r\n                                <br />\r\n                                <strong>{{trans('academic.batch')}}:</strong> {{lesson_plan.subject.batch.course.name+' '+lesson_plan.subject.batch.name}} \r\n                                <br />\r\n                                <strong>{{trans('resource.lesson_plan_start_date')}}:</strong> {{lesson_plan.start_date | moment}} \r\n                                <br />\r\n                                <strong>{{trans('resource.lesson_plan_end_date')}}:</strong> {{lesson_plan.end_date | moment}} \r\n                                <p class=\"pull-right\" v-if=\"lesson_plan.employee\">\r\n                                    <strong>{{trans('resource.lesson_plan_created_by')}}:</strong> {{getEmployeeName(lesson_plan.employee)}} {{getEmployeeDesignation(lesson_plan.employee, lesson_plan.start_date)}}\r\n                                </p>\r\n                            </h6>\r\n                            <div class=\"m-t-20\" v-for=\"lesson_plan_detail in lesson_plan.lesson_plan_details\">\r\n                                <h6 class=\"card-title\">{{lesson_plan_detail.title}}</h6>\r\n                                <p class=\"font-90pc\" v-text=\"lesson_plan_detail.description\"></p>\r\n                                <hr v-if=\"!$last(lesson_plan_detail, lesson_plan.lesson_plan_details)\" />\r\n                            </div>\r\n                            <div v-if=\"attachments.length\">\r\n                                <ul class=\"m-t-10 upload-file-list\">\r\n                                    <li class=\"upload-file-list-item\" v-for=\"attachment in attachments\">\r\n                                        <a :href=\"`/resource/lesson/plan/${lesson_plan.uuid}/attachment/${attachment.uuid}/download?token=${authToken}`\" class=\"no-link-color\"><i :class=\"['file-icon', 'fas', 'fa-lg', attachment.file_info.icon]\"></i> <span class=\"upload-file-list-item-size\">{{attachment.file_info.size}}</span> {{attachment.user_filename}}</a>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <hr />\r\n                            <p>\r\n                                <i class=\"far fa-clock\"></i> <small>{{trans('general.created_at')}} {{lesson_plan.created_at | momentDateTime}}</small>\r\n                                <span class=\"pull-right\">\r\n                                    <i class=\"far fa-clock\"></i> <small>{{trans('general.updated_at')}} {{lesson_plan.updated_at | momentDateTime}}</small>\r\n                                </span>\r\n                            </p>\r\n                        </slot>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        components: {},\r\n        props: ['uuid', 'url'],\r\n        mounted(){\r\n            if(this.uuid)\r\n                this.get();\r\n        },\r\n        data(){\r\n            return {\r\n                lesson_plan: [],\r\n                attachments: []\r\n            }\r\n        },\r\n        methods: {\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/lesson/plan/'+this.uuid)\r\n                    .then(response => {\r\n                        this.lesson_plan = response.lesson_plan;\r\n                        this.attachments = response.attachments;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getEmployeeName(employee){\r\n                return helper.getEmployeeName(employee);\r\n            },\r\n            getEmployeeDesignation(employee, date){\r\n                return helper.getEmployeeDesignation(employee, date);\r\n            }\r\n        },\r\n        computed: {\r\n            authToken(){\r\n                return helper.getAuthToken();\r\n            }\r\n        },\r\n        filters: {\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          },\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.lessonPlanForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"academic.batch\")) + \" \"),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      \"group-values\": \"batches\",\n                      \"group-label\": \"course_group\",\n                      \"group-select\": false,\n                      name: \"batch_id\",\n                      id: \"batch_id\",\n                      options: _vm.batches,\n                      placeholder: _vm.trans(\"academic.select_batch\"),\n                    },\n                    on: {\n                      select: _vm.onBatchSelect,\n                      close: function ($event) {\n                        return _vm.lessonPlanForm.errors.clear(\"batch_id\")\n                      },\n                      remove: function ($event) {\n                        _vm.lessonPlanForm.batch_id = \"\"\n                      },\n                    },\n                    model: {\n                      value: _vm.selected_batch,\n                      callback: function ($$v) {\n                        _vm.selected_batch = $$v\n                      },\n                      expression: \"selected_batch\",\n                    },\n                  },\n                  [\n                    !_vm.batches.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                        \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.lessonPlanForm,\n                    \"prop-name\": \"batch_id\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _vm.lessonPlanForm.batch_id\n              ? _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"academic.subject\")) + \" \"),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"v-select\",\n                      {\n                        attrs: {\n                          label: \"name\",\n                          name: \"subject_id\",\n                          id: \"subject_id\",\n                          options: _vm.subjects,\n                          placeholder: _vm.trans(\"resource.select_subject\"),\n                        },\n                        on: {\n                          select: _vm.onSubjectSelect,\n                          close: function ($event) {\n                            return _vm.lessonPlanForm.errors.clear(\"subject_id\")\n                          },\n                          remove: function ($event) {\n                            _vm.lessonPlanForm.subject_id = \"\"\n                          },\n                        },\n                        model: {\n                          value: _vm.selected_subject,\n                          callback: function ($$v) {\n                            _vm.selected_subject = $$v\n                          },\n                          expression: \"selected_subject\",\n                        },\n                      },\n                      [\n                        !_vm.subjects.length\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"multiselect__option\",\n                                attrs: { slot: \"afterList\" },\n                                slot: \"afterList\",\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            \" +\n                                    _vm._s(\n                                      _vm.trans(\"general.no_option_found\")\n                                    ) +\n                                    \"\\n                        \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.lessonPlanForm,\n                        \"prop-name\": \"subject_id\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"resource.lesson_plan_start_date\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\"resource.lesson_plan_start_date\"),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.lessonPlanForm.errors.clear(\"start_date\")\n                    },\n                  },\n                  model: {\n                    value: _vm.lessonPlanForm.start_date,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.lessonPlanForm, \"start_date\", $$v)\n                    },\n                    expression: \"lessonPlanForm.start_date\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.lessonPlanForm,\n                    \"prop-name\": \"start_date\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"resource.lesson_plan_end_date\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\"resource.lesson_plan_end_date\"),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.lessonPlanForm.errors.clear(\"end_date\")\n                    },\n                  },\n                  model: {\n                    value: _vm.lessonPlanForm.end_date,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.lessonPlanForm, \"end_date\", $$v)\n                    },\n                    expression: \"lessonPlanForm.end_date\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.lessonPlanForm,\n                    \"prop-name\": \"end_date\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"col-12\" },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"resource.lesson_plan_topic\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.lessonPlanForm.topic,\n                        expression: \"lessonPlanForm.topic\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"topic\",\n                      placeholder: _vm.trans(\"resource.lesson_plan_topic\"),\n                    },\n                    domProps: { value: _vm.lessonPlanForm.topic },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(\n                          _vm.lessonPlanForm,\n                          \"topic\",\n                          $event.target.value\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.lessonPlanForm,\n                      \"prop-name\": \"topic\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _vm._l(_vm.lessonPlanForm.details, function (detail, index) {\n                return [\n                  _c(\"div\", { staticClass: \"row\" }, [\n                    _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(\n                                _vm.trans(\"resource.lesson_plan_detail_title\")\n                              ) + \" \\n                                \"\n                            ),\n                            _c(\n                              \"button\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"confirm\",\n                                    rawName: \"v-confirm\",\n                                    value: {\n                                      ok: _vm.confirmDeleteDetail(index),\n                                    },\n                                    expression:\n                                      \"{ok: confirmDeleteDetail(index)}\",\n                                  },\n                                  {\n                                    name: \"tooltip\",\n                                    rawName: \"v-tooltip\",\n                                    value: _vm.trans(\"general.delete\"),\n                                    expression: \"trans('general.delete')\",\n                                  },\n                                ],\n                                key: `${index}_delete_detail`,\n                                staticClass: \"btn btn-xs btn-danger m-l-20\",\n                                attrs: { type: \"button\" },\n                              },\n                              [_c(\"i\", { staticClass: \"fas fa-times\" })]\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: detail.title,\n                                expression: \"detail.title\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: _vm.getDetailTitleName(index),\n                              placeholder: _vm.trans(\n                                \"resource.lesson_plan_detail_title\"\n                              ),\n                            },\n                            domProps: { value: detail.title },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(detail, \"title\", $event.target.value)\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.lessonPlanForm,\n                              \"prop-name\": _vm.getDetailTitleName(index),\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(\n                                _vm.trans(\n                                  \"resource.lesson_plan_detail_description\"\n                                )\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"autosize-textarea\", {\n                            attrs: {\n                              rows: \"2\",\n                              name: _vm.getDetailDescriptionName(index),\n                              placeholder: _vm.trans(\n                                \"resource.lesson_plan_detail_description\"\n                              ),\n                            },\n                            model: {\n                              value: detail.description,\n                              callback: function ($$v) {\n                                _vm.$set(detail, \"description\", $$v)\n                              },\n                              expression: \"detail.description\",\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.lessonPlanForm,\n                              \"prop-name\": _vm.getDetailDescriptionName(index),\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                  ]),\n                ]\n              }),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info btn-sm waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: { click: _vm.addRow },\n                  },\n                  [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"resource.lesson_plan_add_new_detail\"))\n                    ),\n                  ]\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"file-upload-input\", {\n                    attrs: {\n                      \"button-text\": _vm.trans(\"general.upload_document\"),\n                      token: _vm.lessonPlanForm.upload_token,\n                      module: \"lesson_plan\",\n                      \"clear-file\": _vm.clearAttachment,\n                      \"module-id\": _vm.module_id,\n                    },\n                  }),\n                ],\n                1\n              ),\n            ],\n            2\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"card-footer text-right\" },\n          [\n            _c(\n              \"router-link\",\n              {\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { to: \"/resource/lesson/plan\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [\n                _vm.uuid\n                  ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                  : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n              ]\n            ),\n          ],\n          1\n        ),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"resource.lesson_plan\")) +\n                  \" \\n                    \"\n              ),\n              _vm.lesson_plans.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.lesson_plans.total,\n                            from: _vm.lesson_plans.from,\n                            to: _vm.lesson_plans.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _vm.lesson_plans.total &&\n                _vm.hasPermission(\"create-lesson-plan\")\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"general.add_new\"),\n                            expression: \"trans('general.add_new')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            return _vm.$router.push(\n                              \"/resource/lesson/plan/create\"\n                            )\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"resource.add_new_lesson_plan\"))\n                          ),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"resource.lesson_plan\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"academic.batch\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  \"group-values\": \"batches\",\n                                  \"group-label\": \"course_group\",\n                                  \"group-select\": false,\n                                  name: \"batch_id\",\n                                  id: \"batch_id\",\n                                  options: _vm.batches,\n                                  placeholder: _vm.trans(\n                                    \"academic.select_batch\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_batches,\n                                },\n                                on: {\n                                  select: _vm.onBatchSelect,\n                                  remove: _vm.onBatchRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_batches,\n                                  callback: function ($$v) {\n                                    _vm.selected_batches = $$v\n                                  },\n                                  expression: \"selected_batches\",\n                                },\n                              },\n                              [\n                                !_vm.batches.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"resource.lesson_plan_topic\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.filter.topic,\n                                expression: \"filter.topic\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: { name: \"topic\" },\n                            domProps: { value: _vm.filter.topic },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.filter,\n                                  \"topic\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                        ]),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getLessonPlans },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.lesson_plans.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"academic.subject\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"academic.batch\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"resource.lesson_plan_topic\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"resource.lesson_plan_start_date\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"resource.lesson_plan_end_date\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"resource.lesson_plan_created_by\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"general.created_at\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", { staticClass: \"table-option\" }, [\n                              _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(_vm.lesson_plans.data, function (lesson_plan) {\n                            return _c(\"tr\", [\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(\n                                    lesson_plan.subject.name +\n                                      \" (\" +\n                                      lesson_plan.subject.code +\n                                      \")\"\n                                  ),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(\n                                    lesson_plan.subject.batch.course.name +\n                                      \" \" +\n                                      lesson_plan.subject.batch.name\n                                  ),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(lesson_plan.topic),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"moment\")(lesson_plan.start_date)\n                                  )\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(_vm._f(\"moment\")(lesson_plan.end_date))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.getEmployeeName(lesson_plan.employee)\n                                  ) + \" \"\n                                ),\n                                _c(\"br\"),\n                                _vm._v(\n                                  \" \" +\n                                    _vm._s(\n                                      _vm.getEmployeeDesignationOnDate(\n                                        lesson_plan.employee,\n                                        lesson_plan.start_date\n                                      )\n                                    )\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"momentDateTime\")(\n                                      lesson_plan.created_at\n                                    )\n                                  )\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", { staticClass: \"table-option\" }, [\n                                _c(\"div\", { staticClass: \"btn-group\" }, [\n                                  _c(\n                                    \"a\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"tooltip\",\n                                          rawName: \"v-tooltip\",\n                                          value: _vm.trans(\"general.print\"),\n                                          expression: \"trans('general.print')\",\n                                        },\n                                      ],\n                                      staticClass: \"btn btn-secondary btn-sm\",\n                                      attrs: {\n                                        target: \"_blank\",\n                                        href: `/resource/lesson/plan/${lesson_plan.uuid}/print?token=${_vm.authToken}`,\n                                      },\n                                    },\n                                    [_c(\"i\", { staticClass: \"fas fa-print\" })]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"button\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"tooltip\",\n                                          rawName: \"v-tooltip\",\n                                          value: _vm.trans(\n                                            \"resource.view_lesson_plan\"\n                                          ),\n                                          expression:\n                                            \"trans('resource.view_lesson_plan')\",\n                                        },\n                                      ],\n                                      staticClass: \"btn btn-success btn-sm\",\n                                      on: {\n                                        click: function ($event) {\n                                          $event.preventDefault()\n                                          return _vm.showAction(lesson_plan)\n                                        },\n                                      },\n                                    },\n                                    [\n                                      _c(\"i\", {\n                                        staticClass:\n                                          \"fas fa-arrow-circle-right\",\n                                      }),\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _vm.hasPermission(\"edit-lesson-plan\")\n                                    ? _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"tooltip\",\n                                              rawName: \"v-tooltip\",\n                                              value: _vm.trans(\n                                                \"resource.edit_lesson_plan\"\n                                              ),\n                                              expression:\n                                                \"trans('resource.edit_lesson_plan')\",\n                                            },\n                                          ],\n                                          staticClass: \"btn btn-info btn-sm\",\n                                          on: {\n                                            click: function ($event) {\n                                              $event.preventDefault()\n                                              return _vm.editLessonPlan(\n                                                lesson_plan\n                                              )\n                                            },\n                                          },\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-edit\",\n                                          }),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _vm.hasPermission(\"delete-lesson-plan\")\n                                    ? _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"confirm\",\n                                              rawName: \"v-confirm\",\n                                              value: {\n                                                ok: _vm.confirmDelete(\n                                                  lesson_plan\n                                                ),\n                                              },\n                                              expression:\n                                                \"{ok: confirmDelete(lesson_plan)}\",\n                                            },\n                                            {\n                                              name: \"tooltip\",\n                                              rawName: \"v-tooltip\",\n                                              value: _vm.trans(\n                                                \"resource.delete_lesson_plan\"\n                                              ),\n                                              expression:\n                                                \"trans('resource.delete_lesson_plan')\",\n                                            },\n                                          ],\n                                          key: lesson_plan.id,\n                                          staticClass: \"btn btn-danger btn-sm\",\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-trash\",\n                                          }),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                ]),\n                              ]),\n                            ])\n                          }),\n                          0\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.lesson_plans.total\n                  ? _c(\n                      \"module-info\",\n                      {\n                        attrs: {\n                          module: \"resource\",\n                          title: \"lesson_plan_module_title\",\n                          description: \"lesson_plan_module_description\",\n                          icon: \"list\",\n                        },\n                      },\n                      [\n                        _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                          _vm.hasPermission(\"create-lesson-plan\")\n                            ? _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-info btn-md\",\n                                  on: {\n                                    click: function ($event) {\n                                      return _vm.$router.push(\n                                        \"/resource/lesson/plan/create\"\n                                      )\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                  _vm._v(\n                                    \" \" + _vm._s(_vm.trans(\"general.add_new\"))\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.lesson_plans,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getLessonPlans,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.showModal\n        ? _c(\"lesson-plan-detail\", {\n            attrs: { uuid: _vm.showUuid },\n            on: {\n              close: function ($event) {\n                _vm.showModal = false\n              },\n            },\n          })\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"transition\", { attrs: { name: \"modal\" } }, [\n    _c(\"div\", { staticClass: \"modal-mask\" }, [\n      _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n        _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n          _vm.lesson_plan.id\n            ? _c(\n                \"div\",\n                { staticClass: \"modal-header\" },\n                [\n                  _vm._t(\"header\", function () {\n                    return [\n                      _c(\"span\", [_vm._v(_vm._s(_vm.lesson_plan.topic))]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"span\",\n                        {\n                          staticClass: \"float-right pointer\",\n                          on: {\n                            click: function ($event) {\n                              return _vm.$emit(\"close\")\n                            },\n                          },\n                        },\n                        [_vm._v(\"x\")]\n                      ),\n                    ]\n                  }),\n                ],\n                2\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.lesson_plan.id\n            ? _c(\n                \"div\",\n                { staticClass: \"modal-body\" },\n                [\n                  _vm._t(\"body\", function () {\n                    return [\n                      _c(\"h6\", { staticClass: \"card-title\" }, [\n                        _c(\"strong\", [\n                          _vm._v(_vm._s(_vm.trans(\"academic.subject\")) + \":\"),\n                        ]),\n                        _vm._v(\n                          \" \" +\n                            _vm._s(\n                              _vm.lesson_plan.subject.name +\n                                \" (\" +\n                                _vm.lesson_plan.subject.code +\n                                \")\"\n                            ) +\n                            \" \\n                            \"\n                        ),\n                        _c(\"br\"),\n                        _vm._v(\" \"),\n                        _c(\"strong\", [\n                          _vm._v(_vm._s(_vm.trans(\"academic.batch\")) + \":\"),\n                        ]),\n                        _vm._v(\n                          \" \" +\n                            _vm._s(\n                              _vm.lesson_plan.subject.batch.course.name +\n                                \" \" +\n                                _vm.lesson_plan.subject.batch.name\n                            ) +\n                            \" \\n                            \"\n                        ),\n                        _c(\"br\"),\n                        _vm._v(\" \"),\n                        _c(\"strong\", [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"resource.lesson_plan_start_date\")\n                            ) + \":\"\n                          ),\n                        ]),\n                        _vm._v(\n                          \" \" +\n                            _vm._s(\n                              _vm._f(\"moment\")(_vm.lesson_plan.start_date)\n                            ) +\n                            \" \\n                            \"\n                        ),\n                        _c(\"br\"),\n                        _vm._v(\" \"),\n                        _c(\"strong\", [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"resource.lesson_plan_end_date\")) +\n                              \":\"\n                          ),\n                        ]),\n                        _vm._v(\n                          \" \" +\n                            _vm._s(_vm._f(\"moment\")(_vm.lesson_plan.end_date)) +\n                            \" \\n                            \"\n                        ),\n                        _vm.lesson_plan.employee\n                          ? _c(\"p\", { staticClass: \"pull-right\" }, [\n                              _c(\"strong\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.trans(\"resource.lesson_plan_created_by\")\n                                  ) + \":\"\n                                ),\n                              ]),\n                              _vm._v(\n                                \" \" +\n                                  _vm._s(\n                                    _vm.getEmployeeName(\n                                      _vm.lesson_plan.employee\n                                    )\n                                  ) +\n                                  \" \" +\n                                  _vm._s(\n                                    _vm.getEmployeeDesignation(\n                                      _vm.lesson_plan.employee,\n                                      _vm.lesson_plan.start_date\n                                    )\n                                  ) +\n                                  \"\\n                            \"\n                              ),\n                            ])\n                          : _vm._e(),\n                      ]),\n                      _vm._v(\" \"),\n                      _vm._l(\n                        _vm.lesson_plan.lesson_plan_details,\n                        function (lesson_plan_detail) {\n                          return _c(\"div\", { staticClass: \"m-t-20\" }, [\n                            _c(\"h6\", { staticClass: \"card-title\" }, [\n                              _vm._v(_vm._s(lesson_plan_detail.title)),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"p\", {\n                              staticClass: \"font-90pc\",\n                              domProps: {\n                                textContent: _vm._s(\n                                  lesson_plan_detail.description\n                                ),\n                              },\n                            }),\n                            _vm._v(\" \"),\n                            !_vm.$last(\n                              lesson_plan_detail,\n                              _vm.lesson_plan.lesson_plan_details\n                            )\n                              ? _c(\"hr\")\n                              : _vm._e(),\n                          ])\n                        }\n                      ),\n                      _vm._v(\" \"),\n                      _vm.attachments.length\n                        ? _c(\"div\", [\n                            _c(\n                              \"ul\",\n                              { staticClass: \"m-t-10 upload-file-list\" },\n                              _vm._l(_vm.attachments, function (attachment) {\n                                return _c(\n                                  \"li\",\n                                  { staticClass: \"upload-file-list-item\" },\n                                  [\n                                    _c(\n                                      \"a\",\n                                      {\n                                        staticClass: \"no-link-color\",\n                                        attrs: {\n                                          href: `/resource/lesson/plan/${_vm.lesson_plan.uuid}/attachment/${attachment.uuid}/download?token=${_vm.authToken}`,\n                                        },\n                                      },\n                                      [\n                                        _c(\"i\", {\n                                          class: [\n                                            \"file-icon\",\n                                            \"fas\",\n                                            \"fa-lg\",\n                                            attachment.file_info.icon,\n                                          ],\n                                        }),\n                                        _vm._v(\" \"),\n                                        _c(\n                                          \"span\",\n                                          {\n                                            staticClass:\n                                              \"upload-file-list-item-size\",\n                                          },\n                                          [\n                                            _vm._v(\n                                              _vm._s(attachment.file_info.size)\n                                            ),\n                                          ]\n                                        ),\n                                        _vm._v(\n                                          \" \" + _vm._s(attachment.user_filename)\n                                        ),\n                                      ]\n                                    ),\n                                  ]\n                                )\n                              }),\n                              0\n                            ),\n                          ])\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _c(\"hr\"),\n                      _vm._v(\" \"),\n                      _c(\"p\", [\n                        _c(\"i\", { staticClass: \"far fa-clock\" }),\n                        _vm._v(\" \"),\n                        _c(\"small\", [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"general.created_at\")) +\n                              \" \" +\n                              _vm._s(\n                                _vm._f(\"momentDateTime\")(\n                                  _vm.lesson_plan.created_at\n                                )\n                              )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"pull-right\" }, [\n                          _c(\"i\", { staticClass: \"far fa-clock\" }),\n                          _vm._v(\" \"),\n                          _c(\"small\", [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"general.updated_at\")) +\n                                \" \" +\n                                _vm._s(\n                                  _vm._f(\"momentDateTime\")(\n                                    _vm.lesson_plan.updated_at\n                                  )\n                                )\n                            ),\n                          ]),\n                        ]),\n                      ]),\n                    ]\n                  }),\n                ],\n                2\n              )\n            : _vm._e(),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.loading-overlay.is-full-page{\\r\\n    z-index: 1060;\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/resource/lesson-plan/form.vue\"],\"names\":[],\"mappings\":\";AAyQA;IACA,aAAA;AACA\",\"sourcesContent\":[\"<template>\\r\\n    <div>\\r\\n        <form @submit.prevent=\\\"proceed\\\" @keydown=\\\"lessonPlanForm.errors.clear($event.target.name)\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12 col-sm-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"\\\">{{trans('academic.batch')}} </label>\\r\\n                        <v-select label=\\\"name\\\" v-model=\\\"selected_batch\\\" group-values=\\\"batches\\\" group-label=\\\"course_group\\\" :group-select=\\\"false\\\" name=\\\"batch_id\\\" id=\\\"batch_id\\\" :options=\\\"batches\\\" :placeholder=\\\"trans('academic.select_batch')\\\" @select=\\\"onBatchSelect\\\" @close=\\\"lessonPlanForm.errors.clear('batch_id')\\\" @remove=\\\"lessonPlanForm.batch_id = ''\\\">\\r\\n                            <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!batches.length\\\">\\r\\n                                {{trans('general.no_option_found')}}\\r\\n                            </div>\\r\\n                        </v-select>\\r\\n                        <show-error :form-name=\\\"lessonPlanForm\\\" prop-name=\\\"batch_id\\\"></show-error>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-sm-3\\\">\\r\\n                    <div class=\\\"form-group\\\" v-if=\\\"lessonPlanForm.batch_id\\\">\\r\\n                        <label for=\\\"\\\">{{trans('academic.subject')}} </label>\\r\\n                        <v-select label=\\\"name\\\" v-model=\\\"selected_subject\\\" name=\\\"subject_id\\\" id=\\\"subject_id\\\" :options=\\\"subjects\\\" :placeholder=\\\"trans('resource.select_subject')\\\" @select=\\\"onSubjectSelect\\\" @close=\\\"lessonPlanForm.errors.clear('subject_id')\\\" @remove=\\\"lessonPlanForm.subject_id = ''\\\">\\r\\n                            <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!subjects.length\\\">\\r\\n                                {{trans('general.no_option_found')}}\\r\\n                            </div>\\r\\n                        </v-select>\\r\\n                        <show-error :form-name=\\\"lessonPlanForm\\\" prop-name=\\\"subject_id\\\"></show-error>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-sm-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"\\\">{{trans('resource.lesson_plan_start_date')}}</label>\\r\\n                        <datepicker v-model=\\\"lessonPlanForm.start_date\\\" :bootstrapStyling=\\\"true\\\" @selected=\\\"lessonPlanForm.errors.clear('start_date')\\\" :placeholder=\\\"trans('resource.lesson_plan_start_date')\\\"></datepicker>\\r\\n                        <show-error :form-name=\\\"lessonPlanForm\\\" prop-name=\\\"start_date\\\"></show-error>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-sm-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"\\\">{{trans('resource.lesson_plan_end_date')}}</label>\\r\\n                        <datepicker v-model=\\\"lessonPlanForm.end_date\\\" :bootstrapStyling=\\\"true\\\" @selected=\\\"lessonPlanForm.errors.clear('end_date')\\\" :placeholder=\\\"trans('resource.lesson_plan_end_date')\\\"></datepicker>\\r\\n                        <show-error :form-name=\\\"lessonPlanForm\\\" prop-name=\\\"end_date\\\"></show-error>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"\\\">{{trans('resource.lesson_plan_topic')}}</label>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"lessonPlanForm.topic\\\" name=\\\"topic\\\" :placeholder=\\\"trans('resource.lesson_plan_topic')\\\">\\r\\n                        <show-error :form-name=\\\"lessonPlanForm\\\" prop-name=\\\"topic\\\"></show-error>\\r\\n                    </div>\\r\\n                    <template v-for=\\\"(detail,index) in lessonPlanForm.details\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-12 col-sm-6\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"\\\">{{trans('resource.lesson_plan_detail_title')}} \\r\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-xs btn-danger m-l-20\\\" :key=\\\"`${index}_delete_detail`\\\" v-confirm=\\\"{ok: confirmDeleteDetail(index)}\\\" v-tooltip=\\\"trans('general.delete')\\\"><i class=\\\"fas fa-times\\\"></i></button></label>\\r\\n                                    <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"detail.title\\\" :name=\\\"getDetailTitleName(index)\\\" :placeholder=\\\"trans('resource.lesson_plan_detail_title')\\\">\\r\\n                                    <show-error :form-name=\\\"lessonPlanForm\\\" :prop-name=\\\"getDetailTitleName(index)\\\"></show-error>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-12 col-sm-6\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"\\\">{{trans('resource.lesson_plan_detail_description')}}</label>\\r\\n                                    <autosize-textarea v-model=\\\"detail.description\\\" rows=\\\"2\\\" :name=\\\"getDetailDescriptionName(index)\\\" :placeholder=\\\"trans('resource.lesson_plan_detail_description')\\\"></autosize-textarea>\\r\\n                                    <show-error :form-name=\\\"lessonPlanForm\\\" :prop-name=\\\"getDetailDescriptionName(index)\\\"></show-error>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </template>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button type=\\\"button\\\" @click=\\\"addRow\\\" class=\\\"btn btn-info btn-sm waves-effect waves-light\\\">{{trans('resource.lesson_plan_add_new_detail')}}</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <file-upload-input :button-text=\\\"trans('general.upload_document')\\\" :token=\\\"lessonPlanForm.upload_token\\\" module=\\\"lesson_plan\\\" :clear-file=\\\"clearAttachment\\\" :module-id=\\\"module_id\\\"></file-upload-input>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer text-right\\\">\\r\\n                <router-link to=\\\"/resource/lesson/plan\\\" class=\\\"btn btn-danger waves-effect waves-light \\\">{{trans('general.cancel')}}</router-link>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-info waves-effect waves-light\\\">\\r\\n                    <span v-if=\\\"uuid\\\">{{trans('general.update')}}</span>\\r\\n                    <span v-else>{{trans('general.save')}}</span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</template>\\r\\n\\r\\n\\r\\n<script>\\r\\n\\r\\n    export default {\\r\\n        components: {},\\r\\n        data() {\\r\\n            return {\\r\\n                lessonPlanForm: new Form({\\r\\n                    batch_id: '',\\r\\n                    subject_id: '',\\r\\n                    topic: '',\\r\\n                    start_date: '',\\r\\n                    end_date: '',\\r\\n                    details: [],\\r\\n                    upload_token: ''\\r\\n                }),\\r\\n                batches: [],\\r\\n                selected_batch: null,\\r\\n                subjects: [],\\r\\n                selected_subject: null,\\r\\n                subject_detail: [],\\r\\n                module_id: '',\\r\\n                clearAttachment: true\\r\\n            };\\r\\n        },\\r\\n        props: ['uuid'],\\r\\n        mounted() {\\r\\n            if(!helper.hasPermission('create-lesson-plan') && !helper.hasPermission('edit-lesson-plan')){\\r\\n                helper.notAccessibleMsg();\\r\\n                this.$router.push('/dashboard');\\r\\n            }\\r\\n\\r\\n            if(this.uuid)\\r\\n                this.get();\\r\\n            else {\\r\\n                this.addRow();\\r\\n                this.lessonPlanForm.upload_token = this.$uuid.v4();\\r\\n            }\\r\\n\\r\\n            this.getPreRequisite();\\r\\n        },\\r\\n        methods: {\\r\\n            hasPermission(permission){\\r\\n                return helper.hasPermission(permission);\\r\\n            },\\r\\n            addRow(){\\r\\n                let new_index = this.lessonPlanForm.details.push({\\r\\n                    title: '',\\r\\n                    description: ''\\r\\n                })\\r\\n            },\\r\\n            confirmDeleteDetail(index){\\r\\n                return dialog => this.deleteDetail(index);\\r\\n            },\\r\\n            deleteDetail(index){\\r\\n                this.lessonPlanForm.details.splice(index, 1);\\r\\n            },\\r\\n            getDetailTitleName(index){\\r\\n                return index+'_detail_title';\\r\\n            },\\r\\n            getDetailDescriptionName(index){\\r\\n                return index+'_detail_description';\\r\\n            },\\r\\n            getPreRequisite(){\\r\\n                let loader = this.$loading.show();\\r\\n                axios.get('/api/lesson/plan/pre-requisite')\\r\\n                    .then(response => {\\r\\n                        this.batches = response.batches;\\r\\n                        loader.hide();\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    })\\r\\n            },\\r\\n            getSubjects(){\\r\\n                if (!this.uuid) {\\r\\n                    this.lessonPlanForm.subject_id = '';\\r\\n                    this.selected_subject = null;\\r\\n                }\\r\\n                let loader = this.$loading.show();\\r\\n                axios.post('/api/batch/'+this.lessonPlanForm.batch_id+'/subjects')\\r\\n                    .then(response => {\\r\\n                        this.subjects = response.subjects;\\r\\n                        this.subject_details = response.subject_details;\\r\\n                        loader.hide();\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    })\\r\\n            },\\r\\n            proceed(){\\r\\n                if(this.uuid)\\r\\n                    this.update();\\r\\n                else\\r\\n                    this.store();\\r\\n            },\\r\\n            store(){\\r\\n                let loader = this.$loading.show();\\r\\n                this.lessonPlanForm.post('/api/lesson/plan')\\r\\n                    .then(response => {\\r\\n                        toastr.success(response.message);\\r\\n                        this.clearAttachment = !this.clearAttachment;\\r\\n                        this.lessonPlanForm.upload_token = this.$uuid.v4();\\r\\n                        this.selected_batch = null;\\r\\n                        this.selected_subject = null;\\r\\n                        this.lessonPlanForm.details = [];\\r\\n                        this.addRow();\\r\\n                        this.$emit('completed');\\r\\n                        loader.hide();\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    });\\r\\n            },\\r\\n            get(){\\r\\n                let loader = this.$loading.show();\\r\\n                axios.get('/api/lesson/plan/'+this.uuid)\\r\\n                    .then(response => {\\r\\n                        let lesson_plan = response.lesson_plan;\\r\\n                        this.lessonPlanForm.title = lesson_plan.title;\\r\\n                        this.lessonPlanForm.topic = lesson_plan.topic;\\r\\n                        this.lessonPlanForm.start_date = lesson_plan.start_date;\\r\\n                        this.lessonPlanForm.end_date = lesson_plan.end_date;\\r\\n                        this.lessonPlanForm.batch_id = lesson_plan.subject.batch_id;\\r\\n                        this.lessonPlanForm.subject_id = lesson_plan.subject_id;\\r\\n                        this.selected_batch = this.lessonPlanForm.batch_id ? {id: lesson_plan.subject.batch_id, name: lesson_plan.subject.batch.course.name+' '+lesson_plan.subject.batch.name} : null;\\r\\n                        this.selected_subject = lesson_plan.subject_id ? {id: lesson_plan.subject_id, name: lesson_plan.subject.name+' ('+lesson_plan.subject.code+')'} : null;\\r\\n                        this.lessonPlanForm.upload_token = lesson_plan.upload_token;\\r\\n\\r\\n                        lesson_plan.lesson_plan_details.forEach(lesson_plan_detail => {\\r\\n                            this.lessonPlanForm.details.push({\\r\\n                                title: lesson_plan_detail.title,\\r\\n                                description: lesson_plan_detail.description\\r\\n                            });\\r\\n                        });\\r\\n                        \\r\\n                        this.module_id = lesson_plan.id;\\r\\n                        loader.hide();\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                        this.$router.push('/resource/lesson/plan');\\r\\n                    });\\r\\n            },\\r\\n            update(){\\r\\n                let loader = this.$loading.show();\\r\\n                this.lessonPlanForm.patch('/api/lesson/plan/'+this.uuid)\\r\\n                    .then(response => {\\r\\n                        toastr.success(response.message);\\r\\n                        loader.hide();\\r\\n                        this.$router.push('/resource/lesson/plan');\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    });\\r\\n            },\\r\\n            onBatchSelect(selectedOption){\\r\\n                this.lessonPlanForm.batch_id = selectedOption.id;\\r\\n            },\\r\\n            onSubjectSelect(selectedOption){\\r\\n                this.lessonPlanForm.subject_id = selectedOption.id;\\r\\n            }\\r\\n        },\\r\\n        watch: {\\r\\n            'lessonPlanForm.batch_id': function(val) {\\r\\n                if (val) {\\r\\n                    this.getSubjects();\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n.loading-overlay.is-full-page{\\r\\n    z-index: 1060;\\r\\n}\\r\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&id=720d62f2&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=720d62f2&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\nimport style0 from \"./form.vue?vue&type=style&index=0&id=720d62f2&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('720d62f2')) {\n      api.createRecord('720d62f2', component.options)\n    } else {\n      api.reload('720d62f2', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=720d62f2&\", function () {\n      api.rerender('720d62f2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/resource/lesson-plan/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=7ed0b69f&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('7ed0b69f')) {\n      api.createRecord('7ed0b69f', component.options)\n    } else {\n      api.reload('7ed0b69f', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=7ed0b69f&\", function () {\n      api.rerender('7ed0b69f', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/resource/lesson-plan/index.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./show.vue?vue&type=template&id=d2e94f80&\"\nimport script from \"./show.vue?vue&type=script&lang=js&\"\nexport * from \"./show.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('d2e94f80')) {\n      api.createRecord('d2e94f80', component.options)\n    } else {\n      api.reload('d2e94f80', component.options)\n    }\n    module.hot.accept(\"./show.vue?vue&type=template&id=d2e94f80&\", function () {\n      api.rerender('d2e94f80', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/resource/lesson-plan/show.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=720d62f2&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=7ed0b69f&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=template&id=d2e94f80&\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&id=720d62f2&lang=css&\""],"names":[],"sourceRoot":""}