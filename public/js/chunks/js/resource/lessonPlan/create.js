"use strict";(self.webpackChunkInstiKit=self.webpackChunkInstiKit||[]).push([[2517],{53825:(e,s,t)=>{t.d(s,{Z:()=>a});var n=t(94015),r=t.n(n),o=t(23645),l=t.n(o)()(r());l.push([e.id,".loading-overlay.is-full-page{z-index:1060}","",{version:3,sources:["webpack://./resources/js/views/resource/lesson-plan/form.vue"],names:[],mappings:"AAyQA,8BACA,YACA",sourcesContent:['<template>\r\n    <div>\r\n        <form @submit.prevent="proceed" @keydown="lessonPlanForm.errors.clear($event.target.name)">\r\n            <div class="row">\r\n                <div class="col-12 col-sm-3">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'academic.batch\')}} </label>\r\n                        <v-select label="name" v-model="selected_batch" group-values="batches" group-label="course_group" :group-select="false" name="batch_id" id="batch_id" :options="batches" :placeholder="trans(\'academic.select_batch\')" @select="onBatchSelect" @close="lessonPlanForm.errors.clear(\'batch_id\')" @remove="lessonPlanForm.batch_id = \'\'">\r\n                            <div class="multiselect__option" slot="afterList" v-if="!batches.length">\r\n                                {{trans(\'general.no_option_found\')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name="lessonPlanForm" prop-name="batch_id"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class="col-12 col-sm-3">\r\n                    <div class="form-group" v-if="lessonPlanForm.batch_id">\r\n                        <label for="">{{trans(\'academic.subject\')}} </label>\r\n                        <v-select label="name" v-model="selected_subject" name="subject_id" id="subject_id" :options="subjects" :placeholder="trans(\'resource.select_subject\')" @select="onSubjectSelect" @close="lessonPlanForm.errors.clear(\'subject_id\')" @remove="lessonPlanForm.subject_id = \'\'">\r\n                            <div class="multiselect__option" slot="afterList" v-if="!subjects.length">\r\n                                {{trans(\'general.no_option_found\')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name="lessonPlanForm" prop-name="subject_id"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class="col-12 col-sm-3">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'resource.lesson_plan_start_date\')}}</label>\r\n                        <datepicker v-model="lessonPlanForm.start_date" :bootstrapStyling="true" @selected="lessonPlanForm.errors.clear(\'start_date\')" :placeholder="trans(\'resource.lesson_plan_start_date\')"></datepicker>\r\n                        <show-error :form-name="lessonPlanForm" prop-name="start_date"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class="col-12 col-sm-3">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'resource.lesson_plan_end_date\')}}</label>\r\n                        <datepicker v-model="lessonPlanForm.end_date" :bootstrapStyling="true" @selected="lessonPlanForm.errors.clear(\'end_date\')" :placeholder="trans(\'resource.lesson_plan_end_date\')"></datepicker>\r\n                        <show-error :form-name="lessonPlanForm" prop-name="end_date"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="row">\r\n                <div class="col-12">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'resource.lesson_plan_topic\')}}</label>\r\n                        <input class="form-control" type="text" v-model="lessonPlanForm.topic" name="topic" :placeholder="trans(\'resource.lesson_plan_topic\')">\r\n                        <show-error :form-name="lessonPlanForm" prop-name="topic"></show-error>\r\n                    </div>\r\n                    <template v-for="(detail,index) in lessonPlanForm.details">\r\n                        <div class="row">\r\n                            <div class="col-12 col-sm-6">\r\n                                <div class="form-group">\r\n                                    <label for="">{{trans(\'resource.lesson_plan_detail_title\')}} \r\n                                    <button type="button" class="btn btn-xs btn-danger m-l-20" :key="`${index}_delete_detail`" v-confirm="{ok: confirmDeleteDetail(index)}" v-tooltip="trans(\'general.delete\')"><i class="fas fa-times"></i></button></label>\r\n                                    <input class="form-control" type="text" v-model="detail.title" :name="getDetailTitleName(index)" :placeholder="trans(\'resource.lesson_plan_detail_title\')">\r\n                                    <show-error :form-name="lessonPlanForm" :prop-name="getDetailTitleName(index)"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-12 col-sm-6">\r\n                                <div class="form-group">\r\n                                    <label for="">{{trans(\'resource.lesson_plan_detail_description\')}}</label>\r\n                                    <autosize-textarea v-model="detail.description" rows="2" :name="getDetailDescriptionName(index)" :placeholder="trans(\'resource.lesson_plan_detail_description\')"></autosize-textarea>\r\n                                    <show-error :form-name="lessonPlanForm" :prop-name="getDetailDescriptionName(index)"></show-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </template>\r\n                    <div class="form-group">\r\n                        <button type="button" @click="addRow" class="btn btn-info btn-sm waves-effect waves-light">{{trans(\'resource.lesson_plan_add_new_detail\')}}</button>\r\n                    </div>\r\n                    <div class="form-group">\r\n                        <file-upload-input :button-text="trans(\'general.upload_document\')" :token="lessonPlanForm.upload_token" module="lesson_plan" :clear-file="clearAttachment" :module-id="module_id"></file-upload-input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="card-footer text-right">\r\n                <router-link to="/resource/lesson/plan" class="btn btn-danger waves-effect waves-light ">{{trans(\'general.cancel\')}}</router-link>\r\n                <button type="submit" class="btn btn-info waves-effect waves-light">\r\n                    <span v-if="uuid">{{trans(\'general.update\')}}</span>\r\n                    <span v-else>{{trans(\'general.save\')}}</span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n    export default {\r\n        components: {},\r\n        data() {\r\n            return {\r\n                lessonPlanForm: new Form({\r\n                    batch_id: \'\',\r\n                    subject_id: \'\',\r\n                    topic: \'\',\r\n                    start_date: \'\',\r\n                    end_date: \'\',\r\n                    details: [],\r\n                    upload_token: \'\'\r\n                }),\r\n                batches: [],\r\n                selected_batch: null,\r\n                subjects: [],\r\n                selected_subject: null,\r\n                subject_detail: [],\r\n                module_id: \'\',\r\n                clearAttachment: true\r\n            };\r\n        },\r\n        props: [\'uuid\'],\r\n        mounted() {\r\n            if(!helper.hasPermission(\'create-lesson-plan\') && !helper.hasPermission(\'edit-lesson-plan\')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push(\'/dashboard\');\r\n            }\r\n\r\n            if(this.uuid)\r\n                this.get();\r\n            else {\r\n                this.addRow();\r\n                this.lessonPlanForm.upload_token = this.$uuid.v4();\r\n            }\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            addRow(){\r\n                let new_index = this.lessonPlanForm.details.push({\r\n                    title: \'\',\r\n                    description: \'\'\r\n                })\r\n            },\r\n            confirmDeleteDetail(index){\r\n                return dialog => this.deleteDetail(index);\r\n            },\r\n            deleteDetail(index){\r\n                this.lessonPlanForm.details.splice(index, 1);\r\n            },\r\n            getDetailTitleName(index){\r\n                return index+\'_detail_title\';\r\n            },\r\n            getDetailDescriptionName(index){\r\n                return index+\'_detail_description\';\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get(\'/api/lesson/plan/pre-requisite\')\r\n                    .then(response => {\r\n                        this.batches = response.batches;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            getSubjects(){\r\n                if (!this.uuid) {\r\n                    this.lessonPlanForm.subject_id = \'\';\r\n                    this.selected_subject = null;\r\n                }\r\n                let loader = this.$loading.show();\r\n                axios.post(\'/api/batch/\'+this.lessonPlanForm.batch_id+\'/subjects\')\r\n                    .then(response => {\r\n                        this.subjects = response.subjects;\r\n                        this.subject_details = response.subject_details;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            proceed(){\r\n                if(this.uuid)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.lessonPlanForm.post(\'/api/lesson/plan\')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.clearAttachment = !this.clearAttachment;\r\n                        this.lessonPlanForm.upload_token = this.$uuid.v4();\r\n                        this.selected_batch = null;\r\n                        this.selected_subject = null;\r\n                        this.lessonPlanForm.details = [];\r\n                        this.addRow();\r\n                        this.$emit(\'completed\');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get(\'/api/lesson/plan/\'+this.uuid)\r\n                    .then(response => {\r\n                        let lesson_plan = response.lesson_plan;\r\n                        this.lessonPlanForm.title = lesson_plan.title;\r\n                        this.lessonPlanForm.topic = lesson_plan.topic;\r\n                        this.lessonPlanForm.start_date = lesson_plan.start_date;\r\n                        this.lessonPlanForm.end_date = lesson_plan.end_date;\r\n                        this.lessonPlanForm.batch_id = lesson_plan.subject.batch_id;\r\n                        this.lessonPlanForm.subject_id = lesson_plan.subject_id;\r\n                        this.selected_batch = this.lessonPlanForm.batch_id ? {id: lesson_plan.subject.batch_id, name: lesson_plan.subject.batch.course.name+\' \'+lesson_plan.subject.batch.name} : null;\r\n                        this.selected_subject = lesson_plan.subject_id ? {id: lesson_plan.subject_id, name: lesson_plan.subject.name+\' (\'+lesson_plan.subject.code+\')\'} : null;\r\n                        this.lessonPlanForm.upload_token = lesson_plan.upload_token;\r\n\r\n                        lesson_plan.lesson_plan_details.forEach(lesson_plan_detail => {\r\n                            this.lessonPlanForm.details.push({\r\n                                title: lesson_plan_detail.title,\r\n                                description: lesson_plan_detail.description\r\n                            });\r\n                        });\r\n                        \r\n                        this.module_id = lesson_plan.id;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push(\'/resource/lesson/plan\');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.lessonPlanForm.patch(\'/api/lesson/plan/\'+this.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push(\'/resource/lesson/plan\');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onBatchSelect(selectedOption){\r\n                this.lessonPlanForm.batch_id = selectedOption.id;\r\n            },\r\n            onSubjectSelect(selectedOption){\r\n                this.lessonPlanForm.subject_id = selectedOption.id;\r\n            }\r\n        },\r\n        watch: {\r\n            \'lessonPlanForm.batch_id\': function(val) {\r\n                if (val) {\r\n                    this.getSubjects();\r\n                }\r\n            }\r\n        }\r\n    }\r\n<\/script>\r\n\r\n<style>\r\n.loading-overlay.is-full-page{\r\n    z-index: 1060;\r\n}\r\n</style>'],sourceRoot:""}]);const a=l},74598:(e,s,t)=>{t.r(s),t.d(s,{default:()=>r});const n={components:{lessonPlanForm:t(59482).Z},data:function(){return{}},mounted:function(){helper.hasPermission("create-lesson-plan")||(helper.notAccessibleMsg(),this.$router.push("/dashboard"))},methods:{},computed:{},filters:{},watch:{}};const r=(0,t(51900).Z)(n,(function(){var e=this,s=e._self._c;return s("div",[s("div",{staticClass:"page-titles"},[s("div",{staticClass:"row"},[s("div",{staticClass:"col-12 col-sm-6"},[s("h3",{staticClass:"text-themecolor"},[e._v(e._s(e.trans("resource.add_new_lesson_plan")))])]),e._v(" "),s("div",{staticClass:"col-12 col-sm-6"},[s("div",{staticClass:"action-buttons pull-right"},[s("button",{staticClass:"btn btn-info btn-sm",on:{click:function(s){return e.$router.push("/resource/lesson/plan")}}},[s("i",{staticClass:"fas fa-list"}),e._v(" "),s("span",{staticClass:"d-none d-sm-inline"},[e._v(e._s(e.trans("resource.lesson_plan")))])])])])])]),e._v(" "),s("div",{staticClass:"container-fluid"},[s("div",{staticClass:"card card-form"},[s("div",{staticClass:"card-body p-t-20"},[s("lesson-plan-form")],1)])])])}),[],!1,null,null,null).exports},59482:(e,s,t)=>{t.d(s,{Z:()=>i});const n={components:{},data:function(){return{lessonPlanForm:new Form({batch_id:"",subject_id:"",topic:"",start_date:"",end_date:"",details:[],upload_token:""}),batches:[],selected_batch:null,subjects:[],selected_subject:null,subject_detail:[],module_id:"",clearAttachment:!0}},props:["uuid"],mounted:function(){helper.hasPermission("create-lesson-plan")||helper.hasPermission("edit-lesson-plan")||(helper.notAccessibleMsg(),this.$router.push("/dashboard")),this.uuid?this.get():(this.addRow(),this.lessonPlanForm.upload_token=this.$uuid.v4()),this.getPreRequisite()},methods:{hasPermission:function(e){return helper.hasPermission(e)},addRow:function(){this.lessonPlanForm.details.push({title:"",description:""})},confirmDeleteDetail:function(e){var s=this;return function(t){return s.deleteDetail(e)}},deleteDetail:function(e){this.lessonPlanForm.details.splice(e,1)},getDetailTitleName:function(e){return e+"_detail_title"},getDetailDescriptionName:function(e){return e+"_detail_description"},getPreRequisite:function(){var e=this,s=this.$loading.show();axios.get("/api/lesson/plan/pre-requisite").then((function(t){e.batches=t.batches,s.hide()})).catch((function(e){s.hide(),helper.showErrorMsg(e)}))},getSubjects:function(){var e=this;this.uuid||(this.lessonPlanForm.subject_id="",this.selected_subject=null);var s=this.$loading.show();axios.post("/api/batch/"+this.lessonPlanForm.batch_id+"/subjects").then((function(t){e.subjects=t.subjects,e.subject_details=t.subject_details,s.hide()})).catch((function(e){s.hide(),helper.showErrorMsg(e)}))},proceed:function(){this.uuid?this.update():this.store()},store:function(){var e=this,s=this.$loading.show();this.lessonPlanForm.post("/api/lesson/plan").then((function(t){toastr.success(t.message),e.clearAttachment=!e.clearAttachment,e.lessonPlanForm.upload_token=e.$uuid.v4(),e.selected_batch=null,e.selected_subject=null,e.lessonPlanForm.details=[],e.addRow(),e.$emit("completed"),s.hide()})).catch((function(e){s.hide(),helper.showErrorMsg(e)}))},get:function(){var e=this,s=this.$loading.show();axios.get("/api/lesson/plan/"+this.uuid).then((function(t){var n=t.lesson_plan;e.lessonPlanForm.title=n.title,e.lessonPlanForm.topic=n.topic,e.lessonPlanForm.start_date=n.start_date,e.lessonPlanForm.end_date=n.end_date,e.lessonPlanForm.batch_id=n.subject.batch_id,e.lessonPlanForm.subject_id=n.subject_id,e.selected_batch=e.lessonPlanForm.batch_id?{id:n.subject.batch_id,name:n.subject.batch.course.name+" "+n.subject.batch.name}:null,e.selected_subject=n.subject_id?{id:n.subject_id,name:n.subject.name+" ("+n.subject.code+")"}:null,e.lessonPlanForm.upload_token=n.upload_token,n.lesson_plan_details.forEach((function(s){e.lessonPlanForm.details.push({title:s.title,description:s.description})})),e.module_id=n.id,s.hide()})).catch((function(t){s.hide(),helper.showErrorMsg(t),e.$router.push("/resource/lesson/plan")}))},update:function(){var e=this,s=this.$loading.show();this.lessonPlanForm.patch("/api/lesson/plan/"+this.uuid).then((function(t){toastr.success(t.message),s.hide(),e.$router.push("/resource/lesson/plan")})).catch((function(e){s.hide(),helper.showErrorMsg(e)}))},onBatchSelect:function(e){this.lessonPlanForm.batch_id=e.id},onSubjectSelect:function(e){this.lessonPlanForm.subject_id=e.id}},watch:{"lessonPlanForm.batch_id":function(e){e&&this.getSubjects()}}};var r=t(93379),o=t.n(r),l=t(53825),a={insert:"head",singleton:!1};o()(l.Z,a);l.Z.locals;const i=(0,t(51900).Z)(n,(function(){var e=this,s=e._self._c;return s("div",[s("form",{on:{submit:function(s){return s.preventDefault(),e.proceed.apply(null,arguments)},keydown:function(s){return e.lessonPlanForm.errors.clear(s.target.name)}}},[s("div",{staticClass:"row"},[s("div",{staticClass:"col-12 col-sm-3"},[s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("academic.batch"))+" ")]),e._v(" "),s("v-select",{attrs:{label:"name","group-values":"batches","group-label":"course_group","group-select":!1,name:"batch_id",id:"batch_id",options:e.batches,placeholder:e.trans("academic.select_batch")},on:{select:e.onBatchSelect,close:function(s){return e.lessonPlanForm.errors.clear("batch_id")},remove:function(s){e.lessonPlanForm.batch_id=""}},model:{value:e.selected_batch,callback:function(s){e.selected_batch=s},expression:"selected_batch"}},[e.batches.length?e._e():s("div",{staticClass:"multiselect__option",attrs:{slot:"afterList"},slot:"afterList"},[e._v("\n                            "+e._s(e.trans("general.no_option_found"))+"\n                        ")])]),e._v(" "),s("show-error",{attrs:{"form-name":e.lessonPlanForm,"prop-name":"batch_id"}})],1)]),e._v(" "),s("div",{staticClass:"col-12 col-sm-3"},[e.lessonPlanForm.batch_id?s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("academic.subject"))+" ")]),e._v(" "),s("v-select",{attrs:{label:"name",name:"subject_id",id:"subject_id",options:e.subjects,placeholder:e.trans("resource.select_subject")},on:{select:e.onSubjectSelect,close:function(s){return e.lessonPlanForm.errors.clear("subject_id")},remove:function(s){e.lessonPlanForm.subject_id=""}},model:{value:e.selected_subject,callback:function(s){e.selected_subject=s},expression:"selected_subject"}},[e.subjects.length?e._e():s("div",{staticClass:"multiselect__option",attrs:{slot:"afterList"},slot:"afterList"},[e._v("\n                            "+e._s(e.trans("general.no_option_found"))+"\n                        ")])]),e._v(" "),s("show-error",{attrs:{"form-name":e.lessonPlanForm,"prop-name":"subject_id"}})],1):e._e()]),e._v(" "),s("div",{staticClass:"col-12 col-sm-3"},[s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("resource.lesson_plan_start_date")))]),e._v(" "),s("datepicker",{attrs:{bootstrapStyling:!0,placeholder:e.trans("resource.lesson_plan_start_date")},on:{selected:function(s){return e.lessonPlanForm.errors.clear("start_date")}},model:{value:e.lessonPlanForm.start_date,callback:function(s){e.$set(e.lessonPlanForm,"start_date",s)},expression:"lessonPlanForm.start_date"}}),e._v(" "),s("show-error",{attrs:{"form-name":e.lessonPlanForm,"prop-name":"start_date"}})],1)]),e._v(" "),s("div",{staticClass:"col-12 col-sm-3"},[s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("resource.lesson_plan_end_date")))]),e._v(" "),s("datepicker",{attrs:{bootstrapStyling:!0,placeholder:e.trans("resource.lesson_plan_end_date")},on:{selected:function(s){return e.lessonPlanForm.errors.clear("end_date")}},model:{value:e.lessonPlanForm.end_date,callback:function(s){e.$set(e.lessonPlanForm,"end_date",s)},expression:"lessonPlanForm.end_date"}}),e._v(" "),s("show-error",{attrs:{"form-name":e.lessonPlanForm,"prop-name":"end_date"}})],1)])]),e._v(" "),s("div",{staticClass:"row"},[s("div",{staticClass:"col-12"},[s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("resource.lesson_plan_topic")))]),e._v(" "),s("input",{directives:[{name:"model",rawName:"v-model",value:e.lessonPlanForm.topic,expression:"lessonPlanForm.topic"}],staticClass:"form-control",attrs:{type:"text",name:"topic",placeholder:e.trans("resource.lesson_plan_topic")},domProps:{value:e.lessonPlanForm.topic},on:{input:function(s){s.target.composing||e.$set(e.lessonPlanForm,"topic",s.target.value)}}}),e._v(" "),s("show-error",{attrs:{"form-name":e.lessonPlanForm,"prop-name":"topic"}})],1),e._v(" "),e._l(e.lessonPlanForm.details,(function(t,n){return[s("div",{staticClass:"row"},[s("div",{staticClass:"col-12 col-sm-6"},[s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("resource.lesson_plan_detail_title"))+" \n                                "),s("button",{directives:[{name:"confirm",rawName:"v-confirm",value:{ok:e.confirmDeleteDetail(n)},expression:"{ok: confirmDeleteDetail(index)}"},{name:"tooltip",rawName:"v-tooltip",value:e.trans("general.delete"),expression:"trans('general.delete')"}],key:"".concat(n,"_delete_detail"),staticClass:"btn btn-xs btn-danger m-l-20",attrs:{type:"button"}},[s("i",{staticClass:"fas fa-times"})])]),e._v(" "),s("input",{directives:[{name:"model",rawName:"v-model",value:t.title,expression:"detail.title"}],staticClass:"form-control",attrs:{type:"text",name:e.getDetailTitleName(n),placeholder:e.trans("resource.lesson_plan_detail_title")},domProps:{value:t.title},on:{input:function(s){s.target.composing||e.$set(t,"title",s.target.value)}}}),e._v(" "),s("show-error",{attrs:{"form-name":e.lessonPlanForm,"prop-name":e.getDetailTitleName(n)}})],1)]),e._v(" "),s("div",{staticClass:"col-12 col-sm-6"},[s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("resource.lesson_plan_detail_description")))]),e._v(" "),s("autosize-textarea",{attrs:{rows:"2",name:e.getDetailDescriptionName(n),placeholder:e.trans("resource.lesson_plan_detail_description")},model:{value:t.description,callback:function(s){e.$set(t,"description",s)},expression:"detail.description"}}),e._v(" "),s("show-error",{attrs:{"form-name":e.lessonPlanForm,"prop-name":e.getDetailDescriptionName(n)}})],1)])])]})),e._v(" "),s("div",{staticClass:"form-group"},[s("button",{staticClass:"btn btn-info btn-sm waves-effect waves-light",attrs:{type:"button"},on:{click:e.addRow}},[e._v(e._s(e.trans("resource.lesson_plan_add_new_detail")))])]),e._v(" "),s("div",{staticClass:"form-group"},[s("file-upload-input",{attrs:{"button-text":e.trans("general.upload_document"),token:e.lessonPlanForm.upload_token,module:"lesson_plan","clear-file":e.clearAttachment,"module-id":e.module_id}})],1)],2)]),e._v(" "),s("div",{staticClass:"card-footer text-right"},[s("router-link",{staticClass:"btn btn-danger waves-effect waves-light",attrs:{to:"/resource/lesson/plan"}},[e._v(e._s(e.trans("general.cancel")))]),e._v(" "),s("button",{staticClass:"btn btn-info waves-effect waves-light",attrs:{type:"submit"}},[e.uuid?s("span",[e._v(e._s(e.trans("general.update")))]):s("span",[e._v(e._s(e.trans("general.save")))])])],1)])])}),[],!1,null,null,null).exports}}]);