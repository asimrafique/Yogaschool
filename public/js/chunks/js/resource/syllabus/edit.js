"use strict";(self.webpackChunkInstiKit=self.webpackChunkInstiKit||[]).push([[4306],{82266:(e,t,s)=>{s.d(t,{Z:()=>o});var r=s(94015),a=s.n(r),l=s(23645),n=s.n(l)()(a());n.push([e.id,".loading-overlay.is-full-page{z-index:1060}","",{version:3,sources:["webpack://./resources/js/views/resource/syllabus/form.vue"],names:[],mappings:"AAuUA,8BACA,YACA",sourcesContent:['<template>\r\n    <div>\r\n        <form @submit.prevent="proceed" @keydown="syllabusForm.errors.clear($event.target.name)">\r\n            <div class="row">\r\n                <div class="col-12 col-sm-3">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'academic.batch\')}} </label>\r\n                        <v-select label="name" v-model="selected_batch" group-values="batches" group-label="course_group" :group-select="false" name="batch_id" id="batch_id" :options="batches" :placeholder="trans(\'academic.select_batch\')" @select="onBatchSelect" @close="syllabusForm.errors.clear(\'batch_id\')" @remove="syllabusForm.batch_id = \'\'">\r\n                            <div class="multiselect__option" slot="afterList" v-if="!batches.length">\r\n                                {{trans(\'general.no_option_found\')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name="syllabusForm" prop-name="batch_id"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class="col-12 col-sm-3">\r\n                    <div class="form-group" v-if="syllabusForm.batch_id">\r\n                        <label for="">{{trans(\'academic.subject\')}} </label>\r\n                        <v-select label="name" v-model="selected_subject" name="subject_id" id="subject_id" :options="subjects" :placeholder="trans(\'resource.select_subject\')" @select="onSubjectSelect" @close="syllabusForm.errors.clear(\'subject_id\')" @remove="syllabusForm.subject_id = \'\'">\r\n                            <div class="multiselect__option" slot="afterList" v-if="!subjects.length">\r\n                                {{trans(\'general.no_option_found\')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name="syllabusForm" prop-name="subject_id"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class="col-12 col-sm-6">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'resource.syllabus_title\')}}</label>\r\n                        <input class="form-control" type="text" v-model="syllabusForm.title" name="title" :placeholder="trans(\'resource.syllabus_title\')">\r\n                        <show-error :form-name="syllabusForm" prop-name="title"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class="col-12">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'resource.syllabus_description\')}}</label>\r\n                        <autosize-textarea v-model="syllabusForm.description" rows="2" name="description" :placeholder="trans(\'resource.syllabus_description\')"></autosize-textarea>\r\n                        <show-error :form-name="syllabusForm" prop-name="description"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="row">\r\n                <div class="col-12 col-sm-6">\r\n                    <h4 class="card-title">{{trans(\'resource.syllabus_detail\')}}</h4>\r\n                    <template v-for="(detail,index) in syllabusForm.details">\r\n                        <div class="form-group">\r\n                            <label for="">{{trans(\'resource.syllabus_detail_title\')}} \r\n                            <button type="button" class="btn btn-xs btn-danger m-l-20" :key="`${index}_delete_detail`" v-confirm="{ok: confirmDeleteDetail(index)}" v-tooltip="trans(\'general.delete\')"><i class="fas fa-times"></i></button></label>\r\n                            <input class="form-control" type="text" v-model="detail.title" :name="getDetailTitleName(index)" :placeholder="trans(\'resource.syllabus_detail_title\')">\r\n                            <show-error :form-name="syllabusForm" :prop-name="getDetailTitleName(index)"></show-error>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label for="">{{trans(\'resource.syllabus_detail_description\')}}</label>\r\n                            <autosize-textarea v-model="detail.description" rows="2" :name="getDetailDescriptionName(index)" :placeholder="trans(\'resource.syllabus_detail_description\')"></autosize-textarea>\r\n                            <show-error :form-name="syllabusForm" :prop-name="getDetailDescriptionName(index)"></show-error>\r\n                        </div>\r\n                    </template>\r\n                    <div class="form-group">\r\n                        <button type="button" @click="addDetailRow" class="btn btn-info btn-sm waves-effect waves-light">{{trans(\'resource.syllabus_add_new_detail\')}}</button>\r\n                    </div>\r\n                </div>\r\n                <div class="col-12 col-sm-6">\r\n                    <h4 class="card-title">{{trans(\'resource.syllabus_topic\')}}</h4>\r\n                    <template v-for="(topic,index) in syllabusForm.topics">\r\n                        <div class="form-group">\r\n                            <label for="">{{trans(\'resource.syllabus_topic_title\')}} \r\n                                <button type="button" class="btn btn-xs btn-danger m-l-20" :key="`${index}_delete_topic`" v-confirm="{ok: confirmDeleteTopic(index)}" v-tooltip="trans(\'general.delete\')"><i class="fas fa-times"></i></button></label>\r\n                            <input class="form-control" type="text" v-model="topic.title" :name="getTopicTitleName(index)" :placeholder="trans(\'resource.syllabus_topic_title\')">\r\n                            <show-error :form-name="syllabusForm" :prop-name="getTopicTitleName(index)"></show-error>\r\n                        </div>\r\n                        <div class="row">\r\n                            <div class="col-12 col-sm-6">\r\n                                <div class="form-group">\r\n                                    <label for="">{{trans(\'resource.syllabus_topic_start_date\')}}</label>\r\n                                    <datepicker v-model="topic.start_date" :bootstrapStyling="true" @selected="syllabusForm.errors.clear(getTopicStartDateName(index))" :placeholder="trans(\'resource.syllabus_start_date\')"></datepicker>\r\n                                    <show-error :form-name="syllabusForm" :prop-name="getTopicStartDateName(index)"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-12 col-sm-6">\r\n                                <div class="form-group">\r\n                                    <label for="">{{trans(\'resource.syllabus_topic_end_date\')}}</label>\r\n                                    <datepicker v-model="topic.end_date" :bootstrapStyling="true" @selected="syllabusForm.errors.clear(getTopicEndDateName(index))" :placeholder="trans(\'resource.syllabus_end_date\')"></datepicker>\r\n                                    <show-error :form-name="syllabusForm" :prop-name="getTopicEndDateName(index)"></show-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label for="">{{trans(\'resource.syllabus_topic_description\')}}</label>\r\n                            <autosize-textarea v-model="topic.description" rows="2" :name="getTopicDescriptionName(index)" :placeholder="trans(\'resource.syllabus_topic_description\')"></autosize-textarea>\r\n                            <show-error :form-name="syllabusForm" :prop-name="getTopicDescriptionName(index)"></show-error>\r\n                        </div>\r\n                    </template>\r\n                    <div class="form-group">\r\n                        <button type="button" @click="addTopicRow" class="btn btn-info btn-sm waves-effect waves-light">{{trans(\'resource.syllabus_add_new_topic\')}}</button>\r\n                    </div>\r\n                </div>\r\n                <div class="col-12">\r\n                    <div class="form-group">\r\n                        <file-upload-input :button-text="trans(\'general.upload_document\')" :token="syllabusForm.upload_token" module="syllabus" :clear-file="clearAttachment" :module-id="module_id"></file-upload-input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="card-footer text-right">\r\n                <router-link to="/resource/syllabus" class="btn btn-danger waves-effect waves-light ">{{trans(\'general.cancel\')}}</router-link>\r\n                <button type="submit" class="btn btn-info waves-effect waves-light">\r\n                    <span v-if="uuid">{{trans(\'general.update\')}}</span>\r\n                    <span v-else>{{trans(\'general.save\')}}</span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n    export default {\r\n        components: {},\r\n        data() {\r\n            return {\r\n                syllabusForm: new Form({\r\n                    title: \'\',\r\n                    description: \'\',\r\n                    batch_id: \'\',\r\n                    subject_id: \'\',\r\n                    details: [],\r\n                    topics: [],\r\n                    upload_token: \'\'\r\n                }),\r\n                batches: [],\r\n                selected_batch: null,\r\n                subjects: [],\r\n                selected_subject: null,\r\n                subject_detail: [],\r\n                module_id: \'\',\r\n                clearAttachment: true\r\n            };\r\n        },\r\n        props: [\'uuid\'],\r\n        mounted() {\r\n            if(!helper.hasPermission(\'create-syllabus\') && !helper.hasPermission(\'edit-syllabus\')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push(\'/dashboard\');\r\n            }\r\n\r\n            if(this.uuid)\r\n                this.get();\r\n            else {\r\n                this.addDetailRow();\r\n                this.addTopicRow();\r\n                this.syllabusForm.upload_token = this.$uuid.v4();\r\n            }\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            addDetailRow(){\r\n                let new_index = this.syllabusForm.details.push({\r\n                    title: \'\',\r\n                    description: \'\'\r\n                })\r\n            },\r\n            confirmDeleteDetail(index){\r\n                return dialog => this.deleteDetail(index);\r\n            },\r\n            deleteDetail(index){\r\n                this.syllabusForm.details.splice(index, 1);\r\n            },\r\n            getDetailTitleName(index){\r\n                return index+\'_detail_title\';\r\n            },\r\n            getDetailDescriptionName(index){\r\n                return index+\'_detail_description\';\r\n            },\r\n            addTopicRow(){\r\n                let new_index = this.syllabusForm.topics.push({\r\n                    title: \'\',\r\n                    start_date: \'\',\r\n                    end_date: \'\',\r\n                    description: \'\'\r\n                })\r\n            },\r\n            confirmDeleteTopic(index){\r\n                return dialog => this.deleteTopic(index);\r\n            },\r\n            deleteTopic(index){\r\n                this.syllabusForm.topics.splice(index, 1);\r\n            },\r\n            getTopicTitleName(index){\r\n                return index+\'_topic_title\';\r\n            },\r\n            getTopicDescriptionName(index){\r\n                return index+\'_topic_description\';\r\n            },\r\n            getTopicStartDateName(index){\r\n                return index+\'_topic_start_date\';\r\n            },\r\n            getTopicEndDateName(index){\r\n                return index+\'_topic_end_date\';\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get(\'/api/syllabus/pre-requisite\')\r\n                    .then(response => {\r\n                        this.batches = response.batches;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            getSubjects(){\r\n                if (!this.uuid) {\r\n                    this.syllabusForm.subject_id = \'\';\r\n                    this.selected_subject = null;\r\n                }\r\n                let loader = this.$loading.show();\r\n                axios.post(\'/api/batch/\'+this.syllabusForm.batch_id+\'/subjects\')\r\n                    .then(response => {\r\n                        this.subjects = response.subjects;\r\n                        this.subject_details = response.subject_details;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            proceed(){\r\n                if(this.uuid)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.syllabusForm.post(\'/api/syllabus\')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.clearAttachment = !this.clearAttachment;\r\n                        this.syllabusForm.upload_token = this.$uuid.v4();\r\n                        this.selected_batch = null;\r\n                        this.selected_subject = null;\r\n                        this.syllabusForm.details = [];\r\n                        this.syllabusForm.topics = [];\r\n                        this.addRow();\r\n                        this.$emit(\'completed\');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get(\'/api/syllabus/\'+this.uuid)\r\n                    .then(response => {\r\n                        let syllabus = response.syllabus;\r\n                        this.syllabusForm.title = syllabus.title;\r\n                        this.syllabusForm.description = syllabus.description;\r\n                        this.syllabusForm.batch_id = syllabus.subject.batch_id;\r\n                        this.syllabusForm.subject_id = syllabus.subject_id;\r\n                        this.selected_batch = this.syllabusForm.batch_id ? {id: syllabus.subject.batch_id, name: syllabus.subject.batch.course.name+\' \'+syllabus.subject.batch.name} : null;\r\n                        this.selected_subject = syllabus.subject_id ? {id: syllabus.subject_id, name: syllabus.subject.name+\' (\'+syllabus.subject.code+\')\'} : null;\r\n                        this.syllabusForm.upload_token = syllabus.upload_token;\r\n\r\n                        syllabus.syllabus_details.forEach(syllabus_detail => {\r\n                            this.syllabusForm.details.push({\r\n                                title: syllabus_detail.title,\r\n                                description: syllabus_detail.description\r\n                            });\r\n                        });\r\n                        \r\n                        syllabus.syllabus_topics.forEach(syllabus_topic => {\r\n                            this.syllabusForm.topics.push({\r\n                                title: syllabus_topic.title,\r\n                                start_date: syllabus_topic.start_date,\r\n                                end_date: syllabus_topic.end_date,\r\n                                description: syllabus_topic.description\r\n                            });\r\n                        });\r\n                        \r\n                        this.module_id = syllabus.id;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push(\'/resource/syllabus\');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.syllabusForm.patch(\'/api/syllabus/\'+this.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push(\'/resource/syllabus\');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onBatchSelect(selectedOption){\r\n                this.syllabusForm.batch_id = selectedOption.id;\r\n            },\r\n            onSubjectSelect(selectedOption){\r\n                this.syllabusForm.subject_id = selectedOption.id;\r\n            }\r\n        },\r\n        watch: {\r\n            \'syllabusForm.batch_id\': function(val) {\r\n                if (val) {\r\n                    this.getSubjects();\r\n                }\r\n            }\r\n        }\r\n    }\r\n<\/script>\r\n\r\n<style>\r\n.loading-overlay.is-full-page{\r\n    z-index: 1060;\r\n}\r\n</style>'],sourceRoot:""}]);const o=n},25362:(e,t,s)=>{s.r(t),s.d(t,{default:()=>a});const r={components:{syllabusForm:s(38313).Z},data:function(){return{uuid:this.$route.params.uuid}},mounted:function(){helper.hasPermission("edit-syllabus")||(helper.notAccessibleMsg(),this.$router.push("/dashboard"))}};const a=(0,s(51900).Z)(r,(function(){var e=this,t=e._self._c;return t("div",[t("div",{staticClass:"page-titles"},[t("div",{staticClass:"row"},[t("div",{staticClass:"col-12 col-sm-6"},[t("h3",{staticClass:"text-themecolor"},[e._v(e._s(e.trans("resource.edit_syllabus")))])]),e._v(" "),t("div",{staticClass:"col-12 col-sm-6"},[t("div",{staticClass:"action-buttons pull-right"},[t("button",{staticClass:"btn btn-info btn-sm",on:{click:function(t){return e.$router.push("/resource/syllabus")}}},[t("i",{staticClass:"fas fa-list"}),e._v(" "),t("span",{staticClass:"d-none d-sm-inline"},[e._v(e._s(e.trans("resource.syllabus")))])])])])])]),e._v(" "),t("div",{staticClass:"container-fluid"},[t("div",{staticClass:"card card-form"},[t("div",{staticClass:"card-body p-t-20"},[t("syllabus-form",{attrs:{uuid:e.uuid}})],1)])])])}),[],!1,null,null,null).exports},38313:(e,t,s)=>{s.d(t,{Z:()=>i});const r={components:{},data:function(){return{syllabusForm:new Form({title:"",description:"",batch_id:"",subject_id:"",details:[],topics:[],upload_token:""}),batches:[],selected_batch:null,subjects:[],selected_subject:null,subject_detail:[],module_id:"",clearAttachment:!0}},props:["uuid"],mounted:function(){helper.hasPermission("create-syllabus")||helper.hasPermission("edit-syllabus")||(helper.notAccessibleMsg(),this.$router.push("/dashboard")),this.uuid?this.get():(this.addDetailRow(),this.addTopicRow(),this.syllabusForm.upload_token=this.$uuid.v4()),this.getPreRequisite()},methods:{hasPermission:function(e){return helper.hasPermission(e)},addDetailRow:function(){this.syllabusForm.details.push({title:"",description:""})},confirmDeleteDetail:function(e){var t=this;return function(s){return t.deleteDetail(e)}},deleteDetail:function(e){this.syllabusForm.details.splice(e,1)},getDetailTitleName:function(e){return e+"_detail_title"},getDetailDescriptionName:function(e){return e+"_detail_description"},addTopicRow:function(){this.syllabusForm.topics.push({title:"",start_date:"",end_date:"",description:""})},confirmDeleteTopic:function(e){var t=this;return function(s){return t.deleteTopic(e)}},deleteTopic:function(e){this.syllabusForm.topics.splice(e,1)},getTopicTitleName:function(e){return e+"_topic_title"},getTopicDescriptionName:function(e){return e+"_topic_description"},getTopicStartDateName:function(e){return e+"_topic_start_date"},getTopicEndDateName:function(e){return e+"_topic_end_date"},getPreRequisite:function(){var e=this,t=this.$loading.show();axios.get("/api/syllabus/pre-requisite").then((function(s){e.batches=s.batches,t.hide()})).catch((function(e){t.hide(),helper.showErrorMsg(e)}))},getSubjects:function(){var e=this;this.uuid||(this.syllabusForm.subject_id="",this.selected_subject=null);var t=this.$loading.show();axios.post("/api/batch/"+this.syllabusForm.batch_id+"/subjects").then((function(s){e.subjects=s.subjects,e.subject_details=s.subject_details,t.hide()})).catch((function(e){t.hide(),helper.showErrorMsg(e)}))},proceed:function(){this.uuid?this.update():this.store()},store:function(){var e=this,t=this.$loading.show();this.syllabusForm.post("/api/syllabus").then((function(s){toastr.success(s.message),e.clearAttachment=!e.clearAttachment,e.syllabusForm.upload_token=e.$uuid.v4(),e.selected_batch=null,e.selected_subject=null,e.syllabusForm.details=[],e.syllabusForm.topics=[],e.addRow(),e.$emit("completed"),t.hide()})).catch((function(e){t.hide(),helper.showErrorMsg(e)}))},get:function(){var e=this,t=this.$loading.show();axios.get("/api/syllabus/"+this.uuid).then((function(s){var r=s.syllabus;e.syllabusForm.title=r.title,e.syllabusForm.description=r.description,e.syllabusForm.batch_id=r.subject.batch_id,e.syllabusForm.subject_id=r.subject_id,e.selected_batch=e.syllabusForm.batch_id?{id:r.subject.batch_id,name:r.subject.batch.course.name+" "+r.subject.batch.name}:null,e.selected_subject=r.subject_id?{id:r.subject_id,name:r.subject.name+" ("+r.subject.code+")"}:null,e.syllabusForm.upload_token=r.upload_token,r.syllabus_details.forEach((function(t){e.syllabusForm.details.push({title:t.title,description:t.description})})),r.syllabus_topics.forEach((function(t){e.syllabusForm.topics.push({title:t.title,start_date:t.start_date,end_date:t.end_date,description:t.description})})),e.module_id=r.id,t.hide()})).catch((function(s){t.hide(),helper.showErrorMsg(s),e.$router.push("/resource/syllabus")}))},update:function(){var e=this,t=this.$loading.show();this.syllabusForm.patch("/api/syllabus/"+this.uuid).then((function(s){toastr.success(s.message),t.hide(),e.$router.push("/resource/syllabus")})).catch((function(e){t.hide(),helper.showErrorMsg(e)}))},onBatchSelect:function(e){this.syllabusForm.batch_id=e.id},onSubjectSelect:function(e){this.syllabusForm.subject_id=e.id}},watch:{"syllabusForm.batch_id":function(e){e&&this.getSubjects()}}};var a=s(93379),l=s.n(a),n=s(82266),o={insert:"head",singleton:!1};l()(n.Z,o);n.Z.locals;const i=(0,s(51900).Z)(r,(function(){var e=this,t=e._self._c;return t("div",[t("form",{on:{submit:function(t){return t.preventDefault(),e.proceed.apply(null,arguments)},keydown:function(t){return e.syllabusForm.errors.clear(t.target.name)}}},[t("div",{staticClass:"row"},[t("div",{staticClass:"col-12 col-sm-3"},[t("div",{staticClass:"form-group"},[t("label",{attrs:{for:""}},[e._v(e._s(e.trans("academic.batch"))+" ")]),e._v(" "),t("v-select",{attrs:{label:"name","group-values":"batches","group-label":"course_group","group-select":!1,name:"batch_id",id:"batch_id",options:e.batches,placeholder:e.trans("academic.select_batch")},on:{select:e.onBatchSelect,close:function(t){return e.syllabusForm.errors.clear("batch_id")},remove:function(t){e.syllabusForm.batch_id=""}},model:{value:e.selected_batch,callback:function(t){e.selected_batch=t},expression:"selected_batch"}},[e.batches.length?e._e():t("div",{staticClass:"multiselect__option",attrs:{slot:"afterList"},slot:"afterList"},[e._v("\n                            "+e._s(e.trans("general.no_option_found"))+"\n                        ")])]),e._v(" "),t("show-error",{attrs:{"form-name":e.syllabusForm,"prop-name":"batch_id"}})],1)]),e._v(" "),t("div",{staticClass:"col-12 col-sm-3"},[e.syllabusForm.batch_id?t("div",{staticClass:"form-group"},[t("label",{attrs:{for:""}},[e._v(e._s(e.trans("academic.subject"))+" ")]),e._v(" "),t("v-select",{attrs:{label:"name",name:"subject_id",id:"subject_id",options:e.subjects,placeholder:e.trans("resource.select_subject")},on:{select:e.onSubjectSelect,close:function(t){return e.syllabusForm.errors.clear("subject_id")},remove:function(t){e.syllabusForm.subject_id=""}},model:{value:e.selected_subject,callback:function(t){e.selected_subject=t},expression:"selected_subject"}},[e.subjects.length?e._e():t("div",{staticClass:"multiselect__option",attrs:{slot:"afterList"},slot:"afterList"},[e._v("\n                            "+e._s(e.trans("general.no_option_found"))+"\n                        ")])]),e._v(" "),t("show-error",{attrs:{"form-name":e.syllabusForm,"prop-name":"subject_id"}})],1):e._e()]),e._v(" "),t("div",{staticClass:"col-12 col-sm-6"},[t("div",{staticClass:"form-group"},[t("label",{attrs:{for:""}},[e._v(e._s(e.trans("resource.syllabus_title")))]),e._v(" "),t("input",{directives:[{name:"model",rawName:"v-model",value:e.syllabusForm.title,expression:"syllabusForm.title"}],staticClass:"form-control",attrs:{type:"text",name:"title",placeholder:e.trans("resource.syllabus_title")},domProps:{value:e.syllabusForm.title},on:{input:function(t){t.target.composing||e.$set(e.syllabusForm,"title",t.target.value)}}}),e._v(" "),t("show-error",{attrs:{"form-name":e.syllabusForm,"prop-name":"title"}})],1)]),e._v(" "),t("div",{staticClass:"col-12"},[t("div",{staticClass:"form-group"},[t("label",{attrs:{for:""}},[e._v(e._s(e.trans("resource.syllabus_description")))]),e._v(" "),t("autosize-textarea",{attrs:{rows:"2",name:"description",placeholder:e.trans("resource.syllabus_description")},model:{value:e.syllabusForm.description,callback:function(t){e.$set(e.syllabusForm,"description",t)},expression:"syllabusForm.description"}}),e._v(" "),t("show-error",{attrs:{"form-name":e.syllabusForm,"prop-name":"description"}})],1)])]),e._v(" "),t("div",{staticClass:"row"},[t("div",{staticClass:"col-12 col-sm-6"},[t("h4",{staticClass:"card-title"},[e._v(e._s(e.trans("resource.syllabus_detail")))]),e._v(" "),e._l(e.syllabusForm.details,(function(s,r){return[t("div",{staticClass:"form-group"},[t("label",{attrs:{for:""}},[e._v(e._s(e.trans("resource.syllabus_detail_title"))+" \n                        "),t("button",{directives:[{name:"confirm",rawName:"v-confirm",value:{ok:e.confirmDeleteDetail(r)},expression:"{ok: confirmDeleteDetail(index)}"},{name:"tooltip",rawName:"v-tooltip",value:e.trans("general.delete"),expression:"trans('general.delete')"}],key:"".concat(r,"_delete_detail"),staticClass:"btn btn-xs btn-danger m-l-20",attrs:{type:"button"}},[t("i",{staticClass:"fas fa-times"})])]),e._v(" "),t("input",{directives:[{name:"model",rawName:"v-model",value:s.title,expression:"detail.title"}],staticClass:"form-control",attrs:{type:"text",name:e.getDetailTitleName(r),placeholder:e.trans("resource.syllabus_detail_title")},domProps:{value:s.title},on:{input:function(t){t.target.composing||e.$set(s,"title",t.target.value)}}}),e._v(" "),t("show-error",{attrs:{"form-name":e.syllabusForm,"prop-name":e.getDetailTitleName(r)}})],1),e._v(" "),t("div",{staticClass:"form-group"},[t("label",{attrs:{for:""}},[e._v(e._s(e.trans("resource.syllabus_detail_description")))]),e._v(" "),t("autosize-textarea",{attrs:{rows:"2",name:e.getDetailDescriptionName(r),placeholder:e.trans("resource.syllabus_detail_description")},model:{value:s.description,callback:function(t){e.$set(s,"description",t)},expression:"detail.description"}}),e._v(" "),t("show-error",{attrs:{"form-name":e.syllabusForm,"prop-name":e.getDetailDescriptionName(r)}})],1)]})),e._v(" "),t("div",{staticClass:"form-group"},[t("button",{staticClass:"btn btn-info btn-sm waves-effect waves-light",attrs:{type:"button"},on:{click:e.addDetailRow}},[e._v(e._s(e.trans("resource.syllabus_add_new_detail")))])])],2),e._v(" "),t("div",{staticClass:"col-12 col-sm-6"},[t("h4",{staticClass:"card-title"},[e._v(e._s(e.trans("resource.syllabus_topic")))]),e._v(" "),e._l(e.syllabusForm.topics,(function(s,r){return[t("div",{staticClass:"form-group"},[t("label",{attrs:{for:""}},[e._v(e._s(e.trans("resource.syllabus_topic_title"))+" \n                            "),t("button",{directives:[{name:"confirm",rawName:"v-confirm",value:{ok:e.confirmDeleteTopic(r)},expression:"{ok: confirmDeleteTopic(index)}"},{name:"tooltip",rawName:"v-tooltip",value:e.trans("general.delete"),expression:"trans('general.delete')"}],key:"".concat(r,"_delete_topic"),staticClass:"btn btn-xs btn-danger m-l-20",attrs:{type:"button"}},[t("i",{staticClass:"fas fa-times"})])]),e._v(" "),t("input",{directives:[{name:"model",rawName:"v-model",value:s.title,expression:"topic.title"}],staticClass:"form-control",attrs:{type:"text",name:e.getTopicTitleName(r),placeholder:e.trans("resource.syllabus_topic_title")},domProps:{value:s.title},on:{input:function(t){t.target.composing||e.$set(s,"title",t.target.value)}}}),e._v(" "),t("show-error",{attrs:{"form-name":e.syllabusForm,"prop-name":e.getTopicTitleName(r)}})],1),e._v(" "),t("div",{staticClass:"row"},[t("div",{staticClass:"col-12 col-sm-6"},[t("div",{staticClass:"form-group"},[t("label",{attrs:{for:""}},[e._v(e._s(e.trans("resource.syllabus_topic_start_date")))]),e._v(" "),t("datepicker",{attrs:{bootstrapStyling:!0,placeholder:e.trans("resource.syllabus_start_date")},on:{selected:function(t){e.syllabusForm.errors.clear(e.getTopicStartDateName(r))}},model:{value:s.start_date,callback:function(t){e.$set(s,"start_date",t)},expression:"topic.start_date"}}),e._v(" "),t("show-error",{attrs:{"form-name":e.syllabusForm,"prop-name":e.getTopicStartDateName(r)}})],1)]),e._v(" "),t("div",{staticClass:"col-12 col-sm-6"},[t("div",{staticClass:"form-group"},[t("label",{attrs:{for:""}},[e._v(e._s(e.trans("resource.syllabus_topic_end_date")))]),e._v(" "),t("datepicker",{attrs:{bootstrapStyling:!0,placeholder:e.trans("resource.syllabus_end_date")},on:{selected:function(t){e.syllabusForm.errors.clear(e.getTopicEndDateName(r))}},model:{value:s.end_date,callback:function(t){e.$set(s,"end_date",t)},expression:"topic.end_date"}}),e._v(" "),t("show-error",{attrs:{"form-name":e.syllabusForm,"prop-name":e.getTopicEndDateName(r)}})],1)])]),e._v(" "),t("div",{staticClass:"form-group"},[t("label",{attrs:{for:""}},[e._v(e._s(e.trans("resource.syllabus_topic_description")))]),e._v(" "),t("autosize-textarea",{attrs:{rows:"2",name:e.getTopicDescriptionName(r),placeholder:e.trans("resource.syllabus_topic_description")},model:{value:s.description,callback:function(t){e.$set(s,"description",t)},expression:"topic.description"}}),e._v(" "),t("show-error",{attrs:{"form-name":e.syllabusForm,"prop-name":e.getTopicDescriptionName(r)}})],1)]})),e._v(" "),t("div",{staticClass:"form-group"},[t("button",{staticClass:"btn btn-info btn-sm waves-effect waves-light",attrs:{type:"button"},on:{click:e.addTopicRow}},[e._v(e._s(e.trans("resource.syllabus_add_new_topic")))])])],2),e._v(" "),t("div",{staticClass:"col-12"},[t("div",{staticClass:"form-group"},[t("file-upload-input",{attrs:{"button-text":e.trans("general.upload_document"),token:e.syllabusForm.upload_token,module:"syllabus","clear-file":e.clearAttachment,"module-id":e.module_id}})],1)])]),e._v(" "),t("div",{staticClass:"card-footer text-right"},[t("router-link",{staticClass:"btn btn-danger waves-effect waves-light",attrs:{to:"/resource/syllabus"}},[e._v(e._s(e.trans("general.cancel")))]),e._v(" "),t("button",{staticClass:"btn btn-info waves-effect waves-light",attrs:{type:"submit"}},[e.uuid?t("span",[e._v(e._s(e.trans("general.update")))]):t("span",[e._v(e._s(e.trans("general.save")))])])],1)])])}),[],!1,null,null,null).exports}}]);