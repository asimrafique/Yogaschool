{"version":3,"file":"js/chunks/js/resource/syllabus/edit.js?id=02fb0b5eee06ebdb","mappings":";;;;;;;;;;;;;;AAyBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnUA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAKA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAcA;AAAA;AAEA;AAAA;AAKA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAQA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5pBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACvCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/resource/syllabus/edit.vue","webpack://InstiKit/resources/js/views/resource/syllabus/form.vue","webpack://InstiKit/./resources/js/views/resource/syllabus/edit.vue","webpack://InstiKit/./resources/js/views/resource/syllabus/form.vue","webpack://InstiKit/./resources/js/views/resource/syllabus/form.vue?f4b1","webpack://InstiKit/./resources/js/views/resource/syllabus/form.vue?3054","webpack://InstiKit/./resources/js/views/resource/syllabus/edit.vue?22fa","webpack://InstiKit/./resources/js/views/resource/syllabus/form.vue?7953","webpack://InstiKit/./resources/js/views/resource/syllabus/edit.vue?3f5b","webpack://InstiKit/./resources/js/views/resource/syllabus/form.vue?e5c6","webpack://InstiKit/./resources/js/views/resource/syllabus/edit.vue?6f2b"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('resource.edit_syllabus')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/resource/syllabus')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('resource.syllabus')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card card-form\">\r\n                <div class=\"card-body p-t-20\">\r\n                    <syllabus-form :uuid=\"uuid\"></syllabus-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import syllabusForm from './form';\r\n\r\n    export default {\r\n        components : { syllabusForm },\r\n        data() {\r\n            return {\r\n                uuid:this.$route.params.uuid\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('edit-syllabus')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","<template>\r\n    <div>\r\n        <form @submit.prevent=\"proceed\" @keydown=\"syllabusForm.errors.clear($event.target.name)\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('academic.batch')}} </label>\r\n                        <v-select label=\"name\" v-model=\"selected_batch\" group-values=\"batches\" group-label=\"course_group\" :group-select=\"false\" name=\"batch_id\" id=\"batch_id\" :options=\"batches\" :placeholder=\"trans('academic.select_batch')\" @select=\"onBatchSelect\" @close=\"syllabusForm.errors.clear('batch_id')\" @remove=\"syllabusForm.batch_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!batches.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"syllabusForm\" prop-name=\"batch_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\" v-if=\"syllabusForm.batch_id\">\r\n                        <label for=\"\">{{trans('academic.subject')}} </label>\r\n                        <v-select label=\"name\" v-model=\"selected_subject\" name=\"subject_id\" id=\"subject_id\" :options=\"subjects\" :placeholder=\"trans('resource.select_subject')\" @select=\"onSubjectSelect\" @close=\"syllabusForm.errors.clear('subject_id')\" @remove=\"syllabusForm.subject_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!subjects.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"syllabusForm\" prop-name=\"subject_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('resource.syllabus_title')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"syllabusForm.title\" name=\"title\" :placeholder=\"trans('resource.syllabus_title')\">\r\n                        <show-error :form-name=\"syllabusForm\" prop-name=\"title\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('resource.syllabus_description')}}</label>\r\n                        <autosize-textarea v-model=\"syllabusForm.description\" rows=\"2\" name=\"description\" :placeholder=\"trans('resource.syllabus_description')\"></autosize-textarea>\r\n                        <show-error :form-name=\"syllabusForm\" prop-name=\"description\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h4 class=\"card-title\">{{trans('resource.syllabus_detail')}}</h4>\r\n                    <template v-for=\"(detail,index) in syllabusForm.details\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('resource.syllabus_detail_title')}} \r\n                            <button type=\"button\" class=\"btn btn-xs btn-danger m-l-20\" :key=\"`${index}_delete_detail`\" v-confirm=\"{ok: confirmDeleteDetail(index)}\" v-tooltip=\"trans('general.delete')\"><i class=\"fas fa-times\"></i></button></label>\r\n                            <input class=\"form-control\" type=\"text\" v-model=\"detail.title\" :name=\"getDetailTitleName(index)\" :placeholder=\"trans('resource.syllabus_detail_title')\">\r\n                            <show-error :form-name=\"syllabusForm\" :prop-name=\"getDetailTitleName(index)\"></show-error>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('resource.syllabus_detail_description')}}</label>\r\n                            <autosize-textarea v-model=\"detail.description\" rows=\"2\" :name=\"getDetailDescriptionName(index)\" :placeholder=\"trans('resource.syllabus_detail_description')\"></autosize-textarea>\r\n                            <show-error :form-name=\"syllabusForm\" :prop-name=\"getDetailDescriptionName(index)\"></show-error>\r\n                        </div>\r\n                    </template>\r\n                    <div class=\"form-group\">\r\n                        <button type=\"button\" @click=\"addDetailRow\" class=\"btn btn-info btn-sm waves-effect waves-light\">{{trans('resource.syllabus_add_new_detail')}}</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h4 class=\"card-title\">{{trans('resource.syllabus_topic')}}</h4>\r\n                    <template v-for=\"(topic,index) in syllabusForm.topics\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('resource.syllabus_topic_title')}} \r\n                                <button type=\"button\" class=\"btn btn-xs btn-danger m-l-20\" :key=\"`${index}_delete_topic`\" v-confirm=\"{ok: confirmDeleteTopic(index)}\" v-tooltip=\"trans('general.delete')\"><i class=\"fas fa-times\"></i></button></label>\r\n                            <input class=\"form-control\" type=\"text\" v-model=\"topic.title\" :name=\"getTopicTitleName(index)\" :placeholder=\"trans('resource.syllabus_topic_title')\">\r\n                            <show-error :form-name=\"syllabusForm\" :prop-name=\"getTopicTitleName(index)\"></show-error>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('resource.syllabus_topic_start_date')}}</label>\r\n                                    <datepicker v-model=\"topic.start_date\" :bootstrapStyling=\"true\" @selected=\"syllabusForm.errors.clear(getTopicStartDateName(index))\" :placeholder=\"trans('resource.syllabus_start_date')\"></datepicker>\r\n                                    <show-error :form-name=\"syllabusForm\" :prop-name=\"getTopicStartDateName(index)\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('resource.syllabus_topic_end_date')}}</label>\r\n                                    <datepicker v-model=\"topic.end_date\" :bootstrapStyling=\"true\" @selected=\"syllabusForm.errors.clear(getTopicEndDateName(index))\" :placeholder=\"trans('resource.syllabus_end_date')\"></datepicker>\r\n                                    <show-error :form-name=\"syllabusForm\" :prop-name=\"getTopicEndDateName(index)\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('resource.syllabus_topic_description')}}</label>\r\n                            <autosize-textarea v-model=\"topic.description\" rows=\"2\" :name=\"getTopicDescriptionName(index)\" :placeholder=\"trans('resource.syllabus_topic_description')\"></autosize-textarea>\r\n                            <show-error :form-name=\"syllabusForm\" :prop-name=\"getTopicDescriptionName(index)\"></show-error>\r\n                        </div>\r\n                    </template>\r\n                    <div class=\"form-group\">\r\n                        <button type=\"button\" @click=\"addTopicRow\" class=\"btn btn-info btn-sm waves-effect waves-light\">{{trans('resource.syllabus_add_new_topic')}}</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <file-upload-input :button-text=\"trans('general.upload_document')\" :token=\"syllabusForm.upload_token\" module=\"syllabus\" :clear-file=\"clearAttachment\" :module-id=\"module_id\"></file-upload-input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer text-right\">\r\n                <router-link to=\"/resource/syllabus\" class=\"btn btn-danger waves-effect waves-light \">{{trans('general.cancel')}}</router-link>\r\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n                    <span v-if=\"uuid\">{{trans('general.update')}}</span>\r\n                    <span v-else>{{trans('general.save')}}</span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n    export default {\r\n        components: {},\r\n        data() {\r\n            return {\r\n                syllabusForm: new Form({\r\n                    title: '',\r\n                    description: '',\r\n                    batch_id: '',\r\n                    subject_id: '',\r\n                    details: [],\r\n                    topics: [],\r\n                    upload_token: ''\r\n                }),\r\n                batches: [],\r\n                selected_batch: null,\r\n                subjects: [],\r\n                selected_subject: null,\r\n                subject_detail: [],\r\n                module_id: '',\r\n                clearAttachment: true\r\n            };\r\n        },\r\n        props: ['uuid'],\r\n        mounted() {\r\n            if(!helper.hasPermission('create-syllabus') && !helper.hasPermission('edit-syllabus')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            if(this.uuid)\r\n                this.get();\r\n            else {\r\n                this.addDetailRow();\r\n                this.addTopicRow();\r\n                this.syllabusForm.upload_token = this.$uuid.v4();\r\n            }\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            addDetailRow(){\r\n                let new_index = this.syllabusForm.details.push({\r\n                    title: '',\r\n                    description: ''\r\n                })\r\n            },\r\n            confirmDeleteDetail(index){\r\n                return dialog => this.deleteDetail(index);\r\n            },\r\n            deleteDetail(index){\r\n                this.syllabusForm.details.splice(index, 1);\r\n            },\r\n            getDetailTitleName(index){\r\n                return index+'_detail_title';\r\n            },\r\n            getDetailDescriptionName(index){\r\n                return index+'_detail_description';\r\n            },\r\n            addTopicRow(){\r\n                let new_index = this.syllabusForm.topics.push({\r\n                    title: '',\r\n                    start_date: '',\r\n                    end_date: '',\r\n                    description: ''\r\n                })\r\n            },\r\n            confirmDeleteTopic(index){\r\n                return dialog => this.deleteTopic(index);\r\n            },\r\n            deleteTopic(index){\r\n                this.syllabusForm.topics.splice(index, 1);\r\n            },\r\n            getTopicTitleName(index){\r\n                return index+'_topic_title';\r\n            },\r\n            getTopicDescriptionName(index){\r\n                return index+'_topic_description';\r\n            },\r\n            getTopicStartDateName(index){\r\n                return index+'_topic_start_date';\r\n            },\r\n            getTopicEndDateName(index){\r\n                return index+'_topic_end_date';\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/syllabus/pre-requisite')\r\n                    .then(response => {\r\n                        this.batches = response.batches;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            getSubjects(){\r\n                if (!this.uuid) {\r\n                    this.syllabusForm.subject_id = '';\r\n                    this.selected_subject = null;\r\n                }\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/batch/'+this.syllabusForm.batch_id+'/subjects')\r\n                    .then(response => {\r\n                        this.subjects = response.subjects;\r\n                        this.subject_details = response.subject_details;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            proceed(){\r\n                if(this.uuid)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.syllabusForm.post('/api/syllabus')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.clearAttachment = !this.clearAttachment;\r\n                        this.syllabusForm.upload_token = this.$uuid.v4();\r\n                        this.selected_batch = null;\r\n                        this.selected_subject = null;\r\n                        this.syllabusForm.details = [];\r\n                        this.syllabusForm.topics = [];\r\n                        this.addRow();\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/syllabus/'+this.uuid)\r\n                    .then(response => {\r\n                        let syllabus = response.syllabus;\r\n                        this.syllabusForm.title = syllabus.title;\r\n                        this.syllabusForm.description = syllabus.description;\r\n                        this.syllabusForm.batch_id = syllabus.subject.batch_id;\r\n                        this.syllabusForm.subject_id = syllabus.subject_id;\r\n                        this.selected_batch = this.syllabusForm.batch_id ? {id: syllabus.subject.batch_id, name: syllabus.subject.batch.course.name+' '+syllabus.subject.batch.name} : null;\r\n                        this.selected_subject = syllabus.subject_id ? {id: syllabus.subject_id, name: syllabus.subject.name+' ('+syllabus.subject.code+')'} : null;\r\n                        this.syllabusForm.upload_token = syllabus.upload_token;\r\n\r\n                        syllabus.syllabus_details.forEach(syllabus_detail => {\r\n                            this.syllabusForm.details.push({\r\n                                title: syllabus_detail.title,\r\n                                description: syllabus_detail.description\r\n                            });\r\n                        });\r\n                        \r\n                        syllabus.syllabus_topics.forEach(syllabus_topic => {\r\n                            this.syllabusForm.topics.push({\r\n                                title: syllabus_topic.title,\r\n                                start_date: syllabus_topic.start_date,\r\n                                end_date: syllabus_topic.end_date,\r\n                                description: syllabus_topic.description\r\n                            });\r\n                        });\r\n                        \r\n                        this.module_id = syllabus.id;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/resource/syllabus');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.syllabusForm.patch('/api/syllabus/'+this.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/resource/syllabus');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onBatchSelect(selectedOption){\r\n                this.syllabusForm.batch_id = selectedOption.id;\r\n            },\r\n            onSubjectSelect(selectedOption){\r\n                this.syllabusForm.subject_id = selectedOption.id;\r\n            }\r\n        },\r\n        watch: {\r\n            'syllabusForm.batch_id': function(val) {\r\n                if (val) {\r\n                    this.getSubjects();\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n.loading-overlay.is-full-page{\r\n    z-index: 1060;\r\n}\r\n</style>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"resource.edit_syllabus\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/resource/syllabus\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"resource.syllabus\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"card-body p-t-20\" },\n          [_c(\"syllabus-form\", { attrs: { uuid: _vm.uuid } })],\n          1\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.syllabusForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"academic.batch\")) + \" \"),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      \"group-values\": \"batches\",\n                      \"group-label\": \"course_group\",\n                      \"group-select\": false,\n                      name: \"batch_id\",\n                      id: \"batch_id\",\n                      options: _vm.batches,\n                      placeholder: _vm.trans(\"academic.select_batch\"),\n                    },\n                    on: {\n                      select: _vm.onBatchSelect,\n                      close: function ($event) {\n                        return _vm.syllabusForm.errors.clear(\"batch_id\")\n                      },\n                      remove: function ($event) {\n                        _vm.syllabusForm.batch_id = \"\"\n                      },\n                    },\n                    model: {\n                      value: _vm.selected_batch,\n                      callback: function ($$v) {\n                        _vm.selected_batch = $$v\n                      },\n                      expression: \"selected_batch\",\n                    },\n                  },\n                  [\n                    !_vm.batches.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                        \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.syllabusForm,\n                    \"prop-name\": \"batch_id\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _vm.syllabusForm.batch_id\n              ? _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"academic.subject\")) + \" \"),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"v-select\",\n                      {\n                        attrs: {\n                          label: \"name\",\n                          name: \"subject_id\",\n                          id: \"subject_id\",\n                          options: _vm.subjects,\n                          placeholder: _vm.trans(\"resource.select_subject\"),\n                        },\n                        on: {\n                          select: _vm.onSubjectSelect,\n                          close: function ($event) {\n                            return _vm.syllabusForm.errors.clear(\"subject_id\")\n                          },\n                          remove: function ($event) {\n                            _vm.syllabusForm.subject_id = \"\"\n                          },\n                        },\n                        model: {\n                          value: _vm.selected_subject,\n                          callback: function ($$v) {\n                            _vm.selected_subject = $$v\n                          },\n                          expression: \"selected_subject\",\n                        },\n                      },\n                      [\n                        !_vm.subjects.length\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"multiselect__option\",\n                                attrs: { slot: \"afterList\" },\n                                slot: \"afterList\",\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            \" +\n                                    _vm._s(\n                                      _vm.trans(\"general.no_option_found\")\n                                    ) +\n                                    \"\\n                        \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.syllabusForm,\n                        \"prop-name\": \"subject_id\",\n                      },\n                    }),\n                  ],\n                  1\n                )\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"resource.syllabus_title\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.syllabusForm.title,\n                      expression: \"syllabusForm.title\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"title\",\n                    placeholder: _vm.trans(\"resource.syllabus_title\"),\n                  },\n                  domProps: { value: _vm.syllabusForm.title },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(_vm.syllabusForm, \"title\", $event.target.value)\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.syllabusForm,\n                    \"prop-name\": \"title\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"resource.syllabus_description\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"autosize-textarea\", {\n                  attrs: {\n                    rows: \"2\",\n                    name: \"description\",\n                    placeholder: _vm.trans(\"resource.syllabus_description\"),\n                  },\n                  model: {\n                    value: _vm.syllabusForm.description,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.syllabusForm, \"description\", $$v)\n                    },\n                    expression: \"syllabusForm.description\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.syllabusForm,\n                    \"prop-name\": \"description\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"col-12 col-sm-6\" },\n            [\n              _c(\"h4\", { staticClass: \"card-title\" }, [\n                _vm._v(_vm._s(_vm.trans(\"resource.syllabus_detail\"))),\n              ]),\n              _vm._v(\" \"),\n              _vm._l(_vm.syllabusForm.details, function (detail, index) {\n                return [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"resource.syllabus_detail_title\")) +\n                            \" \\n                        \"\n                        ),\n                        _c(\n                          \"button\",\n                          {\n                            directives: [\n                              {\n                                name: \"confirm\",\n                                rawName: \"v-confirm\",\n                                value: { ok: _vm.confirmDeleteDetail(index) },\n                                expression: \"{ok: confirmDeleteDetail(index)}\",\n                              },\n                              {\n                                name: \"tooltip\",\n                                rawName: \"v-tooltip\",\n                                value: _vm.trans(\"general.delete\"),\n                                expression: \"trans('general.delete')\",\n                              },\n                            ],\n                            key: `${index}_delete_detail`,\n                            staticClass: \"btn btn-xs btn-danger m-l-20\",\n                            attrs: { type: \"button\" },\n                          },\n                          [_c(\"i\", { staticClass: \"fas fa-times\" })]\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: detail.title,\n                            expression: \"detail.title\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: _vm.getDetailTitleName(index),\n                          placeholder: _vm.trans(\n                            \"resource.syllabus_detail_title\"\n                          ),\n                        },\n                        domProps: { value: detail.title },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(detail, \"title\", $event.target.value)\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.syllabusForm,\n                          \"prop-name\": _vm.getDetailTitleName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"resource.syllabus_detail_description\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"autosize-textarea\", {\n                        attrs: {\n                          rows: \"2\",\n                          name: _vm.getDetailDescriptionName(index),\n                          placeholder: _vm.trans(\n                            \"resource.syllabus_detail_description\"\n                          ),\n                        },\n                        model: {\n                          value: detail.description,\n                          callback: function ($$v) {\n                            _vm.$set(detail, \"description\", $$v)\n                          },\n                          expression: \"detail.description\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.syllabusForm,\n                          \"prop-name\": _vm.getDetailDescriptionName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]\n              }),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info btn-sm waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: { click: _vm.addDetailRow },\n                  },\n                  [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"resource.syllabus_add_new_detail\"))\n                    ),\n                  ]\n                ),\n              ]),\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"col-12 col-sm-6\" },\n            [\n              _c(\"h4\", { staticClass: \"card-title\" }, [\n                _vm._v(_vm._s(_vm.trans(\"resource.syllabus_topic\"))),\n              ]),\n              _vm._v(\" \"),\n              _vm._l(_vm.syllabusForm.topics, function (topic, index) {\n                return [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"resource.syllabus_topic_title\")) +\n                            \" \\n                            \"\n                        ),\n                        _c(\n                          \"button\",\n                          {\n                            directives: [\n                              {\n                                name: \"confirm\",\n                                rawName: \"v-confirm\",\n                                value: { ok: _vm.confirmDeleteTopic(index) },\n                                expression: \"{ok: confirmDeleteTopic(index)}\",\n                              },\n                              {\n                                name: \"tooltip\",\n                                rawName: \"v-tooltip\",\n                                value: _vm.trans(\"general.delete\"),\n                                expression: \"trans('general.delete')\",\n                              },\n                            ],\n                            key: `${index}_delete_topic`,\n                            staticClass: \"btn btn-xs btn-danger m-l-20\",\n                            attrs: { type: \"button\" },\n                          },\n                          [_c(\"i\", { staticClass: \"fas fa-times\" })]\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: topic.title,\n                            expression: \"topic.title\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: _vm.getTopicTitleName(index),\n                          placeholder: _vm.trans(\n                            \"resource.syllabus_topic_title\"\n                          ),\n                        },\n                        domProps: { value: topic.title },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(topic, \"title\", $event.target.value)\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.syllabusForm,\n                          \"prop-name\": _vm.getTopicTitleName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"row\" }, [\n                    _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(\n                                _vm.trans(\"resource.syllabus_topic_start_date\")\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"datepicker\", {\n                            attrs: {\n                              bootstrapStyling: true,\n                              placeholder: _vm.trans(\n                                \"resource.syllabus_start_date\"\n                              ),\n                            },\n                            on: {\n                              selected: function ($event) {\n                                _vm.syllabusForm.errors.clear(\n                                  _vm.getTopicStartDateName(index)\n                                )\n                              },\n                            },\n                            model: {\n                              value: topic.start_date,\n                              callback: function ($$v) {\n                                _vm.$set(topic, \"start_date\", $$v)\n                              },\n                              expression: \"topic.start_date\",\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.syllabusForm,\n                              \"prop-name\": _vm.getTopicStartDateName(index),\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(\n                                _vm.trans(\"resource.syllabus_topic_end_date\")\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"datepicker\", {\n                            attrs: {\n                              bootstrapStyling: true,\n                              placeholder: _vm.trans(\n                                \"resource.syllabus_end_date\"\n                              ),\n                            },\n                            on: {\n                              selected: function ($event) {\n                                _vm.syllabusForm.errors.clear(\n                                  _vm.getTopicEndDateName(index)\n                                )\n                              },\n                            },\n                            model: {\n                              value: topic.end_date,\n                              callback: function ($$v) {\n                                _vm.$set(topic, \"end_date\", $$v)\n                              },\n                              expression: \"topic.end_date\",\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.syllabusForm,\n                              \"prop-name\": _vm.getTopicEndDateName(index),\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"resource.syllabus_topic_description\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"autosize-textarea\", {\n                        attrs: {\n                          rows: \"2\",\n                          name: _vm.getTopicDescriptionName(index),\n                          placeholder: _vm.trans(\n                            \"resource.syllabus_topic_description\"\n                          ),\n                        },\n                        model: {\n                          value: topic.description,\n                          callback: function ($$v) {\n                            _vm.$set(topic, \"description\", $$v)\n                          },\n                          expression: \"topic.description\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.syllabusForm,\n                          \"prop-name\": _vm.getTopicDescriptionName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]\n              }),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info btn-sm waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: { click: _vm.addTopicRow },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"resource.syllabus_add_new_topic\")))]\n                ),\n              ]),\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"file-upload-input\", {\n                  attrs: {\n                    \"button-text\": _vm.trans(\"general.upload_document\"),\n                    token: _vm.syllabusForm.upload_token,\n                    module: \"syllabus\",\n                    \"clear-file\": _vm.clearAttachment,\n                    \"module-id\": _vm.module_id,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"card-footer text-right\" },\n          [\n            _c(\n              \"router-link\",\n              {\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { to: \"/resource/syllabus\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [\n                _vm.uuid\n                  ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                  : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n              ]\n            ),\n          ],\n          1\n        ),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.loading-overlay.is-full-page{\\r\\n    z-index: 1060;\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/resource/syllabus/form.vue\"],\"names\":[],\"mappings\":\";AAuUA;IACA,aAAA;AACA\",\"sourcesContent\":[\"<template>\\r\\n    <div>\\r\\n        <form @submit.prevent=\\\"proceed\\\" @keydown=\\\"syllabusForm.errors.clear($event.target.name)\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12 col-sm-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"\\\">{{trans('academic.batch')}} </label>\\r\\n                        <v-select label=\\\"name\\\" v-model=\\\"selected_batch\\\" group-values=\\\"batches\\\" group-label=\\\"course_group\\\" :group-select=\\\"false\\\" name=\\\"batch_id\\\" id=\\\"batch_id\\\" :options=\\\"batches\\\" :placeholder=\\\"trans('academic.select_batch')\\\" @select=\\\"onBatchSelect\\\" @close=\\\"syllabusForm.errors.clear('batch_id')\\\" @remove=\\\"syllabusForm.batch_id = ''\\\">\\r\\n                            <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!batches.length\\\">\\r\\n                                {{trans('general.no_option_found')}}\\r\\n                            </div>\\r\\n                        </v-select>\\r\\n                        <show-error :form-name=\\\"syllabusForm\\\" prop-name=\\\"batch_id\\\"></show-error>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-sm-3\\\">\\r\\n                    <div class=\\\"form-group\\\" v-if=\\\"syllabusForm.batch_id\\\">\\r\\n                        <label for=\\\"\\\">{{trans('academic.subject')}} </label>\\r\\n                        <v-select label=\\\"name\\\" v-model=\\\"selected_subject\\\" name=\\\"subject_id\\\" id=\\\"subject_id\\\" :options=\\\"subjects\\\" :placeholder=\\\"trans('resource.select_subject')\\\" @select=\\\"onSubjectSelect\\\" @close=\\\"syllabusForm.errors.clear('subject_id')\\\" @remove=\\\"syllabusForm.subject_id = ''\\\">\\r\\n                            <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!subjects.length\\\">\\r\\n                                {{trans('general.no_option_found')}}\\r\\n                            </div>\\r\\n                        </v-select>\\r\\n                        <show-error :form-name=\\\"syllabusForm\\\" prop-name=\\\"subject_id\\\"></show-error>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-sm-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"\\\">{{trans('resource.syllabus_title')}}</label>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"syllabusForm.title\\\" name=\\\"title\\\" :placeholder=\\\"trans('resource.syllabus_title')\\\">\\r\\n                        <show-error :form-name=\\\"syllabusForm\\\" prop-name=\\\"title\\\"></show-error>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"\\\">{{trans('resource.syllabus_description')}}</label>\\r\\n                        <autosize-textarea v-model=\\\"syllabusForm.description\\\" rows=\\\"2\\\" name=\\\"description\\\" :placeholder=\\\"trans('resource.syllabus_description')\\\"></autosize-textarea>\\r\\n                        <show-error :form-name=\\\"syllabusForm\\\" prop-name=\\\"description\\\"></show-error>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12 col-sm-6\\\">\\r\\n                    <h4 class=\\\"card-title\\\">{{trans('resource.syllabus_detail')}}</h4>\\r\\n                    <template v-for=\\\"(detail,index) in syllabusForm.details\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"\\\">{{trans('resource.syllabus_detail_title')}} \\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-xs btn-danger m-l-20\\\" :key=\\\"`${index}_delete_detail`\\\" v-confirm=\\\"{ok: confirmDeleteDetail(index)}\\\" v-tooltip=\\\"trans('general.delete')\\\"><i class=\\\"fas fa-times\\\"></i></button></label>\\r\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"detail.title\\\" :name=\\\"getDetailTitleName(index)\\\" :placeholder=\\\"trans('resource.syllabus_detail_title')\\\">\\r\\n                            <show-error :form-name=\\\"syllabusForm\\\" :prop-name=\\\"getDetailTitleName(index)\\\"></show-error>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"\\\">{{trans('resource.syllabus_detail_description')}}</label>\\r\\n                            <autosize-textarea v-model=\\\"detail.description\\\" rows=\\\"2\\\" :name=\\\"getDetailDescriptionName(index)\\\" :placeholder=\\\"trans('resource.syllabus_detail_description')\\\"></autosize-textarea>\\r\\n                            <show-error :form-name=\\\"syllabusForm\\\" :prop-name=\\\"getDetailDescriptionName(index)\\\"></show-error>\\r\\n                        </div>\\r\\n                    </template>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button type=\\\"button\\\" @click=\\\"addDetailRow\\\" class=\\\"btn btn-info btn-sm waves-effect waves-light\\\">{{trans('resource.syllabus_add_new_detail')}}</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-sm-6\\\">\\r\\n                    <h4 class=\\\"card-title\\\">{{trans('resource.syllabus_topic')}}</h4>\\r\\n                    <template v-for=\\\"(topic,index) in syllabusForm.topics\\\">\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"\\\">{{trans('resource.syllabus_topic_title')}} \\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-xs btn-danger m-l-20\\\" :key=\\\"`${index}_delete_topic`\\\" v-confirm=\\\"{ok: confirmDeleteTopic(index)}\\\" v-tooltip=\\\"trans('general.delete')\\\"><i class=\\\"fas fa-times\\\"></i></button></label>\\r\\n                            <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"topic.title\\\" :name=\\\"getTopicTitleName(index)\\\" :placeholder=\\\"trans('resource.syllabus_topic_title')\\\">\\r\\n                            <show-error :form-name=\\\"syllabusForm\\\" :prop-name=\\\"getTopicTitleName(index)\\\"></show-error>\\r\\n                        </div>\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-12 col-sm-6\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"\\\">{{trans('resource.syllabus_topic_start_date')}}</label>\\r\\n                                    <datepicker v-model=\\\"topic.start_date\\\" :bootstrapStyling=\\\"true\\\" @selected=\\\"syllabusForm.errors.clear(getTopicStartDateName(index))\\\" :placeholder=\\\"trans('resource.syllabus_start_date')\\\"></datepicker>\\r\\n                                    <show-error :form-name=\\\"syllabusForm\\\" :prop-name=\\\"getTopicStartDateName(index)\\\"></show-error>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <div class=\\\"col-12 col-sm-6\\\">\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"\\\">{{trans('resource.syllabus_topic_end_date')}}</label>\\r\\n                                    <datepicker v-model=\\\"topic.end_date\\\" :bootstrapStyling=\\\"true\\\" @selected=\\\"syllabusForm.errors.clear(getTopicEndDateName(index))\\\" :placeholder=\\\"trans('resource.syllabus_end_date')\\\"></datepicker>\\r\\n                                    <show-error :form-name=\\\"syllabusForm\\\" :prop-name=\\\"getTopicEndDateName(index)\\\"></show-error>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group\\\">\\r\\n                            <label for=\\\"\\\">{{trans('resource.syllabus_topic_description')}}</label>\\r\\n                            <autosize-textarea v-model=\\\"topic.description\\\" rows=\\\"2\\\" :name=\\\"getTopicDescriptionName(index)\\\" :placeholder=\\\"trans('resource.syllabus_topic_description')\\\"></autosize-textarea>\\r\\n                            <show-error :form-name=\\\"syllabusForm\\\" :prop-name=\\\"getTopicDescriptionName(index)\\\"></show-error>\\r\\n                        </div>\\r\\n                    </template>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <button type=\\\"button\\\" @click=\\\"addTopicRow\\\" class=\\\"btn btn-info btn-sm waves-effect waves-light\\\">{{trans('resource.syllabus_add_new_topic')}}</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <file-upload-input :button-text=\\\"trans('general.upload_document')\\\" :token=\\\"syllabusForm.upload_token\\\" module=\\\"syllabus\\\" :clear-file=\\\"clearAttachment\\\" :module-id=\\\"module_id\\\"></file-upload-input>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"card-footer text-right\\\">\\r\\n                <router-link to=\\\"/resource/syllabus\\\" class=\\\"btn btn-danger waves-effect waves-light \\\">{{trans('general.cancel')}}</router-link>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-info waves-effect waves-light\\\">\\r\\n                    <span v-if=\\\"uuid\\\">{{trans('general.update')}}</span>\\r\\n                    <span v-else>{{trans('general.save')}}</span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n</template>\\r\\n\\r\\n\\r\\n<script>\\r\\n\\r\\n    export default {\\r\\n        components: {},\\r\\n        data() {\\r\\n            return {\\r\\n                syllabusForm: new Form({\\r\\n                    title: '',\\r\\n                    description: '',\\r\\n                    batch_id: '',\\r\\n                    subject_id: '',\\r\\n                    details: [],\\r\\n                    topics: [],\\r\\n                    upload_token: ''\\r\\n                }),\\r\\n                batches: [],\\r\\n                selected_batch: null,\\r\\n                subjects: [],\\r\\n                selected_subject: null,\\r\\n                subject_detail: [],\\r\\n                module_id: '',\\r\\n                clearAttachment: true\\r\\n            };\\r\\n        },\\r\\n        props: ['uuid'],\\r\\n        mounted() {\\r\\n            if(!helper.hasPermission('create-syllabus') && !helper.hasPermission('edit-syllabus')){\\r\\n                helper.notAccessibleMsg();\\r\\n                this.$router.push('/dashboard');\\r\\n            }\\r\\n\\r\\n            if(this.uuid)\\r\\n                this.get();\\r\\n            else {\\r\\n                this.addDetailRow();\\r\\n                this.addTopicRow();\\r\\n                this.syllabusForm.upload_token = this.$uuid.v4();\\r\\n            }\\r\\n\\r\\n            this.getPreRequisite();\\r\\n        },\\r\\n        methods: {\\r\\n            hasPermission(permission){\\r\\n                return helper.hasPermission(permission);\\r\\n            },\\r\\n            addDetailRow(){\\r\\n                let new_index = this.syllabusForm.details.push({\\r\\n                    title: '',\\r\\n                    description: ''\\r\\n                })\\r\\n            },\\r\\n            confirmDeleteDetail(index){\\r\\n                return dialog => this.deleteDetail(index);\\r\\n            },\\r\\n            deleteDetail(index){\\r\\n                this.syllabusForm.details.splice(index, 1);\\r\\n            },\\r\\n            getDetailTitleName(index){\\r\\n                return index+'_detail_title';\\r\\n            },\\r\\n            getDetailDescriptionName(index){\\r\\n                return index+'_detail_description';\\r\\n            },\\r\\n            addTopicRow(){\\r\\n                let new_index = this.syllabusForm.topics.push({\\r\\n                    title: '',\\r\\n                    start_date: '',\\r\\n                    end_date: '',\\r\\n                    description: ''\\r\\n                })\\r\\n            },\\r\\n            confirmDeleteTopic(index){\\r\\n                return dialog => this.deleteTopic(index);\\r\\n            },\\r\\n            deleteTopic(index){\\r\\n                this.syllabusForm.topics.splice(index, 1);\\r\\n            },\\r\\n            getTopicTitleName(index){\\r\\n                return index+'_topic_title';\\r\\n            },\\r\\n            getTopicDescriptionName(index){\\r\\n                return index+'_topic_description';\\r\\n            },\\r\\n            getTopicStartDateName(index){\\r\\n                return index+'_topic_start_date';\\r\\n            },\\r\\n            getTopicEndDateName(index){\\r\\n                return index+'_topic_end_date';\\r\\n            },\\r\\n            getPreRequisite(){\\r\\n                let loader = this.$loading.show();\\r\\n                axios.get('/api/syllabus/pre-requisite')\\r\\n                    .then(response => {\\r\\n                        this.batches = response.batches;\\r\\n                        loader.hide();\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    })\\r\\n            },\\r\\n            getSubjects(){\\r\\n                if (!this.uuid) {\\r\\n                    this.syllabusForm.subject_id = '';\\r\\n                    this.selected_subject = null;\\r\\n                }\\r\\n                let loader = this.$loading.show();\\r\\n                axios.post('/api/batch/'+this.syllabusForm.batch_id+'/subjects')\\r\\n                    .then(response => {\\r\\n                        this.subjects = response.subjects;\\r\\n                        this.subject_details = response.subject_details;\\r\\n                        loader.hide();\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    })\\r\\n            },\\r\\n            proceed(){\\r\\n                if(this.uuid)\\r\\n                    this.update();\\r\\n                else\\r\\n                    this.store();\\r\\n            },\\r\\n            store(){\\r\\n                let loader = this.$loading.show();\\r\\n                this.syllabusForm.post('/api/syllabus')\\r\\n                    .then(response => {\\r\\n                        toastr.success(response.message);\\r\\n                        this.clearAttachment = !this.clearAttachment;\\r\\n                        this.syllabusForm.upload_token = this.$uuid.v4();\\r\\n                        this.selected_batch = null;\\r\\n                        this.selected_subject = null;\\r\\n                        this.syllabusForm.details = [];\\r\\n                        this.syllabusForm.topics = [];\\r\\n                        this.addRow();\\r\\n                        this.$emit('completed');\\r\\n                        loader.hide();\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    });\\r\\n            },\\r\\n            get(){\\r\\n                let loader = this.$loading.show();\\r\\n                axios.get('/api/syllabus/'+this.uuid)\\r\\n                    .then(response => {\\r\\n                        let syllabus = response.syllabus;\\r\\n                        this.syllabusForm.title = syllabus.title;\\r\\n                        this.syllabusForm.description = syllabus.description;\\r\\n                        this.syllabusForm.batch_id = syllabus.subject.batch_id;\\r\\n                        this.syllabusForm.subject_id = syllabus.subject_id;\\r\\n                        this.selected_batch = this.syllabusForm.batch_id ? {id: syllabus.subject.batch_id, name: syllabus.subject.batch.course.name+' '+syllabus.subject.batch.name} : null;\\r\\n                        this.selected_subject = syllabus.subject_id ? {id: syllabus.subject_id, name: syllabus.subject.name+' ('+syllabus.subject.code+')'} : null;\\r\\n                        this.syllabusForm.upload_token = syllabus.upload_token;\\r\\n\\r\\n                        syllabus.syllabus_details.forEach(syllabus_detail => {\\r\\n                            this.syllabusForm.details.push({\\r\\n                                title: syllabus_detail.title,\\r\\n                                description: syllabus_detail.description\\r\\n                            });\\r\\n                        });\\r\\n                        \\r\\n                        syllabus.syllabus_topics.forEach(syllabus_topic => {\\r\\n                            this.syllabusForm.topics.push({\\r\\n                                title: syllabus_topic.title,\\r\\n                                start_date: syllabus_topic.start_date,\\r\\n                                end_date: syllabus_topic.end_date,\\r\\n                                description: syllabus_topic.description\\r\\n                            });\\r\\n                        });\\r\\n                        \\r\\n                        this.module_id = syllabus.id;\\r\\n                        loader.hide();\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                        this.$router.push('/resource/syllabus');\\r\\n                    });\\r\\n            },\\r\\n            update(){\\r\\n                let loader = this.$loading.show();\\r\\n                this.syllabusForm.patch('/api/syllabus/'+this.uuid)\\r\\n                    .then(response => {\\r\\n                        toastr.success(response.message);\\r\\n                        loader.hide();\\r\\n                        this.$router.push('/resource/syllabus');\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    });\\r\\n            },\\r\\n            onBatchSelect(selectedOption){\\r\\n                this.syllabusForm.batch_id = selectedOption.id;\\r\\n            },\\r\\n            onSubjectSelect(selectedOption){\\r\\n                this.syllabusForm.subject_id = selectedOption.id;\\r\\n            }\\r\\n        },\\r\\n        watch: {\\r\\n            'syllabusForm.batch_id': function(val) {\\r\\n                if (val) {\\r\\n                    this.getSubjects();\\r\\n                }\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n.loading-overlay.is-full-page{\\r\\n    z-index: 1060;\\r\\n}\\r\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&id=53e900a8&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=194ccdf2&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('194ccdf2')) {\n      api.createRecord('194ccdf2', component.options)\n    } else {\n      api.reload('194ccdf2', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=194ccdf2&\", function () {\n      api.rerender('194ccdf2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/resource/syllabus/edit.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=53e900a8&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\nimport style0 from \"./form.vue?vue&type=style&index=0&id=53e900a8&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('53e900a8')) {\n      api.createRecord('53e900a8', component.options)\n    } else {\n      api.reload('53e900a8', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=53e900a8&\", function () {\n      api.rerender('53e900a8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/resource/syllabus/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=194ccdf2&\""],"names":[],"sourceRoot":""}