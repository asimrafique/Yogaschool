{"version":3,"file":"js/chunks/js/pages/themes/onlineRegistration.js?id=826d8f5c75c86436","mappings":";;;;;;;;;;;;;;;;;;AA8bjHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AAEA;AACA;AAOA;AACA;AAEA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAQA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AAEA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAIA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AAGA;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAKA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AAEA;;AAEA;;AAGA;AAAA;AACA;AAGA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AClrtRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAkiBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AChyEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAMA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAoBA;AAAA;AAgBA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AAIA;AACA;AACA;AAOA;AAGA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AAIA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AASA;AAGA;AACA;AACA;AACA;AASA;AAOA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AAIA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AASA;AAGA;AACA;AACA;AACA;AASA;AAOA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAcA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAUA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAcA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAGA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAWA;AAKA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAcA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAMA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAGA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAGA;AACA;AAcA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAGA;AAEA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AAAA;AAAA;AAAA;AASA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AAIA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AASA;AAGA;AACA;AAEA;AACA;AAWA;AAOA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AAIA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AASA;AAGA;AACA;AACA;AACA;AASA;AAOA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAAA;AAMA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAIA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAeA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;;;;;;;;;;;;;;;;;;;;AC/wFA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAKA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AAuBA;AAAA;AACA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAWA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAeA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAkgBA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAYA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAgaA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AAIA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAWA;AAGA;AAAA;AAAA;AACA;AASA;AAOA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAUA;AAAA;AACA;AAAA;AAsEA;AAAA;AACA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAiBA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;ACn/CA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAUA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAYA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAaqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AAAA;AAAA;AAAA;AASA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAWA;AAGA;AACA;AACA;AACA;AASA;AAUA;AAAA;AAGA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAMA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAuDA;AAAA;AAWA;AAgBA;AACA;AAgBA;AACA;AAMA;AACA;AAaA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAOA;AAGA;AAKA;AAGA;AAgCA;AAEA;AAcA;AAEA;AAeA;AAAA;AAGA;AAAA;AAKA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAUA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AASA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;AC5/BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AAAA;AAIA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAWA;AACA;AAAA;AAAA;AACA;AAKA;AAEA;AAUA;AAEA;AAKA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AAeA;AAAA;AASA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAMA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AAMA;AAAA;AAEA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;AC1QA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AAAA;AAIA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAWA;AACA;AAAA;AAAA;AACA;AAKA;AAEA;AAUA;AAEA;AAKA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AAmBA;AAAA;AASA;AAEA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAEA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAMA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AAMA;AAAA;AAEA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACvCA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/pages/themes/default/online-registration.vue","webpack://InstiKit/resources/js/views/pages/themes/default/online-registration2.vue","webpack://InstiKit/resources/js/views/student/registration/form.vue","webpack://InstiKit/resources/js/views/student/registration/index.vue","webpack://InstiKit/resources/js/views/student/room/search-parent.vue","webpack://InstiKit/resources/js/views/student/registration/search-student.vue","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration.vue","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration2.vue","webpack://InstiKit/./resources/js/views/student/registration/form.vue","webpack://InstiKit/./resources/js/views/student/registration/index.vue","webpack://InstiKit/./resources/js/views/student/registration/search-parent.vue","webpack://InstiKit/./resources/js/views/student/registration/search-student.vue","webpack://InstiKit/./resources/js/views/student/registration/search-parent.vue?38fb","webpack://InstiKit/./resources/js/views/student/registration/search-student.vue?eece","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration.vue?f63e","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration2.vue?cf79","webpack://InstiKit/./resources/js/views/student/registration/search-parent.vue?ca1e","webpack://InstiKit/./resources/js/views/student/registration/search-student.vue?088c","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration.vue?6513","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration2.vue?62e1","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration.vue?e5e5","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration2.vue?faf7","webpack://InstiKit/./resources/js/views/student/registration/form.vue?6ffe","webpack://InstiKit/./resources/js/views/student/registration/index.vue?0805","webpack://InstiKit/./resources/js/views/student/registration/search-parent.vue?48a9","webpack://InstiKit/./resources/js/views/student/registration/search-student.vue?dd0a","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration.vue?8558","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration2.vue?a868","webpack://InstiKit/./resources/js/views/student/registration/form.vue?d44a","webpack://InstiKit/./resources/js/views/student/registration/index.vue?94c6","webpack://InstiKit/./resources/js/views/student/registration/search-parent.vue?8f75","webpack://InstiKit/./resources/js/views/student/registration/search-student.vue?8fc0","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration.vue?5734","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration2.vue?05bd","webpack://InstiKit/./resources/js/views/student/registration/form.vue?31c9","webpack://InstiKit/./resources/js/views/student/registration/index.vue?74df","webpack://InstiKit/./resources/js/views/student/registration/search-parent.vue?08c3","webpack://InstiKit/./resources/js/views/student/registration/search-student.vue?6c88","webpack://InstiKit/./resources/js/views/student/registration/search-parent.vue?ac7f","webpack://InstiKit/./resources/js/views/student/registration/search-student.vue?86cf","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration.vue?b7c5","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration2.vue?0878"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"page-title\">\r\n      <div class=\"fix-width fix-width-mobile\">\r\n        <h2>{{ trans('student.online_registration') }}</h2>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"fix-width fix-width-mobile p-3\">\r\n      <div class=\"page-body\" v-html=\"getConfig('online_registration_header')\"></div>\r\n    </div>\r\n\r\n    <div class=\"fix-width fix-width-mobile\">\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <form @submit.prevent=\"submit\" @keydown=\"registrationForm.errors.clear($event.target.name)\">\r\n            <h2>{{ trans('student.registration_field_info', {name: trans('academic.course')}) }}</h2>\r\n            <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('academic.course') }}</label>\r\n                  <v-select label=\"name\" v-model=\"selected_course\" group-values=\"courses\" group-label=\"course_group\"\r\n                            :group-select=\"false\" name=\"course_id\" id=\"course_id\" :options=\"courses\"\r\n                            :placeholder=\"trans('academic.select_course')\" @select=\"onCourseSelect\"\r\n                            @close=\"registrationForm.errors.clear('course_id')\"\r\n                            @remove=\"registrationForm.course_id = ''\">\r\n                    <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!courses.length\">\r\n                      {{ trans('general.no_option_found') }}\r\n                    </div>\r\n                  </v-select>\r\n                  <span class=\"help-block\"\r\n                        v-if=\"registrationForm.course_id && enable_registration_fee && registration_fee >= 0\">{{\r\n                      trans('student.registration_fee')\r\n                    }} {{ formatCurrency(registration_fee) }}</span>\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"course_id\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Select Course Batches</label>\r\n                  <select v-model=\"registrationForm.batch_id\" class=\"custom-select col-12\" name=\"batch_id\"\r\n                          @change=\"onBatchSelect\"  >\r\n                    <option value=\"\">{{ trans('general.select_one') }}</option>\r\n                    <option v-for=\"Batch in batches\" v-bind:value=\"Batch.id\">\r\n                      {{ Batch.name }}\r\n                    </option>\r\n                  </select>\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"batch_id\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Select Course Location</label>\r\n                  <select v-model=\"registrationForm.course_location\" class=\"custom-select col-12\" name=\"course_location\"\r\n                          @change=\"registrationForm.errors.clear('course_location')\">\r\n                    <option value=\"\">{{ trans('general.select_one') }}</option>\r\n                    <option v-for=\"course_location in course_locations\" v-bind:value=\"course_location.id\">\r\n                      {{ course_location.name }}\r\n                    </option>\r\n                  </select>\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"course_location\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Accommodation choice</label>\r\n                  <select v-model=\"registrationForm.accommodation\" class=\"custom-select col-12\" name=\"accommodation\"\r\n                          @change=\"registrationForm.errors.clear('accommodation')\">\r\n                    <option value=\"\">{{ trans('general.select_one') }}</option>\r\n                    <option v-for=\"accommodation in accommodations\" v-bind:value=\"accommodation.id\">\r\n                      {{ accommodation.name }}\r\n                    </option>\r\n                  </select>\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"accommodation\"></show-error>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <h2>About You</h2>\r\n            <div class=\"row\">\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.first_name') }}</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_name\" name=\"first_name\"\r\n                         :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"first_name\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.middle_name') }}</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.middle_name\" name=\"middle_name\"\r\n                         :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"middle_name\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.last_name') }}</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.last_name\" name=\"last_name\"\r\n                         :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"last_name\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.date_of_birth') }}</label>\r\n                  <datepicker v-model=\"registrationForm.date_of_birth\" :bootstrapStyling=\"true\"\r\n                              @selected=\"registrationForm.errors.clear('date_of_birth')\"\r\n                              :placeholder=\"trans('student.date_of_birth')\"></datepicker>\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"date_of_birth\"></show-error>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"col-4 col-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Nationality</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.nationality\"\r\n                         name=\"nationality\" placeholder=\"Your Nationality\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"nationality\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4 col-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Your occupation</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.occupation\"\r\n                         name=\"occupation\" placeholder=\"Your Occupation\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"occupation\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.gender') }}</label>\r\n                  <div class=\"radio radio-info p-l-0\">\r\n                    <div class=\"form-check form-check-inline \" v-for=\"gender in genders\">\r\n                      <input class=\"form-check-input\" type=\"radio\" :value=\"gender.id\" :id=\"gender.id\"\r\n                             v-model=\"registrationForm.gender\" :checked=\"registrationForm.gender == gender.id\"\r\n                             name=\"gender\" @click=\"registrationForm.errors.clear('gender')\">\r\n                      <label class=\"form-check-label\" :for=\"gender.id\">{{ trans('list.' + gender.id) }}</label>\r\n                    </div>\r\n                  </div>\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"gender\"></show-error>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n             <h2>Customer Information</h2>\r\n            <input type=\"checkbox\" id=\"checkbox\" v-model=\"checked\" />\r\n<label for=\"checkbox\">Already Have an account? (login)</label><br>\r\n        <!--      <input type=\"checkbox\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\">\r\n  <label for=\"vehicle1\">Already Have an account (please checked)</label> --><br>\r\n  <div class=\"row\">\r\n    <div class=\"col-12 col-sm-12\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Email</label>\r\n                  <input class=\"form-control\" type=\"email\" v-model=\"registrationForm.email\"\r\n                         name=\"email\" :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"email\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-sm-12\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Password </label>\r\n                  <input class=\"form-control\" type=\"password\" v-model=\"registrationForm.password\"\r\n                         name=\"password\" :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"password\"></show-error>\r\n                </div>\r\n              </div>\r\n               <div class=\"col-12 col-sm-12\" v-show=\"!checked\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">confirm Password </label>\r\n                  <input class=\"form-control\" type=\"password\" v-model=\"registrationForm.password_confirmation\"\r\n                         name=\"confirm_password\" :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"confirm_password\"></show-error>\r\n                </div>\r\n              </div>\r\n  </div>\r\n\r\n            <h2>{{ trans('student.registration_field_info', {name: trans('student.guardian')}) }}</h2>\r\n            <div class=\"row\">\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">First Guardian Name</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_guardian_name\"\r\n                         name=\"first_guardian_name\" :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"first_guardian_name\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('general.relation') }}</label>\r\n                  <select v-model=\"registrationForm.first_guardian_relation\" class=\"custom-select col-12\"\r\n                          name=\"first_guardian_relation\"\r\n                          @change=\"registrationForm.errors.clear('first_guardian_relation')\">\r\n                    <option value=\"\">{{ trans('general.select_one') }}</option>\r\n                    <option v-for=\"relation in guardian_relations\" v-bind:value=\"relation.id\">\r\n                      {{ relation.name }}\r\n                    </option>\r\n                  </select>\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"first_guardian_relation\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.first_guardian_email') }}</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_guardian_email\"\r\n                         name=\"first_guardian_email\" :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"first_guardian_email\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.first_guardian_contact_number') }}</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_guardian_contact_number_1\"\r\n                         name=\"first_guardian_contact_number_1\" :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"first_guardian_contact_number_1\"></show-error>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.second_guardian_name') }}</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.second_guardian_name\"\r\n                         name=\"second_guardian_name\" :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"second_guardian_name\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.second_guardian_relation') }}</label>\r\n                  <select v-model=\"registrationForm.second_guardian_relation\" class=\"custom-select col-12\"\r\n                          name=\"second_guardian_relation\"\r\n                          @change=\"registrationForm.errors.clear('second_guardian_relation')\">\r\n                    <option value=\"\">{{ trans('general.select_one') }}</option>\r\n                    <option v-for=\"relation in guardian_relations\" v-bind:value=\"relation.id\">\r\n                      {{ relation.name }}\r\n                    </option>\r\n                  </select>\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"second_guardian_relation\"></show-error>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <h2>{{ trans('student.registration_field_info', {name: trans('student.contact')}) }}</h2>\r\n            <div class=\"row\">\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Email</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.email\"\r\n                         name=\"email\" placeholder=\"Your Email Address\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"email\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.contact_number') }}</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.contact_number\"\r\n                         name=\"contact_number\" :placeholder=\"trans('student.contact_number')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"contact_number\"></show-error>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.address_line_1') }}</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.address_line_1\"\r\n                         name=\"address_line_1\" :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"address_line_1\"></show-error>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.address_line_2') }}</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.address_line_2\"\r\n                         name=\"address_line_2\" :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"address_line_2\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.city') }}</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.city\" name=\"city\"\r\n                         :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"city\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.state') }}</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.state\" name=\"state\"\r\n                         :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"state\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.zipcode') }}</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.zipcode\" name=\"zipcode\"\r\n                         :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"zipcode\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">{{ trans('student.country') }}</label>\r\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.country\" name=\"country\"\r\n                         :placeholder=\"trans('student.contact_name')\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"country\"></show-error>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <custom-field :fields=\"custom_fields\" :customValues=\"custom_values\" :clear=\"clearCustomField\"\r\n                          :formErrors=\"customFieldFormErrors\" @updateCustomValues=\"updateCustomValues\"></custom-field>\r\n\r\n\r\n            <h2>Other Details</h2>\r\n            <div class=\"row\">\r\n              <div class=\"col-4 \">\r\n                <label for=\"\">How long have you been practicing Yoga?</label>\r\n                <select v-model=\"registrationForm.how_long_yoga\"\r\n                        name=\"how_long_yoga\"\r\n                        placeholder=\"Select one\"\r\n                        class=\"custom-select col-12\"\r\n                        @change=\"registrationForm.errors.clear('how_long_yoga')\">\r\n                  <option value=\"\">{{ trans('general.select_one') }}</option>\r\n                  <option v-for=\"how_log_option in how_long_yoga_options\" v-bind:value=\"how_log_option.id\">\r\n                    {{ how_log_option.name }}\r\n                  </option>\r\n\r\n                </select>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n\r\n\r\n                  <label for=\"\">Do you have any experience teaching yoga?</label>\r\n                  <select v-model=\"registrationForm.teaching_experience\"\r\n                          name=\"teaching_experience\"\r\n                          class=\"custom-select col-12\"\r\n                          @change=\"registrationForm.errors.clear('teaching_experience')\">\r\n                    <option value=\"\">{{ trans('general.select_one') }}</option>\r\n                    <option v-for=\"teaching_experience_option in teaching_experience_options\"\r\n                            v-bind:value=\"teaching_experience_option.id\">\r\n                      {{ teaching_experience_option.name }}\r\n                    </option>\r\n                  </select>\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"teaching_experience\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\" col-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">What is your primary reason to join the course? </label>\r\n                  <input type=\"text\"\r\n                         class=\"form-control\"\r\n                         v-model=\"registrationForm.joining_reason\"\r\n                         name=\"joining_reason\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"joining_reason\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group \">\r\n                  <label for=\"\">What is important to you in life?</label>\r\n                  <input class=\"form-control \" type=\"text\"\r\n                         name=\"important_to_life\"\r\n                         v-model=\"registrationForm.important_to_life\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"important_to_life\"></show-error>\r\n                </div>\r\n\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Why did you choose Arhanta Yoga?</label>\r\n                  <input type=\"text\" name=\"why_choose_us\" class=\"form-control\" v-model=\"registrationForm.why_choose_us\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"why_choose_us\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">How did you hear about us?</label>\r\n                  <input type=\"text\" class=\"form-control\" name=\"how_hear_about_us\"\r\n                         v-model=\"registrationForm.how_hear_about_us\">\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"how_hear_about_us\"></show-error>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Please mention in case you have any allergies or special dietary needs:</label>\r\n                  <br>\r\n                  <input type=\"text\" name=\"allergies_dietary_needs\" v-model=\"registrationForm.allergies_dietary_needs\"\r\n                         class=\"form-control mt-3\">\r\n\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"allergies_dietary_needs\"></show-error>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Have you in the last 12 months used tobacco, alcohol, recreational drugs, or illicit\r\n                    substances?(Required)</label>\r\n                  <select name=\"use_drugs\" v-model=\"registrationForm.use_drugs\" class=\"custom-select col-12 \"\r\n                          @change=\"registrationForm.errors.clear('use_drugs')\">\r\n                    <option value=\"\">{{ trans('general.select_one') }}</option>\r\n                    <option v-for=\"use_drugs_option in use_drugs_options\" v-bind:value=\"use_drugs_option.id\">\r\n                      {{ use_drugs_option.name }}\r\n                    </option>\r\n                  </select>\r\n\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"use_drugs\"></show-error>\r\n\r\n                </div>\r\n              </div>\r\n              <div class=\"col-6\" >\r\n                <div class=\"form-group\">\r\n                  <label for=\"\">Please list substance and frequency of use</label>\r\n                  <textarea v-model=\"registrationForm.substance_frequency_of_use\" class=\"form-control\" placeholder=\"add multiple lines\"></textarea>\r\n\r\n                  <show-error :form-name=\"registrationForm\" prop-name=\"substance_frequency_of_use\"></show-error>\r\n                  <span class=\"text-xs\">Please note that for any residential courses conducted at the premises of the Arhanta Yoga Ashrams in India and the Netherlands, the use of tobacco, alcohol and any other drugs is strictly prohibited. Please consider carefully before applying that you will be able to discontinue the use of any such substances during the entire duration of your course.</span>\r\n\r\n                </div>\r\n              </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n\r\n        <div class=\"form-group\">\r\n          <button type=\"submit\" class=\"btn btn-info btn-lg waves-effect waves-light m-t-10\">\r\n            {{ trans('general.submit') }}\r\n          </button>\r\n        </div>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport registration from \"../../../student/registration\";\r\n\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      courses: [],\r\n      genders: [],\r\n      course_details: [],\r\n      data_to_show: [],\r\n      batches: [],\r\n      checked:false,\r\n      registrationForm: new Form({\r\n        course_id: '',\r\n        batch_id: '',\r\n        first_name: '',\r\n        course_location_id: '',\r\n        middle_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        date_of_birth: '',\r\n        first_guardian_name: '',\r\n        first_guardian_relation: '',\r\n        second_guardian_name: '',\r\n        second_guardian_relation: '',\r\n        contact_number: '',\r\n        first_guardian_contact_number_1: '',\r\n        first_guardian_email: '',\r\n        gender: '',\r\n        address_line_1: '',\r\n        address_line_2: '',\r\n        city: '',\r\n        state: '',\r\n        zipcode: '',\r\n        country: '',\r\n        custom_values: [],\r\n        course_location: '',\r\n        accommodation: '',\r\n        nationality: '',\r\n        occupation: '',\r\n        how_long_yoga: '',\r\n        teaching_experience: '',\r\n        joining_reason: '',\r\n        important_to_life: '',\r\n        why_choose_us: '',\r\n        how_hear_about_us: '',\r\n        allergies_dietary_needs: '',\r\n        use_drugs: '',\r\n        use_drugs_details: '',\r\n        substance_frequency_of_use: '',\r\n        email:'',\r\n        password:'',\r\n        password_confirmation:'',\r\n        check:false\r\n\r\n      }),\r\n      selected_course: null,\r\n      selected_batch: null,\r\n      guardian_relations: [],\r\n      custom_fields: [],\r\n      custom_values: [],\r\n      clearCustomField: false,\r\n      customFieldFormErrors: {},\r\n      course_locations: [],\r\n      accommodations: [],\r\n      how_long_yoga_options: [],\r\n      teaching_experience_options: [],\r\n      use_drugs_options: [],\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.getConfig('online_registration')) {\r\n      this.$router.push('/dashboard');\r\n    }\r\n\r\n    let loader = this.$loading.show();\r\n    axios.get('/api/frontend/online-registration/pre-requisite')\r\n        .then(response => {\r\n          this.genders = response.genders;\r\n          this.courses = response.courses.courses;\r\n          this.course_details = response.courses.course_details;\r\n          // this.batches = response.batches;\r\n          this.custom_fields = response.custom_fields;\r\n          this.guardian_relations = response.guardian_relations;\r\n          this.accommodations = response.accommodations;\r\n          this.course_locations = response.course_locations;\r\n          this.how_long_yoga_options = response.how_long_yoga_options;\r\n          this.teaching_experience_options = response.teaching_experience_options;\r\n          this.use_drugs_options = response.use_drugs_options;\r\n          loader.hide();\r\n        })\r\n        .catch(error => {\r\n          loader.hide();\r\n          helper.showErrorMsg(error);\r\n        })\r\n  },\r\n  methods: {\r\n    getConfig(config) {\r\n      return helper.getConfig(config)\r\n    },\r\n    check(){\r\n    alert(this.checked);\r\n    },\r\n    updateCustomValues(value) {\r\n      this.registrationForm.custom_values = value;\r\n    },\r\n    submit() {\r\n      let loader = this.$loading.show();\r\n    \r\n       if (this.checked) {\r\n        this.registrationForm.password_confirmation='';\r\n        this.registrationForm.check=this.checked;\r\n       }\r\n       else\r\n       {\r\n        this.registrationForm.check=false;\r\n       }\r\n       \r\n      this.registrationForm.post('/api/frontend/online-registration')\r\n          .then(response => {\r\n            toastr.success(response.message);\r\n            this.selected_course = null;\r\n            this.clearCustomField = true;\r\n            loader.hide();\r\n          })\r\n          .catch(error => {\r\n            loader.hide();\r\n            this.customFieldFormErrors = error;\r\n            console.log('error',error);\r\n            helper.showErrorMsg(error);\r\n          });\r\n    },\r\n    onCourseSelect(selectedOption) {\r\n      this.registrationForm.course_id = selectedOption.id;\r\n      let course = this.course_details.find(o => o.course_id == selectedOption.id);\r\n      this.enable_registration_fee = (course != 'undefined') ? course.enable_registration_fee : 0;\r\n      this.registration_fee = (this.enable_registration_fee) ? course.registration_fee : 0\r\n      // let course = this.course_details.find(o => o.course_id == selectedOption.id);\r\n      let batches = this.course_details.find(\r\n          o => o.course_id == selectedOption.id\r\n      );\r\n\r\n      this.batches=batches.batch_data;\r\n      // let location_data = batches.batch_data.find(o => o.location);\r\n      // console.table(location_data);\r\n\r\n// console.log(batches.batch_data);\r\n      // this.batches = this.course_details.find(o => o.course_id == selectedOption.id);\r\n      // console.log(this.batches,this.batches.find(o => o.course_id == selectedOption.id));\r\n      // let valObj = this.course_details.filter(function(elem){\r\n      //   if(elem.course_id == selectedOption.id) return elem.batch_data;\r\n      // });\r\n      // this.batches=valObj;\r\n    },\r\n    onBatchSelect(selectedOption) {\r\n      // this.registrationForm.batch_id = selectedOption.id;\r\n      // this.registrationForm.batch_id = selectedOption.id;\r\n      // let batches = this.batches.find(o => o.course_id == selectedOption.id);\r\n      // this.batches = batches;\r\n\r\n      // this.enable_registration_fee = (course != 'undefined') ? course.enable_registration_fee : 0;\r\n      // this.registration_fee = (this.enable_registration_fee) ? course.registration_fee : 0\r\n\r\n      let loader = this.$loading.show();\r\n      axios.get('/api/frontend/online-registration/getlocationforbatch/'+this.registrationForm.batch_id)\r\n          .then(response => {\r\n            this.course_locations = response.course_location;\r\n            loader.hide();\r\n          })\r\n          .catch(error => {\r\n            loader.hide();\r\n            helper.showErrorMsg(error);\r\n          })\r\n\r\n    },\r\n    formatCurrency(amount) {\r\n      return helper.formatCurrency(amount);\r\n    },\r\n  },\r\n  filters: {\r\n    moment(date) {\r\n      return helper.formatDate(date);\r\n    },\r\n    momentDateTime(date) {\r\n      return helper.formatDateTime(date);\r\n    },\r\n    onChangeUseDrugsOptions(selectedOption){\r\n      this.registration.use_drugs_option=selectedOption.id;\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.contact-info-box {\r\n  .comma:before {\r\n    content: \", \"\r\n  }\r\n}\r\n</style>","<template>\r\n  <div>\r\n    <div class=\"page-title\">\r\n      <div class=\"fix-width fix-width-mobile\">\r\n        <h2>{{ trans('student.online_registration') }}</h2>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"fix-width fix-width-mobile p-3\">\r\n      <div class=\"page-body\" v-html=\"getConfig('online_registration_header')\"></div>\r\n    </div>\r\n\r\n    <div class=\"fix-width fix-width-mobile\">\r\n        \r\n      <div class=\"row\" style=\"background-color: ghostwhite;\">\r\n\r\n        <div class=\"col-12\">\r\n            <div class=\"progress\">\r\n                        <div class=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" aria-valuemin=\"0\" aria-valuemax=\"100\" id=\"progress-bar\"></div>\r\n                    </div> <br>\r\n          <form @submit.prevent=\"submit\" @keydown=\"registrationForm.errors.clear($event.target.name)\">\r\n            <div v-show=\"section1\" style=\"padding: 3%;\">\r\n              <h2>{{ trans('student.registration_field_info', {name: trans('academic.course')}) }}</h2>\r\n              <div class=\"row\" v-show=\"section1\" id=\"progress-1\" >\r\n                <div class=\"col-4\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">{{ trans('academic.course') }}</label>\r\n                    <v-select label=\"name\" v-model=\"selected_course\" group-values=\"courses\" group-label=\"course_group\"\r\n                              :group-select=\"false\" name=\"course_id\" id=\"course_id\" :options=\"courses\"\r\n                              :placeholder=\"trans('academic.select_course')\" @select=\"onCourseSelect\"\r\n                              @close=\"errors.course_id = ''\"\r\n                              @remove=\"registrationForm.course_id = ''\">\r\n                      <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!courses.length\">\r\n                        {{ trans('general.no_option_found') }}\r\n                      </div>\r\n                    </v-select>\r\n                    <span class=\"help-block\"\r\n                          v-if=\"registrationForm.course_id && enable_registration_fee && registration_fee >= 0\">{{\r\n                        trans('student.registration_fee')\r\n                      }} {{ formatCurrency(registration_fee) }}</span>\r\n                    <show-error :form-name=\"registrationForm\" prop-name=\"course_id\"></show-error>\r\n                    <span class=\"help has-error\" v-if=\"Object.keys(errors).includes('course_id')\" v-text=\"errors['course_id'][0]\"></span>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Select Course Batches</label>\r\n                    <select v-model=\"registrationForm.batch_id\" class=\"custom-select col-12\" name=\"batch_id\"\r\n                            @change=\"onBatchSelect\"  >\r\n                      <option value=\"\">{{ trans('general.select_one') }}</option>\r\n                      <option v-for=\"Batch in batches\" v-bind:value=\"Batch.id\">\r\n                        {{ Batch.name }}\r\n                      </option>\r\n                    </select>\r\n                    <show-error :form-name=\"registrationForm\" prop-name=\"batch_id\"></show-error>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Select Course Location</label>\r\n                    <select v-model=\"registrationForm.course_location\" class=\"custom-select col-12\" name=\"course_location\"\r\n                            @change=\"registrationForm.errors.clear('course_location')\">\r\n                      <option value=\"\">{{ trans('general.select_one') }}</option>\r\n                      <option v-for=\"course_location in course_locations\" v-bind:value=\"course_location.id\">\r\n                        {{ course_location.name }}\r\n                      </option>\r\n                    </select>\r\n                    <show-error :form-name=\"registrationForm\" prop-name=\"course_location\"></show-error>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                  <div class=\"form-group\">\r\n                    <label for=\"\">Accommodation choice</label>\r\n                    <select v-model=\"registrationForm.accommodations\" class=\"custom-select col-12\" name=\"accommodations\"\r\n                            @change=\"registrationForm.errors.clear('accommodations')\">\r\n                      <option value=\"\">{{ trans('general.select_one') }}</option>\r\n                      <option v-for=\"accommodation in accommodations\" v-bind:value=\"accommodation.type_name\">\r\n                        {{ accommodation.type_name }}\r\n                      </option>\r\n                    </select>\r\n                    <show-error :form-name=\"registrationForm\" prop-name=\"accommodations\"></show-error>\r\n                    <span class=\"help has-error\" v-if=\"Object.keys(errors).includes('accommodations')\" v-text=\"errors['accommodations'][0]\"></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n             <div v-show=\"section2\" style=\"padding: 3%;\">\r\n                <h2>Customer Information</h2>\r\n                <input type=\"checkbox\" id=\"checkbox\" v-model=\"checked\" />\r\n                <label for=\"checkbox\">Already Have an account? (login)</label><br><br>\r\n              <div class=\"row\" v-show=\"section2\" id=\"progress-3\" >\r\n                <div class=\"col-12 col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"\">Email</label>\r\n                              <input class=\"form-control\" type=\"email\" v-model=\"registrationForm.email\"\r\n                                     name=\"email\" :placeholder=\"trans('student.contact_name')\">\r\n                              <show-error :form-name=\"registrationForm\" prop-name=\"email\"></show-error>\r\n                              <span class=\"help has-error\" v-if=\"Object.keys(errors).includes('email')\" v-text=\"errors['email'][0]\"></span>\r\n                            </div>\r\n                          </div>\r\n                          <div class=\"col-12 col-sm-12\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"\">Password </label>\r\n                              <input class=\"form-control\" type=\"password\" v-model=\"registrationForm.password\"\r\n                                     name=\"password\" :placeholder=\"trans('student.contact_name')\">\r\n                              <show-error :form-name=\"registrationForm\" prop-name=\"password\"></show-error>\r\n                              <span class=\"help has-error\" v-if=\"Object.keys(errors).includes('password')\" v-text=\"errors['password'][0]\"></span>\r\n                            </div>\r\n                          </div>\r\n                           <div class=\"col-12 col-sm-12\" v-show=\"!checked\">\r\n                            <div class=\"form-group\">\r\n                              <label for=\"\">confirm Password </label>\r\n                              <input class=\"form-control\" type=\"password\" v-model=\"registrationForm.password_confirmation\"\r\n                                     name=\"confirm_password\" :placeholder=\"trans('student.contact_name')\">\r\n                              <show-error :form-name=\"registrationForm\" prop-name=\"confirm_password\"></show-error>\r\n                            </div>\r\n                          </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div v-show=\"section3\" style=\"padding: 3%;\">\r\n\r\n                 <h2>About You</h2>\r\n                <div class=\"row\" v-show=\"section3\" id=\"progress-2\" >\r\n                  <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">{{ trans('student.first_name') }}</label>\r\n                      <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_name\" name=\"first_name\"\r\n                             :placeholder=\"trans('student.contact_name')\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"first_name\"></show-error>\r\n                      <span class=\"help has-error\" v-if=\"Object.keys(errors).includes('first_name')\" v-text=\"errors['first_name'][0]\"></span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">{{ trans('student.middle_name') }}</label>\r\n                      <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.middle_name\" name=\"middle_name\"\r\n                             :placeholder=\"trans('student.contact_name')\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"middle_name\"></show-error>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">{{ trans('student.last_name') }}</label>\r\n                      <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.last_name\" name=\"last_name\"\r\n                             :placeholder=\"trans('student.contact_name')\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"last_name\"></show-error>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">{{ trans('student.date_of_birth') }}</label>\r\n                      <datepicker v-model=\"registrationForm.date_of_birth\" :bootstrapStyling=\"true\"\r\n                                  @selected=\"registrationForm.errors.clear('date_of_birth')\"\r\n                                  :placeholder=\"trans('student.date_of_birth')\"></datepicker>\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"date_of_birth\"></show-error>\r\n                      <span class=\"help has-error\" v-if=\"Object.keys(errors).includes('date_of_birth')\" v-text=\"errors['date_of_birth'][0]\"></span>\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div class=\"col-4 col-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Nationality</label>\r\n                      <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.nationality\"\r\n                             name=\"nationality\" placeholder=\"Your Nationality\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"nationality\"></show-error>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-4 col-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Your occupation</label>\r\n                      <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.occupation\"\r\n                             name=\"occupation\" placeholder=\"Your Occupation\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"occupation\"></show-error>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">{{ trans('student.gender') }}</label>\r\n                      <div class=\"radio radio-info p-l-0\">\r\n                        <div class=\"form-check form-check-inline \" v-for=\"gender in genders\">\r\n                          <input class=\"form-check-input\" type=\"radio\" :value=\"gender.id\" :id=\"gender.id\"\r\n                                 v-model=\"registrationForm.gender\" :checked=\"registrationForm.gender == gender.id\"\r\n                                 name=\"gender\" @click=\"registrationForm.errors.clear('gender')\">\r\n                          <label class=\"form-check-label\" :for=\"gender.id\">{{ trans('list.' + gender.id) }}</label>\r\n                        </div>\r\n                      </div>\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"gender\"></show-error>\r\n                      <span class=\"help has-error\" v-if=\"Object.keys(errors).includes('gender')\" v-text=\"errors['gender'][0]\"></span>\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n               \r\n            </div>\r\n            <div v-show=\"section4\" style=\"padding: 3%;\">\r\n              <h2>{{ trans('student.registration_field_info', {name: trans('student.contact')}) }}</h2>\r\n                <div class=\"row\" v-show=\"section4\" v-bind:id=\"'progress-'+5\" >\r\n                  <div class=\"col-12 col-sm-4\" v-if=\"checked==false\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Email</label>\r\n                      <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.email\"\r\n                             name=\"email\" placeholder=\"Your Email Address\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"email\"></show-error>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">{{ trans('student.contact_number') }}</label>\r\n                      <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.contact_number\"\r\n                             name=\"contact_number\" :placeholder=\"trans('student.contact_number')\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"contact_number\"></show-error>\r\n                      <span class=\"help has-error\" v-if=\"Object.keys(errors).includes('contact_number')\" v-text=\"errors['contact_number'][0]\"></span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">{{ trans('student.address_line_1') }}</label>\r\n                      <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.address_line_1\"\r\n                             name=\"address_line_1\" :placeholder=\"trans('student.contact_name')\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"address_line_1\"></show-error>\r\n                      <span class=\"help has-error\" v-if=\"Object.keys(errors).includes('address_line_1')\" v-text=\"errors['address_line_1'][0]\"></span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">{{ trans('student.address_line_2') }}</label>\r\n                      <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.address_line_2\"\r\n                             name=\"address_line_2\" :placeholder=\"trans('student.contact_name')\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"address_line_2\"></show-error>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">{{ trans('student.city') }}</label>\r\n                      <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.city\" name=\"city\"\r\n                             :placeholder=\"trans('student.contact_name')\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"city\"></show-error>\r\n                      <span class=\"help has-error\" v-if=\"Object.keys(errors).includes('city')\" v-text=\"errors['city'][0]\"></span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">{{ trans('student.state') }}</label>\r\n                      <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.state\" name=\"state\"\r\n                             :placeholder=\"trans('student.contact_name')\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"state\"></show-error>\r\n                      <span class=\"help has-error\" v-if=\"Object.keys(errors).includes('state')\" v-text=\"errors['state'][0]\"></span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">{{ trans('student.zipcode') }}</label>\r\n                      <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.zipcode\" name=\"zipcode\"\r\n                             :placeholder=\"trans('student.contact_name')\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"zipcode\"></show-error>\r\n                      <span class=\"help has-error\" v-if=\"Object.keys(errors).includes('zipcode')\" v-text=\"errors['zipcode'][0]\"></span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">{{ trans('student.country') }}</label>\r\n                      <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.country\" name=\"country\"\r\n                             :placeholder=\"trans('student.contact_name')\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"country\"></show-error>\r\n                      <span class=\"help has-error\" v-if=\"Object.keys(errors).includes('country')\" v-text=\"errors['country'][0]\"></span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n           \r\n            \r\n           <div v-show=\"section5\" style=\"padding: 3%;\">\r\n                <h2>Other Details</h2>\r\n                <div class=\"row\" v-show=\"section5\" v-bind:id=\"'progress-'+6\" >\r\n                  <div class=\"col-4 \">\r\n                    <label for=\"\">How long have you been practicing Yoga?</label>\r\n                    <select v-model=\"registrationForm.how_long_yoga\"\r\n                            name=\"how_long_yoga\"\r\n                            placeholder=\"Select one\"\r\n                            class=\"custom-select col-12\"\r\n                            @change=\"registrationForm.errors.clear('how_long_yoga')\">\r\n                      <option value=\"\">{{ trans('general.select_one') }}</option>\r\n                      <option v-for=\"how_log_option in how_long_yoga_options\" v-bind:value=\"how_log_option.id\">\r\n                        {{ how_log_option.name }}\r\n                      </option>\r\n\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-6\">\r\n                    <div class=\"form-group\">\r\n\r\n\r\n                      <label for=\"\">Do you have any experience teaching yoga?</label>\r\n                      <select v-model=\"registrationForm.teaching_experience\"\r\n                              name=\"teaching_experience\"\r\n                              class=\"custom-select col-12\"\r\n                              @change=\"registrationForm.errors.clear('teaching_experience')\">\r\n                        <option value=\"\">{{ trans('general.select_one') }}</option>\r\n                        <option v-for=\"teaching_experience_option in teaching_experience_options\"\r\n                                v-bind:value=\"teaching_experience_option.id\">\r\n                          {{ teaching_experience_option.name }}\r\n                        </option>\r\n                      </select>\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"teaching_experience\"></show-error>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\" col-12\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">What is your primary reason to join the course? </label>\r\n                      <input type=\"text\"\r\n                             class=\"form-control\"\r\n                             v-model=\"registrationForm.joining_reason\"\r\n                             name=\"joining_reason\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"joining_reason\"></show-error>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12\">\r\n                    <div class=\"form-group \">\r\n                      <label for=\"\">What is important to you in life?</label>\r\n                      <input class=\"form-control \" type=\"text\"\r\n                             name=\"important_to_life\"\r\n                             v-model=\"registrationForm.important_to_life\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"important_to_life\"></show-error>\r\n                    </div>\r\n\r\n                  </div>\r\n                  <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Why did you choose Arhanta Yoga?</label>\r\n                      <input type=\"text\" name=\"why_choose_us\" class=\"form-control\" v-model=\"registrationForm.why_choose_us\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"why_choose_us\"></show-error>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">How did you hear about us?</label>\r\n                      <input type=\"text\" class=\"form-control\" name=\"how_hear_about_us\"\r\n                             v-model=\"registrationForm.how_hear_about_us\">\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"how_hear_about_us\"></show-error>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\" v-show=\"section5\" v-bind:id=\"'progress-'+6\" >\r\n                  <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Please mention in case you have any allergies or special dietary needs:</label>\r\n                      <br>\r\n                      <input type=\"text\" name=\"allergies_dietary_needs\" v-model=\"registrationForm.allergies_dietary_needs\"\r\n                             class=\"form-control mt-3\">\r\n\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"allergies_dietary_needs\"></show-error>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-6\">\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Have you in the last 12 months used tobacco, alcohol, recreational drugs, or illicit\r\n                        substances?(Required)</label>\r\n                      <select name=\"use_drugs\" v-model=\"registrationForm.use_drugs\" class=\"custom-select col-12 \"\r\n                              @change=\"registrationForm.errors.clear('use_drugs')\">\r\n                        <option value=\"\">{{ trans('general.select_one') }}</option>\r\n                        <option v-for=\"use_drugs_option in use_drugs_options\" v-bind:value=\"use_drugs_option.id\">\r\n                          {{ use_drugs_option.name }}\r\n                        </option>\r\n                      </select>\r\n\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"use_drugs\"></show-error>\r\n\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-12\" >\r\n                    <div class=\"form-group\">\r\n                      <label for=\"\">Please list substance and frequency of use</label>\r\n                      <textarea v-model=\"registrationForm.substance_frequency_of_use\" class=\"form-control\" placeholder=\"add multiple lines\"></textarea>\r\n\r\n                      <show-error :form-name=\"registrationForm\" prop-name=\"substance_frequency_of_use\"></show-error>\r\n                      <span class=\"text-xs\">Please note that for any residential courses conducted at the premises of the Arhanta Yoga Ashrams in India and the Netherlands, the use of tobacco, alcohol and any other drugs is strictly prohibited. Please consider carefully before applying that you will be able to discontinue the use of any such substances during the entire duration of your course.</span>\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                </div>\r\n                <custom-field :fields=\"custom_fields\" :customValues=\"custom_values\" :clear=\"clearCustomField\"\r\n                          :formErrors=\"customFieldFormErrors\" @updateCustomValues=\"updateCustomValues\"></custom-field>\r\n\r\n\r\n            </div>\r\n\r\n\r\n          \r\n                \r\n\r\n\r\n\r\n\r\n                  <div v-show=\"section6\" style=\"padding: 3%;\">\r\n                                        <h4 class=\"card-title\">{{trans('finance.choose_payment_gateway')}}</h4>\r\n\r\n                                              <div class=\"radio radio-success\" >\r\n                                            <input type=\"radio\" name=\"payment_gateway\" id=\"stripe\" value=\"stripe\" @change=\"setPaymentGateway('stripe')\">\r\n                                            <label for=\"stripe\"> Stripe </label>\r\n                                        </div>\r\n                                        <div class=\"radio radio-success\" >\r\n                                            <input type=\"radio\" name=\"payment_gateway\" id=\"billdesk\" value=\"billdesk\" @change=\"setPaymentGateway('mollie')\">\r\n                                            <label for=\"billdesk\"> Mollie </label>\r\n                                        </div>\r\n                                         <div class=\"row m-t-40\" v-if=\"payment_gateway == 'mollie'\">\r\n                                          <div class=\"col-4\">\r\n                                                    <div class=\"form-group\">\r\n                                                       <h4>Press Submit to Pay with Mollie</h4>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                         </div>\r\n\r\n                                            <div class=\"row m-t-40\" v-if=\"payment_gateway == 'stripe'\">\r\n                                                <div class=\"col-12\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <input class=\"form-control\" type=\"number\" maxlength=\"16\" value=\"\" v-model=\"stripe.card_number\" :placeholder=\"trans('finance.card_number')\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-3\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <input class=\"form-control\" type=\"number\" value=\"\" v-model=\"stripe.month\" :placeholder=\"trans('finance.card_expiry_month')\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-4\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <input class=\"form-control\" type=\"number\" value=\"\" v-model=\"stripe.year\" :placeholder=\"trans('finance.card_expiry_year')\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-1\">\r\n                                                </div>\r\n                                                <div class=\"col-4\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <input class=\"form-control\" type=\"number\" value=\"\" v-model=\"stripe.cvc\" :placeholder=\"trans('finance.card_cvc')\">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n\r\n                                          <!--   <form>\r\n  <div id=\"card\"></div>\r\n</form> -->\r\n\r\n<!-- <form>\r\n  <div id=\"card-number\"></div>\r\n  <div id=\"card-number-error\"></div>\r\n\r\n  <div id=\"card-holder\"></div>\r\n  <div id=\"card-holder-error\"></div>\r\n\r\n  <div id=\"expiry-date\"></div>\r\n  <div id=\"expiry-date-error\"></div>\r\n\r\n  <div id=\"verification-code\"></div>\r\n  <div id=\"verification-code-error\"></div>\r\n\r\n  <button type=\"button\"  @click=\"mollieCheckout()\">Pay</button>\r\n</form> -->\r\n                                           <!--  <button type=\"button\" @click=\"stripeCheckout\" class=\"btn btn-info waves-effect waves-light pull-right\"  style=\"margin-right: 2%\" v-if=\"stripeButton\"><span>{{trans('general.proceed')}}</span></button> -->\r\n                                        \r\n                                    </div>\r\n\r\n                                    <div v-show=\"section7\" style=\"padding: 3%;\">\r\n\r\n                                        \r\n                                        <div class=\"purchase-message\">\r\n                                          <div class=\"container\">\r\n                                            <div class=\"row\">\r\n                                              <div class=\"col-lg-12\">\r\n                                                <div class=\"purchase-success\">\r\n                                                  <div class=\"icon text-success\" style=\"margin-left: 50%;\"><i class=\"far fa-check-circle\"></i></div>\r\n                                                  <h2 style=\"margin-left: 42%;\">Success</h2>\r\n                                                  \r\n                                                    <p style=\"margin-left: 38%;\">Your transaction was successful.</p>\r\n                                                  \r\n\r\n                                                  <p style=\"margin-left: 34%;\">We have sent you a mail with an invoice.</p>\r\n\r\n                                                \r\n                                                  <p class=\"mt-4\" style=\"margin-left: 47%;\">Thank You.</p>\r\n                                                </div>\r\n                                              </div>\r\n                                            </div>\r\n                                          </div>\r\n                                        </div>\r\n                                           <!--  <button type=\"button\" @click=\"stripeCheckout\" class=\"btn btn-info waves-effect waves-light pull-right\"  style=\"margin-right: 2%\" v-if=\"stripeButton\"><span>{{trans('general.proceed')}}</span></button> -->\r\n                                        \r\n                                    </div>\r\n            \r\n\r\n\r\n\r\n\r\n        <div class=\"form-group\">\r\n            <button v-show=\"prevBtn\" type=\"button\" @click=\"previousClick()\"class=\"btn btn-info btn-lg waves-effect waves-light m-t-10\">\r\n            Previous\r\n          </button>\r\n          <span v-show=\"nextBtn\" type=\"button\"  @click=\"nextClick()\" class=\"btn btn-info btn-lg waves-effect waves-light m-t-10\">\r\n           Next\r\n          </span>\r\n          <button v-show=\"submitBtn\" type=\"button\" v-if=\"payment_gateway == 'stripe'\" @click=\"stripeCheckout()\" class=\"btn btn-info btn-lg waves-effect waves-light m-t-10\">\r\n            {{ trans('general.submit') }}\r\n          </button>\r\n          <button v-show=\"submitBtn\" type=\"button\" v-if=\"payment_gateway == 'mollie'\" @click=\"mollieCheckout()\" class=\"btn btn-info btn-lg waves-effect waves-light m-t-10\">\r\n            {{ trans('general.submit') }}\r\n          </button>\r\n        </div>\r\n        </form>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport registration from \"../../../student/registration\";\r\n\r\n\r\nexport default {\r\n  components: {},\r\n  computed:{\r\n    regis(){\r\n\r\n        return this.registrationForm;\r\n    },\r\n    computed: {\r\n        hasName(name) {\r\n            return this.containsKey(this.errors, name);\r\n        }\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n\r\n      courses: [],\r\n      genders: [],\r\n      course_details: [],\r\n      data_to_show: [],\r\n      batches: [],\r\n      checked:false,\r\n      payment_gateway: '',\r\n      registrationForm: new Form({\r\n        course_id: '',\r\n        batch_id: '',\r\n        first_name: '',\r\n        course_location_id: '',\r\n        middle_name: '',\r\n        last_name: '',\r\n        email: '',\r\n        date_of_birth: '',\r\n        first_guardian_name: '',\r\n        first_guardian_relation: '',\r\n        second_guardian_name: '',\r\n        second_guardian_relation: '',\r\n        contact_number: '',\r\n        first_guardian_contact_number_1: '',\r\n        first_guardian_email: '',\r\n        gender: '',\r\n        address_line_1: '',\r\n        address_line_2: '',\r\n        city: '',\r\n        state: '',\r\n        zipcode: '',\r\n        country: '',\r\n        custom_values: [],\r\n        course_location: '',\r\n        accommodation: '',\r\n        nationality: '',\r\n        occupation: '',\r\n        how_long_yoga: '',\r\n        teaching_experience: '',\r\n        joining_reason: '',\r\n        important_to_life: '',\r\n        why_choose_us: '',\r\n        how_hear_about_us: '',\r\n        allergies_dietary_needs: '',\r\n        use_drugs: '',\r\n        use_drugs_details: '',\r\n        substance_frequency_of_use: '',\r\n        email:'',\r\n        password:'',\r\n        password_confirmation:'',\r\n        check:false,\r\n        reg_fee:0\r\n        \r\n\r\n      }),\r\n      selected_course: null,\r\n      selected_batch: null,\r\n      guardian_relations: [],\r\n      custom_fields: [],\r\n      custom_values: [],\r\n      clearCustomField: false,\r\n      customFieldFormErrors: {},\r\n      course_locations: [],\r\n      accommodations: [],\r\n      how_long_yoga_options: [],\r\n      teaching_experience_options: [],\r\n      use_drugs_options: [],\r\n      errors:{},\r\n\r\n\r\ncourse_id:false,\r\n       stripe: {\r\n                    card_number: '',\r\n                    month: '',\r\n                    year: '',\r\n                    cvc: ''\r\n                },\r\n                stripeButton: true,\r\n                selected_account: null,\r\n                accounts: [],\r\n                payment_methods: [],\r\n                selected_payment_method: null,\r\n                payment_method_details: [],\r\n                payment_method_detail: {},\r\n\r\n\r\n\r\n\r\n\r\n     section1:true,\r\n     section2:false,\r\n     section3:false,\r\n     section4:false,\r\n     section5:false,\r\n     section6:false,\r\n      section7:false,\r\n\r\n\r\n     nextBtn:true,\r\n     prevBtn:false,\r\n\r\n     submitBtn:false,\r\n\r\n     currentIndex:1,\r\n\r\n     endForm:false,\r\n     startForm:true,\r\n\r\n\r\n\r\n\r\n\r\n\r\npossible:false,\r\ntemp:[],\r\n\r\nmol:''\r\n\r\n\r\n\r\n\r\n    }\r\n  },\r\n  mounted() {\r\n let urlParams = new URLSearchParams(window.location.search);\r\n if (urlParams.has('payment_status')) {\r\n\r\n                    this.section1=false;\r\n                    this.section7=true;\r\n                    this.nextBtn=false;\r\n                    this.prevBtn=false;\r\n                    this.submitBtn=false;\r\n          }\r\n\r\n     var e1 = document.getElementById(\"progress-bar\");\r\n    e1.style.width = this.currentIndex*14.285+ \"%\";\r\n    if (!this.getConfig('online_registration')) {\r\n      this.$router.push('/dashboard');\r\n    }\r\n\r\n    let loader = this.$loading.show();\r\n    axios.get('/api/frontend/online-registration/pre-requisite')\r\n        .then(response => {\r\n          this.genders = response.genders;\r\n          this.courses = response.courses.courses;\r\n          this.course_details = response.courses.course_details;\r\n          // this.batches = response.batches;\r\n          this.custom_fields = response.custom_fields;\r\n          this.guardian_relations = response.guardian_relations;\r\n          this.accommodations = response.accommodations;\r\n          this.course_locations = response.course_locations;\r\n          this.how_long_yoga_options = response.how_long_yoga_options;\r\n          this.teaching_experience_options = response.teaching_experience_options;\r\n          this.use_drugs_options = response.use_drugs_options;\r\n          loader.hide();\r\n        })\r\n        .catch(error => {\r\n          loader.hide();\r\n          helper.showErrorMsg(error);\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  },\r\n  computed: {\r\n\r\n    \r\n\r\n  },\r\n  methods: {\r\n    setPaymentGateway(gateway){\r\n                this.payment_gateway = gateway;\r\n            },\r\n    containsKey(obj, key ) {\r\n            return Object.keys(obj).includes(key);\r\n        },\r\n    getConfig(config){\r\n                return helper.getConfig(config);\r\n            },\r\n            webhookurk(){\r\n              console.log('webhook');\r\n\r\n            },\r\n        mollieCheckout(){\r\n\r\n\r\n            if (this.registration_fee) {\r\n        this.registrationForm.reg_fee=this.registration_fee;\r\n\r\n       }\r\n              axios.post('/mollie-payment',{\r\n                           \r\n                           \r\n                            registrationForm:this.registrationForm\r\n                           \r\n                        })\r\n                        .then(response => {\r\n                          console.log(response._links.checkout.href);\r\n                          window.location = response._links.checkout.href;\r\n                           // this.submit();\r\n                            \r\n                        })\r\n                        .catch(error => {\r\n                            loader.hide();\r\n                            helper.showErrorMsg(error);\r\n                            this.stripeButton = true;\r\n                        });\r\n\r\n            },\r\n    stripeCheckout(){\r\n               \r\n                this.stripeButton = false;\r\n                Stripe.setPublishableKey(\"pk_test_UnU1Coi1p5qFGwtpjZMRMgJM\");\r\n                Stripe.card.createToken({\r\n                    number: this.stripe.card_number,\r\n                    cvc: this.stripe.cvc,\r\n                    exp_month: this.stripe.month,\r\n                    exp_year: this.stripe.year\r\n                }, this.stripeResponseHandler);\r\n               \r\n            },\r\n            stripeResponseHandler(status, response) {\r\n                if(status == 200){\r\n                   \r\n                    axios.get('/frontend/online-registration-stripe',{\r\n                            stripeToken: response.id,\r\n                            amount: 100,\r\n                            fee: 122,\r\n                            course_id:this.registrationForm.course_id\r\n\r\n                           \r\n                        })\r\n                        .then(response => {\r\n                            this.submit();\r\n                            \r\n                        })\r\n                        .catch(error => {\r\n                            loader.hide();\r\n                            helper.showErrorMsg(error);\r\n                            this.stripeButton = true;\r\n                        })\r\n                } else {\r\n                    toastr.error(response.error.message);\r\n                    this.stripeButton = true;\r\n                }\r\n            },\r\n    progressBarIncDecre(type){\r\n        if (type='next') {\r\n             var e1 = document.getElementById(\"progress-bar\");\r\n    e1.style.width = this.currentIndex*16.67+ \"%\";\r\n\r\n        }\r\n        if (type='next') {\r\n             var e1 = document.getElementById(\"progress-bar\");\r\n    e1.style.width;\r\n    console.log(e1.style.width);\r\n\r\n        }\r\n       \r\n\r\n    },\r\n    checkValidForm(){\r\n\r\n\r\n\r\n        this.registrationForm.post('/api/frontend/online-registration?section_no='+this.currentIndex)\r\n          .then(response => {\r\n            \r\n          })\r\n          .catch(error => {\r\n           //loader.hide();\r\n            this.customFieldFormErrors = error;\r\n            console.log('error',error);\r\n            helper.showErrorMsg(error);\r\n          });\r\n    },\r\n    async nextClick(){\r\n\r\n      \r\n     //possible= this.checkValidForm();\r\n     self=this;\r\n\r\n     if (this.checked) {\r\n        this.registrationForm.password_confirmation='';\r\n        this.registrationForm.check=this.checked;\r\n       }\r\n       else\r\n       {\r\n        this.registrationForm.check=false;\r\n       }\r\n       // this.temp=this.registrationForm;\r\n       // console.log(this.temp);\r\n     await  axios.post('/api/frontend/online-registration?section_no='+this.currentIndex,this.registrationForm)\r\n          .then(response => {\r\n           // alert(response.message);\r\n            self.possible=true;\r\n            \r\n            if (response.hasOwnProperty('user')) {\r\n                console.log(response.user);\r\n                this.registrationForm.gender=response.gender;\r\n            }\r\n            this.errors={};\r\n         //   this.registrationForm=this.temp;\r\n          })\r\n          .catch(error => {\r\n           //loader.hide();\r\n           \r\n            self.possible=false;\r\n         // this.registrationForm.errors.errors.errors=error.response.data.errors;\r\n         // this.registrationForm=this.regis;\r\n          this.errors=error.response.data.errors;\r\n          console.log(this.errors);\r\n          //this.errors.has('course_id');\r\n          //  this.registrationForm.errors.errors.message=error.response.data.message;\r\n          // this.customFieldFormErrors.errors = error.response.data.errors;\r\n          // this.regis;\r\n          // this.course_id=this.registrationForm.errors.has('course_id');\r\n//console.log(this.errors['course_id'][0]);\r\n\r\n           //this.registrationForm.errors.errors.errors=error.response.data.errors;\r\n          // this.customFieldFormErrors = error;\r\n           // console.log('error',error);\r\n            //helper.showErrorMsg1(error);\r\n            // this.registrationForm=this.temp;\r\n          });\r\n\r\n          console.log(this.possible);\r\n        if (this.possible) {\r\n\r\n            if (this.currentIndex<6 ) {\r\n            if(this.currentIndex==1) \r\n            {\r\n\r\n              this.prevBtn=true;\r\n            \r\n            }\r\n            \r\n            \r\n            // this.currentIndex++;\r\n            // if (this.checked) {\r\n            //   this.currentIndex++;\r\n            // }\r\n             this.setVisibility('next');\r\n            this.progressBarIncDecre('next');\r\n           \r\n           \r\n            \r\n\r\n         }\r\n         if (this.currentIndex==6) {\r\n            this.endForm=true;\r\n            this.nextBtn=false;\r\n            this.submitBtn=true;\r\n\r\n         }\r\n\r\n        }\r\n         \r\n        \r\n\r\n    },\r\n    previousClick(){\r\n \r\n\r\n  \r\n  \r\n  if (this.currentIndex>1) {\r\n\r\n    this.setVisibility('previous');\r\n    this.progressBarIncDecre('pre');\r\n   \r\n    this.nextBtn=true;\r\n    this.submitBtn=false;\r\n    if(this.currentIndex==1) \r\n    {\r\n\r\n            this.prevBtn=false;\r\n          \r\n    }\r\n\r\n  }\r\n  else\r\n  {\r\n    this.prevBtn=false;\r\n  }\r\n\r\n    },\r\n    setVisibility(callType)\r\n    {   \r\n        var check;\r\n        var index;\r\n        var newTrue;\r\n        var skip;\r\n        for (var i = 1; i < 7; i++) {\r\n             var sec='section'+i;\r\n            check= this[sec];\r\n           \r\n           if (check) {\r\n            this[sec]=false;\r\n            \r\n            \r\n\r\n             if (callType=='next') {\r\n              skip=i+1;\r\n               this.currentIndex=skip;\r\n              if (this.checked && skip==3) {\r\n                skip=skip+1;\r\n                this.currentIndex=skip;\r\n              }\r\n             }\r\n             if (callType=='previous') {\r\n               skip=i-1;\r\n                this.currentIndex=skip;\r\n                if (this.checked && skip==3) {\r\n                skip=skip-1;\r\n                this.currentIndex=skip;\r\n              }\r\n\r\n             }\r\n             newTrue='section'+skip;\r\n             this[newTrue]=true;\r\n             break;\r\n\r\n            \r\n            \r\n           }\r\n           \r\n            \r\n        }\r\n    },\r\n    hideAllSection()\r\n    {\r\n        //    for (var i = 1; i < 7; i++) {\r\n\r\n        //     this.section+i=false;\r\n           \r\n            \r\n        // }\r\n    },\r\n\r\n    getConfig(config) {\r\n      return helper.getConfig(config)\r\n    },\r\n    check(){\r\n    alert(this.checked);\r\n    },\r\n    updateCustomValues(value) {\r\n      this.registrationForm.custom_values = value;\r\n    },\r\n    submit() {\r\n      let loader = this.$loading.show();\r\n    \r\n       if (this.checked) {\r\n        this.registrationForm.password_confirmation='';\r\n        this.registrationForm.check=this.checked;\r\n       }\r\n       else\r\n       {\r\n        this.registrationForm.check=false;\r\n       }\r\n       \r\n       \r\n      this.registrationForm.post('/api/frontend/online-registration?section_no=final')\r\n          .then(response => {\r\n            toastr.success(response.message);\r\n            this.selected_course = null;\r\n            this.clearCustomField = true;\r\n            loader.hide();\r\n            this.section6=false;\r\n            this.section7=true;\r\n            this.prevBtn=false;\r\n            this.submitBtn=false;\r\n            this.nextBtn=false;\r\n          })\r\n          .catch(error => {\r\n           loader.hide();\r\n            this.customFieldFormErrors = error;\r\n            console.log('error',error);\r\n            helper.showErrorMsg(error);\r\n          });\r\n    },\r\n    onCourseSelect(selectedOption) {\r\n      this.registrationForm.course_id = selectedOption.id;\r\n      let course = this.course_details.find(o => o.course_id == selectedOption.id);\r\n      this.enable_registration_fee = (course != 'undefined') ? course.enable_registration_fee : 0;\r\n      this.registration_fee = (this.enable_registration_fee) ? course.registration_fee : 0\r\n      // let course = this.course_details.find(o => o.course_id == selectedOption.id);\r\n      let batches = this.course_details.find(\r\n          o => o.course_id == selectedOption.id\r\n      );\r\n\r\n      this.batches=batches.batch_data;\r\n      // let location_data = batches.batch_data.find(o => o.location);\r\n      // console.table(location_data);\r\n\r\n// console.log(batches.batch_data);\r\n      // this.batches = this.course_details.find(o => o.course_id == selectedOption.id);\r\n      // console.log(this.batches,this.batches.find(o => o.course_id == selectedOption.id));\r\n      // let valObj = this.course_details.filter(function(elem){\r\n      //   if(elem.course_id == selectedOption.id) return elem.batch_data;\r\n      // });\r\n      // this.batches=valObj;\r\n    },\r\n    onBatchSelect(selectedOption) {\r\n      // this.registrationForm.batch_id = selectedOption.id;\r\n      // this.registrationForm.batch_id = selectedOption.id;\r\n      // let batches = this.batches.find(o => o.course_id == selectedOption.id);\r\n      // this.batches = batches;\r\n\r\n      // this.enable_registration_fee = (course != 'undefined') ? course.enable_registration_fee : 0;\r\n      // this.registration_fee = (this.enable_registration_fee) ? course.registration_fee : 0\r\n\r\n      let loader = this.$loading.show();\r\n      axios.get('/api/frontend/online-registration/getlocationforbatch/'+this.registrationForm.batch_id)\r\n          .then(response => {\r\n            this.course_locations = response.course_location;\r\n            loader.hide();\r\n          })\r\n          .catch(error => {\r\n            loader.hide();\r\n            helper.showErrorMsg(error);\r\n          })\r\n\r\n    },\r\n    formatCurrency(amount) {\r\n      return helper.formatCurrency(amount);\r\n    },\r\n  },\r\n  filters: {\r\n    moment(date) {\r\n      return helper.formatDate(date);\r\n    },\r\n    momentDateTime(date) {\r\n      return helper.formatDateTime(date);\r\n    },\r\n    onChangeUseDrugsOptions(selectedOption){\r\n      this.registration.use_drugs_option=selectedOption.id;\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.purchase-message {\r\n    padding: 120px 0px;\r\n    max-width: 780px;\r\n    margin: 0 auto;\r\n}\r\n.purchase-success .icon {\r\n    display: block;\r\n    margin-bottom: 20px;\r\n}\r\n.text-success {\r\n    color: #28a745!important;\r\n}\r\n.purchase-success .icon i {\r\n    font-size: 60px;\r\n}\r\n\r\n.far {\r\n    font-weight: 400;\r\n}\r\n\r\n.purchase-success h2 {\r\n    margin-bottom: 15px;\r\n    text-transform: uppercase;\r\n}\r\n\r\n.purchase-success h2 {\r\n    color: #0F172B;\r\n    font-size: 36px;\r\n}\r\n\r\n.purchase-success p {\r\n    line-height: 26px;\r\n}\r\n.contact-info-box {\r\n  .comma:before {\r\n    content: \", \"\r\n  }\r\n}\r\n\r\n\r\n#progressbar {\r\n    margin-bottom: 30px;\r\n    overflow: hidden;\r\n    color: lightgrey\r\n}\r\n\r\n#progressbar .active {\r\n    color: #673AB7\r\n}\r\n\r\n#progressbar li {\r\n    list-style-type: none;\r\n    font-size: 15px;\r\n    width: 25%;\r\n    float: left;\r\n    position: relative;\r\n    font-weight: 400\r\n}\r\n\r\n#progressbar #account:before {\r\n    font-family: FontAwesome;\r\n    content: \"\\f13e\"\r\n}\r\n\r\n#progressbar #personal:before {\r\n    font-family: FontAwesome;\r\n    content: \"\\f007\"\r\n}\r\n\r\n#progressbar #payment:before {\r\n    font-family: FontAwesome;\r\n    content: \"\\f030\"\r\n}\r\n\r\n#progressbar #confirm:before {\r\n    font-family: FontAwesome;\r\n    content: \"\\f00c\"\r\n}\r\n\r\n#progressbar li:before {\r\n    width: 50px;\r\n    height: 50px;\r\n    line-height: 45px;\r\n    display: block;\r\n    font-size: 20px;\r\n    color: #ffffff;\r\n    background: lightgray;\r\n    border-radius: 50%;\r\n    margin: 0 auto 10px auto;\r\n    padding: 2px\r\n}\r\n\r\n#progressbar li:after {\r\n    content: '';\r\n    width: 100%;\r\n    height: 2px;\r\n    background: lightgray;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 25px;\r\n    z-index: -1\r\n}\r\n\r\n#progressbar li.active:before,\r\n#progressbar li.active:after {\r\n    background: #673AB7\r\n}\r\n\r\n.progress {\r\n    height: 20px;\r\n    margin-top:1%;\r\n}\r\n\r\n.progress-bar {\r\n    background-color: #594281\r\n}\r\n</style>","<template>\r\n    <div>\r\n        <form @submit.prevent=\"submit\" @keydown=\"registrationForm.errors.clear($event.target.name)\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('student.student_type')}}</label>\r\n                        <div class=\"radio radio-info p-l-0\">\r\n                            <div class=\"form-check form-check-inline \">\r\n                                <input class=\"form-check-input\" type=\"radio\" value=\"new\" id=\"student_type_new\" v-model=\"registrationForm.student_type\" :checked=\"registrationForm.student_type == 'new'\" name=\"student_type\" @click=\"registrationForm.errors.clear('student_type')\">\r\n                                <label class=\"form-check-label\" for=\"student_type_new\"> {{trans('student.new_student')}}</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline \">\r\n                                <input class=\"form-check-input\" type=\"radio\" value=\"existing\" id=\"student_type_existing\" v-model=\"registrationForm.student_type\" :checked=\"registrationForm.student_type == 'existing'\" name=\"student_type\" @click=\"registrationForm.errors.clear('student_type')\">\r\n                                <label class=\"form-check-label\" for=\"student_type_existing\"> {{trans('student.existing_student')}}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\" v-if=\"registrationForm.student_type != 'new'\">\r\n                    <div class=\"col-12 col-sm-8\" v-if=\"registrationForm.student_id\">\r\n                        <div class=\"form-group\">\r\n                            <div v-if=\"registrationForm.student_id\">{{trans('student.name')+': '+getStudentName(selected_student)}} {{trans('student.first_guardian_name')+': '+selected_student.parent.first_guardian_name}}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-4\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" class=\"m-t-20 btn btn-sm btn-danger\" @click=\"removeStudentId\" v-if=\"registrationForm.student_id\">\r\n                                <i class=\"fas fa-times-circle\"></i> {{trans('student.remove_student')}}\r\n                            </button>\r\n                            <button type=\"button\" class=\"m-t-20 btn btn-sm btn-info\" v-else @click=\"searchStudentModal = true\"><i class=\"fas fa-search\"></i> {{trans('student.search_student')}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('student.date_of_registration')}}</label>\r\n                        <datepicker v-model=\"registrationForm.date_of_registration\" :bootstrapStyling=\"true\" @selected=\"registrationForm.errors.clear('date_of_registration')\" :placeholder=\"trans('student.date_of_registration')\"></datepicker>\r\n                        <show-error :form-name=\"registrationForm\" prop-name=\"date_of_registration\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('academic.course')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_course\" group-values=\"courses\" group-label=\"course_group\" :group-select=\"false\" name=\"course_id\" id=\"course_id\" :options=\"courses\" :placeholder=\"trans('academic.select_course')\" @select=\"onCourseSelect\" @close=\"registrationForm.errors.clear('course_id')\" @remove=\"registrationForm.course_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!courses.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <span class=\"help-block\" v-if=\"registrationForm.course_id && enable_registration_fee && registration_fee >= 0\">{{trans('student.registration_fee')}} {{formatCurrency(registration_fee)}}</span>\r\n                        <show-error :form-name=\"registrationForm\" prop-name=\"course_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <template v-if=\"registrationForm.student_type == 'new'\">\r\n                    <div class=\"col-12 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('student.name')}}</label>\r\n                            <div class=\"row\">\r\n                                <div class=\"col-12 col-sm-4\">\r\n                                    <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_name\" name=\"first_name\" :placeholder=\"trans('student.first_name')\">\r\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"first_name\"></show-error>\r\n                                </div>\r\n                                <div class=\"col-12 col-sm-4\">\r\n                                    <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.middle_name\" name=\"middle_name\" :placeholder=\"trans('student.middle_name')\">\r\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"middle_name\"></show-error>\r\n                                </div>\r\n                                <div class=\"col-12 col-sm-4\">\r\n                                    <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.last_name\" name=\"last_name\" :placeholder=\"trans('student.last_name')\">\r\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"last_name\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('student.gender')}}</label>\r\n                            <div class=\"radio radio-info p-l-0\">\r\n                                <div class=\"form-check form-check-inline \" v-for=\"gender in genders\">\r\n                                  <input class=\"form-check-input\" type=\"radio\" :value=\"gender.id\" :id=\"gender.id\" v-model=\"registrationForm.gender\" :checked=\"registrationForm.gender == gender.id\" name=\"gender\" @click=\"registrationForm.errors.clear('gender')\">\r\n                                  <label class=\"form-check-label\" :for=\"gender.id\">{{trans('list.'+gender.id)}}</label>\r\n                                </div>\r\n                            </div>\r\n                            <show-error :form-name=\"registrationForm\" prop-name=\"gender\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('student.date_of_birth')}}</label>\r\n                            <datepicker v-model=\"registrationForm.date_of_birth\" :bootstrapStyling=\"true\" @selected=\"registrationForm.errors.clear('date_of_birth')\" :placeholder=\"trans('student.date_of_birth')\"></datepicker>\r\n                            <show-error :form-name=\"registrationForm\" prop-name=\"date_of_birth\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('student.contact_number')}}</label>\r\n                            <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.contact_number\" name=\"contact_number\" :placeholder=\"trans('student.contact_number')\">\r\n                            <show-error :form-name=\"registrationForm\" prop-name=\"contact_number\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            </div>\r\n            <hr />\r\n            <div class=\"row m-t-20\" v-if=\"registrationForm.student_type == 'new'\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('student.parent_type')}}</label>\r\n                        <div class=\"radio radio-info p-l-0\">\r\n                            <div class=\"form-check form-check-inline \">\r\n                                <input class=\"form-check-input\" type=\"radio\" value=\"new\" id=\"parent_type_new\" v-model=\"registrationForm.parent_type\" :checked=\"registrationForm.parent_type == 'new'\" name=\"parent_type\" @click=\"registrationForm.errors.clear('parent_type')\">\r\n                                <label class=\"form-check-label\" for=\"parent_type_new\"> {{trans('student.new_parent')}}</label>\r\n                            </div>\r\n                            <div class=\"form-check form-check-inline \">\r\n                                <input class=\"form-check-input\" type=\"radio\" value=\"existing\" id=\"parent_type_existing\" v-model=\"registrationForm.parent_type\" :checked=\"registrationForm.parent_type == 'existing'\" name=\"parent_type\" @click=\"registrationForm.errors.clear('parent_type')\">\r\n                                <label class=\"form-check-label\" for=\"parent_type_existing\"> {{trans('student.existing_parent')}}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <template v-if=\"registrationForm.parent_type == 'new'\">\r\n                    <div class=\"col-12 col-sm-6\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('student.first_guardian_name')}}</label>\r\n                                    <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_guardian_name\" name=\"first_guardian_name\" :placeholder=\"trans('student.first_guardian_name')\">\r\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"first_guardian_name\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('general.relation')}}</label>\r\n                                    <select v-model=\"registrationForm.first_guardian_relation\" class=\"custom-select col-12\" name=\"first_guardian_relation\" @change=\"registrationForm.errors.clear('first_guardian_relation')\">\r\n                                      <option value=\"\">{{trans('general.select_one')}}</option>\r\n                                      <option v-for=\"relation in guardian_relations\" v-bind:value=\"relation.id\">\r\n                                        {{ relation.name }}\r\n                                      </option>\r\n                                    </select>\r\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"first_guardian_relation\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('student.second_guardian_name')}}</label>\r\n                                    <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.second_guardian_name\" name=\"second_guardian_name\" :placeholder=\"trans('student.second_guardian_name')\">\r\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"second_guardian_name\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('student.second_guardian_relation')}}</label>\r\n                                    <select v-model=\"registrationForm.second_guardian_relation\" class=\"custom-select col-12\" name=\"second_guardian_relation\" @change=\"registrationForm.errors.clear('second_guardian_relation')\">\r\n                                      <option value=\"\">{{trans('general.select_one')}}</option>\r\n                                      <option v-for=\"relation in guardian_relations\" v-bind:value=\"relation.id\">\r\n                                        {{ relation.name }}\r\n                                      </option>\r\n                                    </select>\r\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"second_guardian_relation\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('student.first_guardian_contact_number')}}</label>\r\n                                    <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_guardian_contact_number_1\" name=\"first_guardian_contact_number_1\" :placeholder=\"trans('student.first_guardian_contact_number')\">\r\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"first_guardian_contact_number_1\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n                <template v-else>\r\n                    <div class=\"col-12 col-sm-3\" v-if=\"registrationForm.student_parent_id\">\r\n                        <div class=\"form-group\">\r\n                            <div v-if=\"registrationForm.student_parent_id\">\r\n                                {{trans('student.first_guardian_name')+': '+selected_parent.first_guardian_name}}\r\n                                <span v-if=\"selected_parent.first_guardian_relation\">({{trans('list.'+selected_parent.first_guardian_relation)}})</span>\r\n                            </div>\r\n                            <div v-if=\"registrationForm.student_parent_id\">\r\n                                {{trans('student.second_guardian_name')+': '+selected_parent.second_guardian_name}}\r\n                                <span v-if=\"selected_parent.second_guardian_relation\">({{trans('list.'+selected_parent.second_guardian_relation)}})</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-1\">\r\n                        <div class=\"form-group\">\r\n                            <button type=\"button\" class=\"m-t-20 btn btn-sm btn-danger\" @click=\"removeParentId\" v-if=\"registrationForm.student_parent_id\">\r\n                                <i class=\"fas fa-times-circle\"></i> {{trans('student.remove_parent')}}\r\n                            </button>\r\n                            <button type=\"button\" class=\"m-t-20 btn btn-sm btn-info\" v-else @click=\"searchParentModal = true\"><i class=\"fas fa-search\"></i> {{trans('student.search_parent')}}</button>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('student.previous_institute')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_previous_institute\" name=\"previous_institute_id\" id=\"previous_institute_id\" :options=\"previous_institutes\" :placeholder=\"trans('academic.select_institute')\" @select=\"onPreviousInstituteSelect\" @close=\"registrationForm.errors.clear('previous_institute_id')\" @remove=\"registrationForm.previous_institute_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!previous_institutes.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"registrationForm\" prop-name=\"registration_remarks\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-8\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('student.registration_remarks')}}</label>\r\n                        <autosize-textarea v-model=\"registrationForm.registration_remarks\" rows=\"1\" name=\"registration_remarks\" :placeholder=\"trans('student.registration_remarks')\"></autosize-textarea>\r\n                        <show-error :form-name=\"registrationForm\" prop-name=\"registration_remarks\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <custom-field :fields=\"custom_fields\" :customValues=\"custom_values\" :clear=\"clearCustomField\" :formErrors=\"customFieldFormErrors\" @updateCustomValues=\"updateCustomValues\"></custom-field>\r\n\r\n            <div class=\"card-footer text-right\">\r\n                <button type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.save')}}</button>\r\n            </div>\r\n        </form>\r\n\r\n        <search-parent v-if=\"searchParentModal\" @completed=\"updateParentId\" @close=\"searchParentModal = false\"></search-parent>\r\n        <search-student v-if=\"searchStudentModal\" @completed=\"updateStudentId\" @close=\"searchStudentModal = false\"></search-student>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import searchParent from './search-parent'\r\n    import searchStudent from './search-student'\r\n\r\n    export default {\r\n        components: {searchParent,searchStudent},\r\n        data() {\r\n            return {\r\n                registrationForm: new Form({\r\n                    first_name: '',\r\n                    middle_name: '',\r\n                    last_name: '',\r\n                    parent_type: 'new',\r\n                    student_type: 'new',\r\n                    student_id: '',\r\n                    student_parent_id: '',\r\n                    first_guardian_name: '',\r\n                    first_guardian_relation: '',\r\n                    second_guardian_name: '',\r\n                    second_guardian_relation: '',\r\n                    first_guardian_contact_number_1: '',\r\n                    date_of_birth: '',\r\n                    gender: '',\r\n                    course_id: '',\r\n                \tcontact_number: '',\r\n                    date_of_registration: '',\r\n                    registration_remarks: '',\r\n                    previous_institute_id: '',\r\n                    custom_values: [],\r\n                }),\r\n                guardian_relations: [],\r\n                courses: [],\r\n                course_details: [],\r\n                previous_institutes: [],\r\n                selected_previous_institute: null,\r\n                selected_course: null,\r\n                genders: [],\r\n                searchParentModal: false,\r\n                searchStudentModal: false,\r\n                registration_fee: 0,\r\n                enable_registration_fee: 0,\r\n                selected_parent: {},\r\n                selected_student: {},\r\n                custom_fields: [],\r\n                custom_values: [],\r\n                clearCustomField: false,\r\n                customFieldFormErrors: {}\r\n            };\r\n        },\r\n        mounted() {\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            getStudentName(student){\r\n                return helper.getStudentName(student);\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/registration/pre-requisite')\r\n                    .then(response => {\r\n                        this.courses = response.courses;\r\n                        this.genders = response.genders;\r\n                        this.course_details = response.course_details;\r\n                        this.previous_institutes = response.previous_institutes;\r\n                        this.custom_fields = response.custom_fields;\r\n                        this.guardian_relations = response.guardian_relations;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            updateCustomValues(value) {\r\n                this.registrationForm.custom_values = value;\r\n            },\r\n            submit(){\r\n                let loader = this.$loading.show();\r\n                this.registrationForm.post('/api/registration')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.$emit('completed')\r\n                        this.selected_course = null;\r\n                        this.selected_parent = {};\r\n                        this.selected_previous_institute = null;\r\n                        this.registrationForm.parent_type = 'new';\r\n                        this.registrationForm.student_type = 'new';\r\n                        this.clearCustomField = true;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        this.customFieldFormErrors = error;\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onCourseSelect(selectedOption){\r\n                this.registrationForm.course_id = selectedOption.id;\r\n                let course = this.course_details.find(o => o.course_id == selectedOption.id);\r\n                this.enable_registration_fee = (course != 'undefined') ? course.enable_registration_fee : 0;\r\n                this.registration_fee = (this.enable_registration_fee) ? course.registration_fee : 0\r\n            },\r\n            onPreviousInstituteSelect(selectedOption){\r\n                this.registrationForm.previous_institute_id = selectedOption.id;\r\n            },\r\n            formatCurrency(amount){\r\n                return helper.formatCurrency(amount);\r\n            },\r\n            updateParentId(val){\r\n                this.selected_parent = val;\r\n                this.registrationForm.student_parent_id = val.id;\r\n                this.searchParentModal = false;\r\n            },\r\n            removeParentId(){\r\n                this.selected_parent = {};\r\n                this.registrationForm.student_parent_id = '';\r\n            },\r\n            updateStudentId(val){\r\n                this.selected_student = val;\r\n                this.registrationForm.student_id = val.id;\r\n                this.searchStudentModal = false;\r\n            },\r\n            removeStudentId(){\r\n                this.selected_student = {};\r\n                this.registrationForm.student_id = '';\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('student.registration')}} ({{getSession}})\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"registrations.total\">{{trans('general.total_result_found',{count : registrations.total, from: registrations.from, to: registrations.to})}}</span>\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\r\n                    </h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/student/registration/card-view')\" v-tooltip=\"trans('general.card_view')\"><i class=\"fas fa-th\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.card_view')}}</span></button>\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"registrations.total && !showCreatePanel && hasPermission('new-registration')\" @click=\"showCreatePanel = !showCreatePanel\" v-tooltip=\"trans('general.add_new')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('student.add_new_registration')}}</span></button>\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\r\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\r\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\r\n                            </button>\r\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\r\n                            </div>\r\n                        </div>\r\n                        <help-button @clicked=\"help_topic = 'student-registration'\"></help-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <transition name=\"fade\">\r\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('general.filter')}}</h4>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-2\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('academic.course')}}</label>\r\n                                    <v-select label=\"name\" track-by=\"id\" group-values=\"courses\" group-label=\"course_group\" :group-select=\"false\" v-model=\"selected_courses\" name=\"course_id\" id=\"course_id\" :options=\"courses\" :placeholder=\"trans('academic.select_course')\" @select=\"onCourseSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onCourseRemove\" :selected=\"selected_courses\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!courses.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-2\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('student.previous_institute')}}</label>\r\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_institutes\" name=\"previous_institute_id\" id=\"previous_institute_id\" :options=\"previous_institutes\" :placeholder=\"trans('academic.select_institute')\" @select=\"onPreviousInstituteSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onPreviousInstituteRemove\" :selected=\"selected_institutes\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!previous_institutes.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-2\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('student.registration_status')}}</label>\r\n                                    <select v-model=\"filter.status\" class=\"custom-select col-12\">\r\n                                      <option value=null selected>{{trans('general.select_one')}}</option>\r\n                                      <option v-for=\"status in statuses\" v-bind:value=\"status.value\">\r\n                                        {{ status.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-2\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('student.registration_type')}}</label>\r\n                                    <select v-model=\"filter.registration_type\" class=\"custom-select col-12\">\r\n                                      <option value=null selected>{{trans('general.select_one')}}</option>\r\n                                      <option v-for=\"registration_type in registration_types\" v-bind:value=\"registration_type.value\">\r\n                                        {{ registration_type.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <date-range-picker :start-date.sync=\"filter.date_of_registration_start_date\" :end-date.sync=\"filter.date_of_registration_end_date\" :label=\"trans('transport.date_of_registration_between')\"></date-range-picker>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-footer text-right\">\r\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\r\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getRegistrations\">{{trans('general.filter')}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <transition name=\"fade\" v-if=\"hasPermission('new-registration')\">\r\n                <div class=\"card card-form\" v-if=\"showCreatePanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('student.add_new_registration')}}</h4>\r\n                        <registration-form @completed=\"getRegistrations\" @cancel=\"showCreatePanel = !showCreatePanel\"></registration-form>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <div class=\"card\" v-if=\"hasPermission('list-registration')\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\" v-if=\"registrations.total\">\r\n                        <table class=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{{trans('student.name')}}</th>\r\n                                    <th>{{trans('student.first_guardian_name')}}</th>\r\n                                    <th>{{trans('student.date_of_birth')}}</th>\r\n                                    <th>{{trans('student.contact_number')}}</th>\r\n                                    <th>{{trans('academic.course')}}</th>\r\n                                    <th>{{trans('student.registration_status')}}</th>\r\n                                    <th>{{trans('student.date_of_registration')}}</th>\r\n                                    <th>{{trans('student.registration_fee')}}</th>\r\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"registration in registrations.data\">\r\n                                    <td>\r\n                                        {{getStudentName(registration.student)}}\r\n                                        <span v-if=\"registration.is_online\">\r\n                                            <span class=\"label label-info\">{{trans('student.online_registration')}}</span>\r\n                                        </span>\r\n                                    </td>\r\n                                    <td v-text=\"registration.student.parent ? registration.student.parent.first_guardian_name : ''\"></td>\r\n                                    <td>{{registration.student.date_of_birth | moment}}</td>\r\n                                    <td v-text=\"registration.student.contact_number\"></td>\r\n                                    <td v-text=\"registration.course.name\"></td>\r\n                                    <td>\r\n                                        <span v-for=\"status in getRegistrationStatus(registration)\" :class=\"['label','label-'+status.color,'m-r-5']\">{{status.label}}</span>\r\n                                    </td>\r\n                                    <td>{{registration.date_of_registration | moment}}</td>\r\n                                    <td>\r\n                                        <span v-if=\"registration.registration_fee\">\r\n                                            {{formatCurrency(registration.registration_fee)}}\r\n                                            <span v-if=\"registration.registration_fee_status == 'paid'\" class=\"label label-success\">{{trans('student.registration_fee_status_paid')}}</span>\r\n                                            <span v-else class=\"label label-danger\">{{trans('student.registration_fee_status_unpaid')}}</span>\r\n                                        </span>\r\n                                        <span v-else>-</span>\r\n                                    </td>\r\n                                    <td class=\"table-option\">\r\n                                        <div class=\"btn-group\">\r\n                                            <router-link :to=\"`/student/registration/${registration.id}`\" class=\"btn btn-info btn-sm\" v-tooltip=\"trans('student.view_detail')\" ><i class=\"fas fa-arrow-circle-right\"></i></router-link>\r\n                                            <button class=\"btn btn-danger btn-sm\" v-if=\"hasPermission('delete-registration')\" :key=\"registration.id\" v-confirm=\"{ok: confirmDelete(registration)}\" v-tooltip=\"trans('student.delete_registration')\"><i class=\"fas fa-trash\"></i></button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <module-info v-if=\"!registrations.total\" module=\"student\" title=\"registration_module_title\" description=\"registration_module_description\" icon=\"check-circle\">\r\n                        <div slot=\"btn\">\r\n                            <button class=\"btn btn-info btn-md\" v-if=\"!showCreatePanel\" @click=\"showCreatePanel = !showCreatePanel\"><i class=\"fas fa-plus\"></i> {{trans('general.add_new')}}</button>\r\n                        </div>\r\n                    </module-info>\r\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"registrations\" @updateRecords=\"getRegistrations\"></pagination-record>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <right-panel :topic=\"help_topic\"></right-panel>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import registrationForm from './form'\r\n\r\n    export default {\r\n        components : { registrationForm },\r\n        data() {\r\n            return {\r\n                registrations: {\r\n                    total: 0,\r\n                    data: []\r\n                },\r\n                filter: {\r\n                    sort_by : 'created_at',\r\n                    order: 'desc',\r\n                    course_id: [],\r\n                    previous_institute_id: [],\r\n                    status: null,\r\n                    registration_type: null,\r\n                    date_of_registration_start_date: '',\r\n                    date_of_registration_end_date: '',\r\n                    page_length: helper.getConfig('page_length')\r\n                },\r\n                orderByOptions: [\r\n                    {\r\n                        value: 'created_at',\r\n                        translation: i18n.general.created_at\r\n                    },\r\n                    {\r\n                        value: 'date_of_registration',\r\n                        translation: i18n.student.date_of_registration\r\n                    }\r\n                ],\r\n                statuses: [\r\n                    {\r\n                        text: i18n.student.registration_status_pending,\r\n                        value: 'pending'\r\n                    },\r\n                    {\r\n                        text: i18n.student.registration_status_rejected,\r\n                        value: 'rejected'\r\n                    },\r\n                    {\r\n                        text: i18n.student.registration_status_allotted,\r\n                        value: 'allotted'\r\n                    }\r\n                ],\r\n                courses: [],\r\n                registration_types: [],\r\n                selected_courses: null,\r\n                previous_institutes: [],\r\n                selected_institutes: null,\r\n                showCreatePanel: false,\r\n                showFilterPanel: false,\r\n                help_topic: ''\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('list-registration') && !helper.hasPermission('new-registration')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            if (helper.hasPermission('list-registration'))\r\n                this.getRegistrations();\r\n            helper.showDemoNotification(['student']);\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            getConfig(config){\r\n                return helper.getConfig(config);\r\n            },\r\n            getRegistrations(page){\r\n                let loader = this.$loading.show();\r\n\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                this.filter.date_of_registration_start_date = helper.toDate(this.filter.date_of_registration_start_date);\r\n                this.filter.date_of_registration_end_date = helper.toDate(this.filter.date_of_registration_end_date);\r\n                let url = helper.getFilterURL(this.filter);\r\n                axios.get('/api/registration?page=' + page + url)\r\n                    .then(response => {\r\n                        this.registrations = response.registrations;\r\n                        this.courses = response.filters.courses;\r\n                        this.previous_institutes = response.filters.previous_institutes;\r\n                        this.registration_types = response.filters.registration_types;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getStudentName(student){\r\n                return helper.getStudentName(student);\r\n            },\r\n            formatCurrency(amount){\r\n                return helper.formatCurrency(amount);\r\n            },\r\n            print(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/registration/print',{filter: this.filter})\r\n                    .then(response => {\r\n                        let print = window.open(\"/print\");\r\n                        loader.hide();\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            pdf(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/registration/pdf',{filter: this.filter})\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        window.open('/download/report/'+response+'?token='+this.authToken);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onCourseSelect(selectedOption){\r\n                this.filter.course_id.push(selectedOption.id);\r\n            },\r\n            onCourseRemove(removedOption){\r\n                this.filter.course_id.splice(this.filter.course_id.indexOf(removedOption.id), 1);\r\n            },\r\n            onPreviousInstituteSelect(selectedOption){\r\n                this.filter.previous_institute_id.push(selectedOption.id);\r\n            },\r\n            onPreviousInstituteRemove(removedOption){\r\n                this.filter.previous_institute_id.splice(this.filter.previous_institute_id.indexOf(removedOption.id), 1);\r\n            },\r\n            getRegistrationStatus(registration){\r\n                return helper.getRegistrationStatus(registration);\r\n            },\r\n            confirmDelete(registration){\r\n                return dialog => this.deleteRegistration(registration);\r\n            },\r\n            deleteRegistration(registration){\r\n                let loader = this.$loading.show();\r\n                axios.delete('/api/registration/'+registration.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getRegistrations();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            }\r\n        },\r\n        computed:{\r\n            getSession(){\r\n                return helper.getDefaultAcademicSession().name;\r\n            },\r\n            authToken(){\r\n                return helper.getAuthToken();\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        },\r\n        watch: {\r\n            'filter.sort_by': function(val){\r\n                this.getRegistrations();\r\n            },\r\n            'filter.order': function(val){\r\n                this.getRegistrations();\r\n            },\r\n            'filter.page_length': function(val){\r\n                this.getRegistrations();\r\n            }\r\n        }\r\n    }\r\n</script>","<template>\r\n    <transition name=\"modal\">\r\n        <div class=\"modal-mask\">\r\n            <div class=\"modal-wrapper\">\r\n                <div class=\"modal-container modal-lg\">\r\n                    <div class=\"modal-header\">\r\n                        <slot name=\"header\">\r\n                            {{trans('student.search_parent')}}\r\n                            <span class=\"float-right pointer\" @click=\"$emit('close')\">x</span>\r\n                        </slot>\r\n                    </div>\r\n                    <div class=\"modal-body m-t-0\">\r\n                        <slot name=\"body\">\r\n                            <div class=\"card card-form\">\r\n                                <div class=\"card-body\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"\">{{trans('student.parent_search_by_father_mother_name')}}</label>\r\n                                                <input class=\"form-control\" type=\"text\" v-model=\"searchForm.query\" name=\"query\" :placeholder=\"trans('general.search_query')\">\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card-footer text-right\">\r\n                                        <button type=\"button\" @click=\"search\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.search')}}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"search-results m-t-30\" style=\"max-height: 100px\" v-if=\"parents.total\">\r\n                                <h4 class=\"text-themecolor p-b-10 m-b-20 border-bottom\">{{trans('student.parent_search_result')}} \r\n                                    <span class=\"card-subtitle d-none d-sm-inline\">{{trans('general.total_result_found',{count : parents.total, from: parents.from, to: parents.to})}}</span>\r\n                                </h4>\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-sm\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>{{trans('student.father_name')}}</th>\r\n                                                <th>{{trans('student.mother_name')}}</th>\r\n                                                <th class=\"table-option\">{{trans('general.action')}}</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr v-for=\"parent in parents.data\">\r\n                                                <td v-text=\"parent.father_name\"></td>\r\n                                                <td v-text=\"parent.mother_name\"></td>\r\n                                                <td class=\"table-option\">\r\n                                                    <div class=\"btn-group\">\r\n                                                        <button class=\"btn btn-info btn-sm\" :key=\"parent.id\" v-confirm=\"{ok: confirm(parent)}\" v-tooltip=\"trans('student.add_parent')\"><i class=\"fas fa-user-plus\"></i></button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <pagination-record :page-length.sync=\"searchForm.page_length\" :records=\"parents\" @updateRecords=\"search\"></pagination-record>\r\n                            </div>\r\n\t\t\t\t\t        <div class=\"clearfix\"></div>\r\n                        </slot>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        components: {},\r\n        props: [],\r\n        data() {\r\n        \treturn {\r\n        \t\tparents: {\r\n        \t\t\tdata: [],\r\n        \t\t\ttotal: 0\r\n        \t\t},\r\n        \t\tsearchForm: {\r\n        \t\t\tquery: '',\r\n                    page_length: helper.getConfig('page_length')\r\n        \t\t}\r\n        \t}\r\n        },\r\n        methods: {\r\n            search(page){\r\n                let loader = this.$loading.show();\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                let url = helper.getFilterURL(this.searchForm);\r\n    \t\t\taxios.get('/api/student/parent/search?page=' + page + url)\r\n    \t\t\t\t.then(response => {\r\n    \t\t\t\t\tthis.parents = response;\r\n                        loader.hide();\r\n    \t\t\t\t})\r\n    \t\t\t\t.catch(error => {\r\n                        loader.hide();\r\n    \t\t\t\t\thelper.showErrorMsg(error);\r\n    \t\t\t\t})\r\n            },\r\n            confirm(parent){\r\n                return dialog => this.addParent(parent);\r\n            },\r\n            addParent(parent){\r\n                let loader = this.$loading.show();\r\n                this.$emit('completed',parent);\r\n                loader.hide();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n.loading-overlay{\r\n\tz-index: 1060;\r\n}\r\n</style>","<template>\r\n    <transition name=\"modal\">\r\n        <div class=\"modal-mask\">\r\n            <div class=\"modal-wrapper\">\r\n                <div class=\"modal-container modal-lg\">\r\n                    <div class=\"modal-header\">\r\n                        <slot name=\"header\">\r\n                            {{trans('student.search_student')}}\r\n                            <span class=\"float-right pointer\" @click=\"$emit('close')\">x</span>\r\n                        </slot>\r\n                    </div>\r\n                    <div class=\"modal-body m-t-0\">\r\n                        <slot name=\"body\">\r\n                            <div class=\"card card-form\">\r\n                                <div class=\"card-body\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"\">{{trans('student.name')}}</label>\r\n                                                <input class=\"form-control\" type=\"text\" v-model=\"searchForm.name\" name=\"name\" :placeholder=\"trans('general.search_query')\">\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"card-footer text-right\">\r\n                                        <button type=\"button\" @click=\"search\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.search')}}</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"search-results m-t-30\" style=\"max-height: 100px\" v-if=\"students.total\">\r\n                                <h4 class=\"text-themecolor p-b-10 m-b-20 border-bottom\">{{trans('student.student_search_result')}} \r\n                                    <span class=\"card-subtitle d-none d-sm-inline\">{{trans('general.total_result_found',{count : students.total, from: students.from, to: students.to})}}</span>\r\n                                </h4>\r\n                                <div class=\"table-responsive\">\r\n                                    <table class=\"table table-sm\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>{{trans('student.name')}}</th>\r\n                                                <th>{{trans('student.father_name')}}</th>\r\n                                                <th>{{trans('student.mother_name')}}</th>\r\n                                                <th class=\"table-option\">{{trans('general.action')}}</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr v-for=\"student in students.data\">\r\n                                                <td v-text=\"getStudentName(student)\"></td>\r\n                                                <td v-text=\"student.parent.father_name\"></td>\r\n                                                <td v-text=\"student.parent.mother_name\"></td>\r\n                                                <td class=\"table-option\">\r\n                                                    <div class=\"btn-group\">\r\n                                                        <button class=\"btn btn-info btn-sm\" :key=\"student.id\" v-confirm=\"{ok: confirm(student)}\" v-tooltip=\"trans('student.add_student')\"><i class=\"fas fa-user-plus\"></i></button>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                                <pagination-record :page-length.sync=\"searchForm.page_length\" :records=\"students\" @updateRecords=\"search\"></pagination-record>\r\n                            </div>\r\n\t\t\t\t\t        <div class=\"clearfix\"></div>\r\n                        </slot>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        components: {},\r\n        props: [],\r\n        data() {\r\n        \treturn {\r\n        \t\tstudents: {\r\n        \t\t\tdata: [],\r\n        \t\t\ttotal: 0\r\n        \t\t},\r\n        \t\tsearchForm: {\r\n        \t\t\tname: '',\r\n                    page_length: helper.getConfig('page_length')\r\n        \t\t}\r\n        \t}\r\n        },\r\n        methods: {\r\n            getStudentName(student){\r\n                return helper.getStudentName(student);\r\n            },\r\n            search(page){\r\n                let loader = this.$loading.show();\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                let url = helper.getFilterURL(this.searchForm);\r\n    \t\t\taxios.get('/api/student/search/registration?page=' + page + url)\r\n    \t\t\t\t.then(response => {\r\n    \t\t\t\t\tthis.students = response;\r\n                        loader.hide();\r\n    \t\t\t\t})\r\n    \t\t\t\t.catch(error => {\r\n                        loader.hide();\r\n    \t\t\t\t\thelper.showErrorMsg(error);\r\n    \t\t\t\t})\r\n            },\r\n            confirm(student){\r\n                return dialog => this.addStudent(student);\r\n            },\r\n            addStudent(student){\r\n                let loader = this.$loading.show();\r\n                this.$emit('completed',student);\r\n                loader.hide();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n.loading-overlay{\r\n\tz-index: 1060;\r\n}\r\n</style>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-title\" }, [\n      _c(\"div\", { staticClass: \"fix-width fix-width-mobile\" }, [\n        _c(\"h2\", [_vm._v(_vm._s(_vm.trans(\"student.online_registration\")))]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"fix-width fix-width-mobile p-3\" }, [\n      _c(\"div\", {\n        staticClass: \"page-body\",\n        domProps: {\n          innerHTML: _vm._s(_vm.getConfig(\"online_registration_header\")),\n        },\n      }),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"fix-width fix-width-mobile\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\n            \"form\",\n            {\n              on: {\n                submit: function ($event) {\n                  $event.preventDefault()\n                  return _vm.submit.apply(null, arguments)\n                },\n                keydown: function ($event) {\n                  return _vm.registrationForm.errors.clear($event.target.name)\n                },\n              },\n            },\n            [\n              _c(\"h2\", [\n                _vm._v(\n                  _vm._s(\n                    _vm.trans(\"student.registration_field_info\", {\n                      name: _vm.trans(\"academic.course\"),\n                    })\n                  )\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-select\",\n                        {\n                          attrs: {\n                            label: \"name\",\n                            \"group-values\": \"courses\",\n                            \"group-label\": \"course_group\",\n                            \"group-select\": false,\n                            name: \"course_id\",\n                            id: \"course_id\",\n                            options: _vm.courses,\n                            placeholder: _vm.trans(\"academic.select_course\"),\n                          },\n                          on: {\n                            select: _vm.onCourseSelect,\n                            close: function ($event) {\n                              return _vm.registrationForm.errors.clear(\n                                \"course_id\"\n                              )\n                            },\n                            remove: function ($event) {\n                              _vm.registrationForm.course_id = \"\"\n                            },\n                          },\n                          model: {\n                            value: _vm.selected_course,\n                            callback: function ($$v) {\n                              _vm.selected_course = $$v\n                            },\n                            expression: \"selected_course\",\n                          },\n                        },\n                        [\n                          !_vm.courses.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  attrs: { slot: \"afterList\" },\n                                  slot: \"afterList\",\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                      \" +\n                                      _vm._s(\n                                        _vm.trans(\"general.no_option_found\")\n                                      ) +\n                                      \"\\n                    \"\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _vm.registrationForm.course_id &&\n                      _vm.enable_registration_fee &&\n                      _vm.registration_fee >= 0\n                        ? _c(\"span\", { staticClass: \"help-block\" }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"student.registration_fee\")) +\n                                \" \" +\n                                _vm._s(_vm.formatCurrency(_vm.registration_fee))\n                            ),\n                          ])\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"course_id\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Select Course Batches\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.registrationForm.batch_id,\n                              expression: \"registrationForm.batch_id\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"batch_id\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"batch_id\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              _vm.onBatchSelect,\n                            ],\n                          },\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(_vm.batches, function (Batch) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: Batch.id } },\n                              [\n                                _vm._v(\n                                  \"\\n                      \" +\n                                    _vm._s(Batch.name) +\n                                    \"\\n                    \"\n                                ),\n                              ]\n                            )\n                          }),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"batch_id\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Select Course Location\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.registrationForm.course_location,\n                              expression: \"registrationForm.course_location\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"course_location\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"course_location\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.registrationForm.errors.clear(\n                                  \"course_location\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(\n                            _vm.course_locations,\n                            function (course_location) {\n                              return _c(\n                                \"option\",\n                                { domProps: { value: course_location.id } },\n                                [\n                                  _vm._v(\n                                    \"\\n                      \" +\n                                      _vm._s(course_location.name) +\n                                      \"\\n                    \"\n                                  ),\n                                ]\n                              )\n                            }\n                          ),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"course_location\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Accommodation choice\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.registrationForm.accommodation,\n                              expression: \"registrationForm.accommodation\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"accommodation\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"accommodation\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.registrationForm.errors.clear(\n                                  \"accommodation\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(_vm.accommodations, function (accommodation) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: accommodation.id } },\n                              [\n                                _vm._v(\n                                  \"\\n                      \" +\n                                    _vm._s(accommodation.name) +\n                                    \"\\n                    \"\n                                ),\n                              ]\n                            )\n                          }),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"accommodation\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"h2\", [_vm._v(\"About You\")]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.first_name\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.first_name,\n                            expression: \"registrationForm.first_name\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"first_name\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.first_name },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"first_name\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"first_name\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.middle_name\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.middle_name,\n                            expression: \"registrationForm.middle_name\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"middle_name\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.middle_name },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"middle_name\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"middle_name\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.last_name\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.last_name,\n                            expression: \"registrationForm.last_name\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"last_name\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.last_name },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"last_name\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"last_name\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.date_of_birth\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          bootstrapStyling: true,\n                          placeholder: _vm.trans(\"student.date_of_birth\"),\n                        },\n                        on: {\n                          selected: function ($event) {\n                            return _vm.registrationForm.errors.clear(\n                              \"date_of_birth\"\n                            )\n                          },\n                        },\n                        model: {\n                          value: _vm.registrationForm.date_of_birth,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.registrationForm, \"date_of_birth\", $$v)\n                          },\n                          expression: \"registrationForm.date_of_birth\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"date_of_birth\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4 col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Nationality\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.nationality,\n                            expression: \"registrationForm.nationality\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"nationality\",\n                          placeholder: \"Your Nationality\",\n                        },\n                        domProps: { value: _vm.registrationForm.nationality },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"nationality\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"nationality\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4 col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Your occupation\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.occupation,\n                            expression: \"registrationForm.occupation\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"occupation\",\n                          placeholder: \"Your Occupation\",\n                        },\n                        domProps: { value: _vm.registrationForm.occupation },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"occupation\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"occupation\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.gender\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"radio radio-info p-l-0\" },\n                        _vm._l(_vm.genders, function (gender) {\n                          return _c(\n                            \"div\",\n                            { staticClass: \"form-check form-check-inline\" },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.gender,\n                                    expression: \"registrationForm.gender\",\n                                  },\n                                ],\n                                staticClass: \"form-check-input\",\n                                attrs: {\n                                  type: \"radio\",\n                                  id: gender.id,\n                                  name: \"gender\",\n                                },\n                                domProps: {\n                                  value: gender.id,\n                                  checked:\n                                    _vm.registrationForm.gender == gender.id,\n                                  checked: _vm._q(\n                                    _vm.registrationForm.gender,\n                                    gender.id\n                                  ),\n                                },\n                                on: {\n                                  click: function ($event) {\n                                    return _vm.registrationForm.errors.clear(\n                                      \"gender\"\n                                    )\n                                  },\n                                  change: function ($event) {\n                                    return _vm.$set(\n                                      _vm.registrationForm,\n                                      \"gender\",\n                                      gender.id\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"label\",\n                                {\n                                  staticClass: \"form-check-label\",\n                                  attrs: { for: gender.id },\n                                },\n                                [_vm._v(_vm._s(_vm.trans(\"list.\" + gender.id)))]\n                              ),\n                            ]\n                          )\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"gender\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"h2\", [_vm._v(\"Customer Information\")]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.checked,\n                    expression: \"checked\",\n                  },\n                ],\n                attrs: { type: \"checkbox\", id: \"checkbox\" },\n                domProps: {\n                  checked: Array.isArray(_vm.checked)\n                    ? _vm._i(_vm.checked, null) > -1\n                    : _vm.checked,\n                },\n                on: {\n                  change: function ($event) {\n                    var $$a = _vm.checked,\n                      $$el = $event.target,\n                      $$c = $$el.checked ? true : false\n                    if (Array.isArray($$a)) {\n                      var $$v = null,\n                        $$i = _vm._i($$a, $$v)\n                      if ($$el.checked) {\n                        $$i < 0 && (_vm.checked = $$a.concat([$$v]))\n                      } else {\n                        $$i > -1 &&\n                          (_vm.checked = $$a\n                            .slice(0, $$i)\n                            .concat($$a.slice($$i + 1)))\n                      }\n                    } else {\n                      _vm.checked = $$c\n                    }\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"label\", { attrs: { for: \"checkbox\" } }, [\n                _vm._v(\"Already Have an account? (login)\"),\n              ]),\n              _c(\"br\"),\n              _vm._v(\" \"),\n              _c(\"br\"),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-12\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [_vm._v(\"Email\")]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.email,\n                            expression: \"registrationForm.email\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"email\",\n                          name: \"email\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.email },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"email\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"email\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-12\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Password \"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.password,\n                            expression: \"registrationForm.password\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"password\",\n                          name: \"password\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.password },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"password\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"password\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: !_vm.checked,\n                        expression: \"!checked\",\n                      },\n                    ],\n                    staticClass: \"col-12 col-sm-12\",\n                  },\n                  [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\"confirm Password \"),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.registrationForm.password_confirmation,\n                              expression:\n                                \"registrationForm.password_confirmation\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"password\",\n                            name: \"confirm_password\",\n                            placeholder: _vm.trans(\"student.contact_name\"),\n                          },\n                          domProps: {\n                            value: _vm.registrationForm.password_confirmation,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.registrationForm,\n                                \"password_confirmation\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.registrationForm,\n                            \"prop-name\": \"confirm_password\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"h2\", [\n                _vm._v(\n                  _vm._s(\n                    _vm.trans(\"student.registration_field_info\", {\n                      name: _vm.trans(\"student.guardian\"),\n                    })\n                  )\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"First Guardian Name\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.first_guardian_name,\n                            expression: \"registrationForm.first_guardian_name\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"first_guardian_name\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: {\n                          value: _vm.registrationForm.first_guardian_name,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"first_guardian_name\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"first_guardian_name\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"general.relation\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value:\n                                _vm.registrationForm.first_guardian_relation,\n                              expression:\n                                \"registrationForm.first_guardian_relation\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"first_guardian_relation\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"first_guardian_relation\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.registrationForm.errors.clear(\n                                  \"first_guardian_relation\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(_vm.guardian_relations, function (relation) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: relation.id } },\n                              [\n                                _vm._v(\n                                  \"\\n                      \" +\n                                    _vm._s(relation.name) +\n                                    \"\\n                    \"\n                                ),\n                              ]\n                            )\n                          }),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"first_guardian_relation\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"student.first_guardian_email\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.first_guardian_email,\n                            expression: \"registrationForm.first_guardian_email\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"first_guardian_email\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: {\n                          value: _vm.registrationForm.first_guardian_email,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"first_guardian_email\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"first_guardian_email\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"student.first_guardian_contact_number\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value:\n                              _vm.registrationForm\n                                .first_guardian_contact_number_1,\n                            expression:\n                              \"registrationForm.first_guardian_contact_number_1\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"first_guardian_contact_number_1\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: {\n                          value:\n                            _vm.registrationForm\n                              .first_guardian_contact_number_1,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"first_guardian_contact_number_1\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"first_guardian_contact_number_1\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"student.second_guardian_name\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.second_guardian_name,\n                            expression: \"registrationForm.second_guardian_name\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"second_guardian_name\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: {\n                          value: _vm.registrationForm.second_guardian_name,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"second_guardian_name\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"second_guardian_name\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"student.second_guardian_relation\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value:\n                                _vm.registrationForm.second_guardian_relation,\n                              expression:\n                                \"registrationForm.second_guardian_relation\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"second_guardian_relation\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"second_guardian_relation\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.registrationForm.errors.clear(\n                                  \"second_guardian_relation\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(_vm.guardian_relations, function (relation) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: relation.id } },\n                              [\n                                _vm._v(\n                                  \"\\n                      \" +\n                                    _vm._s(relation.name) +\n                                    \"\\n                    \"\n                                ),\n                              ]\n                            )\n                          }),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"second_guardian_relation\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"h2\", [\n                _vm._v(\n                  _vm._s(\n                    _vm.trans(\"student.registration_field_info\", {\n                      name: _vm.trans(\"student.contact\"),\n                    })\n                  )\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [_vm._v(\"Email\")]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.email,\n                            expression: \"registrationForm.email\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"email\",\n                          placeholder: \"Your Email Address\",\n                        },\n                        domProps: { value: _vm.registrationForm.email },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"email\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"email\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.contact_number\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.contact_number,\n                            expression: \"registrationForm.contact_number\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"contact_number\",\n                          placeholder: _vm.trans(\"student.contact_number\"),\n                        },\n                        domProps: {\n                          value: _vm.registrationForm.contact_number,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"contact_number\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"contact_number\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.address_line_1\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.address_line_1,\n                            expression: \"registrationForm.address_line_1\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"address_line_1\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: {\n                          value: _vm.registrationForm.address_line_1,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"address_line_1\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"address_line_1\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.address_line_2\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.address_line_2,\n                            expression: \"registrationForm.address_line_2\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"address_line_2\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: {\n                          value: _vm.registrationForm.address_line_2,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"address_line_2\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"address_line_2\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.city\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.city,\n                            expression: \"registrationForm.city\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"city\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.city },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"city\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"city\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.state\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.state,\n                            expression: \"registrationForm.state\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"state\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.state },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"state\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"state\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.zipcode\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.zipcode,\n                            expression: \"registrationForm.zipcode\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"zipcode\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.zipcode },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"zipcode\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"zipcode\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.country\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.country,\n                            expression: \"registrationForm.country\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"country\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.country },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"country\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"country\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"custom-field\", {\n                attrs: {\n                  fields: _vm.custom_fields,\n                  customValues: _vm.custom_values,\n                  clear: _vm.clearCustomField,\n                  formErrors: _vm.customFieldFormErrors,\n                },\n                on: { updateCustomValues: _vm.updateCustomValues },\n              }),\n              _vm._v(\" \"),\n              _c(\"h2\", [_vm._v(\"Other Details\")]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\"How long have you been practicing Yoga?\"),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.registrationForm.how_long_yoga,\n                          expression: \"registrationForm.how_long_yoga\",\n                        },\n                      ],\n                      staticClass: \"custom-select col-12\",\n                      attrs: {\n                        name: \"how_long_yoga\",\n                        placeholder: \"Select one\",\n                      },\n                      on: {\n                        change: [\n                          function ($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function (o) {\n                                return o.selected\n                              })\n                              .map(function (o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"how_long_yoga\",\n                              $event.target.multiple\n                                ? $$selectedVal\n                                : $$selectedVal[0]\n                            )\n                          },\n                          function ($event) {\n                            return _vm.registrationForm.errors.clear(\n                              \"how_long_yoga\"\n                            )\n                          },\n                        ],\n                      },\n                    },\n                    [\n                      _c(\"option\", { attrs: { value: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _vm._l(\n                        _vm.how_long_yoga_options,\n                        function (how_log_option) {\n                          return _c(\n                            \"option\",\n                            { domProps: { value: how_log_option.id } },\n                            [\n                              _vm._v(\n                                \"\\n                    \" +\n                                  _vm._s(how_log_option.name) +\n                                  \"\\n                  \"\n                              ),\n                            ]\n                          )\n                        }\n                      ),\n                    ],\n                    2\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Do you have any experience teaching yoga?\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.registrationForm.teaching_experience,\n                              expression:\n                                \"registrationForm.teaching_experience\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"teaching_experience\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"teaching_experience\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.registrationForm.errors.clear(\n                                  \"teaching_experience\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(\n                            _vm.teaching_experience_options,\n                            function (teaching_experience_option) {\n                              return _c(\n                                \"option\",\n                                {\n                                  domProps: {\n                                    value: teaching_experience_option.id,\n                                  },\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                      \" +\n                                      _vm._s(teaching_experience_option.name) +\n                                      \"\\n                    \"\n                                  ),\n                                ]\n                              )\n                            }\n                          ),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"teaching_experience\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          \"What is your primary reason to join the course? \"\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.joining_reason,\n                            expression: \"registrationForm.joining_reason\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: { type: \"text\", name: \"joining_reason\" },\n                        domProps: {\n                          value: _vm.registrationForm.joining_reason,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"joining_reason\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"joining_reason\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"What is important to you in life?\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.important_to_life,\n                            expression: \"registrationForm.important_to_life\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: { type: \"text\", name: \"important_to_life\" },\n                        domProps: {\n                          value: _vm.registrationForm.important_to_life,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"important_to_life\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"important_to_life\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Why did you choose Arhanta Yoga?\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.why_choose_us,\n                            expression: \"registrationForm.why_choose_us\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: { type: \"text\", name: \"why_choose_us\" },\n                        domProps: { value: _vm.registrationForm.why_choose_us },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"why_choose_us\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"why_choose_us\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"How did you hear about us?\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.how_hear_about_us,\n                            expression: \"registrationForm.how_hear_about_us\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: { type: \"text\", name: \"how_hear_about_us\" },\n                        domProps: {\n                          value: _vm.registrationForm.how_hear_about_us,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"how_hear_about_us\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"how_hear_about_us\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          \"Please mention in case you have any allergies or special dietary needs:\"\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"br\"),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.allergies_dietary_needs,\n                            expression:\n                              \"registrationForm.allergies_dietary_needs\",\n                          },\n                        ],\n                        staticClass: \"form-control mt-3\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"allergies_dietary_needs\",\n                        },\n                        domProps: {\n                          value: _vm.registrationForm.allergies_dietary_needs,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"allergies_dietary_needs\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"allergies_dietary_needs\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          \"Have you in the last 12 months used tobacco, alcohol, recreational drugs, or illicit\\n                    substances?(Required)\"\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.registrationForm.use_drugs,\n                              expression: \"registrationForm.use_drugs\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"use_drugs\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"use_drugs\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.registrationForm.errors.clear(\n                                  \"use_drugs\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(\n                            _vm.use_drugs_options,\n                            function (use_drugs_option) {\n                              return _c(\n                                \"option\",\n                                { domProps: { value: use_drugs_option.id } },\n                                [\n                                  _vm._v(\n                                    \"\\n                      \" +\n                                      _vm._s(use_drugs_option.name) +\n                                      \"\\n                    \"\n                                  ),\n                                ]\n                              )\n                            }\n                          ),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"use_drugs\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Please list substance and frequency of use\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"textarea\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value:\n                              _vm.registrationForm.substance_frequency_of_use,\n                            expression:\n                              \"registrationForm.substance_frequency_of_use\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: { placeholder: \"add multiple lines\" },\n                        domProps: {\n                          value:\n                            _vm.registrationForm.substance_frequency_of_use,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"substance_frequency_of_use\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"substance_frequency_of_use\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"text-xs\" }, [\n                        _vm._v(\n                          \"Please note that for any residential courses conducted at the premises of the Arhanta Yoga Ashrams in India and the Netherlands, the use of tobacco, alcohol and any other drugs is strictly prohibited. Please consider carefully before applying that you will be able to discontinue the use of any such substances during the entire duration of your course.\"\n                        ),\n                      ]),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass:\n                      \"btn btn-info btn-lg waves-effect waves-light m-t-10\",\n                    attrs: { type: \"submit\" },\n                  },\n                  [\n                    _vm._v(\n                      \"\\n            \" +\n                        _vm._s(_vm.trans(\"general.submit\")) +\n                        \"\\n          \"\n                    ),\n                  ]\n                ),\n              ]),\n            ],\n            1\n          ),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-title\" }, [\n      _c(\"div\", { staticClass: \"fix-width fix-width-mobile\" }, [\n        _c(\"h2\", [_vm._v(_vm._s(_vm.trans(\"student.online_registration\")))]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"fix-width fix-width-mobile p-3\" }, [\n      _c(\"div\", {\n        staticClass: \"page-body\",\n        domProps: {\n          innerHTML: _vm._s(_vm.getConfig(\"online_registration_header\")),\n        },\n      }),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"fix-width fix-width-mobile\" }, [\n      _c(\n        \"div\",\n        {\n          staticClass: \"row\",\n          staticStyle: { \"background-color\": \"ghostwhite\" },\n        },\n        [\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _vm._m(0),\n            _vm._v(\" \"),\n            _c(\"br\"),\n            _vm._v(\" \"),\n            _c(\n              \"form\",\n              {\n                on: {\n                  submit: function ($event) {\n                    $event.preventDefault()\n                    return _vm.submit.apply(null, arguments)\n                  },\n                  keydown: function ($event) {\n                    return _vm.registrationForm.errors.clear($event.target.name)\n                  },\n                },\n              },\n              [\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.section1,\n                        expression: \"section1\",\n                      },\n                    ],\n                    staticStyle: { padding: \"3%\" },\n                  },\n                  [\n                    _c(\"h2\", [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"student.registration_field_info\", {\n                            name: _vm.trans(\"academic.course\"),\n                          })\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.section1,\n                            expression: \"section1\",\n                          },\n                        ],\n                        staticClass: \"row\",\n                        attrs: { id: \"progress-1\" },\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"col-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"v-select\",\n                                {\n                                  attrs: {\n                                    label: \"name\",\n                                    \"group-values\": \"courses\",\n                                    \"group-label\": \"course_group\",\n                                    \"group-select\": false,\n                                    name: \"course_id\",\n                                    id: \"course_id\",\n                                    options: _vm.courses,\n                                    placeholder: _vm.trans(\n                                      \"academic.select_course\"\n                                    ),\n                                  },\n                                  on: {\n                                    select: _vm.onCourseSelect,\n                                    close: function ($event) {\n                                      _vm.errors.course_id = \"\"\n                                    },\n                                    remove: function ($event) {\n                                      _vm.registrationForm.course_id = \"\"\n                                    },\n                                  },\n                                  model: {\n                                    value: _vm.selected_course,\n                                    callback: function ($$v) {\n                                      _vm.selected_course = $$v\n                                    },\n                                    expression: \"selected_course\",\n                                  },\n                                },\n                                [\n                                  !_vm.courses.length\n                                    ? _c(\n                                        \"div\",\n                                        {\n                                          staticClass: \"multiselect__option\",\n                                          attrs: { slot: \"afterList\" },\n                                          slot: \"afterList\",\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n                        \" +\n                                              _vm._s(\n                                                _vm.trans(\n                                                  \"general.no_option_found\"\n                                                )\n                                              ) +\n                                              \"\\n                      \"\n                                          ),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _vm.registrationForm.course_id &&\n                              _vm.enable_registration_fee &&\n                              _vm.registration_fee >= 0\n                                ? _c(\"span\", { staticClass: \"help-block\" }, [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\"student.registration_fee\")\n                                      ) +\n                                        \" \" +\n                                        _vm._s(\n                                          _vm.formatCurrency(\n                                            _vm.registration_fee\n                                          )\n                                        )\n                                    ),\n                                  ])\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"course_id\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              Object.keys(_vm.errors).includes(\"course_id\")\n                                ? _c(\"span\", {\n                                    staticClass: \"help has-error\",\n                                    domProps: {\n                                      textContent: _vm._s(\n                                        _vm.errors[\"course_id\"][0]\n                                      ),\n                                    },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\"Select Course Batches\"),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"select\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.registrationForm.batch_id,\n                                      expression: \"registrationForm.batch_id\",\n                                    },\n                                  ],\n                                  staticClass: \"custom-select col-12\",\n                                  attrs: { name: \"batch_id\" },\n                                  on: {\n                                    change: [\n                                      function ($event) {\n                                        var $$selectedVal =\n                                          Array.prototype.filter\n                                            .call(\n                                              $event.target.options,\n                                              function (o) {\n                                                return o.selected\n                                              }\n                                            )\n                                            .map(function (o) {\n                                              var val =\n                                                \"_value\" in o\n                                                  ? o._value\n                                                  : o.value\n                                              return val\n                                            })\n                                        _vm.$set(\n                                          _vm.registrationForm,\n                                          \"batch_id\",\n                                          $event.target.multiple\n                                            ? $$selectedVal\n                                            : $$selectedVal[0]\n                                        )\n                                      },\n                                      _vm.onBatchSelect,\n                                    ],\n                                  },\n                                },\n                                [\n                                  _c(\"option\", { attrs: { value: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"general.select_one\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _vm._l(_vm.batches, function (Batch) {\n                                    return _c(\n                                      \"option\",\n                                      { domProps: { value: Batch.id } },\n                                      [\n                                        _vm._v(\n                                          \"\\n                        \" +\n                                            _vm._s(Batch.name) +\n                                            \"\\n                      \"\n                                        ),\n                                      ]\n                                    )\n                                  }),\n                                ],\n                                2\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"batch_id\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\"Select Course Location\"),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"select\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value:\n                                        _vm.registrationForm.course_location,\n                                      expression:\n                                        \"registrationForm.course_location\",\n                                    },\n                                  ],\n                                  staticClass: \"custom-select col-12\",\n                                  attrs: { name: \"course_location\" },\n                                  on: {\n                                    change: [\n                                      function ($event) {\n                                        var $$selectedVal =\n                                          Array.prototype.filter\n                                            .call(\n                                              $event.target.options,\n                                              function (o) {\n                                                return o.selected\n                                              }\n                                            )\n                                            .map(function (o) {\n                                              var val =\n                                                \"_value\" in o\n                                                  ? o._value\n                                                  : o.value\n                                              return val\n                                            })\n                                        _vm.$set(\n                                          _vm.registrationForm,\n                                          \"course_location\",\n                                          $event.target.multiple\n                                            ? $$selectedVal\n                                            : $$selectedVal[0]\n                                        )\n                                      },\n                                      function ($event) {\n                                        return _vm.registrationForm.errors.clear(\n                                          \"course_location\"\n                                        )\n                                      },\n                                    ],\n                                  },\n                                },\n                                [\n                                  _c(\"option\", { attrs: { value: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"general.select_one\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _vm._l(\n                                    _vm.course_locations,\n                                    function (course_location) {\n                                      return _c(\n                                        \"option\",\n                                        {\n                                          domProps: {\n                                            value: course_location.id,\n                                          },\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n                        \" +\n                                              _vm._s(course_location.name) +\n                                              \"\\n                      \"\n                                          ),\n                                        ]\n                                      )\n                                    }\n                                  ),\n                                ],\n                                2\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"course_location\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\"Accommodation choice\"),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"select\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value:\n                                        _vm.registrationForm.accommodations,\n                                      expression:\n                                        \"registrationForm.accommodations\",\n                                    },\n                                  ],\n                                  staticClass: \"custom-select col-12\",\n                                  attrs: { name: \"accommodations\" },\n                                  on: {\n                                    change: [\n                                      function ($event) {\n                                        var $$selectedVal =\n                                          Array.prototype.filter\n                                            .call(\n                                              $event.target.options,\n                                              function (o) {\n                                                return o.selected\n                                              }\n                                            )\n                                            .map(function (o) {\n                                              var val =\n                                                \"_value\" in o\n                                                  ? o._value\n                                                  : o.value\n                                              return val\n                                            })\n                                        _vm.$set(\n                                          _vm.registrationForm,\n                                          \"accommodations\",\n                                          $event.target.multiple\n                                            ? $$selectedVal\n                                            : $$selectedVal[0]\n                                        )\n                                      },\n                                      function ($event) {\n                                        return _vm.registrationForm.errors.clear(\n                                          \"accommodations\"\n                                        )\n                                      },\n                                    ],\n                                  },\n                                },\n                                [\n                                  _c(\"option\", { attrs: { value: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"general.select_one\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _vm._l(\n                                    _vm.accommodations,\n                                    function (accommodation) {\n                                      return _c(\n                                        \"option\",\n                                        {\n                                          domProps: {\n                                            value: accommodation.type_name,\n                                          },\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n                        \" +\n                                              _vm._s(accommodation.type_name) +\n                                              \"\\n                      \"\n                                          ),\n                                        ]\n                                      )\n                                    }\n                                  ),\n                                ],\n                                2\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"accommodations\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              Object.keys(_vm.errors).includes(\"accommodations\")\n                                ? _c(\"span\", {\n                                    staticClass: \"help has-error\",\n                                    domProps: {\n                                      textContent: _vm._s(\n                                        _vm.errors[\"accommodations\"][0]\n                                      ),\n                                    },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]),\n                      ]\n                    ),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.section2,\n                        expression: \"section2\",\n                      },\n                    ],\n                    staticStyle: { padding: \"3%\" },\n                  },\n                  [\n                    _c(\"h2\", [_vm._v(\"Customer Information\")]),\n                    _vm._v(\" \"),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.checked,\n                          expression: \"checked\",\n                        },\n                      ],\n                      attrs: { type: \"checkbox\", id: \"checkbox\" },\n                      domProps: {\n                        checked: Array.isArray(_vm.checked)\n                          ? _vm._i(_vm.checked, null) > -1\n                          : _vm.checked,\n                      },\n                      on: {\n                        change: function ($event) {\n                          var $$a = _vm.checked,\n                            $$el = $event.target,\n                            $$c = $$el.checked ? true : false\n                          if (Array.isArray($$a)) {\n                            var $$v = null,\n                              $$i = _vm._i($$a, $$v)\n                            if ($$el.checked) {\n                              $$i < 0 && (_vm.checked = $$a.concat([$$v]))\n                            } else {\n                              $$i > -1 &&\n                                (_vm.checked = $$a\n                                  .slice(0, $$i)\n                                  .concat($$a.slice($$i + 1)))\n                            }\n                          } else {\n                            _vm.checked = $$c\n                          }\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"label\", { attrs: { for: \"checkbox\" } }, [\n                      _vm._v(\"Already Have an account? (login)\"),\n                    ]),\n                    _c(\"br\"),\n                    _c(\"br\"),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.section2,\n                            expression: \"section2\",\n                          },\n                        ],\n                        staticClass: \"row\",\n                        attrs: { id: \"progress-3\" },\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"col-12 col-sm-12\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\"Email\"),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.email,\n                                    expression: \"registrationForm.email\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"email\",\n                                  name: \"email\",\n                                  placeholder: _vm.trans(\n                                    \"student.contact_name\"\n                                  ),\n                                },\n                                domProps: { value: _vm.registrationForm.email },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"email\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"email\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              Object.keys(_vm.errors).includes(\"email\")\n                                ? _c(\"span\", {\n                                    staticClass: \"help has-error\",\n                                    domProps: {\n                                      textContent: _vm._s(\n                                        _vm.errors[\"email\"][0]\n                                      ),\n                                    },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-12\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\"Password \"),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.password,\n                                    expression: \"registrationForm.password\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"password\",\n                                  name: \"password\",\n                                  placeholder: _vm.trans(\n                                    \"student.contact_name\"\n                                  ),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.password,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"password\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"password\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              Object.keys(_vm.errors).includes(\"password\")\n                                ? _c(\"span\", {\n                                    staticClass: \"help has-error\",\n                                    domProps: {\n                                      textContent: _vm._s(\n                                        _vm.errors[\"password\"][0]\n                                      ),\n                                    },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: !_vm.checked,\n                                expression: \"!checked\",\n                              },\n                            ],\n                            staticClass: \"col-12 col-sm-12\",\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\"confirm Password \"),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value:\n                                        _vm.registrationForm\n                                          .password_confirmation,\n                                      expression:\n                                        \"registrationForm.password_confirmation\",\n                                    },\n                                  ],\n                                  staticClass: \"form-control\",\n                                  attrs: {\n                                    type: \"password\",\n                                    name: \"confirm_password\",\n                                    placeholder: _vm.trans(\n                                      \"student.contact_name\"\n                                    ),\n                                  },\n                                  domProps: {\n                                    value:\n                                      _vm.registrationForm\n                                        .password_confirmation,\n                                  },\n                                  on: {\n                                    input: function ($event) {\n                                      if ($event.target.composing) return\n                                      _vm.$set(\n                                        _vm.registrationForm,\n                                        \"password_confirmation\",\n                                        $event.target.value\n                                      )\n                                    },\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"show-error\", {\n                                  attrs: {\n                                    \"form-name\": _vm.registrationForm,\n                                    \"prop-name\": \"confirm_password\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]\n                        ),\n                      ]\n                    ),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.section3,\n                        expression: \"section3\",\n                      },\n                    ],\n                    staticStyle: { padding: \"3%\" },\n                  },\n                  [\n                    _c(\"h2\", [_vm._v(\"About You\")]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.section3,\n                            expression: \"section3\",\n                          },\n                        ],\n                        staticClass: \"row\",\n                        attrs: { id: \"progress-2\" },\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(_vm._s(_vm.trans(\"student.first_name\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.first_name,\n                                    expression: \"registrationForm.first_name\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"first_name\",\n                                  placeholder: _vm.trans(\n                                    \"student.contact_name\"\n                                  ),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.first_name,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"first_name\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"first_name\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              Object.keys(_vm.errors).includes(\"first_name\")\n                                ? _c(\"span\", {\n                                    staticClass: \"help has-error\",\n                                    domProps: {\n                                      textContent: _vm._s(\n                                        _vm.errors[\"first_name\"][0]\n                                      ),\n                                    },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"student.middle_name\"))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.middle_name,\n                                    expression: \"registrationForm.middle_name\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"middle_name\",\n                                  placeholder: _vm.trans(\n                                    \"student.contact_name\"\n                                  ),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.middle_name,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"middle_name\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"middle_name\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(_vm._s(_vm.trans(\"student.last_name\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.last_name,\n                                    expression: \"registrationForm.last_name\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"last_name\",\n                                  placeholder: _vm.trans(\n                                    \"student.contact_name\"\n                                  ),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.last_name,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"last_name\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"last_name\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"student.date_of_birth\"))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"datepicker\", {\n                                attrs: {\n                                  bootstrapStyling: true,\n                                  placeholder: _vm.trans(\n                                    \"student.date_of_birth\"\n                                  ),\n                                },\n                                on: {\n                                  selected: function ($event) {\n                                    return _vm.registrationForm.errors.clear(\n                                      \"date_of_birth\"\n                                    )\n                                  },\n                                },\n                                model: {\n                                  value: _vm.registrationForm.date_of_birth,\n                                  callback: function ($$v) {\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"date_of_birth\",\n                                      $$v\n                                    )\n                                  },\n                                  expression: \"registrationForm.date_of_birth\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"date_of_birth\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              Object.keys(_vm.errors).includes(\"date_of_birth\")\n                                ? _c(\"span\", {\n                                    staticClass: \"help has-error\",\n                                    domProps: {\n                                      textContent: _vm._s(\n                                        _vm.errors[\"date_of_birth\"][0]\n                                      ),\n                                    },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-4 col-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\"Nationality\"),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.nationality,\n                                    expression: \"registrationForm.nationality\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"nationality\",\n                                  placeholder: \"Your Nationality\",\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.nationality,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"nationality\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"nationality\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-4 col-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\"Your occupation\"),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.occupation,\n                                    expression: \"registrationForm.occupation\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"occupation\",\n                                  placeholder: \"Your Occupation\",\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.occupation,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"occupation\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"occupation\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(_vm._s(_vm.trans(\"student.gender\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"div\",\n                                { staticClass: \"radio radio-info p-l-0\" },\n                                _vm._l(_vm.genders, function (gender) {\n                                  return _c(\n                                    \"div\",\n                                    {\n                                      staticClass:\n                                        \"form-check form-check-inline\",\n                                    },\n                                    [\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: _vm.registrationForm.gender,\n                                            expression:\n                                              \"registrationForm.gender\",\n                                          },\n                                        ],\n                                        staticClass: \"form-check-input\",\n                                        attrs: {\n                                          type: \"radio\",\n                                          id: gender.id,\n                                          name: \"gender\",\n                                        },\n                                        domProps: {\n                                          value: gender.id,\n                                          checked:\n                                            _vm.registrationForm.gender ==\n                                            gender.id,\n                                          checked: _vm._q(\n                                            _vm.registrationForm.gender,\n                                            gender.id\n                                          ),\n                                        },\n                                        on: {\n                                          click: function ($event) {\n                                            return _vm.registrationForm.errors.clear(\n                                              \"gender\"\n                                            )\n                                          },\n                                          change: function ($event) {\n                                            return _vm.$set(\n                                              _vm.registrationForm,\n                                              \"gender\",\n                                              gender.id\n                                            )\n                                          },\n                                        },\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"label\",\n                                        {\n                                          staticClass: \"form-check-label\",\n                                          attrs: { for: gender.id },\n                                        },\n                                        [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.trans(\"list.\" + gender.id)\n                                            )\n                                          ),\n                                        ]\n                                      ),\n                                    ]\n                                  )\n                                }),\n                                0\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"gender\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              Object.keys(_vm.errors).includes(\"gender\")\n                                ? _c(\"span\", {\n                                    staticClass: \"help has-error\",\n                                    domProps: {\n                                      textContent: _vm._s(\n                                        _vm.errors[\"gender\"][0]\n                                      ),\n                                    },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]),\n                      ]\n                    ),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.section4,\n                        expression: \"section4\",\n                      },\n                    ],\n                    staticStyle: { padding: \"3%\" },\n                  },\n                  [\n                    _c(\"h2\", [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"student.registration_field_info\", {\n                            name: _vm.trans(\"student.contact\"),\n                          })\n                        )\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.section4,\n                            expression: \"section4\",\n                          },\n                        ],\n                        staticClass: \"row\",\n                        attrs: { id: \"progress-\" + 5 },\n                      },\n                      [\n                        _vm.checked == false\n                          ? _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"label\", { attrs: { for: \"\" } }, [\n                                    _vm._v(\"Email\"),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value: _vm.registrationForm.email,\n                                        expression: \"registrationForm.email\",\n                                      },\n                                    ],\n                                    staticClass: \"form-control\",\n                                    attrs: {\n                                      type: \"text\",\n                                      name: \"email\",\n                                      placeholder: \"Your Email Address\",\n                                    },\n                                    domProps: {\n                                      value: _vm.registrationForm.email,\n                                    },\n                                    on: {\n                                      input: function ($event) {\n                                        if ($event.target.composing) return\n                                        _vm.$set(\n                                          _vm.registrationForm,\n                                          \"email\",\n                                          $event.target.value\n                                        )\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.registrationForm,\n                                      \"prop-name\": \"email\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ])\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"student.contact_number\"))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.contact_number,\n                                    expression:\n                                      \"registrationForm.contact_number\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"contact_number\",\n                                  placeholder: _vm.trans(\n                                    \"student.contact_number\"\n                                  ),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.contact_number,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"contact_number\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"contact_number\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              Object.keys(_vm.errors).includes(\"contact_number\")\n                                ? _c(\"span\", {\n                                    staticClass: \"help has-error\",\n                                    domProps: {\n                                      textContent: _vm._s(\n                                        _vm.errors[\"contact_number\"][0]\n                                      ),\n                                    },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"student.address_line_1\"))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.address_line_1,\n                                    expression:\n                                      \"registrationForm.address_line_1\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"address_line_1\",\n                                  placeholder: _vm.trans(\n                                    \"student.contact_name\"\n                                  ),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.address_line_1,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"address_line_1\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"address_line_1\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              Object.keys(_vm.errors).includes(\"address_line_1\")\n                                ? _c(\"span\", {\n                                    staticClass: \"help has-error\",\n                                    domProps: {\n                                      textContent: _vm._s(\n                                        _vm.errors[\"address_line_1\"][0]\n                                      ),\n                                    },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"student.address_line_2\"))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.address_line_2,\n                                    expression:\n                                      \"registrationForm.address_line_2\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"address_line_2\",\n                                  placeholder: _vm.trans(\n                                    \"student.contact_name\"\n                                  ),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.address_line_2,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"address_line_2\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"address_line_2\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(_vm._s(_vm.trans(\"student.city\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.city,\n                                    expression: \"registrationForm.city\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"city\",\n                                  placeholder: _vm.trans(\n                                    \"student.contact_name\"\n                                  ),\n                                },\n                                domProps: { value: _vm.registrationForm.city },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"city\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"city\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              Object.keys(_vm.errors).includes(\"city\")\n                                ? _c(\"span\", {\n                                    staticClass: \"help has-error\",\n                                    domProps: {\n                                      textContent: _vm._s(\n                                        _vm.errors[\"city\"][0]\n                                      ),\n                                    },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(_vm._s(_vm.trans(\"student.state\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.state,\n                                    expression: \"registrationForm.state\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"state\",\n                                  placeholder: _vm.trans(\n                                    \"student.contact_name\"\n                                  ),\n                                },\n                                domProps: { value: _vm.registrationForm.state },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"state\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"state\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              Object.keys(_vm.errors).includes(\"state\")\n                                ? _c(\"span\", {\n                                    staticClass: \"help has-error\",\n                                    domProps: {\n                                      textContent: _vm._s(\n                                        _vm.errors[\"state\"][0]\n                                      ),\n                                    },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(_vm._s(_vm.trans(\"student.zipcode\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.zipcode,\n                                    expression: \"registrationForm.zipcode\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"zipcode\",\n                                  placeholder: _vm.trans(\n                                    \"student.contact_name\"\n                                  ),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.zipcode,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"zipcode\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"zipcode\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              Object.keys(_vm.errors).includes(\"zipcode\")\n                                ? _c(\"span\", {\n                                    staticClass: \"help has-error\",\n                                    domProps: {\n                                      textContent: _vm._s(\n                                        _vm.errors[\"zipcode\"][0]\n                                      ),\n                                    },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(_vm._s(_vm.trans(\"student.country\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.country,\n                                    expression: \"registrationForm.country\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"country\",\n                                  placeholder: _vm.trans(\n                                    \"student.contact_name\"\n                                  ),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.country,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"country\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"country\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              Object.keys(_vm.errors).includes(\"country\")\n                                ? _c(\"span\", {\n                                    staticClass: \"help has-error\",\n                                    domProps: {\n                                      textContent: _vm._s(\n                                        _vm.errors[\"country\"][0]\n                                      ),\n                                    },\n                                  })\n                                : _vm._e(),\n                            ],\n                            1\n                          ),\n                        ]),\n                      ]\n                    ),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.section5,\n                        expression: \"section5\",\n                      },\n                    ],\n                    staticStyle: { padding: \"3%\" },\n                  },\n                  [\n                    _c(\"h2\", [_vm._v(\"Other Details\")]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.section5,\n                            expression: \"section5\",\n                          },\n                        ],\n                        staticClass: \"row\",\n                        attrs: { id: \"progress-\" + 6 },\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"col-4\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\"How long have you been practicing Yoga?\"),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.registrationForm.how_long_yoga,\n                                  expression: \"registrationForm.how_long_yoga\",\n                                },\n                              ],\n                              staticClass: \"custom-select col-12\",\n                              attrs: {\n                                name: \"how_long_yoga\",\n                                placeholder: \"Select one\",\n                              },\n                              on: {\n                                change: [\n                                  function ($event) {\n                                    var $$selectedVal = Array.prototype.filter\n                                      .call(\n                                        $event.target.options,\n                                        function (o) {\n                                          return o.selected\n                                        }\n                                      )\n                                      .map(function (o) {\n                                        var val =\n                                          \"_value\" in o ? o._value : o.value\n                                        return val\n                                      })\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"how_long_yoga\",\n                                      $event.target.multiple\n                                        ? $$selectedVal\n                                        : $$selectedVal[0]\n                                    )\n                                  },\n                                  function ($event) {\n                                    return _vm.registrationForm.errors.clear(\n                                      \"how_long_yoga\"\n                                    )\n                                  },\n                                ],\n                              },\n                            },\n                            [\n                              _c(\"option\", { attrs: { value: \"\" } }, [\n                                _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _vm._l(\n                                _vm.how_long_yoga_options,\n                                function (how_log_option) {\n                                  return _c(\n                                    \"option\",\n                                    { domProps: { value: how_log_option.id } },\n                                    [\n                                      _vm._v(\n                                        \"\\n                        \" +\n                                          _vm._s(how_log_option.name) +\n                                          \"\\n                      \"\n                                      ),\n                                    ]\n                                  )\n                                }\n                              ),\n                            ],\n                            2\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-6\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\n                                  \"Do you have any experience teaching yoga?\"\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"select\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value:\n                                        _vm.registrationForm\n                                          .teaching_experience,\n                                      expression:\n                                        \"registrationForm.teaching_experience\",\n                                    },\n                                  ],\n                                  staticClass: \"custom-select col-12\",\n                                  attrs: { name: \"teaching_experience\" },\n                                  on: {\n                                    change: [\n                                      function ($event) {\n                                        var $$selectedVal =\n                                          Array.prototype.filter\n                                            .call(\n                                              $event.target.options,\n                                              function (o) {\n                                                return o.selected\n                                              }\n                                            )\n                                            .map(function (o) {\n                                              var val =\n                                                \"_value\" in o\n                                                  ? o._value\n                                                  : o.value\n                                              return val\n                                            })\n                                        _vm.$set(\n                                          _vm.registrationForm,\n                                          \"teaching_experience\",\n                                          $event.target.multiple\n                                            ? $$selectedVal\n                                            : $$selectedVal[0]\n                                        )\n                                      },\n                                      function ($event) {\n                                        return _vm.registrationForm.errors.clear(\n                                          \"teaching_experience\"\n                                        )\n                                      },\n                                    ],\n                                  },\n                                },\n                                [\n                                  _c(\"option\", { attrs: { value: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"general.select_one\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _vm._l(\n                                    _vm.teaching_experience_options,\n                                    function (teaching_experience_option) {\n                                      return _c(\n                                        \"option\",\n                                        {\n                                          domProps: {\n                                            value:\n                                              teaching_experience_option.id,\n                                          },\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n                          \" +\n                                              _vm._s(\n                                                teaching_experience_option.name\n                                              ) +\n                                              \"\\n                        \"\n                                          ),\n                                        ]\n                                      )\n                                    }\n                                  ),\n                                ],\n                                2\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"teaching_experience\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\n                                  \"What is your primary reason to join the course? \"\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.joining_reason,\n                                    expression:\n                                      \"registrationForm.joining_reason\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: { type: \"text\", name: \"joining_reason\" },\n                                domProps: {\n                                  value: _vm.registrationForm.joining_reason,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"joining_reason\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"joining_reason\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\"What is important to you in life?\"),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value:\n                                      _vm.registrationForm.important_to_life,\n                                    expression:\n                                      \"registrationForm.important_to_life\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"important_to_life\",\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.important_to_life,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"important_to_life\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"important_to_life\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\"Why did you choose Arhanta Yoga?\"),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.why_choose_us,\n                                    expression:\n                                      \"registrationForm.why_choose_us\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: { type: \"text\", name: \"why_choose_us\" },\n                                domProps: {\n                                  value: _vm.registrationForm.why_choose_us,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"why_choose_us\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"why_choose_us\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\"How did you hear about us?\"),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value:\n                                      _vm.registrationForm.how_hear_about_us,\n                                    expression:\n                                      \"registrationForm.how_hear_about_us\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"how_hear_about_us\",\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.how_hear_about_us,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"how_hear_about_us\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"how_hear_about_us\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.section5,\n                            expression: \"section5\",\n                          },\n                        ],\n                        staticClass: \"row\",\n                        attrs: { id: \"progress-\" + 6 },\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\n                                  \"Please mention in case you have any allergies or special dietary needs:\"\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"br\"),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value:\n                                      _vm.registrationForm\n                                        .allergies_dietary_needs,\n                                    expression:\n                                      \"registrationForm.allergies_dietary_needs\",\n                                  },\n                                ],\n                                staticClass: \"form-control mt-3\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"allergies_dietary_needs\",\n                                },\n                                domProps: {\n                                  value:\n                                    _vm.registrationForm\n                                      .allergies_dietary_needs,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"allergies_dietary_needs\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"allergies_dietary_needs\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-6\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\n                                  \"Have you in the last 12 months used tobacco, alcohol, recreational drugs, or illicit\\n                        substances?(Required)\"\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"select\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.registrationForm.use_drugs,\n                                      expression: \"registrationForm.use_drugs\",\n                                    },\n                                  ],\n                                  staticClass: \"custom-select col-12\",\n                                  attrs: { name: \"use_drugs\" },\n                                  on: {\n                                    change: [\n                                      function ($event) {\n                                        var $$selectedVal =\n                                          Array.prototype.filter\n                                            .call(\n                                              $event.target.options,\n                                              function (o) {\n                                                return o.selected\n                                              }\n                                            )\n                                            .map(function (o) {\n                                              var val =\n                                                \"_value\" in o\n                                                  ? o._value\n                                                  : o.value\n                                              return val\n                                            })\n                                        _vm.$set(\n                                          _vm.registrationForm,\n                                          \"use_drugs\",\n                                          $event.target.multiple\n                                            ? $$selectedVal\n                                            : $$selectedVal[0]\n                                        )\n                                      },\n                                      function ($event) {\n                                        return _vm.registrationForm.errors.clear(\n                                          \"use_drugs\"\n                                        )\n                                      },\n                                    ],\n                                  },\n                                },\n                                [\n                                  _c(\"option\", { attrs: { value: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"general.select_one\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _vm._l(\n                                    _vm.use_drugs_options,\n                                    function (use_drugs_option) {\n                                      return _c(\n                                        \"option\",\n                                        {\n                                          domProps: {\n                                            value: use_drugs_option.id,\n                                          },\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n                          \" +\n                                              _vm._s(use_drugs_option.name) +\n                                              \"\\n                        \"\n                                          ),\n                                        ]\n                                      )\n                                    }\n                                  ),\n                                ],\n                                2\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"use_drugs\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\n                                  \"Please list substance and frequency of use\"\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"textarea\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value:\n                                      _vm.registrationForm\n                                        .substance_frequency_of_use,\n                                    expression:\n                                      \"registrationForm.substance_frequency_of_use\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: { placeholder: \"add multiple lines\" },\n                                domProps: {\n                                  value:\n                                    _vm.registrationForm\n                                      .substance_frequency_of_use,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"substance_frequency_of_use\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"substance_frequency_of_use\",\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"span\", { staticClass: \"text-xs\" }, [\n                                _vm._v(\n                                  \"Please note that for any residential courses conducted at the premises of the Arhanta Yoga Ashrams in India and the Netherlands, the use of tobacco, alcohol and any other drugs is strictly prohibited. Please consider carefully before applying that you will be able to discontinue the use of any such substances during the entire duration of your course.\"\n                                ),\n                              ]),\n                            ],\n                            1\n                          ),\n                        ]),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"custom-field\", {\n                      attrs: {\n                        fields: _vm.custom_fields,\n                        customValues: _vm.custom_values,\n                        clear: _vm.clearCustomField,\n                        formErrors: _vm.customFieldFormErrors,\n                      },\n                      on: { updateCustomValues: _vm.updateCustomValues },\n                    }),\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.section6,\n                        expression: \"section6\",\n                      },\n                    ],\n                    staticStyle: { padding: \"3%\" },\n                  },\n                  [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"finance.choose_payment_gateway\"))\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"radio radio-success\" }, [\n                      _c(\"input\", {\n                        attrs: {\n                          type: \"radio\",\n                          name: \"payment_gateway\",\n                          id: \"stripe\",\n                          value: \"stripe\",\n                        },\n                        on: {\n                          change: function ($event) {\n                            return _vm.setPaymentGateway(\"stripe\")\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"label\", { attrs: { for: \"stripe\" } }, [\n                        _vm._v(\" Stripe \"),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"radio radio-success\" }, [\n                      _c(\"input\", {\n                        attrs: {\n                          type: \"radio\",\n                          name: \"payment_gateway\",\n                          id: \"billdesk\",\n                          value: \"billdesk\",\n                        },\n                        on: {\n                          change: function ($event) {\n                            return _vm.setPaymentGateway(\"mollie\")\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"label\", { attrs: { for: \"billdesk\" } }, [\n                        _vm._v(\" Mollie \"),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _vm.payment_gateway == \"mollie\"\n                      ? _c(\"div\", { staticClass: \"row m-t-40\" }, [_vm._m(1)])\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.payment_gateway == \"stripe\"\n                      ? _c(\"div\", { staticClass: \"row m-t-40\" }, [\n                          _c(\"div\", { staticClass: \"col-12\" }, [\n                            _c(\"div\", { staticClass: \"form-group\" }, [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.stripe.card_number,\n                                    expression: \"stripe.card_number\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"number\",\n                                  maxlength: \"16\",\n                                  value: \"\",\n                                  placeholder: _vm.trans(\"finance.card_number\"),\n                                },\n                                domProps: { value: _vm.stripe.card_number },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.stripe,\n                                      \"card_number\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                            ]),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-3\" }, [\n                            _c(\"div\", { staticClass: \"form-group\" }, [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.stripe.month,\n                                    expression: \"stripe.month\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"number\",\n                                  value: \"\",\n                                  placeholder: _vm.trans(\n                                    \"finance.card_expiry_month\"\n                                  ),\n                                },\n                                domProps: { value: _vm.stripe.month },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.stripe,\n                                      \"month\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                            ]),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-4\" }, [\n                            _c(\"div\", { staticClass: \"form-group\" }, [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.stripe.year,\n                                    expression: \"stripe.year\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"number\",\n                                  value: \"\",\n                                  placeholder: _vm.trans(\n                                    \"finance.card_expiry_year\"\n                                  ),\n                                },\n                                domProps: { value: _vm.stripe.year },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.stripe,\n                                      \"year\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                            ]),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-1\" }),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-4\" }, [\n                            _c(\"div\", { staticClass: \"form-group\" }, [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.stripe.cvc,\n                                    expression: \"stripe.cvc\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"number\",\n                                  value: \"\",\n                                  placeholder: _vm.trans(\"finance.card_cvc\"),\n                                },\n                                domProps: { value: _vm.stripe.cvc },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.stripe,\n                                      \"cvc\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                            ]),\n                          ]),\n                        ])\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.section7,\n                        expression: \"section7\",\n                      },\n                    ],\n                    staticStyle: { padding: \"3%\" },\n                  },\n                  [_vm._m(2)]\n                ),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"form-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.prevBtn,\n                          expression: \"prevBtn\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-lg waves-effect waves-light m-t-10\",\n                      attrs: { type: \"button\" },\n                      on: {\n                        click: function ($event) {\n                          return _vm.previousClick()\n                        },\n                      },\n                    },\n                    [_vm._v(\"\\n            Previous\\n          \")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"show\",\n                          rawName: \"v-show\",\n                          value: _vm.nextBtn,\n                          expression: \"nextBtn\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-lg waves-effect waves-light m-t-10\",\n                      attrs: { type: \"button\" },\n                      on: {\n                        click: function ($event) {\n                          return _vm.nextClick()\n                        },\n                      },\n                    },\n                    [_vm._v(\"\\n           Next\\n          \")]\n                  ),\n                  _vm._v(\" \"),\n                  _vm.payment_gateway == \"stripe\"\n                    ? _c(\n                        \"button\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.submitBtn,\n                              expression: \"submitBtn\",\n                            },\n                          ],\n                          staticClass:\n                            \"btn btn-info btn-lg waves-effect waves-light m-t-10\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              return _vm.stripeCheckout()\n                            },\n                          },\n                        },\n                        [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(_vm.trans(\"general.submit\")) +\n                              \"\\n          \"\n                          ),\n                        ]\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _vm.payment_gateway == \"mollie\"\n                    ? _c(\n                        \"button\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.submitBtn,\n                              expression: \"submitBtn\",\n                            },\n                          ],\n                          staticClass:\n                            \"btn btn-info btn-lg waves-effect waves-light m-t-10\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              return _vm.mollieCheckout()\n                            },\n                          },\n                        },\n                        [\n                          _vm._v(\n                            \"\\n            \" +\n                              _vm._s(_vm.trans(\"general.submit\")) +\n                              \"\\n          \"\n                          ),\n                        ]\n                      )\n                    : _vm._e(),\n                ]),\n              ]\n            ),\n          ]),\n        ]\n      ),\n    ]),\n  ])\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"progress\" }, [\n      _c(\"div\", {\n        staticClass: \"progress-bar progress-bar-striped progress-bar-animated\",\n        attrs: {\n          role: \"progressbar\",\n          \"aria-valuemin\": \"0\",\n          \"aria-valuemax\": \"100\",\n          id: \"progress-bar\",\n        },\n      }),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"col-4\" }, [\n      _c(\"div\", { staticClass: \"form-group\" }, [\n        _c(\"h4\", [_vm._v(\"Press Submit to Pay with Mollie\")]),\n      ]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"purchase-message\" }, [\n      _c(\"div\", { staticClass: \"container\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-lg-12\" }, [\n            _c(\"div\", { staticClass: \"purchase-success\" }, [\n              _c(\n                \"div\",\n                {\n                  staticClass: \"icon text-success\",\n                  staticStyle: { \"margin-left\": \"50%\" },\n                },\n                [_c(\"i\", { staticClass: \"far fa-check-circle\" })]\n              ),\n              _vm._v(\" \"),\n              _c(\"h2\", { staticStyle: { \"margin-left\": \"42%\" } }, [\n                _vm._v(\"Success\"),\n              ]),\n              _vm._v(\" \"),\n              _c(\"p\", { staticStyle: { \"margin-left\": \"38%\" } }, [\n                _vm._v(\"Your transaction was successful.\"),\n              ]),\n              _vm._v(\" \"),\n              _c(\"p\", { staticStyle: { \"margin-left\": \"34%\" } }, [\n                _vm._v(\"We have sent you a mail with an invoice.\"),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"p\",\n                { staticClass: \"mt-4\", staticStyle: { \"margin-left\": \"47%\" } },\n                [_vm._v(\"Thank You.\")]\n              ),\n            ]),\n          ]),\n        ]),\n      ]),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function ($event) {\n              $event.preventDefault()\n              return _vm.submit.apply(null, arguments)\n            },\n            keydown: function ($event) {\n              return _vm.registrationForm.errors.clear($event.target.name)\n            },\n          },\n        },\n        [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"student.student_type\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"radio radio-info p-l-0\" }, [\n                  _c(\"div\", { staticClass: \"form-check form-check-inline\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.registrationForm.student_type,\n                          expression: \"registrationForm.student_type\",\n                        },\n                      ],\n                      staticClass: \"form-check-input\",\n                      attrs: {\n                        type: \"radio\",\n                        value: \"new\",\n                        id: \"student_type_new\",\n                        name: \"student_type\",\n                      },\n                      domProps: {\n                        checked: _vm.registrationForm.student_type == \"new\",\n                        checked: _vm._q(\n                          _vm.registrationForm.student_type,\n                          \"new\"\n                        ),\n                      },\n                      on: {\n                        click: function ($event) {\n                          return _vm.registrationForm.errors.clear(\n                            \"student_type\"\n                          )\n                        },\n                        change: function ($event) {\n                          return _vm.$set(\n                            _vm.registrationForm,\n                            \"student_type\",\n                            \"new\"\n                          )\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"label\",\n                      {\n                        staticClass: \"form-check-label\",\n                        attrs: { for: \"student_type_new\" },\n                      },\n                      [_vm._v(\" \" + _vm._s(_vm.trans(\"student.new_student\")))]\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"form-check form-check-inline\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.registrationForm.student_type,\n                          expression: \"registrationForm.student_type\",\n                        },\n                      ],\n                      staticClass: \"form-check-input\",\n                      attrs: {\n                        type: \"radio\",\n                        value: \"existing\",\n                        id: \"student_type_existing\",\n                        name: \"student_type\",\n                      },\n                      domProps: {\n                        checked:\n                          _vm.registrationForm.student_type == \"existing\",\n                        checked: _vm._q(\n                          _vm.registrationForm.student_type,\n                          \"existing\"\n                        ),\n                      },\n                      on: {\n                        click: function ($event) {\n                          return _vm.registrationForm.errors.clear(\n                            \"student_type\"\n                          )\n                        },\n                        change: function ($event) {\n                          return _vm.$set(\n                            _vm.registrationForm,\n                            \"student_type\",\n                            \"existing\"\n                          )\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"label\",\n                      {\n                        staticClass: \"form-check-label\",\n                        attrs: { for: \"student_type_existing\" },\n                      },\n                      [\n                        _vm._v(\n                          \" \" + _vm._s(_vm.trans(\"student.existing_student\"))\n                        ),\n                      ]\n                    ),\n                  ]),\n                ]),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _vm.registrationForm.student_type != \"new\"\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                  _vm.registrationForm.student_id\n                    ? _c(\"div\", { staticClass: \"col-12 col-sm-8\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _vm.registrationForm.student_id\n                            ? _c(\"div\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.trans(\"student.name\") +\n                                      \": \" +\n                                      _vm.getStudentName(_vm.selected_student)\n                                  ) +\n                                    \" \" +\n                                    _vm._s(\n                                      _vm.trans(\"student.first_guardian_name\") +\n                                        \": \" +\n                                        _vm.selected_student.parent\n                                          .first_guardian_name\n                                    )\n                                ),\n                              ])\n                            : _vm._e(),\n                        ]),\n                      ])\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\"div\", { staticClass: \"form-group\" }, [\n                      _vm.registrationForm.student_id\n                        ? _c(\n                            \"button\",\n                            {\n                              staticClass: \"m-t-20 btn btn-sm btn-danger\",\n                              attrs: { type: \"button\" },\n                              on: { click: _vm.removeStudentId },\n                            },\n                            [\n                              _c(\"i\", { staticClass: \"fas fa-times-circle\" }),\n                              _vm._v(\n                                \" \" +\n                                  _vm._s(_vm.trans(\"student.remove_student\")) +\n                                  \"\\n                        \"\n                              ),\n                            ]\n                          )\n                        : _c(\n                            \"button\",\n                            {\n                              staticClass: \"m-t-20 btn btn-sm btn-info\",\n                              attrs: { type: \"button\" },\n                              on: {\n                                click: function ($event) {\n                                  _vm.searchStudentModal = true\n                                },\n                              },\n                            },\n                            [\n                              _c(\"i\", { staticClass: \"fas fa-search\" }),\n                              _vm._v(\n                                \" \" +\n                                  _vm._s(_vm.trans(\"student.search_student\"))\n                              ),\n                            ]\n                          ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"row\" },\n            [\n              _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"student.date_of_registration\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"datepicker\", {\n                      attrs: {\n                        bootstrapStyling: true,\n                        placeholder: _vm.trans(\"student.date_of_registration\"),\n                      },\n                      on: {\n                        selected: function ($event) {\n                          return _vm.registrationForm.errors.clear(\n                            \"date_of_registration\"\n                          )\n                        },\n                      },\n                      model: {\n                        value: _vm.registrationForm.date_of_registration,\n                        callback: function ($$v) {\n                          _vm.$set(\n                            _vm.registrationForm,\n                            \"date_of_registration\",\n                            $$v\n                          )\n                        },\n                        expression: \"registrationForm.date_of_registration\",\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.registrationForm,\n                        \"prop-name\": \"date_of_registration\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"v-select\",\n                      {\n                        attrs: {\n                          label: \"name\",\n                          \"group-values\": \"courses\",\n                          \"group-label\": \"course_group\",\n                          \"group-select\": false,\n                          name: \"course_id\",\n                          id: \"course_id\",\n                          options: _vm.courses,\n                          placeholder: _vm.trans(\"academic.select_course\"),\n                        },\n                        on: {\n                          select: _vm.onCourseSelect,\n                          close: function ($event) {\n                            return _vm.registrationForm.errors.clear(\n                              \"course_id\"\n                            )\n                          },\n                          remove: function ($event) {\n                            _vm.registrationForm.course_id = \"\"\n                          },\n                        },\n                        model: {\n                          value: _vm.selected_course,\n                          callback: function ($$v) {\n                            _vm.selected_course = $$v\n                          },\n                          expression: \"selected_course\",\n                        },\n                      },\n                      [\n                        !_vm.courses.length\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"multiselect__option\",\n                                attrs: { slot: \"afterList\" },\n                                slot: \"afterList\",\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            \" +\n                                    _vm._s(\n                                      _vm.trans(\"general.no_option_found\")\n                                    ) +\n                                    \"\\n                        \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _vm.registrationForm.course_id &&\n                    _vm.enable_registration_fee &&\n                    _vm.registration_fee >= 0\n                      ? _c(\"span\", { staticClass: \"help-block\" }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"student.registration_fee\")) +\n                              \" \" +\n                              _vm._s(_vm.formatCurrency(_vm.registration_fee))\n                          ),\n                        ])\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.registrationForm,\n                        \"prop-name\": \"course_id\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _vm.registrationForm.student_type == \"new\"\n                ? [\n                    _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"student.name\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"row\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"col-12 col-sm-4\" },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.first_name,\n                                    expression: \"registrationForm.first_name\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"first_name\",\n                                  placeholder: _vm.trans(\"student.first_name\"),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.first_name,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"first_name\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"first_name\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"div\",\n                            { staticClass: \"col-12 col-sm-4\" },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.middle_name,\n                                    expression: \"registrationForm.middle_name\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"middle_name\",\n                                  placeholder: _vm.trans(\"student.middle_name\"),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.middle_name,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"middle_name\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"middle_name\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"div\",\n                            { staticClass: \"col-12 col-sm-4\" },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.last_name,\n                                    expression: \"registrationForm.last_name\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"last_name\",\n                                  placeholder: _vm.trans(\"student.last_name\"),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.last_name,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"last_name\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"last_name\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"student.gender\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"div\",\n                            { staticClass: \"radio radio-info p-l-0\" },\n                            _vm._l(_vm.genders, function (gender) {\n                              return _c(\n                                \"div\",\n                                { staticClass: \"form-check form-check-inline\" },\n                                [\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value: _vm.registrationForm.gender,\n                                        expression: \"registrationForm.gender\",\n                                      },\n                                    ],\n                                    staticClass: \"form-check-input\",\n                                    attrs: {\n                                      type: \"radio\",\n                                      id: gender.id,\n                                      name: \"gender\",\n                                    },\n                                    domProps: {\n                                      value: gender.id,\n                                      checked:\n                                        _vm.registrationForm.gender ==\n                                        gender.id,\n                                      checked: _vm._q(\n                                        _vm.registrationForm.gender,\n                                        gender.id\n                                      ),\n                                    },\n                                    on: {\n                                      click: function ($event) {\n                                        return _vm.registrationForm.errors.clear(\n                                          \"gender\"\n                                        )\n                                      },\n                                      change: function ($event) {\n                                        return _vm.$set(\n                                          _vm.registrationForm,\n                                          \"gender\",\n                                          gender.id\n                                        )\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"label\",\n                                    {\n                                      staticClass: \"form-check-label\",\n                                      attrs: { for: gender.id },\n                                    },\n                                    [\n                                      _vm._v(\n                                        _vm._s(_vm.trans(\"list.\" + gender.id))\n                                      ),\n                                    ]\n                                  ),\n                                ]\n                              )\n                            }),\n                            0\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.registrationForm,\n                              \"prop-name\": \"gender\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"student.date_of_birth\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"datepicker\", {\n                            attrs: {\n                              bootstrapStyling: true,\n                              placeholder: _vm.trans(\"student.date_of_birth\"),\n                            },\n                            on: {\n                              selected: function ($event) {\n                                return _vm.registrationForm.errors.clear(\n                                  \"date_of_birth\"\n                                )\n                              },\n                            },\n                            model: {\n                              value: _vm.registrationForm.date_of_birth,\n                              callback: function ($$v) {\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"date_of_birth\",\n                                  $$v\n                                )\n                              },\n                              expression: \"registrationForm.date_of_birth\",\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.registrationForm,\n                              \"prop-name\": \"date_of_birth\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"student.contact_number\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.registrationForm.contact_number,\n                                expression: \"registrationForm.contact_number\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: \"contact_number\",\n                              placeholder: _vm.trans(\"student.contact_number\"),\n                            },\n                            domProps: {\n                              value: _vm.registrationForm.contact_number,\n                            },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"contact_number\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.registrationForm,\n                              \"prop-name\": \"contact_number\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                  ]\n                : _vm._e(),\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\"hr\"),\n          _vm._v(\" \"),\n          _vm.registrationForm.student_type == \"new\"\n            ? _c(\n                \"div\",\n                { staticClass: \"row m-t-20\" },\n                [\n                  _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group\" }, [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.parent_type\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"radio radio-info p-l-0\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-check form-check-inline\" },\n                          [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.registrationForm.parent_type,\n                                  expression: \"registrationForm.parent_type\",\n                                },\n                              ],\n                              staticClass: \"form-check-input\",\n                              attrs: {\n                                type: \"radio\",\n                                value: \"new\",\n                                id: \"parent_type_new\",\n                                name: \"parent_type\",\n                              },\n                              domProps: {\n                                checked:\n                                  _vm.registrationForm.parent_type == \"new\",\n                                checked: _vm._q(\n                                  _vm.registrationForm.parent_type,\n                                  \"new\"\n                                ),\n                              },\n                              on: {\n                                click: function ($event) {\n                                  return _vm.registrationForm.errors.clear(\n                                    \"parent_type\"\n                                  )\n                                },\n                                change: function ($event) {\n                                  return _vm.$set(\n                                    _vm.registrationForm,\n                                    \"parent_type\",\n                                    \"new\"\n                                  )\n                                },\n                              },\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"form-check-label\",\n                                attrs: { for: \"parent_type_new\" },\n                              },\n                              [\n                                _vm._v(\n                                  \" \" + _vm._s(_vm.trans(\"student.new_parent\"))\n                                ),\n                              ]\n                            ),\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-check form-check-inline\" },\n                          [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.registrationForm.parent_type,\n                                  expression: \"registrationForm.parent_type\",\n                                },\n                              ],\n                              staticClass: \"form-check-input\",\n                              attrs: {\n                                type: \"radio\",\n                                value: \"existing\",\n                                id: \"parent_type_existing\",\n                                name: \"parent_type\",\n                              },\n                              domProps: {\n                                checked:\n                                  _vm.registrationForm.parent_type ==\n                                  \"existing\",\n                                checked: _vm._q(\n                                  _vm.registrationForm.parent_type,\n                                  \"existing\"\n                                ),\n                              },\n                              on: {\n                                click: function ($event) {\n                                  return _vm.registrationForm.errors.clear(\n                                    \"parent_type\"\n                                  )\n                                },\n                                change: function ($event) {\n                                  return _vm.$set(\n                                    _vm.registrationForm,\n                                    \"parent_type\",\n                                    \"existing\"\n                                  )\n                                },\n                              },\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"form-check-label\",\n                                attrs: { for: \"parent_type_existing\" },\n                              },\n                              [\n                                _vm._v(\n                                  \" \" +\n                                    _vm._s(_vm.trans(\"student.existing_parent\"))\n                                ),\n                              ]\n                            ),\n                          ]\n                        ),\n                      ]),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _vm.registrationForm.parent_type == \"new\"\n                    ? [\n                        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                          _c(\"div\", { staticClass: \"row\" }, [\n                            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"label\", { attrs: { for: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\"student.first_guardian_name\")\n                                      )\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value:\n                                          _vm.registrationForm\n                                            .first_guardian_name,\n                                        expression:\n                                          \"registrationForm.first_guardian_name\",\n                                      },\n                                    ],\n                                    staticClass: \"form-control\",\n                                    attrs: {\n                                      type: \"text\",\n                                      name: \"first_guardian_name\",\n                                      placeholder: _vm.trans(\n                                        \"student.first_guardian_name\"\n                                      ),\n                                    },\n                                    domProps: {\n                                      value:\n                                        _vm.registrationForm\n                                          .first_guardian_name,\n                                    },\n                                    on: {\n                                      input: function ($event) {\n                                        if ($event.target.composing) return\n                                        _vm.$set(\n                                          _vm.registrationForm,\n                                          \"first_guardian_name\",\n                                          $event.target.value\n                                        )\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.registrationForm,\n                                      \"prop-name\": \"first_guardian_name\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"label\", { attrs: { for: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"general.relation\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"select\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value:\n                                            _vm.registrationForm\n                                              .first_guardian_relation,\n                                          expression:\n                                            \"registrationForm.first_guardian_relation\",\n                                        },\n                                      ],\n                                      staticClass: \"custom-select col-12\",\n                                      attrs: {\n                                        name: \"first_guardian_relation\",\n                                      },\n                                      on: {\n                                        change: [\n                                          function ($event) {\n                                            var $$selectedVal =\n                                              Array.prototype.filter\n                                                .call(\n                                                  $event.target.options,\n                                                  function (o) {\n                                                    return o.selected\n                                                  }\n                                                )\n                                                .map(function (o) {\n                                                  var val =\n                                                    \"_value\" in o\n                                                      ? o._value\n                                                      : o.value\n                                                  return val\n                                                })\n                                            _vm.$set(\n                                              _vm.registrationForm,\n                                              \"first_guardian_relation\",\n                                              $event.target.multiple\n                                                ? $$selectedVal\n                                                : $$selectedVal[0]\n                                            )\n                                          },\n                                          function ($event) {\n                                            return _vm.registrationForm.errors.clear(\n                                              \"first_guardian_relation\"\n                                            )\n                                          },\n                                        ],\n                                      },\n                                    },\n                                    [\n                                      _c(\"option\", { attrs: { value: \"\" } }, [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\"general.select_one\")\n                                          )\n                                        ),\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _vm._l(\n                                        _vm.guardian_relations,\n                                        function (relation) {\n                                          return _c(\n                                            \"option\",\n                                            {\n                                              domProps: { value: relation.id },\n                                            },\n                                            [\n                                              _vm._v(\n                                                \"\\n                                    \" +\n                                                  _vm._s(relation.name) +\n                                                  \"\\n                                  \"\n                                              ),\n                                            ]\n                                          )\n                                        }\n                                      ),\n                                    ],\n                                    2\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.registrationForm,\n                                      \"prop-name\": \"first_guardian_relation\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"row\" }, [\n                            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"label\", { attrs: { for: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\n                                          \"student.second_guardian_name\"\n                                        )\n                                      )\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value:\n                                          _vm.registrationForm\n                                            .second_guardian_name,\n                                        expression:\n                                          \"registrationForm.second_guardian_name\",\n                                      },\n                                    ],\n                                    staticClass: \"form-control\",\n                                    attrs: {\n                                      type: \"text\",\n                                      name: \"second_guardian_name\",\n                                      placeholder: _vm.trans(\n                                        \"student.second_guardian_name\"\n                                      ),\n                                    },\n                                    domProps: {\n                                      value:\n                                        _vm.registrationForm\n                                          .second_guardian_name,\n                                    },\n                                    on: {\n                                      input: function ($event) {\n                                        if ($event.target.composing) return\n                                        _vm.$set(\n                                          _vm.registrationForm,\n                                          \"second_guardian_name\",\n                                          $event.target.value\n                                        )\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.registrationForm,\n                                      \"prop-name\": \"second_guardian_name\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"label\", { attrs: { for: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\n                                          \"student.second_guardian_relation\"\n                                        )\n                                      )\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"select\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value:\n                                            _vm.registrationForm\n                                              .second_guardian_relation,\n                                          expression:\n                                            \"registrationForm.second_guardian_relation\",\n                                        },\n                                      ],\n                                      staticClass: \"custom-select col-12\",\n                                      attrs: {\n                                        name: \"second_guardian_relation\",\n                                      },\n                                      on: {\n                                        change: [\n                                          function ($event) {\n                                            var $$selectedVal =\n                                              Array.prototype.filter\n                                                .call(\n                                                  $event.target.options,\n                                                  function (o) {\n                                                    return o.selected\n                                                  }\n                                                )\n                                                .map(function (o) {\n                                                  var val =\n                                                    \"_value\" in o\n                                                      ? o._value\n                                                      : o.value\n                                                  return val\n                                                })\n                                            _vm.$set(\n                                              _vm.registrationForm,\n                                              \"second_guardian_relation\",\n                                              $event.target.multiple\n                                                ? $$selectedVal\n                                                : $$selectedVal[0]\n                                            )\n                                          },\n                                          function ($event) {\n                                            return _vm.registrationForm.errors.clear(\n                                              \"second_guardian_relation\"\n                                            )\n                                          },\n                                        ],\n                                      },\n                                    },\n                                    [\n                                      _c(\"option\", { attrs: { value: \"\" } }, [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\"general.select_one\")\n                                          )\n                                        ),\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _vm._l(\n                                        _vm.guardian_relations,\n                                        function (relation) {\n                                          return _c(\n                                            \"option\",\n                                            {\n                                              domProps: { value: relation.id },\n                                            },\n                                            [\n                                              _vm._v(\n                                                \"\\n                                    \" +\n                                                  _vm._s(relation.name) +\n                                                  \"\\n                                  \"\n                                              ),\n                                            ]\n                                          )\n                                        }\n                                      ),\n                                    ],\n                                    2\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.registrationForm,\n                                      \"prop-name\": \"second_guardian_relation\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"row\" }, [\n                            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"label\", { attrs: { for: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\n                                          \"student.first_guardian_contact_number\"\n                                        )\n                                      )\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value:\n                                          _vm.registrationForm\n                                            .first_guardian_contact_number_1,\n                                        expression:\n                                          \"registrationForm.first_guardian_contact_number_1\",\n                                      },\n                                    ],\n                                    staticClass: \"form-control\",\n                                    attrs: {\n                                      type: \"text\",\n                                      name: \"first_guardian_contact_number_1\",\n                                      placeholder: _vm.trans(\n                                        \"student.first_guardian_contact_number\"\n                                      ),\n                                    },\n                                    domProps: {\n                                      value:\n                                        _vm.registrationForm\n                                          .first_guardian_contact_number_1,\n                                    },\n                                    on: {\n                                      input: function ($event) {\n                                        if ($event.target.composing) return\n                                        _vm.$set(\n                                          _vm.registrationForm,\n                                          \"first_guardian_contact_number_1\",\n                                          $event.target.value\n                                        )\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.registrationForm,\n                                      \"prop-name\":\n                                        \"first_guardian_contact_number_1\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]),\n                          ]),\n                        ]),\n                      ]\n                    : [\n                        _vm.registrationForm.student_parent_id\n                          ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                              _c(\"div\", { staticClass: \"form-group\" }, [\n                                _vm.registrationForm.student_parent_id\n                                  ? _c(\"div\", [\n                                      _vm._v(\n                                        \"\\n                            \" +\n                                          _vm._s(\n                                            _vm.trans(\n                                              \"student.first_guardian_name\"\n                                            ) +\n                                              \": \" +\n                                              _vm.selected_parent\n                                                .first_guardian_name\n                                          ) +\n                                          \"\\n                            \"\n                                      ),\n                                      _vm.selected_parent\n                                        .first_guardian_relation\n                                        ? _c(\"span\", [\n                                            _vm._v(\n                                              \"(\" +\n                                                _vm._s(\n                                                  _vm.trans(\n                                                    \"list.\" +\n                                                      _vm.selected_parent\n                                                        .first_guardian_relation\n                                                  )\n                                                ) +\n                                                \")\"\n                                            ),\n                                          ])\n                                        : _vm._e(),\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.registrationForm.student_parent_id\n                                  ? _c(\"div\", [\n                                      _vm._v(\n                                        \"\\n                            \" +\n                                          _vm._s(\n                                            _vm.trans(\n                                              \"student.second_guardian_name\"\n                                            ) +\n                                              \": \" +\n                                              _vm.selected_parent\n                                                .second_guardian_name\n                                          ) +\n                                          \"\\n                            \"\n                                      ),\n                                      _vm.selected_parent\n                                        .second_guardian_relation\n                                        ? _c(\"span\", [\n                                            _vm._v(\n                                              \"(\" +\n                                                _vm._s(\n                                                  _vm.trans(\n                                                    \"list.\" +\n                                                      _vm.selected_parent\n                                                        .second_guardian_relation\n                                                  )\n                                                ) +\n                                                \")\"\n                                            ),\n                                          ])\n                                        : _vm._e(),\n                                    ])\n                                  : _vm._e(),\n                              ]),\n                            ])\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-1\" }, [\n                          _c(\"div\", { staticClass: \"form-group\" }, [\n                            _vm.registrationForm.student_parent_id\n                              ? _c(\n                                  \"button\",\n                                  {\n                                    staticClass: \"m-t-20 btn btn-sm btn-danger\",\n                                    attrs: { type: \"button\" },\n                                    on: { click: _vm.removeParentId },\n                                  },\n                                  [\n                                    _c(\"i\", {\n                                      staticClass: \"fas fa-times-circle\",\n                                    }),\n                                    _vm._v(\n                                      \" \" +\n                                        _vm._s(\n                                          _vm.trans(\"student.remove_parent\")\n                                        ) +\n                                        \"\\n                        \"\n                                    ),\n                                  ]\n                                )\n                              : _c(\n                                  \"button\",\n                                  {\n                                    staticClass: \"m-t-20 btn btn-sm btn-info\",\n                                    attrs: { type: \"button\" },\n                                    on: {\n                                      click: function ($event) {\n                                        _vm.searchParentModal = true\n                                      },\n                                    },\n                                  },\n                                  [\n                                    _c(\"i\", { staticClass: \"fas fa-search\" }),\n                                    _vm._v(\n                                      \" \" +\n                                        _vm._s(\n                                          _vm.trans(\"student.search_parent\")\n                                        )\n                                    ),\n                                  ]\n                                ),\n                          ]),\n                        ]),\n                      ],\n                ],\n                2\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"student.previous_institute\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"previous_institute_id\",\n                        id: \"previous_institute_id\",\n                        options: _vm.previous_institutes,\n                        placeholder: _vm.trans(\"academic.select_institute\"),\n                      },\n                      on: {\n                        select: _vm.onPreviousInstituteSelect,\n                        close: function ($event) {\n                          return _vm.registrationForm.errors.clear(\n                            \"previous_institute_id\"\n                          )\n                        },\n                        remove: function ($event) {\n                          _vm.registrationForm.previous_institute_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_previous_institute,\n                        callback: function ($$v) {\n                          _vm.selected_previous_institute = $$v\n                        },\n                        expression: \"selected_previous_institute\",\n                      },\n                    },\n                    [\n                      !_vm.previous_institutes.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                            \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                        \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.registrationForm,\n                      \"prop-name\": \"registration_remarks\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-8\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"student.registration_remarks\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"autosize-textarea\", {\n                    attrs: {\n                      rows: \"1\",\n                      name: \"registration_remarks\",\n                      placeholder: _vm.trans(\"student.registration_remarks\"),\n                    },\n                    model: {\n                      value: _vm.registrationForm.registration_remarks,\n                      callback: function ($$v) {\n                        _vm.$set(\n                          _vm.registrationForm,\n                          \"registration_remarks\",\n                          $$v\n                        )\n                      },\n                      expression: \"registrationForm.registration_remarks\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.registrationForm,\n                      \"prop-name\": \"registration_remarks\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"custom-field\", {\n            attrs: {\n              fields: _vm.custom_fields,\n              customValues: _vm.custom_values,\n              clear: _vm.clearCustomField,\n              formErrors: _vm.customFieldFormErrors,\n            },\n            on: { updateCustomValues: _vm.updateCustomValues },\n          }),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { type: \"button\" },\n                on: {\n                  click: function ($event) {\n                    return _vm.$emit(\"cancel\")\n                  },\n                },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.searchParentModal\n        ? _c(\"search-parent\", {\n            on: {\n              completed: _vm.updateParentId,\n              close: function ($event) {\n                _vm.searchParentModal = false\n              },\n            },\n          })\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.searchStudentModal\n        ? _c(\"search-student\", {\n            on: {\n              completed: _vm.updateStudentId,\n              close: function ($event) {\n                _vm.searchStudentModal = false\n              },\n            },\n          })\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"student.registration\")) +\n                  \" (\" +\n                  _vm._s(_vm.getSession) +\n                  \")\\n                    \"\n              ),\n              _vm.registrations.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.registrations.total,\n                            from: _vm.registrations.from,\n                            to: _vm.registrations.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _c(\n                  \"button\",\n                  {\n                    directives: [\n                      {\n                        name: \"tooltip\",\n                        rawName: \"v-tooltip\",\n                        value: _vm.trans(\"general.card_view\"),\n                        expression: \"trans('general.card_view')\",\n                      },\n                    ],\n                    staticClass: \"btn btn-info btn-sm\",\n                    on: {\n                      click: function ($event) {\n                        return _vm.$router.push(\n                          \"/student/registration/card-view\"\n                        )\n                      },\n                    },\n                  },\n                  [\n                    _c(\"i\", { staticClass: \"fas fa-th\" }),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.card_view\"))),\n                    ]),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _vm.registrations.total &&\n                !_vm.showCreatePanel &&\n                _vm.hasPermission(\"new-registration\")\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"general.add_new\"),\n                            expression: \"trans('general.add_new')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showCreatePanel = !_vm.showCreatePanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"student.add_new_registration\"))\n                          ),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"student-registration\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  \"group-values\": \"courses\",\n                                  \"group-label\": \"course_group\",\n                                  \"group-select\": false,\n                                  name: \"course_id\",\n                                  id: \"course_id\",\n                                  options: _vm.courses,\n                                  placeholder: _vm.trans(\n                                    \"academic.select_course\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_courses,\n                                },\n                                on: {\n                                  select: _vm.onCourseSelect,\n                                  remove: _vm.onCourseRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_courses,\n                                  callback: function ($$v) {\n                                    _vm.selected_courses = $$v\n                                  },\n                                  expression: \"selected_courses\",\n                                },\n                              },\n                              [\n                                !_vm.courses.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"student.previous_institute\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"previous_institute_id\",\n                                  id: \"previous_institute_id\",\n                                  options: _vm.previous_institutes,\n                                  placeholder: _vm.trans(\n                                    \"academic.select_institute\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_institutes,\n                                },\n                                on: {\n                                  select: _vm.onPreviousInstituteSelect,\n                                  remove: _vm.onPreviousInstituteRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_institutes,\n                                  callback: function ($$v) {\n                                    _vm.selected_institutes = $$v\n                                  },\n                                  expression: \"selected_institutes\",\n                                },\n                              },\n                              [\n                                !_vm.previous_institutes.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"student.registration_status\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.filter.status,\n                                  expression: \"filter.status\",\n                                },\n                              ],\n                              staticClass: \"custom-select col-12\",\n                              on: {\n                                change: function ($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function (o) {\n                                      return o.selected\n                                    })\n                                    .map(function (o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.filter,\n                                    \"status\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _c(\n                                \"option\",\n                                { attrs: { value: \"null\", selected: \"\" } },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"general.select_one\"))\n                                  ),\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.statuses, function (status) {\n                                return _c(\n                                  \"option\",\n                                  { domProps: { value: status.value } },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                    \" +\n                                        _vm._s(status.text) +\n                                        \"\\n                                  \"\n                                    ),\n                                  ]\n                                )\n                              }),\n                            ],\n                            2\n                          ),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"student.registration_type\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.filter.registration_type,\n                                  expression: \"filter.registration_type\",\n                                },\n                              ],\n                              staticClass: \"custom-select col-12\",\n                              on: {\n                                change: function ($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function (o) {\n                                      return o.selected\n                                    })\n                                    .map(function (o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.filter,\n                                    \"registration_type\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _c(\n                                \"option\",\n                                { attrs: { value: \"null\", selected: \"\" } },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"general.select_one\"))\n                                  ),\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _vm._l(\n                                _vm.registration_types,\n                                function (registration_type) {\n                                  return _c(\n                                    \"option\",\n                                    {\n                                      domProps: {\n                                        value: registration_type.value,\n                                      },\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                                    \" +\n                                          _vm._s(registration_type.text) +\n                                          \"\\n                                  \"\n                                      ),\n                                    ]\n                                  )\n                                }\n                              ),\n                            ],\n                            2\n                          ),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-sm-6\" },\n                        [\n                          _c(\"date-range-picker\", {\n                            attrs: {\n                              \"start-date\":\n                                _vm.filter.date_of_registration_start_date,\n                              \"end-date\":\n                                _vm.filter.date_of_registration_end_date,\n                              label: _vm.trans(\n                                \"transport.date_of_registration_between\"\n                              ),\n                            },\n                            on: {\n                              \"update:startDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_registration_start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:start-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_registration_start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:endDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_registration_end_date\",\n                                  $event\n                                )\n                              },\n                              \"update:end-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_registration_end_date\",\n                                  $event\n                                )\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getRegistrations },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _vm.hasPermission(\"new-registration\")\n            ? _c(\"transition\", { attrs: { name: \"fade\" } }, [\n                _vm.showCreatePanel\n                  ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"card-body\" },\n                        [\n                          _c(\"h4\", { staticClass: \"card-title\" }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"student.add_new_registration\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"registration-form\", {\n                            on: {\n                              completed: _vm.getRegistrations,\n                              cancel: function ($event) {\n                                _vm.showCreatePanel = !_vm.showCreatePanel\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.hasPermission(\"list-registration\")\n            ? _c(\"div\", { staticClass: \"card\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"card-body\" },\n                  [\n                    _vm.registrations.total\n                      ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                          _c(\"table\", { staticClass: \"table table-sm\" }, [\n                            _c(\"thead\", [\n                              _c(\"tr\", [\n                                _c(\"th\", [\n                                  _vm._v(_vm._s(_vm.trans(\"student.name\"))),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"student.first_guardian_name\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"student.date_of_birth\"))\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"student.contact_number\"))\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", [\n                                  _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"student.registration_status\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"student.date_of_registration\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"student.registration_fee\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", { staticClass: \"table-option\" }, [\n                                  _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                                ]),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"tbody\",\n                              _vm._l(\n                                _vm.registrations.data,\n                                function (registration) {\n                                  return _c(\"tr\", [\n                                    _c(\"td\", [\n                                      _vm._v(\n                                        \"\\n                                    \" +\n                                          _vm._s(\n                                            _vm.getStudentName(\n                                              registration.student\n                                            )\n                                          ) +\n                                          \"\\n                                    \"\n                                      ),\n                                      registration.is_online\n                                        ? _c(\"span\", [\n                                            _c(\n                                              \"span\",\n                                              {\n                                                staticClass: \"label label-info\",\n                                              },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.trans(\n                                                      \"student.online_registration\"\n                                                    )\n                                                  )\n                                                ),\n                                              ]\n                                            ),\n                                          ])\n                                        : _vm._e(),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          registration.student.parent\n                                            ? registration.student.parent\n                                                .first_guardian_name\n                                            : \"\"\n                                        ),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm._f(\"moment\")(\n                                            registration.student.date_of_birth\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          registration.student.contact_number\n                                        ),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          registration.course.name\n                                        ),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"td\",\n                                      _vm._l(\n                                        _vm.getRegistrationStatus(registration),\n                                        function (status) {\n                                          return _c(\n                                            \"span\",\n                                            {\n                                              class: [\n                                                \"label\",\n                                                \"label-\" + status.color,\n                                                \"m-r-5\",\n                                              ],\n                                            },\n                                            [_vm._v(_vm._s(status.label))]\n                                          )\n                                        }\n                                      ),\n                                      0\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm._f(\"moment\")(\n                                            registration.date_of_registration\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", [\n                                      registration.registration_fee\n                                        ? _c(\"span\", [\n                                            _vm._v(\n                                              \"\\n                                        \" +\n                                                _vm._s(\n                                                  _vm.formatCurrency(\n                                                    registration.registration_fee\n                                                  )\n                                                ) +\n                                                \"\\n                                        \"\n                                            ),\n                                            registration.registration_fee_status ==\n                                            \"paid\"\n                                              ? _c(\n                                                  \"span\",\n                                                  {\n                                                    staticClass:\n                                                      \"label label-success\",\n                                                  },\n                                                  [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        _vm.trans(\n                                                          \"student.registration_fee_status_paid\"\n                                                        )\n                                                      )\n                                                    ),\n                                                  ]\n                                                )\n                                              : _c(\n                                                  \"span\",\n                                                  {\n                                                    staticClass:\n                                                      \"label label-danger\",\n                                                  },\n                                                  [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        _vm.trans(\n                                                          \"student.registration_fee_status_unpaid\"\n                                                        )\n                                                      )\n                                                    ),\n                                                  ]\n                                                ),\n                                          ])\n                                        : _c(\"span\", [_vm._v(\"-\")]),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", { staticClass: \"table-option\" }, [\n                                      _c(\n                                        \"div\",\n                                        { staticClass: \"btn-group\" },\n                                        [\n                                          _c(\n                                            \"router-link\",\n                                            {\n                                              directives: [\n                                                {\n                                                  name: \"tooltip\",\n                                                  rawName: \"v-tooltip\",\n                                                  value: _vm.trans(\n                                                    \"student.view_detail\"\n                                                  ),\n                                                  expression:\n                                                    \"trans('student.view_detail')\",\n                                                },\n                                              ],\n                                              staticClass:\n                                                \"btn btn-info btn-sm\",\n                                              attrs: {\n                                                to: `/student/registration/${registration.id}`,\n                                              },\n                                            },\n                                            [\n                                              _c(\"i\", {\n                                                staticClass:\n                                                  \"fas fa-arrow-circle-right\",\n                                              }),\n                                            ]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _vm.hasPermission(\n                                            \"delete-registration\"\n                                          )\n                                            ? _c(\n                                                \"button\",\n                                                {\n                                                  directives: [\n                                                    {\n                                                      name: \"confirm\",\n                                                      rawName: \"v-confirm\",\n                                                      value: {\n                                                        ok: _vm.confirmDelete(\n                                                          registration\n                                                        ),\n                                                      },\n                                                      expression:\n                                                        \"{ok: confirmDelete(registration)}\",\n                                                    },\n                                                    {\n                                                      name: \"tooltip\",\n                                                      rawName: \"v-tooltip\",\n                                                      value: _vm.trans(\n                                                        \"student.delete_registration\"\n                                                      ),\n                                                      expression:\n                                                        \"trans('student.delete_registration')\",\n                                                    },\n                                                  ],\n                                                  key: registration.id,\n                                                  staticClass:\n                                                    \"btn btn-danger btn-sm\",\n                                                },\n                                                [\n                                                  _c(\"i\", {\n                                                    staticClass: \"fas fa-trash\",\n                                                  }),\n                                                ]\n                                              )\n                                            : _vm._e(),\n                                        ],\n                                        1\n                                      ),\n                                    ]),\n                                  ])\n                                }\n                              ),\n                              0\n                            ),\n                          ]),\n                        ])\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    !_vm.registrations.total\n                      ? _c(\n                          \"module-info\",\n                          {\n                            attrs: {\n                              module: \"student\",\n                              title: \"registration_module_title\",\n                              description: \"registration_module_description\",\n                              icon: \"check-circle\",\n                            },\n                          },\n                          [\n                            _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                              !_vm.showCreatePanel\n                                ? _c(\n                                    \"button\",\n                                    {\n                                      staticClass: \"btn btn-info btn-md\",\n                                      on: {\n                                        click: function ($event) {\n                                          _vm.showCreatePanel =\n                                            !_vm.showCreatePanel\n                                        },\n                                      },\n                                    },\n                                    [\n                                      _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                      _vm._v(\n                                        \" \" +\n                                          _vm._s(_vm.trans(\"general.add_new\"))\n                                      ),\n                                    ]\n                                  )\n                                : _vm._e(),\n                            ]),\n                          ]\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\"pagination-record\", {\n                      attrs: {\n                        \"page-length\": _vm.filter.page_length,\n                        records: _vm.registrations,\n                      },\n                      on: {\n                        \"update:pageLength\": function ($event) {\n                          return _vm.$set(_vm.filter, \"page_length\", $event)\n                        },\n                        \"update:page-length\": function ($event) {\n                          return _vm.$set(_vm.filter, \"page_length\", $event)\n                        },\n                        updateRecords: _vm.getRegistrations,\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ])\n            : _vm._e(),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"transition\", { attrs: { name: \"modal\" } }, [\n    _c(\"div\", { staticClass: \"modal-mask\" }, [\n      _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n        _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"modal-header\" },\n            [\n              _vm._t(\"header\", function () {\n                return [\n                  _vm._v(\n                    \"\\n                            \" +\n                      _vm._s(_vm.trans(\"student.search_parent\")) +\n                      \"\\n                            \"\n                  ),\n                  _c(\n                    \"span\",\n                    {\n                      staticClass: \"float-right pointer\",\n                      on: {\n                        click: function ($event) {\n                          return _vm.$emit(\"close\")\n                        },\n                      },\n                    },\n                    [_vm._v(\"x\")]\n                  ),\n                ]\n              }),\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"modal-body m-t-0\" },\n            [\n              _vm._t(\"body\", function () {\n                return [\n                  _c(\"div\", { staticClass: \"card card-form\" }, [\n                    _c(\"div\", { staticClass: \"card-body\" }, [\n                      _c(\"div\", { staticClass: \"row\" }, [\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\"div\", { staticClass: \"form-group\" }, [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\n                                    \"student.parent_search_by_father_mother_name\"\n                                  )\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.searchForm.query,\n                                  expression: \"searchForm.query\",\n                                },\n                              ],\n                              staticClass: \"form-control\",\n                              attrs: {\n                                type: \"text\",\n                                name: \"query\",\n                                placeholder: _vm.trans(\"general.search_query\"),\n                              },\n                              domProps: { value: _vm.searchForm.query },\n                              on: {\n                                input: function ($event) {\n                                  if ($event.target.composing) return\n                                  _vm.$set(\n                                    _vm.searchForm,\n                                    \"query\",\n                                    $event.target.value\n                                  )\n                                },\n                              },\n                            }),\n                          ]),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass:\n                              \"btn btn-info waves-effect waves-light\",\n                            attrs: { type: \"button\" },\n                            on: { click: _vm.search },\n                          },\n                          [_vm._v(_vm._s(_vm.trans(\"general.search\")))]\n                        ),\n                      ]),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _vm.parents.total\n                    ? _c(\n                        \"div\",\n                        {\n                          staticClass: \"search-results m-t-30\",\n                          staticStyle: { \"max-height\": \"100px\" },\n                        },\n                        [\n                          _c(\n                            \"h4\",\n                            {\n                              staticClass:\n                                \"text-themecolor p-b-10 m-b-20 border-bottom\",\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"student.parent_search_result\")\n                                ) + \" \\n                                    \"\n                              ),\n                              _c(\n                                \"span\",\n                                {\n                                  staticClass:\n                                    \"card-subtitle d-none d-sm-inline\",\n                                },\n                                [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"general.total_result_found\", {\n                                        count: _vm.parents.total,\n                                        from: _vm.parents.from,\n                                        to: _vm.parents.to,\n                                      })\n                                    )\n                                  ),\n                                ]\n                              ),\n                            ]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"table-responsive\" }, [\n                            _c(\"table\", { staticClass: \"table table-sm\" }, [\n                              _c(\"thead\", [\n                                _c(\"tr\", [\n                                  _c(\"th\", [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"student.father_name\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"student.mother_name\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", { staticClass: \"table-option\" }, [\n                                    _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                                  ]),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"tbody\",\n                                _vm._l(_vm.parents.data, function (parent) {\n                                  return _c(\"tr\", [\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(parent.father_name),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(parent.mother_name),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", { staticClass: \"table-option\" }, [\n                                      _c(\"div\", { staticClass: \"btn-group\" }, [\n                                        _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"confirm\",\n                                                rawName: \"v-confirm\",\n                                                value: {\n                                                  ok: _vm.confirm(parent),\n                                                },\n                                                expression:\n                                                  \"{ok: confirm(parent)}\",\n                                              },\n                                              {\n                                                name: \"tooltip\",\n                                                rawName: \"v-tooltip\",\n                                                value:\n                                                  _vm.trans(\n                                                    \"student.add_parent\"\n                                                  ),\n                                                expression:\n                                                  \"trans('student.add_parent')\",\n                                              },\n                                            ],\n                                            key: parent.id,\n                                            staticClass: \"btn btn-info btn-sm\",\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-user-plus\",\n                                            }),\n                                          ]\n                                        ),\n                                      ]),\n                                    ]),\n                                  ])\n                                }),\n                                0\n                              ),\n                            ]),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"pagination-record\", {\n                            attrs: {\n                              \"page-length\": _vm.searchForm.page_length,\n                              records: _vm.parents,\n                            },\n                            on: {\n                              \"update:pageLength\": function ($event) {\n                                return _vm.$set(\n                                  _vm.searchForm,\n                                  \"page_length\",\n                                  $event\n                                )\n                              },\n                              \"update:page-length\": function ($event) {\n                                return _vm.$set(\n                                  _vm.searchForm,\n                                  \"page_length\",\n                                  $event\n                                )\n                              },\n                              updateRecords: _vm.search,\n                            },\n                          }),\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"clearfix\" }),\n                ]\n              }),\n            ],\n            2\n          ),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"transition\", { attrs: { name: \"modal\" } }, [\n    _c(\"div\", { staticClass: \"modal-mask\" }, [\n      _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n        _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"modal-header\" },\n            [\n              _vm._t(\"header\", function () {\n                return [\n                  _vm._v(\n                    \"\\n                            \" +\n                      _vm._s(_vm.trans(\"student.search_student\")) +\n                      \"\\n                            \"\n                  ),\n                  _c(\n                    \"span\",\n                    {\n                      staticClass: \"float-right pointer\",\n                      on: {\n                        click: function ($event) {\n                          return _vm.$emit(\"close\")\n                        },\n                      },\n                    },\n                    [_vm._v(\"x\")]\n                  ),\n                ]\n              }),\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"modal-body m-t-0\" },\n            [\n              _vm._t(\"body\", function () {\n                return [\n                  _c(\"div\", { staticClass: \"card card-form\" }, [\n                    _c(\"div\", { staticClass: \"card-body\" }, [\n                      _c(\"div\", { staticClass: \"row\" }, [\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\"div\", { staticClass: \"form-group\" }, [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"student.name\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.searchForm.name,\n                                  expression: \"searchForm.name\",\n                                },\n                              ],\n                              staticClass: \"form-control\",\n                              attrs: {\n                                type: \"text\",\n                                name: \"name\",\n                                placeholder: _vm.trans(\"general.search_query\"),\n                              },\n                              domProps: { value: _vm.searchForm.name },\n                              on: {\n                                input: function ($event) {\n                                  if ($event.target.composing) return\n                                  _vm.$set(\n                                    _vm.searchForm,\n                                    \"name\",\n                                    $event.target.value\n                                  )\n                                },\n                              },\n                            }),\n                          ]),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass:\n                              \"btn btn-info waves-effect waves-light\",\n                            attrs: { type: \"button\" },\n                            on: { click: _vm.search },\n                          },\n                          [_vm._v(_vm._s(_vm.trans(\"general.search\")))]\n                        ),\n                      ]),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _vm.students.total\n                    ? _c(\n                        \"div\",\n                        {\n                          staticClass: \"search-results m-t-30\",\n                          staticStyle: { \"max-height\": \"100px\" },\n                        },\n                        [\n                          _c(\n                            \"h4\",\n                            {\n                              staticClass:\n                                \"text-themecolor p-b-10 m-b-20 border-bottom\",\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"student.student_search_result\")\n                                ) + \" \\n                                    \"\n                              ),\n                              _c(\n                                \"span\",\n                                {\n                                  staticClass:\n                                    \"card-subtitle d-none d-sm-inline\",\n                                },\n                                [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"general.total_result_found\", {\n                                        count: _vm.students.total,\n                                        from: _vm.students.from,\n                                        to: _vm.students.to,\n                                      })\n                                    )\n                                  ),\n                                ]\n                              ),\n                            ]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"table-responsive\" }, [\n                            _c(\"table\", { staticClass: \"table table-sm\" }, [\n                              _c(\"thead\", [\n                                _c(\"tr\", [\n                                  _c(\"th\", [\n                                    _vm._v(_vm._s(_vm.trans(\"student.name\"))),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"student.father_name\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"student.mother_name\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", { staticClass: \"table-option\" }, [\n                                    _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                                  ]),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"tbody\",\n                                _vm._l(_vm.students.data, function (student) {\n                                  return _c(\"tr\", [\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.getStudentName(student)\n                                        ),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student.parent.father_name\n                                        ),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student.parent.mother_name\n                                        ),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", { staticClass: \"table-option\" }, [\n                                      _c(\"div\", { staticClass: \"btn-group\" }, [\n                                        _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"confirm\",\n                                                rawName: \"v-confirm\",\n                                                value: {\n                                                  ok: _vm.confirm(student),\n                                                },\n                                                expression:\n                                                  \"{ok: confirm(student)}\",\n                                              },\n                                              {\n                                                name: \"tooltip\",\n                                                rawName: \"v-tooltip\",\n                                                value: _vm.trans(\n                                                  \"student.add_student\"\n                                                ),\n                                                expression:\n                                                  \"trans('student.add_student')\",\n                                              },\n                                            ],\n                                            key: student.id,\n                                            staticClass: \"btn btn-info btn-sm\",\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-user-plus\",\n                                            }),\n                                          ]\n                                        ),\n                                      ]),\n                                    ]),\n                                  ])\n                                }),\n                                0\n                              ),\n                            ]),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"pagination-record\", {\n                            attrs: {\n                              \"page-length\": _vm.searchForm.page_length,\n                              records: _vm.students,\n                            },\n                            on: {\n                              \"update:pageLength\": function ($event) {\n                                return _vm.$set(\n                                  _vm.searchForm,\n                                  \"page_length\",\n                                  $event\n                                )\n                              },\n                              \"update:page-length\": function ($event) {\n                                return _vm.$set(\n                                  _vm.searchForm,\n                                  \"page_length\",\n                                  $event\n                                )\n                              },\n                              updateRecords: _vm.search,\n                            },\n                          }),\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"clearfix\" }),\n                ]\n              }),\n            ],\n            2\n          ),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.loading-overlay{\\r\\n\\tz-index: 1060;\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./search-parent.vue\"],\"names\":[],\"mappings\":\";AAgHA;CACA,aAAA;AACA\",\"sourcesContent\":[\"<template>\\r\\n    <transition name=\\\"modal\\\">\\r\\n        <div class=\\\"modal-mask\\\">\\r\\n            <div class=\\\"modal-wrapper\\\">\\r\\n                <div class=\\\"modal-container modal-lg\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                        <slot name=\\\"header\\\">\\r\\n                            {{trans('student.search_parent')}}\\r\\n                            <span class=\\\"float-right pointer\\\" @click=\\\"$emit('close')\\\">x</span>\\r\\n                        </slot>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-body m-t-0\\\">\\r\\n                        <slot name=\\\"body\\\">\\r\\n                            <div class=\\\"card card-form\\\">\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-12\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"\\\">{{trans('student.parent_search_by_father_mother_name')}}</label>\\r\\n                                                <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"searchForm.query\\\" name=\\\"query\\\" :placeholder=\\\"trans('general.search_query')\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"card-footer text-right\\\">\\r\\n                                        <button type=\\\"button\\\" @click=\\\"search\\\" class=\\\"btn btn-info waves-effect waves-light\\\">{{trans('general.search')}}</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"search-results m-t-30\\\" style=\\\"max-height: 100px\\\" v-if=\\\"parents.total\\\">\\r\\n                                <h4 class=\\\"text-themecolor p-b-10 m-b-20 border-bottom\\\">{{trans('student.parent_search_result')}} \\r\\n                                    <span class=\\\"card-subtitle d-none d-sm-inline\\\">{{trans('general.total_result_found',{count : parents.total, from: parents.from, to: parents.to})}}</span>\\r\\n                                </h4>\\r\\n                                <div class=\\\"table-responsive\\\">\\r\\n                                    <table class=\\\"table table-sm\\\">\\r\\n                                        <thead>\\r\\n                                            <tr>\\r\\n                                                <th>{{trans('student.father_name')}}</th>\\r\\n                                                <th>{{trans('student.mother_name')}}</th>\\r\\n                                                <th class=\\\"table-option\\\">{{trans('general.action')}}</th>\\r\\n                                            </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                            <tr v-for=\\\"parent in parents.data\\\">\\r\\n                                                <td v-text=\\\"parent.father_name\\\"></td>\\r\\n                                                <td v-text=\\\"parent.mother_name\\\"></td>\\r\\n                                                <td class=\\\"table-option\\\">\\r\\n                                                    <div class=\\\"btn-group\\\">\\r\\n                                                        <button class=\\\"btn btn-info btn-sm\\\" :key=\\\"parent.id\\\" v-confirm=\\\"{ok: confirm(parent)}\\\" v-tooltip=\\\"trans('student.add_parent')\\\"><i class=\\\"fas fa-user-plus\\\"></i></button>\\r\\n                                                    </div>\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n                                        </tbody>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                                <pagination-record :page-length.sync=\\\"searchForm.page_length\\\" :records=\\\"parents\\\" @updateRecords=\\\"search\\\"></pagination-record>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t        <div class=\\\"clearfix\\\"></div>\\r\\n                        </slot>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </transition>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n    export default {\\r\\n        components: {},\\r\\n        props: [],\\r\\n        data() {\\r\\n        \\treturn {\\r\\n        \\t\\tparents: {\\r\\n        \\t\\t\\tdata: [],\\r\\n        \\t\\t\\ttotal: 0\\r\\n        \\t\\t},\\r\\n        \\t\\tsearchForm: {\\r\\n        \\t\\t\\tquery: '',\\r\\n                    page_length: helper.getConfig('page_length')\\r\\n        \\t\\t}\\r\\n        \\t}\\r\\n        },\\r\\n        methods: {\\r\\n            search(page){\\r\\n                let loader = this.$loading.show();\\r\\n                if (typeof page !== 'number') {\\r\\n                    page = 1;\\r\\n                }\\r\\n                let url = helper.getFilterURL(this.searchForm);\\r\\n    \\t\\t\\taxios.get('/api/student/parent/search?page=' + page + url)\\r\\n    \\t\\t\\t\\t.then(response => {\\r\\n    \\t\\t\\t\\t\\tthis.parents = response;\\r\\n                        loader.hide();\\r\\n    \\t\\t\\t\\t})\\r\\n    \\t\\t\\t\\t.catch(error => {\\r\\n                        loader.hide();\\r\\n    \\t\\t\\t\\t\\thelper.showErrorMsg(error);\\r\\n    \\t\\t\\t\\t})\\r\\n            },\\r\\n            confirm(parent){\\r\\n                return dialog => this.addParent(parent);\\r\\n            },\\r\\n            addParent(parent){\\r\\n                let loader = this.$loading.show();\\r\\n                this.$emit('completed',parent);\\r\\n                loader.hide();\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n.loading-overlay{\\r\\n\\tz-index: 1060;\\r\\n}\\r\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.loading-overlay{\\r\\n\\tz-index: 1060;\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/student/registration/search-student.vue\"],\"names\":[],\"mappings\":\";AAqHA;CACA,aAAA;AACA\",\"sourcesContent\":[\"<template>\\r\\n    <transition name=\\\"modal\\\">\\r\\n        <div class=\\\"modal-mask\\\">\\r\\n            <div class=\\\"modal-wrapper\\\">\\r\\n                <div class=\\\"modal-container modal-lg\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                        <slot name=\\\"header\\\">\\r\\n                            {{trans('student.search_student')}}\\r\\n                            <span class=\\\"float-right pointer\\\" @click=\\\"$emit('close')\\\">x</span>\\r\\n                        </slot>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-body m-t-0\\\">\\r\\n                        <slot name=\\\"body\\\">\\r\\n                            <div class=\\\"card card-form\\\">\\r\\n                                <div class=\\\"card-body\\\">\\r\\n                                    <div class=\\\"row\\\">\\r\\n                                        <div class=\\\"col-12\\\">\\r\\n                                            <div class=\\\"form-group\\\">\\r\\n                                                <label for=\\\"\\\">{{trans('student.name')}}</label>\\r\\n                                                <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"searchForm.name\\\" name=\\\"name\\\" :placeholder=\\\"trans('general.search_query')\\\">\\r\\n                                            </div>\\r\\n                                        </div>\\r\\n                                    </div>\\r\\n                                    <div class=\\\"card-footer text-right\\\">\\r\\n                                        <button type=\\\"button\\\" @click=\\\"search\\\" class=\\\"btn btn-info waves-effect waves-light\\\">{{trans('general.search')}}</button>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"search-results m-t-30\\\" style=\\\"max-height: 100px\\\" v-if=\\\"students.total\\\">\\r\\n                                <h4 class=\\\"text-themecolor p-b-10 m-b-20 border-bottom\\\">{{trans('student.student_search_result')}} \\r\\n                                    <span class=\\\"card-subtitle d-none d-sm-inline\\\">{{trans('general.total_result_found',{count : students.total, from: students.from, to: students.to})}}</span>\\r\\n                                </h4>\\r\\n                                <div class=\\\"table-responsive\\\">\\r\\n                                    <table class=\\\"table table-sm\\\">\\r\\n                                        <thead>\\r\\n                                            <tr>\\r\\n                                                <th>{{trans('student.name')}}</th>\\r\\n                                                <th>{{trans('student.father_name')}}</th>\\r\\n                                                <th>{{trans('student.mother_name')}}</th>\\r\\n                                                <th class=\\\"table-option\\\">{{trans('general.action')}}</th>\\r\\n                                            </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                            <tr v-for=\\\"student in students.data\\\">\\r\\n                                                <td v-text=\\\"getStudentName(student)\\\"></td>\\r\\n                                                <td v-text=\\\"student.parent.father_name\\\"></td>\\r\\n                                                <td v-text=\\\"student.parent.mother_name\\\"></td>\\r\\n                                                <td class=\\\"table-option\\\">\\r\\n                                                    <div class=\\\"btn-group\\\">\\r\\n                                                        <button class=\\\"btn btn-info btn-sm\\\" :key=\\\"student.id\\\" v-confirm=\\\"{ok: confirm(student)}\\\" v-tooltip=\\\"trans('student.add_student')\\\"><i class=\\\"fas fa-user-plus\\\"></i></button>\\r\\n                                                    </div>\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n                                        </tbody>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                                <pagination-record :page-length.sync=\\\"searchForm.page_length\\\" :records=\\\"students\\\" @updateRecords=\\\"search\\\"></pagination-record>\\r\\n                            </div>\\r\\n\\t\\t\\t\\t\\t        <div class=\\\"clearfix\\\"></div>\\r\\n                        </slot>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </transition>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n    export default {\\r\\n        components: {},\\r\\n        props: [],\\r\\n        data() {\\r\\n        \\treturn {\\r\\n        \\t\\tstudents: {\\r\\n        \\t\\t\\tdata: [],\\r\\n        \\t\\t\\ttotal: 0\\r\\n        \\t\\t},\\r\\n        \\t\\tsearchForm: {\\r\\n        \\t\\t\\tname: '',\\r\\n                    page_length: helper.getConfig('page_length')\\r\\n        \\t\\t}\\r\\n        \\t}\\r\\n        },\\r\\n        methods: {\\r\\n            getStudentName(student){\\r\\n                return helper.getStudentName(student);\\r\\n            },\\r\\n            search(page){\\r\\n                let loader = this.$loading.show();\\r\\n                if (typeof page !== 'number') {\\r\\n                    page = 1;\\r\\n                }\\r\\n                let url = helper.getFilterURL(this.searchForm);\\r\\n    \\t\\t\\taxios.get('/api/student/search/registration?page=' + page + url)\\r\\n    \\t\\t\\t\\t.then(response => {\\r\\n    \\t\\t\\t\\t\\tthis.students = response;\\r\\n                        loader.hide();\\r\\n    \\t\\t\\t\\t})\\r\\n    \\t\\t\\t\\t.catch(error => {\\r\\n                        loader.hide();\\r\\n    \\t\\t\\t\\t\\thelper.showErrorMsg(error);\\r\\n    \\t\\t\\t\\t})\\r\\n            },\\r\\n            confirm(student){\\r\\n                return dialog => this.addStudent(student);\\r\\n            },\\r\\n            addStudent(student){\\r\\n                let loader = this.$loading.show();\\r\\n                this.$emit('completed',student);\\r\\n                loader.hide();\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n.loading-overlay{\\r\\n\\tz-index: 1060;\\r\\n}\\r\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".contact-info-box .comma:before {\\n  content: \\\", \\\";\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/pages/themes/default/online-registration.vue\"],\"names\":[],\"mappings\":\"AAEE;EACE,aAAA;AADJ\",\"sourcesContent\":[\"\\r\\n.contact-info-box {\\r\\n  .comma:before {\\r\\n    content: \\\", \\\"\\r\\n  }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".purchase-message {\\n  padding: 120px 0px;\\n  max-width: 780px;\\n  margin: 0 auto;\\n}\\n.purchase-success .icon {\\n  display: block;\\n  margin-bottom: 20px;\\n}\\n.text-success {\\n  color: #28a745 !important;\\n}\\n.purchase-success .icon i {\\n  font-size: 60px;\\n}\\n.far {\\n  font-weight: 400;\\n}\\n.purchase-success h2 {\\n  margin-bottom: 15px;\\n  text-transform: uppercase;\\n}\\n.purchase-success h2 {\\n  color: #0F172B;\\n  font-size: 36px;\\n}\\n.purchase-success p {\\n  line-height: 26px;\\n}\\n.contact-info-box .comma:before {\\n  content: \\\", \\\";\\n}\\n#progressbar {\\n  margin-bottom: 30px;\\n  overflow: hidden;\\n  color: lightgrey;\\n}\\n#progressbar .active {\\n  color: #673AB7;\\n}\\n#progressbar li {\\n  list-style-type: none;\\n  font-size: 15px;\\n  width: 25%;\\n  float: left;\\n  position: relative;\\n  font-weight: 400;\\n}\\n#progressbar #account:before {\\n  font-family: FontAwesome;\\n  content: \\\"\\\\f13e\\\";\\n}\\n#progressbar #personal:before {\\n  font-family: FontAwesome;\\n  content: \\\"\\\\f007\\\";\\n}\\n#progressbar #payment:before {\\n  font-family: FontAwesome;\\n  content: \\\"\\\\f030\\\";\\n}\\n#progressbar #confirm:before {\\n  font-family: FontAwesome;\\n  content: \\\"\\\\f00c\\\";\\n}\\n#progressbar li:before {\\n  width: 50px;\\n  height: 50px;\\n  line-height: 45px;\\n  display: block;\\n  font-size: 20px;\\n  color: #ffffff;\\n  background: lightgray;\\n  border-radius: 50%;\\n  margin: 0 auto 10px auto;\\n  padding: 2px;\\n}\\n#progressbar li:after {\\n  content: \\\"\\\";\\n  width: 100%;\\n  height: 2px;\\n  background: lightgray;\\n  position: absolute;\\n  left: 0;\\n  top: 25px;\\n  z-index: -1;\\n}\\n#progressbar li.active:before,\\n#progressbar li.active:after {\\n  background: #673AB7;\\n}\\n.progress {\\n  height: 20px;\\n  margin-top: 1%;\\n}\\n.progress-bar {\\n  background-color: #594281;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/pages/themes/default/online-registration2.vue\"],\"names\":[],\"mappings\":\"AACA;EACI,kBAAA;EACA,gBAAA;EACA,cAAA;AAAJ;AAEA;EACI,cAAA;EACA,mBAAA;AACJ;AACA;EACI,yBAAA;AAEJ;AAAA;EACI,eAAA;AAGJ;AAAA;EACI,gBAAA;AAGJ;AAAA;EACI,mBAAA;EACA,yBAAA;AAGJ;AAAA;EACI,cAAA;EACA,eAAA;AAGJ;AAAA;EACI,iBAAA;AAGJ;AAAE;EACE,aAAA;AAGJ;AAEA;EACI,mBAAA;EACA,gBAAA;EACA,gBAAA;AACJ;AAEA;EACI,cAAA;AACJ;AAEA;EACI,qBAAA;EACA,eAAA;EACA,UAAA;EACA,WAAA;EACA,kBAAA;EACA,gBAAA;AACJ;AAEA;EACI,wBAAA;EACA,gBAAA;AACJ;AAEA;EACI,wBAAA;EACA,gBAAA;AACJ;AAEA;EACI,wBAAA;EACA,gBAAA;AACJ;AAEA;EACI,wBAAA;EACA,gBAAA;AACJ;AAEA;EACI,WAAA;EACA,YAAA;EACA,iBAAA;EACA,cAAA;EACA,eAAA;EACA,cAAA;EACA,qBAAA;EACA,kBAAA;EACA,wBAAA;EACA,YAAA;AACJ;AAEA;EACI,WAAA;EACA,WAAA;EACA,WAAA;EACA,qBAAA;EACA,kBAAA;EACA,OAAA;EACA,SAAA;EACA,WAAA;AACJ;AAEA;;EAEI,mBAAA;AACJ;AAEA;EACI,YAAA;EACA,cAAA;AACJ;AAEA;EACI,yBAAA;AACJ\",\"sourcesContent\":[\"\\r\\n.purchase-message {\\r\\n    padding: 120px 0px;\\r\\n    max-width: 780px;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n.purchase-success .icon {\\r\\n    display: block;\\r\\n    margin-bottom: 20px;\\r\\n}\\r\\n.text-success {\\r\\n    color: #28a745!important;\\r\\n}\\r\\n.purchase-success .icon i {\\r\\n    font-size: 60px;\\r\\n}\\r\\n\\r\\n.far {\\r\\n    font-weight: 400;\\r\\n}\\r\\n\\r\\n.purchase-success h2 {\\r\\n    margin-bottom: 15px;\\r\\n    text-transform: uppercase;\\r\\n}\\r\\n\\r\\n.purchase-success h2 {\\r\\n    color: #0F172B;\\r\\n    font-size: 36px;\\r\\n}\\r\\n\\r\\n.purchase-success p {\\r\\n    line-height: 26px;\\r\\n}\\r\\n.contact-info-box {\\r\\n  .comma:before {\\r\\n    content: \\\", \\\"\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n#progressbar {\\r\\n    margin-bottom: 30px;\\r\\n    overflow: hidden;\\r\\n    color: lightgrey\\r\\n}\\r\\n\\r\\n#progressbar .active {\\r\\n    color: #673AB7\\r\\n}\\r\\n\\r\\n#progressbar li {\\r\\n    list-style-type: none;\\r\\n    font-size: 15px;\\r\\n    width: 25%;\\r\\n    float: left;\\r\\n    position: relative;\\r\\n    font-weight: 400\\r\\n}\\r\\n\\r\\n#progressbar #account:before {\\r\\n    font-family: FontAwesome;\\r\\n    content: \\\"\\\\f13e\\\"\\r\\n}\\r\\n\\r\\n#progressbar #personal:before {\\r\\n    font-family: FontAwesome;\\r\\n    content: \\\"\\\\f007\\\"\\r\\n}\\r\\n\\r\\n#progressbar #payment:before {\\r\\n    font-family: FontAwesome;\\r\\n    content: \\\"\\\\f030\\\"\\r\\n}\\r\\n\\r\\n#progressbar #confirm:before {\\r\\n    font-family: FontAwesome;\\r\\n    content: \\\"\\\\f00c\\\"\\r\\n}\\r\\n\\r\\n#progressbar li:before {\\r\\n    width: 50px;\\r\\n    height: 50px;\\r\\n    line-height: 45px;\\r\\n    display: block;\\r\\n    font-size: 20px;\\r\\n    color: #ffffff;\\r\\n    background: lightgray;\\r\\n    border-radius: 50%;\\r\\n    margin: 0 auto 10px auto;\\r\\n    padding: 2px\\r\\n}\\r\\n\\r\\n#progressbar li:after {\\r\\n    content: '';\\r\\n    width: 100%;\\r\\n    height: 2px;\\r\\n    background: lightgray;\\r\\n    position: absolute;\\r\\n    left: 0;\\r\\n    top: 25px;\\r\\n    z-index: -1\\r\\n}\\r\\n\\r\\n#progressbar li.active:before,\\r\\n#progressbar li.active:after {\\r\\n    background: #673AB7\\r\\n}\\r\\n\\r\\n.progress {\\r\\n    height: 20px;\\r\\n    margin-top:1%;\\r\\n}\\r\\n\\r\\n.progress-bar {\\r\\n    background-color: #594281\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-parent.vue?vue&type=style&index=0&id=593f08ac&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-student.vue?vue&type=style&index=0&id=21143a29&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19.use[1]!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19.use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19.use[3]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration.vue?vue&type=style&index=0&id=1df38d0a&lang=scss&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19.use[1]!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19.use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19.use[3]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration2.vue?vue&type=style&index=0&id=bed484d0&lang=scss&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./online-registration.vue?vue&type=template&id=1df38d0a&\"\nimport script from \"./online-registration.vue?vue&type=script&lang=js&\"\nexport * from \"./online-registration.vue?vue&type=script&lang=js&\"\nimport style0 from \"./online-registration.vue?vue&type=style&index=0&id=1df38d0a&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1df38d0a')) {\n      api.createRecord('1df38d0a', component.options)\n    } else {\n      api.reload('1df38d0a', component.options)\n    }\n    module.hot.accept(\"./online-registration.vue?vue&type=template&id=1df38d0a&\", function () {\n      api.rerender('1df38d0a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/pages/themes/default/online-registration.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./online-registration2.vue?vue&type=template&id=bed484d0&\"\nimport script from \"./online-registration2.vue?vue&type=script&lang=js&\"\nexport * from \"./online-registration2.vue?vue&type=script&lang=js&\"\nimport style0 from \"./online-registration2.vue?vue&type=style&index=0&id=bed484d0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('bed484d0')) {\n      api.createRecord('bed484d0', component.options)\n    } else {\n      api.reload('bed484d0', component.options)\n    }\n    module.hot.accept(\"./online-registration2.vue?vue&type=template&id=bed484d0&\", function () {\n      api.rerender('bed484d0', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/pages/themes/default/online-registration2.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=20e92a97&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('20e92a97')) {\n      api.createRecord('20e92a97', component.options)\n    } else {\n      api.reload('20e92a97', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=20e92a97&\", function () {\n      api.rerender('20e92a97', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/registration/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=62dc5c8f&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('62dc5c8f')) {\n      api.createRecord('62dc5c8f', component.options)\n    } else {\n      api.reload('62dc5c8f', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=62dc5c8f&\", function () {\n      api.rerender('62dc5c8f', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/registration/index.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./search-parent.vue?vue&type=template&id=593f08ac&\"\nimport script from \"./search-parent.vue?vue&type=script&lang=js&\"\nexport * from \"./search-parent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./search-parent.vue?vue&type=style&index=0&id=593f08ac&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('593f08ac')) {\n      api.createRecord('593f08ac', component.options)\n    } else {\n      api.reload('593f08ac', component.options)\n    }\n    module.hot.accept(\"./search-parent.vue?vue&type=template&id=593f08ac&\", function () {\n      api.rerender('593f08ac', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/registration/search-parent.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./search-student.vue?vue&type=template&id=21143a29&\"\nimport script from \"./search-student.vue?vue&type=script&lang=js&\"\nexport * from \"./search-student.vue?vue&type=script&lang=js&\"\nimport style0 from \"./search-student.vue?vue&type=style&index=0&id=21143a29&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"C:\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('21143a29')) {\n      api.createRecord('21143a29', component.options)\n    } else {\n      api.reload('21143a29', component.options)\n    }\n    module.hot.accept(\"./search-student.vue?vue&type=template&id=21143a29&\", function () {\n      api.rerender('21143a29', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/registration/search-student.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration2.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration2.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-parent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-parent.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-student.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-student.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration.vue?vue&type=template&id=1df38d0a&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration2.vue?vue&type=template&id=bed484d0&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=20e92a97&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=62dc5c8f&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-parent.vue?vue&type=template&id=593f08ac&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-student.vue?vue&type=template&id=21143a29&\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-parent.vue?vue&type=style&index=0&id=593f08ac&lang=css&\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-student.vue?vue&type=style&index=0&id=21143a29&lang=css&\"","export * from \"-!../../../../../../node_modules/style-loader/dist/cjs.js!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19.use[1]!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19.use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19.use[3]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration.vue?vue&type=style&index=0&id=1df38d0a&lang=scss&\"","export * from \"-!../../../../../../node_modules/style-loader/dist/cjs.js!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19.use[1]!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19.use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19.use[3]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration2.vue?vue&type=style&index=0&id=bed484d0&lang=scss&\""],"names":[],"sourceRoot":""}