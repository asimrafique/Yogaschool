{"version":3,"file":"js/chunks/js/pages/themes/onlineRegistration.js?id=43e5b2e82b14490c","mappings":";;;;;;;;;;;;;;AAkzrtRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAkBA;AAAA;AAUA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AAAA;AAAA;AAAA;AASA;AAOA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AASA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAMA;AAAA;AAEA;AAEA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAKA;AAKA;AACA;AACA;AACA;AACA;AAWA;AACA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAWA;AACA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AAAA;AAAA;AAAA;AASA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAGA;AACA;AACA;AACA;AASA;AAOA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AAAA;AAAA;AAAA;AASA;AAOA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAWA;AAAA;AAIA;AAEA;AAAA;AAAA;AACA;AAiBA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACpgEA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAKA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAaA;AAAA;AAEA;AAAA;AACA;AAAA;AAuBA;AAAA;AACA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAWA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAeA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAkgBA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAYA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AACA;AAGA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAgaA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AAIA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAWA;AAGA;AAAA;AAAA;AACA;AASA;AAOA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAUA;AAAA;AACA;AAAA;AAsEA;AAAA;AACA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAiBA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;ACn/CA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAUA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAYA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAaqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AAAA;AAAA;AAAA;AASA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAWA;AAGA;AACA;AACA;AACA;AASA;AAUA;AAAA;AAGA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAMA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAuDA;AAAA;AAWA;AAgBA;AACA;AAgBA;AACA;AAMA;AACA;AAaA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAOA;AAGA;AAKA;AAGA;AAgCA;AAEA;AAcA;AAEA;AAeA;AAAA;AAGA;AAAA;AAKA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AAUA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AASA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;AC5/BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AAAA;AAIA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAWA;AACA;AAAA;AAAA;AACA;AAKA;AAEA;AAUA;AAEA;AAKA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AAeA;AAAA;AASA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAIA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAMA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AAMA;AAAA;AAEA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;AC1QA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AAAA;AAIA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAWA;AACA;AAAA;AAAA;AACA;AAKA;AAEA;AAUA;AAEA;AAKA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AAmBA;AAAA;AASA;AAEA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAEA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAMA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AAMA;AAAA;AAEA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACnRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACvCA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/pages/themes/default/online-registration.vue","webpack://InstiKit/resources/js/views/student/registration/form.vue","webpack://InstiKit/resources/js/views/student/registration/index.vue","webpack://InstiKit/resources/js/views/student/registration/search-parent.vue","webpack://InstiKit/resources/js/views/student/registration/search-student.vue","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration.vue","webpack://InstiKit/./resources/js/views/student/registration/form.vue","webpack://InstiKit/./resources/js/views/student/registration/index.vue","webpack://InstiKit/./resources/js/views/student/registration/search-parent.vue","webpack://InstiKit/./resources/js/views/student/registration/search-student.vue","webpack://InstiKit/./resources/js/views/student/registration/search-parent.vue?38fb","webpack://InstiKit/./resources/js/views/student/registration/search-student.vue?eece","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration.vue?f63e","webpack://InstiKit/./resources/js/views/student/registration/search-parent.vue?ca1e","webpack://InstiKit/./resources/js/views/student/registration/search-student.vue?088c","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration.vue?6513","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration.vue?e5e5","webpack://InstiKit/./resources/js/views/student/registration/form.vue?6ffe","webpack://InstiKit/./resources/js/views/student/registration/index.vue?0805","webpack://InstiKit/./resources/js/views/student/registration/search-parent.vue?48a9","webpack://InstiKit/./resources/js/views/student/registration/search-student.vue?dd0a","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration.vue?8558","webpack://InstiKit/./resources/js/views/student/registration/form.vue?d44a","webpack://InstiKit/./resources/js/views/student/registration/index.vue?94c6","webpack://InstiKit/./resources/js/views/student/registration/search-parent.vue?8f75","webpack://InstiKit/./resources/js/views/student/registration/search-student.vue?8fc0","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration.vue?5734","webpack://InstiKit/./resources/js/views/student/registration/form.vue?31c9","webpack://InstiKit/./resources/js/views/student/registration/index.vue?74df","webpack://InstiKit/./resources/js/views/student/registration/search-parent.vue?08c3","webpack://InstiKit/./resources/js/views/student/registration/search-student.vue?6c88","webpack://InstiKit/./resources/js/views/student/registration/search-parent.vue?ac7f","webpack://InstiKit/./resources/js/views/student/registration/search-student.vue?86cf","webpack://InstiKit/./resources/js/views/pages/themes/default/online-registration.vue?b7c5"],"sourcesContent":["<template>\n  <div>\n    <div class=\"page-title\">\n      <div class=\"fix-width fix-width-mobile\">\n        <h2>{{ trans('student.online_registration') }}</h2>\n      </div>\n    </div>\n\n    <div class=\"fix-width fix-width-mobile p-3\">\n      <div class=\"page-body\" v-html=\"getConfig('online_registration_header')\"></div>\n    </div>\n\n    <div class=\"fix-width fix-width-mobile\">\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <form @submit.prevent=\"submit\" @keydown=\"registrationForm.errors.clear($event.target.name)\">\n            <h2>{{ trans('student.registration_field_info', {name: trans('academic.course')}) }}</h2>\n            <div class=\"row\">\n              <div class=\"col-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('academic.course') }}</label>\n                  <v-select label=\"name\" v-model=\"selected_course\" group-values=\"courses\" group-label=\"course_group\"\n                            :group-select=\"false\" name=\"course_id\" id=\"course_id\" :options=\"courses\"\n                            :placeholder=\"trans('academic.select_course')\" @select=\"onCourseSelect\"\n                            @close=\"registrationForm.errors.clear('course_id')\"\n                            @remove=\"registrationForm.course_id = ''\">\n                    <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!courses.length\">\n                      {{ trans('general.no_option_found') }}\n                    </div>\n                  </v-select>\n                  <span class=\"help-block\"\n                        v-if=\"registrationForm.course_id && enable_registration_fee && registration_fee >= 0\">{{\n                      trans('student.registration_fee')\n                    }} {{ formatCurrency(registration_fee) }}</span>\n                  <show-error :form-name=\"registrationForm\" prop-name=\"course_id\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">Select Course Location</label>\n                  <select v-model=\"registrationForm.course_location\" class=\"custom-select col-12\" name=\"course_location\"\n                          @change=\"registrationForm.errors.clear('course_location')\">\n                    <option value=\"\">{{ trans('general.select_one') }}</option>\n                    <option v-for=\"course_location in course_locations\" v-bind:value=\"course_location.id\">\n                      {{ course_location.name }}\n                    </option>\n                  </select>\n                  <show-error :form-name=\"registrationForm\" prop-name=\"course_location\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">Accommodation choice</label>\n                  <select v-model=\"registrationForm.accommodation\" class=\"custom-select col-12\" name=\"accommodation\"\n                          @change=\"registrationForm.errors.clear('accommodation')\">\n                    <option value=\"\">{{ trans('general.select_one') }}</option>\n                    <option v-for=\"accommodation in accommodations\" v-bind:value=\"accommodation.id\">\n                      {{ accommodation.name }}\n                    </option>\n                  </select>\n                  <show-error :form-name=\"registrationForm\" prop-name=\"accommodation\"></show-error>\n                </div>\n              </div>\n            </div>\n\n            <h2>About You</h2>\n            <div class=\"row\">\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.first_name') }}</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_name\" name=\"first_name\"\n                         :placeholder=\"trans('student.contact_name')\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"first_name\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.middle_name') }}</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.middle_name\" name=\"middle_name\"\n                         :placeholder=\"trans('student.contact_name')\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"middle_name\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.last_name') }}</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.last_name\" name=\"last_name\"\n                         :placeholder=\"trans('student.contact_name')\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"last_name\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.date_of_birth') }}</label>\n                  <datepicker v-model=\"registrationForm.date_of_birth\" :bootstrapStyling=\"true\"\n                              @selected=\"registrationForm.errors.clear('date_of_birth')\"\n                              :placeholder=\"trans('student.date_of_birth')\"></datepicker>\n                  <show-error :form-name=\"registrationForm\" prop-name=\"date_of_birth\"></show-error>\n                </div>\n              </div>\n\n\n              <div class=\"col-4 col-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">Nationality</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.nationality\"\n                         name=\"nationality\" placeholder=\"Your Nationality\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"nationality\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-4 col-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">Your occupation</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.occupation\"\n                         name=\"occupation\" placeholder=\"Your Occupation\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"occupation\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.gender') }}</label>\n                  <div class=\"radio radio-info p-l-0\">\n                    <div class=\"form-check form-check-inline \" v-for=\"gender in genders\">\n                      <input class=\"form-check-input\" type=\"radio\" :value=\"gender.id\" :id=\"gender.id\"\n                             v-model=\"registrationForm.gender\" :checked=\"registrationForm.gender == gender.id\"\n                             name=\"gender\" @click=\"registrationForm.errors.clear('gender')\">\n                      <label class=\"form-check-label\" :for=\"gender.id\">{{ trans('list.' + gender.id) }}</label>\n                    </div>\n                  </div>\n                  <show-error :form-name=\"registrationForm\" prop-name=\"gender\"></show-error>\n                </div>\n              </div>\n\n            </div>\n\n            <h2>{{ trans('student.registration_field_info', {name: trans('student.guardian')}) }}</h2>\n            <div class=\"row\">\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.first_guardian_name') }}</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_guardian_name\"\n                         name=\"first_guardian_name\" :placeholder=\"trans('student.contact_name')\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"first_guardian_name\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('general.relation') }}</label>\n                  <select v-model=\"registrationForm.first_guardian_relation\" class=\"custom-select col-12\"\n                          name=\"first_guardian_relation\"\n                          @change=\"registrationForm.errors.clear('first_guardian_relation')\">\n                    <option value=\"\">{{ trans('general.select_one') }}</option>\n                    <option v-for=\"relation in guardian_relations\" v-bind:value=\"relation.id\">\n                      {{ relation.name }}\n                    </option>\n                  </select>\n                  <show-error :form-name=\"registrationForm\" prop-name=\"first_guardian_relation\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.first_guardian_email') }}</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_guardian_email\"\n                         name=\"first_guardian_email\" :placeholder=\"trans('student.contact_name')\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"first_guardian_email\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.first_guardian_contact_number') }}</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_guardian_contact_number_1\"\n                         name=\"first_guardian_contact_number_1\" :placeholder=\"trans('student.contact_name')\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"first_guardian_contact_number_1\"></show-error>\n                </div>\n              </div>\n\n\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.second_guardian_name') }}</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.second_guardian_name\"\n                         name=\"second_guardian_name\" :placeholder=\"trans('student.contact_name')\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"second_guardian_name\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.second_guardian_relation') }}</label>\n                  <select v-model=\"registrationForm.second_guardian_relation\" class=\"custom-select col-12\"\n                          name=\"second_guardian_relation\"\n                          @change=\"registrationForm.errors.clear('second_guardian_relation')\">\n                    <option value=\"\">{{ trans('general.select_one') }}</option>\n                    <option v-for=\"relation in guardian_relations\" v-bind:value=\"relation.id\">\n                      {{ relation.name }}\n                    </option>\n                  </select>\n                  <show-error :form-name=\"registrationForm\" prop-name=\"second_guardian_relation\"></show-error>\n                </div>\n              </div>\n            </div>\n\n            <h2>{{ trans('student.registration_field_info', {name: trans('student.contact')}) }}</h2>\n            <div class=\"row\">\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">Email</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.email\"\n                         name=\"email\" placeholder=\"Your Email Address\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"email\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.contact_number') }}</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.contact_number\"\n                         name=\"contact_number\" :placeholder=\"trans('student.contact_number')\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"contact_number\"></show-error>\n                </div>\n              </div>\n\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.address_line_1') }}</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.address_line_1\"\n                         name=\"address_line_1\" :placeholder=\"trans('student.contact_name')\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"address_line_1\"></show-error>\n                </div>\n              </div>\n\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.address_line_2') }}</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.address_line_2\"\n                         name=\"address_line_2\" :placeholder=\"trans('student.contact_name')\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"address_line_2\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.city') }}</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.city\" name=\"city\"\n                         :placeholder=\"trans('student.contact_name')\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"city\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.state') }}</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.state\" name=\"state\"\n                         :placeholder=\"trans('student.contact_name')\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"state\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.zipcode') }}</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.zipcode\" name=\"zipcode\"\n                         :placeholder=\"trans('student.contact_name')\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"zipcode\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">{{ trans('student.country') }}</label>\n                  <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.country\" name=\"country\"\n                         :placeholder=\"trans('student.contact_name')\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"country\"></show-error>\n                </div>\n              </div>\n            </div>\n            <custom-field :fields=\"custom_fields\" :customValues=\"custom_values\" :clear=\"clearCustomField\"\n                          :formErrors=\"customFieldFormErrors\" @updateCustomValues=\"updateCustomValues\"></custom-field>\n\n\n            <h2>Other Details</h2>\n            <div class=\"row\">\n              <div class=\"col-4 \">\n                <label for=\"\">How long have you been practicing Yoga?</label>\n                <select v-model=\"registrationForm.how_long_yoga\"\n                        name=\"how_long_yoga\"\n                        placeholder=\"Select one\"\n                        class=\"custom-select col-12\"\n                        @change=\"registrationForm.errors.clear('how_long_yoga')\">\n                  <option value=\"\">{{ trans('general.select_one') }}</option>\n                  <option v-for=\"how_log_option in how_long_yoga_options\" v-bind:value=\"how_log_option.id\">\n                    {{ how_log_option.name }}\n                  </option>\n\n                </select>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"form-group\">\n\n\n                  <label for=\"\">Do you have any experience teaching yoga?</label>\n                  <select v-model=\"registrationForm.teaching_experience\"\n                          name=\"teaching_experience\"\n                          class=\"custom-select col-12\"\n                          @change=\"registrationForm.errors.clear('teaching_experience')\">\n                    <option value=\"\">{{ trans('general.select_one') }}</option>\n                    <option v-for=\"teaching_experience_option in teaching_experience_options\"\n                            v-bind:value=\"teaching_experience_option.id\">\n                      {{ teaching_experience_option.name }}\n                    </option>\n                  </select>\n                  <show-error :form-name=\"registrationForm\" prop-name=\"teaching_experience\"></show-error>\n                </div>\n              </div>\n              <div class=\" col-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">What is your primary reason to join the course? </label>\n                  <input type=\"text\"\n                         class=\"form-control\"\n                         v-model=\"registrationForm.joining_reason\"\n                         name=\"joining_reason\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"joining_reason\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"form-group \">\n                  <label for=\"\">What is important to you in life?</label>\n                  <input class=\"form-control \" type=\"text\"\n                         name=\"important_to_life\"\n                         v-model=\"registrationForm.important_to_life\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"important_to_life\"></show-error>\n                </div>\n\n              </div>\n              <div class=\"col-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">Why did you choose Arhanta Yoga?</label>\n                  <input type=\"text\" name=\"why_choose_us\" class=\"form-control\" v-model=\"registrationForm.why_choose_us\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"why_choose_us\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-4\">\n                <div class=\"form-group\">\n                  <label for=\"\">How did you hear about us?</label>\n                  <input type=\"text\" class=\"form-control\" name=\"how_hear_about_us\"\n                         v-model=\"registrationForm.how_hear_about_us\">\n                  <show-error :form-name=\"registrationForm\" prop-name=\"how_hear_about_us\"></show-error>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-12\">\n                <div class=\"form-group\">\n                  <label for=\"\">Please mention in case you have any allergies or special dietary needs:</label>\n                  <br>\n                  <input type=\"text\" name=\"allergies_dietary_needs\" v-model=\"registrationForm.allergies_dietary_needs\"\n                         class=\"form-control mt-3\">\n\n                  <show-error :form-name=\"registrationForm\" prop-name=\"allergies_dietary_needs\"></show-error>\n                </div>\n              </div>\n              <div class=\"col-6\">\n                <div class=\"form-group\">\n                  <label for=\"\">Have you in the last 12 months used tobacco, alcohol, recreational drugs, or illicit\n                    substances?(Required)</label>\n                  <select name=\"use_drugs\" v-model=\"registrationForm.use_drugs\" class=\"custom-select col-12 \"\n                          @change=\"registrationForm.errors.clear('use_drugs')\">\n                    <option value=\"\">{{ trans('general.select_one') }}</option>\n                    <option v-for=\"use_drugs_option in use_drugs_options\" v-bind:value=\"use_drugs_option.id\">\n                      {{ use_drugs_option.name }}\n                    </option>\n                  </select>\n\n                  <show-error :form-name=\"registrationForm\" prop-name=\"use_drugs\"></show-error>\n\n                </div>\n              </div>\n              <div class=\"col-6\" >\n                <div class=\"form-group\">\n                  <label for=\"\">Please list substance and frequency of use</label>\n                  <textarea v-model=\"registrationForm.substance_frequency_of_use\" class=\"form-control\" placeholder=\"add multiple lines\"></textarea>\n\n                  <show-error :form-name=\"registrationForm\" prop-name=\"substance_frequency_of_use\"></show-error>\n                  <span class=\"text-xs\">Please note that for any residential courses conducted at the premises of the Arhanta Yoga Ashrams in India and the Netherlands, the use of tobacco, alcohol and any other drugs is strictly prohibited. Please consider carefully before applying that you will be able to discontinue the use of any such substances during the entire duration of your course.</span>\n\n                </div>\n              </div>\n\n\n            </div>\n\n\n\n\n        <div class=\"form-group\">\n          <button type=\"submit\" class=\"btn btn-info btn-lg waves-effect waves-light m-t-10\">\n            {{ trans('general.submit') }}\n          </button>\n        </div>\n        </form>\n\n      </div>\n    </div>\n  </div>\n  </div>\n</template>\n\n<script>\nimport registration from \"../../../student/registration\";\n\nexport default {\n  components: {},\n  data() {\n    return {\n      courses: [],\n      genders: [],\n      course_details: [],\n      registrationForm: new Form({\n        course_id: '',\n        first_name: '',\n        course_location_id: '',\n        middle_name: '',\n        last_name: '',\n        email: '',\n        date_of_birth: '',\n        first_guardian_name: '',\n        first_guardian_relation: '',\n        second_guardian_name: '',\n        second_guardian_relation: '',\n        contact_number: '',\n        first_guardian_contact_number_1: '',\n        first_guardian_email: '',\n        gender: '',\n        address_line_1: '',\n        address_line_2: '',\n        city: '',\n        state: '',\n        zipcode: '',\n        country: '',\n        custom_values: [],\n        course_location: '',\n        accommodation: '',\n        nationality: '',\n        occupation: '',\n        how_long_yoga: '',\n        teaching_experience: '',\n        joining_reason: '',\n        important_to_life: '',\n        why_choose_us: '',\n        how_hear_about_us: '',\n        allergies_dietary_needs: '',\n        use_drugs: '',\n        use_drugs_details: '',\n        substance_frequency_of_use: '',\n      }),\n      selected_course: null,\n      guardian_relations: [],\n      custom_fields: [],\n      custom_values: [],\n      clearCustomField: false,\n      customFieldFormErrors: {},\n      course_locations: [],\n      accommodations: [],\n      how_long_yoga_options: [],\n      teaching_experience_options: [],\n      use_drugs_options: [],\n    }\n  },\n  mounted() {\n    if (!this.getConfig('online_registration')) {\n      this.$router.push('/dashboard');\n    }\n\n    let loader = this.$loading.show();\n    axios.get('/api/frontend/online-registration/pre-requisite')\n        .then(response => {\n          this.genders = response.genders;\n          this.courses = response.courses.courses;\n          this.course_details = response.courses.course_details;\n          this.custom_fields = response.custom_fields;\n          this.guardian_relations = response.guardian_relations;\n          this.accommodations = response.accommodations;\n          this.course_locations = response.course_locations;\n          this.how_long_yoga_options = response.how_long_yoga_options;\n          this.teaching_experience_options = response.teaching_experience_options;\n          this.use_drugs_options = response.use_drugs_options;\n          loader.hide();\n        })\n        .catch(error => {\n          loader.hide();\n          helper.showErrorMsg(error);\n        })\n  },\n  methods: {\n    getConfig(config) {\n      return helper.getConfig(config)\n    },\n    updateCustomValues(value) {\n      this.registrationForm.custom_values = value;\n    },\n    submit() {\n      let loader = this.$loading.show();\n      this.registrationForm.post('/api/frontend/online-registration')\n          .then(response => {\n            toastr.success(response.message);\n            this.selected_course = null;\n            this.clearCustomField = true;\n            loader.hide();\n          })\n          .catch(error => {\n            loader.hide();\n            this.customFieldFormErrors = error;\n            helper.showErrorMsg(error);\n          });\n    },\n    onCourseSelect(selectedOption) {\n      this.registrationForm.course_id = selectedOption.id;\n      let course = this.course_details.find(o => o.course_id == selectedOption.id);\n      this.enable_registration_fee = (course != 'undefined') ? course.enable_registration_fee : 0;\n      this.registration_fee = (this.enable_registration_fee) ? course.registration_fee : 0\n    },\n    formatCurrency(amount) {\n      return helper.formatCurrency(amount);\n    },\n  },\n  filters: {\n    moment(date) {\n      return helper.formatDate(date);\n    },\n    momentDateTime(date) {\n      return helper.formatDateTime(date);\n    },\n    onChangeUseDrugsOptions(selectedOption){\n      this.registration.use_drugs_option=selectedOption.id;\n    }\n  },\n}\n</script>\n\n<style lang=\"scss\">\n.contact-info-box {\n  .comma:before {\n    content: \", \"\n  }\n}\n</style>","<template>\n    <div>\n        <form @submit.prevent=\"submit\" @keydown=\"registrationForm.errors.clear($event.target.name)\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('student.student_type')}}</label>\n                        <div class=\"radio radio-info p-l-0\">\n                            <div class=\"form-check form-check-inline \">\n                                <input class=\"form-check-input\" type=\"radio\" value=\"new\" id=\"student_type_new\" v-model=\"registrationForm.student_type\" :checked=\"registrationForm.student_type == 'new'\" name=\"student_type\" @click=\"registrationForm.errors.clear('student_type')\">\n                                <label class=\"form-check-label\" for=\"student_type_new\"> {{trans('student.new_student')}}</label>\n                            </div>\n                            <div class=\"form-check form-check-inline \">\n                                <input class=\"form-check-input\" type=\"radio\" value=\"existing\" id=\"student_type_existing\" v-model=\"registrationForm.student_type\" :checked=\"registrationForm.student_type == 'existing'\" name=\"student_type\" @click=\"registrationForm.errors.clear('student_type')\">\n                                <label class=\"form-check-label\" for=\"student_type_existing\"> {{trans('student.existing_student')}}</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-6\" v-if=\"registrationForm.student_type != 'new'\">\n                    <div class=\"col-12 col-sm-8\" v-if=\"registrationForm.student_id\">\n                        <div class=\"form-group\">\n                            <div v-if=\"registrationForm.student_id\">{{trans('student.name')+': '+getStudentName(selected_student)}} {{trans('student.first_guardian_name')+': '+selected_student.parent.first_guardian_name}}</div>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-4\">\n                        <div class=\"form-group\">\n                            <button type=\"button\" class=\"m-t-20 btn btn-sm btn-danger\" @click=\"removeStudentId\" v-if=\"registrationForm.student_id\">\n                                <i class=\"fas fa-times-circle\"></i> {{trans('student.remove_student')}}\n                            </button>\n                            <button type=\"button\" class=\"m-t-20 btn btn-sm btn-info\" v-else @click=\"searchStudentModal = true\"><i class=\"fas fa-search\"></i> {{trans('student.search_student')}}</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('student.date_of_registration')}}</label>\n                        <datepicker v-model=\"registrationForm.date_of_registration\" :bootstrapStyling=\"true\" @selected=\"registrationForm.errors.clear('date_of_registration')\" :placeholder=\"trans('student.date_of_registration')\"></datepicker>\n                        <show-error :form-name=\"registrationForm\" prop-name=\"date_of_registration\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('academic.course')}}</label>\n                        <v-select label=\"name\" v-model=\"selected_course\" group-values=\"courses\" group-label=\"course_group\" :group-select=\"false\" name=\"course_id\" id=\"course_id\" :options=\"courses\" :placeholder=\"trans('academic.select_course')\" @select=\"onCourseSelect\" @close=\"registrationForm.errors.clear('course_id')\" @remove=\"registrationForm.course_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!courses.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n                        <span class=\"help-block\" v-if=\"registrationForm.course_id && enable_registration_fee && registration_fee >= 0\">{{trans('student.registration_fee')}} {{formatCurrency(registration_fee)}}</span>\n                        <show-error :form-name=\"registrationForm\" prop-name=\"course_id\"></show-error>\n                    </div>\n                </div>\n                <template v-if=\"registrationForm.student_type == 'new'\">\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('student.name')}}</label>\n                            <div class=\"row\">\n                                <div class=\"col-12 col-sm-4\">\n                                    <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_name\" name=\"first_name\" :placeholder=\"trans('student.first_name')\">\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"first_name\"></show-error>\n                                </div>\n                                <div class=\"col-12 col-sm-4\">\n                                    <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.middle_name\" name=\"middle_name\" :placeholder=\"trans('student.middle_name')\">\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"middle_name\"></show-error>\n                                </div>\n                                <div class=\"col-12 col-sm-4\">\n                                    <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.last_name\" name=\"last_name\" :placeholder=\"trans('student.last_name')\">\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"last_name\"></show-error>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('student.gender')}}</label>\n                            <div class=\"radio radio-info p-l-0\">\n                                <div class=\"form-check form-check-inline \" v-for=\"gender in genders\">\n                                  <input class=\"form-check-input\" type=\"radio\" :value=\"gender.id\" :id=\"gender.id\" v-model=\"registrationForm.gender\" :checked=\"registrationForm.gender == gender.id\" name=\"gender\" @click=\"registrationForm.errors.clear('gender')\">\n                                  <label class=\"form-check-label\" :for=\"gender.id\">{{trans('list.'+gender.id)}}</label>\n                                </div>\n                            </div>\n                            <show-error :form-name=\"registrationForm\" prop-name=\"gender\"></show-error>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-3\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('student.date_of_birth')}}</label>\n                            <datepicker v-model=\"registrationForm.date_of_birth\" :bootstrapStyling=\"true\" @selected=\"registrationForm.errors.clear('date_of_birth')\" :placeholder=\"trans('student.date_of_birth')\"></datepicker>\n                            <show-error :form-name=\"registrationForm\" prop-name=\"date_of_birth\"></show-error>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-3\">\n                        <div class=\"form-group\">\n                            <label for=\"\">{{trans('student.contact_number')}}</label>\n                            <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.contact_number\" name=\"contact_number\" :placeholder=\"trans('student.contact_number')\">\n                            <show-error :form-name=\"registrationForm\" prop-name=\"contact_number\"></show-error>\n                        </div>\n                    </div>\n                </template>\n            </div>\n            <hr />\n            <div class=\"row m-t-20\" v-if=\"registrationForm.student_type == 'new'\">\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('student.parent_type')}}</label>\n                        <div class=\"radio radio-info p-l-0\">\n                            <div class=\"form-check form-check-inline \">\n                                <input class=\"form-check-input\" type=\"radio\" value=\"new\" id=\"parent_type_new\" v-model=\"registrationForm.parent_type\" :checked=\"registrationForm.parent_type == 'new'\" name=\"parent_type\" @click=\"registrationForm.errors.clear('parent_type')\">\n                                <label class=\"form-check-label\" for=\"parent_type_new\"> {{trans('student.new_parent')}}</label>\n                            </div>\n                            <div class=\"form-check form-check-inline \">\n                                <input class=\"form-check-input\" type=\"radio\" value=\"existing\" id=\"parent_type_existing\" v-model=\"registrationForm.parent_type\" :checked=\"registrationForm.parent_type == 'existing'\" name=\"parent_type\" @click=\"registrationForm.errors.clear('parent_type')\">\n                                <label class=\"form-check-label\" for=\"parent_type_existing\"> {{trans('student.existing_parent')}}</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <template v-if=\"registrationForm.parent_type == 'new'\">\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.first_guardian_name')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_guardian_name\" name=\"first_guardian_name\" :placeholder=\"trans('student.first_guardian_name')\">\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"first_guardian_name\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('general.relation')}}</label>\n                                    <select v-model=\"registrationForm.first_guardian_relation\" class=\"custom-select col-12\" name=\"first_guardian_relation\" @change=\"registrationForm.errors.clear('first_guardian_relation')\">\n                                      <option value=\"\">{{trans('general.select_one')}}</option>\n                                      <option v-for=\"relation in guardian_relations\" v-bind:value=\"relation.id\">\n                                        {{ relation.name }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"first_guardian_relation\"></show-error>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.second_guardian_name')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.second_guardian_name\" name=\"second_guardian_name\" :placeholder=\"trans('student.second_guardian_name')\">\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"second_guardian_name\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.second_guardian_relation')}}</label>\n                                    <select v-model=\"registrationForm.second_guardian_relation\" class=\"custom-select col-12\" name=\"second_guardian_relation\" @change=\"registrationForm.errors.clear('second_guardian_relation')\">\n                                      <option value=\"\">{{trans('general.select_one')}}</option>\n                                      <option v-for=\"relation in guardian_relations\" v-bind:value=\"relation.id\">\n                                        {{ relation.name }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"second_guardian_relation\"></show-error>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.first_guardian_contact_number')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"registrationForm.first_guardian_contact_number_1\" name=\"first_guardian_contact_number_1\" :placeholder=\"trans('student.first_guardian_contact_number')\">\n                                    <show-error :form-name=\"registrationForm\" prop-name=\"first_guardian_contact_number_1\"></show-error>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </template>\n                <template v-else>\n                    <div class=\"col-12 col-sm-3\" v-if=\"registrationForm.student_parent_id\">\n                        <div class=\"form-group\">\n                            <div v-if=\"registrationForm.student_parent_id\">\n                                {{trans('student.first_guardian_name')+': '+selected_parent.first_guardian_name}}\n                                <span v-if=\"selected_parent.first_guardian_relation\">({{trans('list.'+selected_parent.first_guardian_relation)}})</span>\n                            </div>\n                            <div v-if=\"registrationForm.student_parent_id\">\n                                {{trans('student.second_guardian_name')+': '+selected_parent.second_guardian_name}}\n                                <span v-if=\"selected_parent.second_guardian_relation\">({{trans('list.'+selected_parent.second_guardian_relation)}})</span>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-1\">\n                        <div class=\"form-group\">\n                            <button type=\"button\" class=\"m-t-20 btn btn-sm btn-danger\" @click=\"removeParentId\" v-if=\"registrationForm.student_parent_id\">\n                                <i class=\"fas fa-times-circle\"></i> {{trans('student.remove_parent')}}\n                            </button>\n                            <button type=\"button\" class=\"m-t-20 btn btn-sm btn-info\" v-else @click=\"searchParentModal = true\"><i class=\"fas fa-search\"></i> {{trans('student.search_parent')}}</button>\n                        </div>\n                    </div>\n                </template>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('student.previous_institute')}}</label>\n                        <v-select label=\"name\" v-model=\"selected_previous_institute\" name=\"previous_institute_id\" id=\"previous_institute_id\" :options=\"previous_institutes\" :placeholder=\"trans('academic.select_institute')\" @select=\"onPreviousInstituteSelect\" @close=\"registrationForm.errors.clear('previous_institute_id')\" @remove=\"registrationForm.previous_institute_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!previous_institutes.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n                        <show-error :form-name=\"registrationForm\" prop-name=\"registration_remarks\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-8\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('student.registration_remarks')}}</label>\n                        <autosize-textarea v-model=\"registrationForm.registration_remarks\" rows=\"1\" name=\"registration_remarks\" :placeholder=\"trans('student.registration_remarks')\"></autosize-textarea>\n                        <show-error :form-name=\"registrationForm\" prop-name=\"registration_remarks\"></show-error>\n                    </div>\n                </div>\n            </div>\n            <custom-field :fields=\"custom_fields\" :customValues=\"custom_values\" :clear=\"clearCustomField\" :formErrors=\"customFieldFormErrors\" @updateCustomValues=\"updateCustomValues\"></custom-field>\n\n            <div class=\"card-footer text-right\">\n                <button type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.save')}}</button>\n            </div>\n        </form>\n\n        <search-parent v-if=\"searchParentModal\" @completed=\"updateParentId\" @close=\"searchParentModal = false\"></search-parent>\n        <search-student v-if=\"searchStudentModal\" @completed=\"updateStudentId\" @close=\"searchStudentModal = false\"></search-student>\n    </div>\n</template>\n\n\n<script>\n    import searchParent from './search-parent'\n    import searchStudent from './search-student'\n\n    export default {\n        components: {searchParent,searchStudent},\n        data() {\n            return {\n                registrationForm: new Form({\n                    first_name: '',\n                    middle_name: '',\n                    last_name: '',\n                    parent_type: 'new',\n                    student_type: 'new',\n                    student_id: '',\n                    student_parent_id: '',\n                    first_guardian_name: '',\n                    first_guardian_relation: '',\n                    second_guardian_name: '',\n                    second_guardian_relation: '',\n                    first_guardian_contact_number_1: '',\n                    date_of_birth: '',\n                    gender: '',\n                    course_id: '',\n                \tcontact_number: '',\n                    date_of_registration: '',\n                    registration_remarks: '',\n                    previous_institute_id: '',\n                    custom_values: [],\n                }),\n                guardian_relations: [],\n                courses: [],\n                course_details: [],\n                previous_institutes: [],\n                selected_previous_institute: null,\n                selected_course: null,\n                genders: [],\n                searchParentModal: false,\n                searchStudentModal: false,\n                registration_fee: 0,\n                enable_registration_fee: 0,\n                selected_parent: {},\n                selected_student: {},\n                custom_fields: [],\n                custom_values: [],\n                clearCustomField: false,\n                customFieldFormErrors: {}\n            };\n        },\n        mounted() {\n            this.getPreRequisite();\n        },\n        methods: {\n            getStudentName(student){\n                return helper.getStudentName(student);\n            },\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/registration/pre-requisite')\n                    .then(response => {\n                        this.courses = response.courses;\n                        this.genders = response.genders;\n                        this.course_details = response.course_details;\n                        this.previous_institutes = response.previous_institutes;\n                        this.custom_fields = response.custom_fields;\n                        this.guardian_relations = response.guardian_relations;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            updateCustomValues(value) {\n                this.registrationForm.custom_values = value;\n            },\n            submit(){\n                let loader = this.$loading.show();\n                this.registrationForm.post('/api/registration')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.$emit('completed')\n                        this.selected_course = null;\n                        this.selected_parent = {};\n                        this.selected_previous_institute = null;\n                        this.registrationForm.parent_type = 'new';\n                        this.registrationForm.student_type = 'new';\n                        this.clearCustomField = true;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        this.customFieldFormErrors = error;\n                        helper.showErrorMsg(error);\n                    });\n            },\n            onCourseSelect(selectedOption){\n                this.registrationForm.course_id = selectedOption.id;\n                let course = this.course_details.find(o => o.course_id == selectedOption.id);\n                this.enable_registration_fee = (course != 'undefined') ? course.enable_registration_fee : 0;\n                this.registration_fee = (this.enable_registration_fee) ? course.registration_fee : 0\n            },\n            onPreviousInstituteSelect(selectedOption){\n                this.registrationForm.previous_institute_id = selectedOption.id;\n            },\n            formatCurrency(amount){\n                return helper.formatCurrency(amount);\n            },\n            updateParentId(val){\n                this.selected_parent = val;\n                this.registrationForm.student_parent_id = val.id;\n                this.searchParentModal = false;\n            },\n            removeParentId(){\n                this.selected_parent = {};\n                this.registrationForm.student_parent_id = '';\n            },\n            updateStudentId(val){\n                this.selected_student = val;\n                this.registrationForm.student_id = val.id;\n                this.searchStudentModal = false;\n            },\n            removeStudentId(){\n                this.selected_student = {};\n                this.registrationForm.student_id = '';\n            }\n        }\n    }\n</script>\n","<template>\n    <div>\n        <div class=\"page-titles\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('student.registration')}} ({{getSession}})\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"registrations.total\">{{trans('general.total_result_found',{count : registrations.total, from: registrations.from, to: registrations.to})}}</span>\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\n                    </h3>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"action-buttons pull-right\">\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/student/registration/card-view')\" v-tooltip=\"trans('general.card_view')\"><i class=\"fas fa-th\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.card_view')}}</span></button>\n                        <button class=\"btn btn-info btn-sm\" v-if=\"registrations.total && !showCreatePanel && hasPermission('new-registration')\" @click=\"showCreatePanel = !showCreatePanel\" v-tooltip=\"trans('general.add_new')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('student.add_new_registration')}}</span></button>\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\n                        <div class=\"btn-group\">\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\n                            </button>\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\n                            </div>\n                        </div>\n                        <help-button @clicked=\"help_topic = 'student-registration'\"></help-button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <transition name=\"fade\">\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{trans('general.filter')}}</h4>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('academic.course')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" group-values=\"courses\" group-label=\"course_group\" :group-select=\"false\" v-model=\"selected_courses\" name=\"course_id\" id=\"course_id\" :options=\"courses\" :placeholder=\"trans('academic.select_course')\" @select=\"onCourseSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onCourseRemove\" :selected=\"selected_courses\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!courses.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.previous_institute')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_institutes\" name=\"previous_institute_id\" id=\"previous_institute_id\" :options=\"previous_institutes\" :placeholder=\"trans('academic.select_institute')\" @select=\"onPreviousInstituteSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onPreviousInstituteRemove\" :selected=\"selected_institutes\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!previous_institutes.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.registration_status')}}</label>\n                                    <select v-model=\"filter.status\" class=\"custom-select col-12\">\n                                      <option value=null selected>{{trans('general.select_one')}}</option>\n                                      <option v-for=\"status in statuses\" v-bind:value=\"status.value\">\n                                        {{ status.text }}\n                                      </option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-2\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.registration_type')}}</label>\n                                    <select v-model=\"filter.registration_type\" class=\"custom-select col-12\">\n                                      <option value=null selected>{{trans('general.select_one')}}</option>\n                                      <option v-for=\"registration_type in registration_types\" v-bind:value=\"registration_type.value\">\n                                        {{ registration_type.text }}\n                                      </option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-6\">\n                                <date-range-picker :start-date.sync=\"filter.date_of_registration_start_date\" :end-date.sync=\"filter.date_of_registration_end_date\" :label=\"trans('transport.date_of_registration_between')\"></date-range-picker>\n                            </div>\n                        </div>\n                        <div class=\"card-footer text-right\">\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getRegistrations\">{{trans('general.filter')}}</button>\n                        </div>\n                    </div>\n                </div>\n            </transition>\n            <transition name=\"fade\" v-if=\"hasPermission('new-registration')\">\n                <div class=\"card card-form\" v-if=\"showCreatePanel\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{trans('student.add_new_registration')}}</h4>\n                        <registration-form @completed=\"getRegistrations\" @cancel=\"showCreatePanel = !showCreatePanel\"></registration-form>\n                    </div>\n                </div>\n            </transition>\n            <div class=\"card\" v-if=\"hasPermission('list-registration')\">\n                <div class=\"card-body\">\n                    <div class=\"table-responsive\" v-if=\"registrations.total\">\n                        <table class=\"table table-sm\">\n                            <thead>\n                                <tr>\n                                    <th>{{trans('student.name')}}</th>\n                                    <th>{{trans('student.first_guardian_name')}}</th>\n                                    <th>{{trans('student.date_of_birth')}}</th>\n                                    <th>{{trans('student.contact_number')}}</th>\n                                    <th>{{trans('academic.course')}}</th>\n                                    <th>{{trans('student.registration_status')}}</th>\n                                    <th>{{trans('student.date_of_registration')}}</th>\n                                    <th>{{trans('student.registration_fee')}}</th>\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"registration in registrations.data\">\n                                    <td>\n                                        {{getStudentName(registration.student)}}\n                                        <span v-if=\"registration.is_online\">\n                                            <span class=\"label label-info\">{{trans('student.online_registration')}}</span>\n                                        </span>\n                                    </td>\n                                    <td v-text=\"registration.student.parent ? registration.student.parent.first_guardian_name : ''\"></td>\n                                    <td>{{registration.student.date_of_birth | moment}}</td>\n                                    <td v-text=\"registration.student.contact_number\"></td>\n                                    <td v-text=\"registration.course.name\"></td>\n                                    <td>\n                                        <span v-for=\"status in getRegistrationStatus(registration)\" :class=\"['label','label-'+status.color,'m-r-5']\">{{status.label}}</span>\n                                    </td>\n                                    <td>{{registration.date_of_registration | moment}}</td>\n                                    <td>\n                                        <span v-if=\"registration.registration_fee\">\n                                            {{formatCurrency(registration.registration_fee)}}\n                                            <span v-if=\"registration.registration_fee_status == 'paid'\" class=\"label label-success\">{{trans('student.registration_fee_status_paid')}}</span>\n                                            <span v-else class=\"label label-danger\">{{trans('student.registration_fee_status_unpaid')}}</span>\n                                        </span>\n                                        <span v-else>-</span>\n                                    </td>\n                                    <td class=\"table-option\">\n                                        <div class=\"btn-group\">\n                                            <router-link :to=\"`/student/registration/${registration.id}`\" class=\"btn btn-info btn-sm\" v-tooltip=\"trans('student.view_detail')\" ><i class=\"fas fa-arrow-circle-right\"></i></router-link>\n                                            <button class=\"btn btn-danger btn-sm\" v-if=\"hasPermission('delete-registration')\" :key=\"registration.id\" v-confirm=\"{ok: confirmDelete(registration)}\" v-tooltip=\"trans('student.delete_registration')\"><i class=\"fas fa-trash\"></i></button>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <module-info v-if=\"!registrations.total\" module=\"student\" title=\"registration_module_title\" description=\"registration_module_description\" icon=\"check-circle\">\n                        <div slot=\"btn\">\n                            <button class=\"btn btn-info btn-md\" v-if=\"!showCreatePanel\" @click=\"showCreatePanel = !showCreatePanel\"><i class=\"fas fa-plus\"></i> {{trans('general.add_new')}}</button>\n                        </div>\n                    </module-info>\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"registrations\" @updateRecords=\"getRegistrations\"></pagination-record>\n                </div>\n            </div>\n        </div>\n        <right-panel :topic=\"help_topic\"></right-panel>\n    </div>\n</template>\n\n<script>\n    import registrationForm from './form'\n\n    export default {\n        components : { registrationForm },\n        data() {\n            return {\n                registrations: {\n                    total: 0,\n                    data: []\n                },\n                filter: {\n                    sort_by : 'created_at',\n                    order: 'desc',\n                    course_id: [],\n                    previous_institute_id: [],\n                    status: null,\n                    registration_type: null,\n                    date_of_registration_start_date: '',\n                    date_of_registration_end_date: '',\n                    page_length: helper.getConfig('page_length')\n                },\n                orderByOptions: [\n                    {\n                        value: 'created_at',\n                        translation: i18n.general.created_at\n                    },\n                    {\n                        value: 'date_of_registration',\n                        translation: i18n.student.date_of_registration\n                    }\n                ],\n                statuses: [\n                    {\n                        text: i18n.student.registration_status_pending,\n                        value: 'pending'\n                    },\n                    {\n                        text: i18n.student.registration_status_rejected,\n                        value: 'rejected'\n                    },\n                    {\n                        text: i18n.student.registration_status_allotted,\n                        value: 'allotted'\n                    }\n                ],\n                courses: [],\n                registration_types: [],\n                selected_courses: null,\n                previous_institutes: [],\n                selected_institutes: null,\n                showCreatePanel: false,\n                showFilterPanel: false,\n                help_topic: ''\n            };\n        },\n        mounted(){\n            if(!helper.hasPermission('list-registration') && !helper.hasPermission('new-registration')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            if (helper.hasPermission('list-registration'))\n                this.getRegistrations();\n            helper.showDemoNotification(['student']);\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            getConfig(config){\n                return helper.getConfig(config);\n            },\n            getRegistrations(page){\n                let loader = this.$loading.show();\n\n                if (typeof page !== 'number') {\n                    page = 1;\n                }\n                this.filter.date_of_registration_start_date = helper.toDate(this.filter.date_of_registration_start_date);\n                this.filter.date_of_registration_end_date = helper.toDate(this.filter.date_of_registration_end_date);\n                let url = helper.getFilterURL(this.filter);\n                axios.get('/api/registration?page=' + page + url)\n                    .then(response => {\n                        this.registrations = response.registrations;\n                        this.courses = response.filters.courses;\n                        this.previous_institutes = response.filters.previous_institutes;\n                        this.registration_types = response.filters.registration_types;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getStudentName(student){\n                return helper.getStudentName(student);\n            },\n            formatCurrency(amount){\n                return helper.formatCurrency(amount);\n            },\n            print(){\n                let loader = this.$loading.show();\n                axios.post('/api/registration/print',{filter: this.filter})\n                    .then(response => {\n                        let print = window.open(\"/print\");\n                        loader.hide();\n                        print.document.write(response);\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            pdf(){\n                let loader = this.$loading.show();\n                axios.post('/api/registration/pdf',{filter: this.filter})\n                    .then(response => {\n                        loader.hide();\n                        window.open('/download/report/'+response+'?token='+this.authToken);\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            onCourseSelect(selectedOption){\n                this.filter.course_id.push(selectedOption.id);\n            },\n            onCourseRemove(removedOption){\n                this.filter.course_id.splice(this.filter.course_id.indexOf(removedOption.id), 1);\n            },\n            onPreviousInstituteSelect(selectedOption){\n                this.filter.previous_institute_id.push(selectedOption.id);\n            },\n            onPreviousInstituteRemove(removedOption){\n                this.filter.previous_institute_id.splice(this.filter.previous_institute_id.indexOf(removedOption.id), 1);\n            },\n            getRegistrationStatus(registration){\n                return helper.getRegistrationStatus(registration);\n            },\n            confirmDelete(registration){\n                return dialog => this.deleteRegistration(registration);\n            },\n            deleteRegistration(registration){\n                let loader = this.$loading.show();\n                axios.delete('/api/registration/'+registration.id)\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.getRegistrations();\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            }\n        },\n        computed:{\n            getSession(){\n                return helper.getDefaultAcademicSession().name;\n            },\n            authToken(){\n                return helper.getAuthToken();\n            }\n        },\n        filters: {\n          moment(date) {\n            return helper.formatDate(date);\n          },\n          momentDateTime(date) {\n            return helper.formatDateTime(date);\n          }\n        },\n        watch: {\n            'filter.sort_by': function(val){\n                this.getRegistrations();\n            },\n            'filter.order': function(val){\n                this.getRegistrations();\n            },\n            'filter.page_length': function(val){\n                this.getRegistrations();\n            }\n        }\n    }\n</script>","<template>\n    <transition name=\"modal\">\n        <div class=\"modal-mask\">\n            <div class=\"modal-wrapper\">\n                <div class=\"modal-container modal-lg\">\n                    <div class=\"modal-header\">\n                        <slot name=\"header\">\n                            {{trans('student.search_parent')}}\n                            <span class=\"float-right pointer\" @click=\"$emit('close')\">x</span>\n                        </slot>\n                    </div>\n                    <div class=\"modal-body m-t-0\">\n                        <slot name=\"body\">\n                            <div class=\"card card-form\">\n                                <div class=\"card-body\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('student.parent_search_by_father_mother_name')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"searchForm.query\" name=\"query\" :placeholder=\"trans('general.search_query')\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"card-footer text-right\">\n                                        <button type=\"button\" @click=\"search\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.search')}}</button>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"search-results m-t-30\" style=\"max-height: 100px\" v-if=\"parents.total\">\n                                <h4 class=\"text-themecolor p-b-10 m-b-20 border-bottom\">{{trans('student.parent_search_result')}} \n                                    <span class=\"card-subtitle d-none d-sm-inline\">{{trans('general.total_result_found',{count : parents.total, from: parents.from, to: parents.to})}}</span>\n                                </h4>\n                                <div class=\"table-responsive\">\n                                    <table class=\"table table-sm\">\n                                        <thead>\n                                            <tr>\n                                                <th>{{trans('student.father_name')}}</th>\n                                                <th>{{trans('student.mother_name')}}</th>\n                                                <th class=\"table-option\">{{trans('general.action')}}</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr v-for=\"parent in parents.data\">\n                                                <td v-text=\"parent.father_name\"></td>\n                                                <td v-text=\"parent.mother_name\"></td>\n                                                <td class=\"table-option\">\n                                                    <div class=\"btn-group\">\n                                                        <button class=\"btn btn-info btn-sm\" :key=\"parent.id\" v-confirm=\"{ok: confirm(parent)}\" v-tooltip=\"trans('student.add_parent')\"><i class=\"fas fa-user-plus\"></i></button>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                                <pagination-record :page-length.sync=\"searchForm.page_length\" :records=\"parents\" @updateRecords=\"search\"></pagination-record>\n                            </div>\n\t\t\t\t\t        <div class=\"clearfix\"></div>\n                        </slot>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </transition>\n</template>\n\n<script>\n    export default {\n        components: {},\n        props: [],\n        data() {\n        \treturn {\n        \t\tparents: {\n        \t\t\tdata: [],\n        \t\t\ttotal: 0\n        \t\t},\n        \t\tsearchForm: {\n        \t\t\tquery: '',\n                    page_length: helper.getConfig('page_length')\n        \t\t}\n        \t}\n        },\n        methods: {\n            search(page){\n                let loader = this.$loading.show();\n                if (typeof page !== 'number') {\n                    page = 1;\n                }\n                let url = helper.getFilterURL(this.searchForm);\n    \t\t\taxios.get('/api/student/parent/search?page=' + page + url)\n    \t\t\t\t.then(response => {\n    \t\t\t\t\tthis.parents = response;\n                        loader.hide();\n    \t\t\t\t})\n    \t\t\t\t.catch(error => {\n                        loader.hide();\n    \t\t\t\t\thelper.showErrorMsg(error);\n    \t\t\t\t})\n            },\n            confirm(parent){\n                return dialog => this.addParent(parent);\n            },\n            addParent(parent){\n                let loader = this.$loading.show();\n                this.$emit('completed',parent);\n                loader.hide();\n            }\n        }\n    }\n</script>\n\n<style>\n.loading-overlay{\n\tz-index: 1060;\n}\n</style>","<template>\n    <transition name=\"modal\">\n        <div class=\"modal-mask\">\n            <div class=\"modal-wrapper\">\n                <div class=\"modal-container modal-lg\">\n                    <div class=\"modal-header\">\n                        <slot name=\"header\">\n                            {{trans('student.search_student')}}\n                            <span class=\"float-right pointer\" @click=\"$emit('close')\">x</span>\n                        </slot>\n                    </div>\n                    <div class=\"modal-body m-t-0\">\n                        <slot name=\"body\">\n                            <div class=\"card card-form\">\n                                <div class=\"card-body\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('student.name')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"searchForm.name\" name=\"name\" :placeholder=\"trans('general.search_query')\">\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"card-footer text-right\">\n                                        <button type=\"button\" @click=\"search\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.search')}}</button>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"search-results m-t-30\" style=\"max-height: 100px\" v-if=\"students.total\">\n                                <h4 class=\"text-themecolor p-b-10 m-b-20 border-bottom\">{{trans('student.student_search_result')}} \n                                    <span class=\"card-subtitle d-none d-sm-inline\">{{trans('general.total_result_found',{count : students.total, from: students.from, to: students.to})}}</span>\n                                </h4>\n                                <div class=\"table-responsive\">\n                                    <table class=\"table table-sm\">\n                                        <thead>\n                                            <tr>\n                                                <th>{{trans('student.name')}}</th>\n                                                <th>{{trans('student.father_name')}}</th>\n                                                <th>{{trans('student.mother_name')}}</th>\n                                                <th class=\"table-option\">{{trans('general.action')}}</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            <tr v-for=\"student in students.data\">\n                                                <td v-text=\"getStudentName(student)\"></td>\n                                                <td v-text=\"student.parent.father_name\"></td>\n                                                <td v-text=\"student.parent.mother_name\"></td>\n                                                <td class=\"table-option\">\n                                                    <div class=\"btn-group\">\n                                                        <button class=\"btn btn-info btn-sm\" :key=\"student.id\" v-confirm=\"{ok: confirm(student)}\" v-tooltip=\"trans('student.add_student')\"><i class=\"fas fa-user-plus\"></i></button>\n                                                    </div>\n                                                </td>\n                                            </tr>\n                                        </tbody>\n                                    </table>\n                                </div>\n                                <pagination-record :page-length.sync=\"searchForm.page_length\" :records=\"students\" @updateRecords=\"search\"></pagination-record>\n                            </div>\n\t\t\t\t\t        <div class=\"clearfix\"></div>\n                        </slot>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </transition>\n</template>\n\n<script>\n    export default {\n        components: {},\n        props: [],\n        data() {\n        \treturn {\n        \t\tstudents: {\n        \t\t\tdata: [],\n        \t\t\ttotal: 0\n        \t\t},\n        \t\tsearchForm: {\n        \t\t\tname: '',\n                    page_length: helper.getConfig('page_length')\n        \t\t}\n        \t}\n        },\n        methods: {\n            getStudentName(student){\n                return helper.getStudentName(student);\n            },\n            search(page){\n                let loader = this.$loading.show();\n                if (typeof page !== 'number') {\n                    page = 1;\n                }\n                let url = helper.getFilterURL(this.searchForm);\n    \t\t\taxios.get('/api/student/search/registration?page=' + page + url)\n    \t\t\t\t.then(response => {\n    \t\t\t\t\tthis.students = response;\n                        loader.hide();\n    \t\t\t\t})\n    \t\t\t\t.catch(error => {\n                        loader.hide();\n    \t\t\t\t\thelper.showErrorMsg(error);\n    \t\t\t\t})\n            },\n            confirm(student){\n                return dialog => this.addStudent(student);\n            },\n            addStudent(student){\n                let loader = this.$loading.show();\n                this.$emit('completed',student);\n                loader.hide();\n            }\n        }\n    }\n</script>\n\n<style>\n.loading-overlay{\n\tz-index: 1060;\n}\n</style>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-title\" }, [\n      _c(\"div\", { staticClass: \"fix-width fix-width-mobile\" }, [\n        _c(\"h2\", [_vm._v(_vm._s(_vm.trans(\"student.online_registration\")))]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"fix-width fix-width-mobile p-3\" }, [\n      _c(\"div\", {\n        staticClass: \"page-body\",\n        domProps: {\n          innerHTML: _vm._s(_vm.getConfig(\"online_registration_header\")),\n        },\n      }),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"fix-width fix-width-mobile\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\n            \"form\",\n            {\n              on: {\n                submit: function ($event) {\n                  $event.preventDefault()\n                  return _vm.submit.apply(null, arguments)\n                },\n                keydown: function ($event) {\n                  return _vm.registrationForm.errors.clear($event.target.name)\n                },\n              },\n            },\n            [\n              _c(\"h2\", [\n                _vm._v(\n                  _vm._s(\n                    _vm.trans(\"student.registration_field_info\", {\n                      name: _vm.trans(\"academic.course\"),\n                    })\n                  )\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-select\",\n                        {\n                          attrs: {\n                            label: \"name\",\n                            \"group-values\": \"courses\",\n                            \"group-label\": \"course_group\",\n                            \"group-select\": false,\n                            name: \"course_id\",\n                            id: \"course_id\",\n                            options: _vm.courses,\n                            placeholder: _vm.trans(\"academic.select_course\"),\n                          },\n                          on: {\n                            select: _vm.onCourseSelect,\n                            close: function ($event) {\n                              return _vm.registrationForm.errors.clear(\n                                \"course_id\"\n                              )\n                            },\n                            remove: function ($event) {\n                              _vm.registrationForm.course_id = \"\"\n                            },\n                          },\n                          model: {\n                            value: _vm.selected_course,\n                            callback: function ($$v) {\n                              _vm.selected_course = $$v\n                            },\n                            expression: \"selected_course\",\n                          },\n                        },\n                        [\n                          !_vm.courses.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  attrs: { slot: \"afterList\" },\n                                  slot: \"afterList\",\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                    \" +\n                                      _vm._s(\n                                        _vm.trans(\"general.no_option_found\")\n                                      ) +\n                                      \"\\n                  \"\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _vm.registrationForm.course_id &&\n                      _vm.enable_registration_fee &&\n                      _vm.registration_fee >= 0\n                        ? _c(\"span\", { staticClass: \"help-block\" }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"student.registration_fee\")) +\n                                \" \" +\n                                _vm._s(_vm.formatCurrency(_vm.registration_fee))\n                            ),\n                          ])\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"course_id\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Select Course Location\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.registrationForm.course_location,\n                              expression: \"registrationForm.course_location\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"course_location\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"course_location\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.registrationForm.errors.clear(\n                                  \"course_location\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(\n                            _vm.course_locations,\n                            function (course_location) {\n                              return _c(\n                                \"option\",\n                                { domProps: { value: course_location.id } },\n                                [\n                                  _vm._v(\n                                    \"\\n                    \" +\n                                      _vm._s(course_location.name) +\n                                      \"\\n                  \"\n                                  ),\n                                ]\n                              )\n                            }\n                          ),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"course_location\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Accommodation choice\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.registrationForm.accommodation,\n                              expression: \"registrationForm.accommodation\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"accommodation\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"accommodation\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.registrationForm.errors.clear(\n                                  \"accommodation\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(_vm.accommodations, function (accommodation) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: accommodation.id } },\n                              [\n                                _vm._v(\n                                  \"\\n                    \" +\n                                    _vm._s(accommodation.name) +\n                                    \"\\n                  \"\n                                ),\n                              ]\n                            )\n                          }),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"accommodation\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"h2\", [_vm._v(\"About You\")]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.first_name\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.first_name,\n                            expression: \"registrationForm.first_name\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"first_name\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.first_name },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"first_name\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"first_name\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.middle_name\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.middle_name,\n                            expression: \"registrationForm.middle_name\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"middle_name\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.middle_name },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"middle_name\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"middle_name\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.last_name\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.last_name,\n                            expression: \"registrationForm.last_name\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"last_name\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.last_name },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"last_name\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"last_name\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.date_of_birth\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          bootstrapStyling: true,\n                          placeholder: _vm.trans(\"student.date_of_birth\"),\n                        },\n                        on: {\n                          selected: function ($event) {\n                            return _vm.registrationForm.errors.clear(\n                              \"date_of_birth\"\n                            )\n                          },\n                        },\n                        model: {\n                          value: _vm.registrationForm.date_of_birth,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.registrationForm, \"date_of_birth\", $$v)\n                          },\n                          expression: \"registrationForm.date_of_birth\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"date_of_birth\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4 col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Nationality\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.nationality,\n                            expression: \"registrationForm.nationality\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"nationality\",\n                          placeholder: \"Your Nationality\",\n                        },\n                        domProps: { value: _vm.registrationForm.nationality },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"nationality\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"nationality\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4 col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Your occupation\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.occupation,\n                            expression: \"registrationForm.occupation\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"occupation\",\n                          placeholder: \"Your Occupation\",\n                        },\n                        domProps: { value: _vm.registrationForm.occupation },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"occupation\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"occupation\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.gender\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"radio radio-info p-l-0\" },\n                        _vm._l(_vm.genders, function (gender) {\n                          return _c(\n                            \"div\",\n                            { staticClass: \"form-check form-check-inline\" },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.gender,\n                                    expression: \"registrationForm.gender\",\n                                  },\n                                ],\n                                staticClass: \"form-check-input\",\n                                attrs: {\n                                  type: \"radio\",\n                                  id: gender.id,\n                                  name: \"gender\",\n                                },\n                                domProps: {\n                                  value: gender.id,\n                                  checked:\n                                    _vm.registrationForm.gender == gender.id,\n                                  checked: _vm._q(\n                                    _vm.registrationForm.gender,\n                                    gender.id\n                                  ),\n                                },\n                                on: {\n                                  click: function ($event) {\n                                    return _vm.registrationForm.errors.clear(\n                                      \"gender\"\n                                    )\n                                  },\n                                  change: function ($event) {\n                                    return _vm.$set(\n                                      _vm.registrationForm,\n                                      \"gender\",\n                                      gender.id\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"label\",\n                                {\n                                  staticClass: \"form-check-label\",\n                                  attrs: { for: gender.id },\n                                },\n                                [_vm._v(_vm._s(_vm.trans(\"list.\" + gender.id)))]\n                              ),\n                            ]\n                          )\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"gender\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"h2\", [\n                _vm._v(\n                  _vm._s(\n                    _vm.trans(\"student.registration_field_info\", {\n                      name: _vm.trans(\"student.guardian\"),\n                    })\n                  )\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"student.first_guardian_name\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.first_guardian_name,\n                            expression: \"registrationForm.first_guardian_name\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"first_guardian_name\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: {\n                          value: _vm.registrationForm.first_guardian_name,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"first_guardian_name\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"first_guardian_name\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"general.relation\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value:\n                                _vm.registrationForm.first_guardian_relation,\n                              expression:\n                                \"registrationForm.first_guardian_relation\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"first_guardian_relation\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"first_guardian_relation\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.registrationForm.errors.clear(\n                                  \"first_guardian_relation\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(_vm.guardian_relations, function (relation) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: relation.id } },\n                              [\n                                _vm._v(\n                                  \"\\n                    \" +\n                                    _vm._s(relation.name) +\n                                    \"\\n                  \"\n                                ),\n                              ]\n                            )\n                          }),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"first_guardian_relation\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"student.first_guardian_email\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.first_guardian_email,\n                            expression: \"registrationForm.first_guardian_email\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"first_guardian_email\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: {\n                          value: _vm.registrationForm.first_guardian_email,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"first_guardian_email\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"first_guardian_email\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"student.first_guardian_contact_number\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value:\n                              _vm.registrationForm\n                                .first_guardian_contact_number_1,\n                            expression:\n                              \"registrationForm.first_guardian_contact_number_1\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"first_guardian_contact_number_1\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: {\n                          value:\n                            _vm.registrationForm\n                              .first_guardian_contact_number_1,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"first_guardian_contact_number_1\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"first_guardian_contact_number_1\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"student.second_guardian_name\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.second_guardian_name,\n                            expression: \"registrationForm.second_guardian_name\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"second_guardian_name\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: {\n                          value: _vm.registrationForm.second_guardian_name,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"second_guardian_name\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"second_guardian_name\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"student.second_guardian_relation\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value:\n                                _vm.registrationForm.second_guardian_relation,\n                              expression:\n                                \"registrationForm.second_guardian_relation\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"second_guardian_relation\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"second_guardian_relation\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.registrationForm.errors.clear(\n                                  \"second_guardian_relation\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(_vm.guardian_relations, function (relation) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: relation.id } },\n                              [\n                                _vm._v(\n                                  \"\\n                    \" +\n                                    _vm._s(relation.name) +\n                                    \"\\n                  \"\n                                ),\n                              ]\n                            )\n                          }),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"second_guardian_relation\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"h2\", [\n                _vm._v(\n                  _vm._s(\n                    _vm.trans(\"student.registration_field_info\", {\n                      name: _vm.trans(\"student.contact\"),\n                    })\n                  )\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [_vm._v(\"Email\")]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.email,\n                            expression: \"registrationForm.email\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"email\",\n                          placeholder: \"Your Email Address\",\n                        },\n                        domProps: { value: _vm.registrationForm.email },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"email\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"email\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.contact_number\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.contact_number,\n                            expression: \"registrationForm.contact_number\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"contact_number\",\n                          placeholder: _vm.trans(\"student.contact_number\"),\n                        },\n                        domProps: {\n                          value: _vm.registrationForm.contact_number,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"contact_number\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"contact_number\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.address_line_1\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.address_line_1,\n                            expression: \"registrationForm.address_line_1\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"address_line_1\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: {\n                          value: _vm.registrationForm.address_line_1,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"address_line_1\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"address_line_1\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.address_line_2\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.address_line_2,\n                            expression: \"registrationForm.address_line_2\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"address_line_2\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: {\n                          value: _vm.registrationForm.address_line_2,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"address_line_2\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"address_line_2\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.city\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.city,\n                            expression: \"registrationForm.city\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"city\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.city },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"city\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"city\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.state\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.state,\n                            expression: \"registrationForm.state\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"state\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.state },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"state\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"state\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.zipcode\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.zipcode,\n                            expression: \"registrationForm.zipcode\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"zipcode\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.zipcode },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"zipcode\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"zipcode\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.country\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.country,\n                            expression: \"registrationForm.country\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"country\",\n                          placeholder: _vm.trans(\"student.contact_name\"),\n                        },\n                        domProps: { value: _vm.registrationForm.country },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"country\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"country\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"custom-field\", {\n                attrs: {\n                  fields: _vm.custom_fields,\n                  customValues: _vm.custom_values,\n                  clear: _vm.clearCustomField,\n                  formErrors: _vm.customFieldFormErrors,\n                },\n                on: { updateCustomValues: _vm.updateCustomValues },\n              }),\n              _vm._v(\" \"),\n              _c(\"h2\", [_vm._v(\"Other Details\")]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\"How long have you been practicing Yoga?\"),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"select\",\n                    {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.registrationForm.how_long_yoga,\n                          expression: \"registrationForm.how_long_yoga\",\n                        },\n                      ],\n                      staticClass: \"custom-select col-12\",\n                      attrs: {\n                        name: \"how_long_yoga\",\n                        placeholder: \"Select one\",\n                      },\n                      on: {\n                        change: [\n                          function ($event) {\n                            var $$selectedVal = Array.prototype.filter\n                              .call($event.target.options, function (o) {\n                                return o.selected\n                              })\n                              .map(function (o) {\n                                var val = \"_value\" in o ? o._value : o.value\n                                return val\n                              })\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"how_long_yoga\",\n                              $event.target.multiple\n                                ? $$selectedVal\n                                : $$selectedVal[0]\n                            )\n                          },\n                          function ($event) {\n                            return _vm.registrationForm.errors.clear(\n                              \"how_long_yoga\"\n                            )\n                          },\n                        ],\n                      },\n                    },\n                    [\n                      _c(\"option\", { attrs: { value: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _vm._l(\n                        _vm.how_long_yoga_options,\n                        function (how_log_option) {\n                          return _c(\n                            \"option\",\n                            { domProps: { value: how_log_option.id } },\n                            [\n                              _vm._v(\n                                \"\\n                  \" +\n                                  _vm._s(how_log_option.name) +\n                                  \"\\n                \"\n                              ),\n                            ]\n                          )\n                        }\n                      ),\n                    ],\n                    2\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Do you have any experience teaching yoga?\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.registrationForm.teaching_experience,\n                              expression:\n                                \"registrationForm.teaching_experience\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"teaching_experience\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"teaching_experience\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.registrationForm.errors.clear(\n                                  \"teaching_experience\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(\n                            _vm.teaching_experience_options,\n                            function (teaching_experience_option) {\n                              return _c(\n                                \"option\",\n                                {\n                                  domProps: {\n                                    value: teaching_experience_option.id,\n                                  },\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                    \" +\n                                      _vm._s(teaching_experience_option.name) +\n                                      \"\\n                  \"\n                                  ),\n                                ]\n                              )\n                            }\n                          ),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"teaching_experience\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          \"What is your primary reason to join the course? \"\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.joining_reason,\n                            expression: \"registrationForm.joining_reason\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: { type: \"text\", name: \"joining_reason\" },\n                        domProps: {\n                          value: _vm.registrationForm.joining_reason,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"joining_reason\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"joining_reason\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"What is important to you in life?\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.important_to_life,\n                            expression: \"registrationForm.important_to_life\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: { type: \"text\", name: \"important_to_life\" },\n                        domProps: {\n                          value: _vm.registrationForm.important_to_life,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"important_to_life\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"important_to_life\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Why did you choose Arhanta Yoga?\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.why_choose_us,\n                            expression: \"registrationForm.why_choose_us\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: { type: \"text\", name: \"why_choose_us\" },\n                        domProps: { value: _vm.registrationForm.why_choose_us },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"why_choose_us\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"why_choose_us\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"How did you hear about us?\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.how_hear_about_us,\n                            expression: \"registrationForm.how_hear_about_us\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: { type: \"text\", name: \"how_hear_about_us\" },\n                        domProps: {\n                          value: _vm.registrationForm.how_hear_about_us,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"how_hear_about_us\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"how_hear_about_us\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          \"Please mention in case you have any allergies or special dietary needs:\"\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"br\"),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.registrationForm.allergies_dietary_needs,\n                            expression:\n                              \"registrationForm.allergies_dietary_needs\",\n                          },\n                        ],\n                        staticClass: \"form-control mt-3\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"allergies_dietary_needs\",\n                        },\n                        domProps: {\n                          value: _vm.registrationForm.allergies_dietary_needs,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"allergies_dietary_needs\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"allergies_dietary_needs\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          \"Have you in the last 12 months used tobacco, alcohol, recreational drugs, or illicit\\n                  substances?(Required)\"\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.registrationForm.use_drugs,\n                              expression: \"registrationForm.use_drugs\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"use_drugs\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"use_drugs\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.registrationForm.errors.clear(\n                                  \"use_drugs\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(\n                            _vm.use_drugs_options,\n                            function (use_drugs_option) {\n                              return _c(\n                                \"option\",\n                                { domProps: { value: use_drugs_option.id } },\n                                [\n                                  _vm._v(\n                                    \"\\n                    \" +\n                                      _vm._s(use_drugs_option.name) +\n                                      \"\\n                  \"\n                                  ),\n                                ]\n                              )\n                            }\n                          ),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"use_drugs\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\"Please list substance and frequency of use\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"textarea\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value:\n                              _vm.registrationForm.substance_frequency_of_use,\n                            expression:\n                              \"registrationForm.substance_frequency_of_use\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: { placeholder: \"add multiple lines\" },\n                        domProps: {\n                          value:\n                            _vm.registrationForm.substance_frequency_of_use,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.registrationForm,\n                              \"substance_frequency_of_use\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.registrationForm,\n                          \"prop-name\": \"substance_frequency_of_use\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"text-xs\" }, [\n                        _vm._v(\n                          \"Please note that for any residential courses conducted at the premises of the Arhanta Yoga Ashrams in India and the Netherlands, the use of tobacco, alcohol and any other drugs is strictly prohibited. Please consider carefully before applying that you will be able to discontinue the use of any such substances during the entire duration of your course.\"\n                        ),\n                      ]),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\n                  \"button\",\n                  {\n                    staticClass:\n                      \"btn btn-info btn-lg waves-effect waves-light m-t-10\",\n                    attrs: { type: \"submit\" },\n                  },\n                  [\n                    _vm._v(\n                      \"\\n          \" +\n                        _vm._s(_vm.trans(\"general.submit\")) +\n                        \"\\n        \"\n                    ),\n                  ]\n                ),\n              ]),\n            ],\n            1\n          ),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function ($event) {\n              $event.preventDefault()\n              return _vm.submit.apply(null, arguments)\n            },\n            keydown: function ($event) {\n              return _vm.registrationForm.errors.clear($event.target.name)\n            },\n          },\n        },\n        [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\"div\", { staticClass: \"form-group\" }, [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"student.student_type\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"radio radio-info p-l-0\" }, [\n                  _c(\"div\", { staticClass: \"form-check form-check-inline\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.registrationForm.student_type,\n                          expression: \"registrationForm.student_type\",\n                        },\n                      ],\n                      staticClass: \"form-check-input\",\n                      attrs: {\n                        type: \"radio\",\n                        value: \"new\",\n                        id: \"student_type_new\",\n                        name: \"student_type\",\n                      },\n                      domProps: {\n                        checked: _vm.registrationForm.student_type == \"new\",\n                        checked: _vm._q(\n                          _vm.registrationForm.student_type,\n                          \"new\"\n                        ),\n                      },\n                      on: {\n                        click: function ($event) {\n                          return _vm.registrationForm.errors.clear(\n                            \"student_type\"\n                          )\n                        },\n                        change: function ($event) {\n                          return _vm.$set(\n                            _vm.registrationForm,\n                            \"student_type\",\n                            \"new\"\n                          )\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"label\",\n                      {\n                        staticClass: \"form-check-label\",\n                        attrs: { for: \"student_type_new\" },\n                      },\n                      [_vm._v(\" \" + _vm._s(_vm.trans(\"student.new_student\")))]\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"form-check form-check-inline\" }, [\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.registrationForm.student_type,\n                          expression: \"registrationForm.student_type\",\n                        },\n                      ],\n                      staticClass: \"form-check-input\",\n                      attrs: {\n                        type: \"radio\",\n                        value: \"existing\",\n                        id: \"student_type_existing\",\n                        name: \"student_type\",\n                      },\n                      domProps: {\n                        checked:\n                          _vm.registrationForm.student_type == \"existing\",\n                        checked: _vm._q(\n                          _vm.registrationForm.student_type,\n                          \"existing\"\n                        ),\n                      },\n                      on: {\n                        click: function ($event) {\n                          return _vm.registrationForm.errors.clear(\n                            \"student_type\"\n                          )\n                        },\n                        change: function ($event) {\n                          return _vm.$set(\n                            _vm.registrationForm,\n                            \"student_type\",\n                            \"existing\"\n                          )\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\n                      \"label\",\n                      {\n                        staticClass: \"form-check-label\",\n                        attrs: { for: \"student_type_existing\" },\n                      },\n                      [\n                        _vm._v(\n                          \" \" + _vm._s(_vm.trans(\"student.existing_student\"))\n                        ),\n                      ]\n                    ),\n                  ]),\n                ]),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _vm.registrationForm.student_type != \"new\"\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                  _vm.registrationForm.student_id\n                    ? _c(\"div\", { staticClass: \"col-12 col-sm-8\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _vm.registrationForm.student_id\n                            ? _c(\"div\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.trans(\"student.name\") +\n                                      \": \" +\n                                      _vm.getStudentName(_vm.selected_student)\n                                  ) +\n                                    \" \" +\n                                    _vm._s(\n                                      _vm.trans(\"student.first_guardian_name\") +\n                                        \": \" +\n                                        _vm.selected_student.parent\n                                          .first_guardian_name\n                                    )\n                                ),\n                              ])\n                            : _vm._e(),\n                        ]),\n                      ])\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\"div\", { staticClass: \"form-group\" }, [\n                      _vm.registrationForm.student_id\n                        ? _c(\n                            \"button\",\n                            {\n                              staticClass: \"m-t-20 btn btn-sm btn-danger\",\n                              attrs: { type: \"button\" },\n                              on: { click: _vm.removeStudentId },\n                            },\n                            [\n                              _c(\"i\", { staticClass: \"fas fa-times-circle\" }),\n                              _vm._v(\n                                \" \" +\n                                  _vm._s(_vm.trans(\"student.remove_student\")) +\n                                  \"\\n                        \"\n                              ),\n                            ]\n                          )\n                        : _c(\n                            \"button\",\n                            {\n                              staticClass: \"m-t-20 btn btn-sm btn-info\",\n                              attrs: { type: \"button\" },\n                              on: {\n                                click: function ($event) {\n                                  _vm.searchStudentModal = true\n                                },\n                              },\n                            },\n                            [\n                              _c(\"i\", { staticClass: \"fas fa-search\" }),\n                              _vm._v(\n                                \" \" +\n                                  _vm._s(_vm.trans(\"student.search_student\"))\n                              ),\n                            ]\n                          ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"row\" },\n            [\n              _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"student.date_of_registration\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"datepicker\", {\n                      attrs: {\n                        bootstrapStyling: true,\n                        placeholder: _vm.trans(\"student.date_of_registration\"),\n                      },\n                      on: {\n                        selected: function ($event) {\n                          return _vm.registrationForm.errors.clear(\n                            \"date_of_registration\"\n                          )\n                        },\n                      },\n                      model: {\n                        value: _vm.registrationForm.date_of_registration,\n                        callback: function ($$v) {\n                          _vm.$set(\n                            _vm.registrationForm,\n                            \"date_of_registration\",\n                            $$v\n                          )\n                        },\n                        expression: \"registrationForm.date_of_registration\",\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.registrationForm,\n                        \"prop-name\": \"date_of_registration\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"v-select\",\n                      {\n                        attrs: {\n                          label: \"name\",\n                          \"group-values\": \"courses\",\n                          \"group-label\": \"course_group\",\n                          \"group-select\": false,\n                          name: \"course_id\",\n                          id: \"course_id\",\n                          options: _vm.courses,\n                          placeholder: _vm.trans(\"academic.select_course\"),\n                        },\n                        on: {\n                          select: _vm.onCourseSelect,\n                          close: function ($event) {\n                            return _vm.registrationForm.errors.clear(\n                              \"course_id\"\n                            )\n                          },\n                          remove: function ($event) {\n                            _vm.registrationForm.course_id = \"\"\n                          },\n                        },\n                        model: {\n                          value: _vm.selected_course,\n                          callback: function ($$v) {\n                            _vm.selected_course = $$v\n                          },\n                          expression: \"selected_course\",\n                        },\n                      },\n                      [\n                        !_vm.courses.length\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"multiselect__option\",\n                                attrs: { slot: \"afterList\" },\n                                slot: \"afterList\",\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            \" +\n                                    _vm._s(\n                                      _vm.trans(\"general.no_option_found\")\n                                    ) +\n                                    \"\\n                        \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _vm.registrationForm.course_id &&\n                    _vm.enable_registration_fee &&\n                    _vm.registration_fee >= 0\n                      ? _c(\"span\", { staticClass: \"help-block\" }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"student.registration_fee\")) +\n                              \" \" +\n                              _vm._s(_vm.formatCurrency(_vm.registration_fee))\n                          ),\n                        ])\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.registrationForm,\n                        \"prop-name\": \"course_id\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _vm.registrationForm.student_type == \"new\"\n                ? [\n                    _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"student.name\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"row\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"col-12 col-sm-4\" },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.first_name,\n                                    expression: \"registrationForm.first_name\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"first_name\",\n                                  placeholder: _vm.trans(\"student.first_name\"),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.first_name,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"first_name\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"first_name\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"div\",\n                            { staticClass: \"col-12 col-sm-4\" },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.middle_name,\n                                    expression: \"registrationForm.middle_name\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"middle_name\",\n                                  placeholder: _vm.trans(\"student.middle_name\"),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.middle_name,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"middle_name\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"middle_name\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"div\",\n                            { staticClass: \"col-12 col-sm-4\" },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.registrationForm.last_name,\n                                    expression: \"registrationForm.last_name\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"text\",\n                                  name: \"last_name\",\n                                  placeholder: _vm.trans(\"student.last_name\"),\n                                },\n                                domProps: {\n                                  value: _vm.registrationForm.last_name,\n                                },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.registrationForm,\n                                      \"last_name\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.registrationForm,\n                                  \"prop-name\": \"last_name\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"student.gender\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"div\",\n                            { staticClass: \"radio radio-info p-l-0\" },\n                            _vm._l(_vm.genders, function (gender) {\n                              return _c(\n                                \"div\",\n                                { staticClass: \"form-check form-check-inline\" },\n                                [\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value: _vm.registrationForm.gender,\n                                        expression: \"registrationForm.gender\",\n                                      },\n                                    ],\n                                    staticClass: \"form-check-input\",\n                                    attrs: {\n                                      type: \"radio\",\n                                      id: gender.id,\n                                      name: \"gender\",\n                                    },\n                                    domProps: {\n                                      value: gender.id,\n                                      checked:\n                                        _vm.registrationForm.gender ==\n                                        gender.id,\n                                      checked: _vm._q(\n                                        _vm.registrationForm.gender,\n                                        gender.id\n                                      ),\n                                    },\n                                    on: {\n                                      click: function ($event) {\n                                        return _vm.registrationForm.errors.clear(\n                                          \"gender\"\n                                        )\n                                      },\n                                      change: function ($event) {\n                                        return _vm.$set(\n                                          _vm.registrationForm,\n                                          \"gender\",\n                                          gender.id\n                                        )\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"label\",\n                                    {\n                                      staticClass: \"form-check-label\",\n                                      attrs: { for: gender.id },\n                                    },\n                                    [\n                                      _vm._v(\n                                        _vm._s(_vm.trans(\"list.\" + gender.id))\n                                      ),\n                                    ]\n                                  ),\n                                ]\n                              )\n                            }),\n                            0\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.registrationForm,\n                              \"prop-name\": \"gender\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"student.date_of_birth\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"datepicker\", {\n                            attrs: {\n                              bootstrapStyling: true,\n                              placeholder: _vm.trans(\"student.date_of_birth\"),\n                            },\n                            on: {\n                              selected: function ($event) {\n                                return _vm.registrationForm.errors.clear(\n                                  \"date_of_birth\"\n                                )\n                              },\n                            },\n                            model: {\n                              value: _vm.registrationForm.date_of_birth,\n                              callback: function ($$v) {\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"date_of_birth\",\n                                  $$v\n                                )\n                              },\n                              expression: \"registrationForm.date_of_birth\",\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.registrationForm,\n                              \"prop-name\": \"date_of_birth\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"student.contact_number\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.registrationForm.contact_number,\n                                expression: \"registrationForm.contact_number\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: \"contact_number\",\n                              placeholder: _vm.trans(\"student.contact_number\"),\n                            },\n                            domProps: {\n                              value: _vm.registrationForm.contact_number,\n                            },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.registrationForm,\n                                  \"contact_number\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.registrationForm,\n                              \"prop-name\": \"contact_number\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                  ]\n                : _vm._e(),\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\"hr\"),\n          _vm._v(\" \"),\n          _vm.registrationForm.student_type == \"new\"\n            ? _c(\n                \"div\",\n                { staticClass: \"row m-t-20\" },\n                [\n                  _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group\" }, [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.parent_type\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"radio radio-info p-l-0\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-check form-check-inline\" },\n                          [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.registrationForm.parent_type,\n                                  expression: \"registrationForm.parent_type\",\n                                },\n                              ],\n                              staticClass: \"form-check-input\",\n                              attrs: {\n                                type: \"radio\",\n                                value: \"new\",\n                                id: \"parent_type_new\",\n                                name: \"parent_type\",\n                              },\n                              domProps: {\n                                checked:\n                                  _vm.registrationForm.parent_type == \"new\",\n                                checked: _vm._q(\n                                  _vm.registrationForm.parent_type,\n                                  \"new\"\n                                ),\n                              },\n                              on: {\n                                click: function ($event) {\n                                  return _vm.registrationForm.errors.clear(\n                                    \"parent_type\"\n                                  )\n                                },\n                                change: function ($event) {\n                                  return _vm.$set(\n                                    _vm.registrationForm,\n                                    \"parent_type\",\n                                    \"new\"\n                                  )\n                                },\n                              },\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"form-check-label\",\n                                attrs: { for: \"parent_type_new\" },\n                              },\n                              [\n                                _vm._v(\n                                  \" \" + _vm._s(_vm.trans(\"student.new_parent\"))\n                                ),\n                              ]\n                            ),\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-check form-check-inline\" },\n                          [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.registrationForm.parent_type,\n                                  expression: \"registrationForm.parent_type\",\n                                },\n                              ],\n                              staticClass: \"form-check-input\",\n                              attrs: {\n                                type: \"radio\",\n                                value: \"existing\",\n                                id: \"parent_type_existing\",\n                                name: \"parent_type\",\n                              },\n                              domProps: {\n                                checked:\n                                  _vm.registrationForm.parent_type ==\n                                  \"existing\",\n                                checked: _vm._q(\n                                  _vm.registrationForm.parent_type,\n                                  \"existing\"\n                                ),\n                              },\n                              on: {\n                                click: function ($event) {\n                                  return _vm.registrationForm.errors.clear(\n                                    \"parent_type\"\n                                  )\n                                },\n                                change: function ($event) {\n                                  return _vm.$set(\n                                    _vm.registrationForm,\n                                    \"parent_type\",\n                                    \"existing\"\n                                  )\n                                },\n                              },\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"label\",\n                              {\n                                staticClass: \"form-check-label\",\n                                attrs: { for: \"parent_type_existing\" },\n                              },\n                              [\n                                _vm._v(\n                                  \" \" +\n                                    _vm._s(_vm.trans(\"student.existing_parent\"))\n                                ),\n                              ]\n                            ),\n                          ]\n                        ),\n                      ]),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _vm.registrationForm.parent_type == \"new\"\n                    ? [\n                        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                          _c(\"div\", { staticClass: \"row\" }, [\n                            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"label\", { attrs: { for: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\"student.first_guardian_name\")\n                                      )\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value:\n                                          _vm.registrationForm\n                                            .first_guardian_name,\n                                        expression:\n                                          \"registrationForm.first_guardian_name\",\n                                      },\n                                    ],\n                                    staticClass: \"form-control\",\n                                    attrs: {\n                                      type: \"text\",\n                                      name: \"first_guardian_name\",\n                                      placeholder: _vm.trans(\n                                        \"student.first_guardian_name\"\n                                      ),\n                                    },\n                                    domProps: {\n                                      value:\n                                        _vm.registrationForm\n                                          .first_guardian_name,\n                                    },\n                                    on: {\n                                      input: function ($event) {\n                                        if ($event.target.composing) return\n                                        _vm.$set(\n                                          _vm.registrationForm,\n                                          \"first_guardian_name\",\n                                          $event.target.value\n                                        )\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.registrationForm,\n                                      \"prop-name\": \"first_guardian_name\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"label\", { attrs: { for: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"general.relation\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"select\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value:\n                                            _vm.registrationForm\n                                              .first_guardian_relation,\n                                          expression:\n                                            \"registrationForm.first_guardian_relation\",\n                                        },\n                                      ],\n                                      staticClass: \"custom-select col-12\",\n                                      attrs: {\n                                        name: \"first_guardian_relation\",\n                                      },\n                                      on: {\n                                        change: [\n                                          function ($event) {\n                                            var $$selectedVal =\n                                              Array.prototype.filter\n                                                .call(\n                                                  $event.target.options,\n                                                  function (o) {\n                                                    return o.selected\n                                                  }\n                                                )\n                                                .map(function (o) {\n                                                  var val =\n                                                    \"_value\" in o\n                                                      ? o._value\n                                                      : o.value\n                                                  return val\n                                                })\n                                            _vm.$set(\n                                              _vm.registrationForm,\n                                              \"first_guardian_relation\",\n                                              $event.target.multiple\n                                                ? $$selectedVal\n                                                : $$selectedVal[0]\n                                            )\n                                          },\n                                          function ($event) {\n                                            return _vm.registrationForm.errors.clear(\n                                              \"first_guardian_relation\"\n                                            )\n                                          },\n                                        ],\n                                      },\n                                    },\n                                    [\n                                      _c(\"option\", { attrs: { value: \"\" } }, [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\"general.select_one\")\n                                          )\n                                        ),\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _vm._l(\n                                        _vm.guardian_relations,\n                                        function (relation) {\n                                          return _c(\n                                            \"option\",\n                                            {\n                                              domProps: { value: relation.id },\n                                            },\n                                            [\n                                              _vm._v(\n                                                \"\\n                                    \" +\n                                                  _vm._s(relation.name) +\n                                                  \"\\n                                  \"\n                                              ),\n                                            ]\n                                          )\n                                        }\n                                      ),\n                                    ],\n                                    2\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.registrationForm,\n                                      \"prop-name\": \"first_guardian_relation\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"row\" }, [\n                            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"label\", { attrs: { for: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\n                                          \"student.second_guardian_name\"\n                                        )\n                                      )\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value:\n                                          _vm.registrationForm\n                                            .second_guardian_name,\n                                        expression:\n                                          \"registrationForm.second_guardian_name\",\n                                      },\n                                    ],\n                                    staticClass: \"form-control\",\n                                    attrs: {\n                                      type: \"text\",\n                                      name: \"second_guardian_name\",\n                                      placeholder: _vm.trans(\n                                        \"student.second_guardian_name\"\n                                      ),\n                                    },\n                                    domProps: {\n                                      value:\n                                        _vm.registrationForm\n                                          .second_guardian_name,\n                                    },\n                                    on: {\n                                      input: function ($event) {\n                                        if ($event.target.composing) return\n                                        _vm.$set(\n                                          _vm.registrationForm,\n                                          \"second_guardian_name\",\n                                          $event.target.value\n                                        )\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.registrationForm,\n                                      \"prop-name\": \"second_guardian_name\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"label\", { attrs: { for: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\n                                          \"student.second_guardian_relation\"\n                                        )\n                                      )\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"select\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value:\n                                            _vm.registrationForm\n                                              .second_guardian_relation,\n                                          expression:\n                                            \"registrationForm.second_guardian_relation\",\n                                        },\n                                      ],\n                                      staticClass: \"custom-select col-12\",\n                                      attrs: {\n                                        name: \"second_guardian_relation\",\n                                      },\n                                      on: {\n                                        change: [\n                                          function ($event) {\n                                            var $$selectedVal =\n                                              Array.prototype.filter\n                                                .call(\n                                                  $event.target.options,\n                                                  function (o) {\n                                                    return o.selected\n                                                  }\n                                                )\n                                                .map(function (o) {\n                                                  var val =\n                                                    \"_value\" in o\n                                                      ? o._value\n                                                      : o.value\n                                                  return val\n                                                })\n                                            _vm.$set(\n                                              _vm.registrationForm,\n                                              \"second_guardian_relation\",\n                                              $event.target.multiple\n                                                ? $$selectedVal\n                                                : $$selectedVal[0]\n                                            )\n                                          },\n                                          function ($event) {\n                                            return _vm.registrationForm.errors.clear(\n                                              \"second_guardian_relation\"\n                                            )\n                                          },\n                                        ],\n                                      },\n                                    },\n                                    [\n                                      _c(\"option\", { attrs: { value: \"\" } }, [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\"general.select_one\")\n                                          )\n                                        ),\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _vm._l(\n                                        _vm.guardian_relations,\n                                        function (relation) {\n                                          return _c(\n                                            \"option\",\n                                            {\n                                              domProps: { value: relation.id },\n                                            },\n                                            [\n                                              _vm._v(\n                                                \"\\n                                    \" +\n                                                  _vm._s(relation.name) +\n                                                  \"\\n                                  \"\n                                              ),\n                                            ]\n                                          )\n                                        }\n                                      ),\n                                    ],\n                                    2\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.registrationForm,\n                                      \"prop-name\": \"second_guardian_relation\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"row\" }, [\n                            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"label\", { attrs: { for: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\n                                          \"student.first_guardian_contact_number\"\n                                        )\n                                      )\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value:\n                                          _vm.registrationForm\n                                            .first_guardian_contact_number_1,\n                                        expression:\n                                          \"registrationForm.first_guardian_contact_number_1\",\n                                      },\n                                    ],\n                                    staticClass: \"form-control\",\n                                    attrs: {\n                                      type: \"text\",\n                                      name: \"first_guardian_contact_number_1\",\n                                      placeholder: _vm.trans(\n                                        \"student.first_guardian_contact_number\"\n                                      ),\n                                    },\n                                    domProps: {\n                                      value:\n                                        _vm.registrationForm\n                                          .first_guardian_contact_number_1,\n                                    },\n                                    on: {\n                                      input: function ($event) {\n                                        if ($event.target.composing) return\n                                        _vm.$set(\n                                          _vm.registrationForm,\n                                          \"first_guardian_contact_number_1\",\n                                          $event.target.value\n                                        )\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.registrationForm,\n                                      \"prop-name\":\n                                        \"first_guardian_contact_number_1\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]),\n                          ]),\n                        ]),\n                      ]\n                    : [\n                        _vm.registrationForm.student_parent_id\n                          ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                              _c(\"div\", { staticClass: \"form-group\" }, [\n                                _vm.registrationForm.student_parent_id\n                                  ? _c(\"div\", [\n                                      _vm._v(\n                                        \"\\n                            \" +\n                                          _vm._s(\n                                            _vm.trans(\n                                              \"student.first_guardian_name\"\n                                            ) +\n                                              \": \" +\n                                              _vm.selected_parent\n                                                .first_guardian_name\n                                          ) +\n                                          \"\\n                            \"\n                                      ),\n                                      _vm.selected_parent\n                                        .first_guardian_relation\n                                        ? _c(\"span\", [\n                                            _vm._v(\n                                              \"(\" +\n                                                _vm._s(\n                                                  _vm.trans(\n                                                    \"list.\" +\n                                                      _vm.selected_parent\n                                                        .first_guardian_relation\n                                                  )\n                                                ) +\n                                                \")\"\n                                            ),\n                                          ])\n                                        : _vm._e(),\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" \"),\n                                _vm.registrationForm.student_parent_id\n                                  ? _c(\"div\", [\n                                      _vm._v(\n                                        \"\\n                            \" +\n                                          _vm._s(\n                                            _vm.trans(\n                                              \"student.second_guardian_name\"\n                                            ) +\n                                              \": \" +\n                                              _vm.selected_parent\n                                                .second_guardian_name\n                                          ) +\n                                          \"\\n                            \"\n                                      ),\n                                      _vm.selected_parent\n                                        .second_guardian_relation\n                                        ? _c(\"span\", [\n                                            _vm._v(\n                                              \"(\" +\n                                                _vm._s(\n                                                  _vm.trans(\n                                                    \"list.\" +\n                                                      _vm.selected_parent\n                                                        .second_guardian_relation\n                                                  )\n                                                ) +\n                                                \")\"\n                                            ),\n                                          ])\n                                        : _vm._e(),\n                                    ])\n                                  : _vm._e(),\n                              ]),\n                            ])\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-1\" }, [\n                          _c(\"div\", { staticClass: \"form-group\" }, [\n                            _vm.registrationForm.student_parent_id\n                              ? _c(\n                                  \"button\",\n                                  {\n                                    staticClass: \"m-t-20 btn btn-sm btn-danger\",\n                                    attrs: { type: \"button\" },\n                                    on: { click: _vm.removeParentId },\n                                  },\n                                  [\n                                    _c(\"i\", {\n                                      staticClass: \"fas fa-times-circle\",\n                                    }),\n                                    _vm._v(\n                                      \" \" +\n                                        _vm._s(\n                                          _vm.trans(\"student.remove_parent\")\n                                        ) +\n                                        \"\\n                        \"\n                                    ),\n                                  ]\n                                )\n                              : _c(\n                                  \"button\",\n                                  {\n                                    staticClass: \"m-t-20 btn btn-sm btn-info\",\n                                    attrs: { type: \"button\" },\n                                    on: {\n                                      click: function ($event) {\n                                        _vm.searchParentModal = true\n                                      },\n                                    },\n                                  },\n                                  [\n                                    _c(\"i\", { staticClass: \"fas fa-search\" }),\n                                    _vm._v(\n                                      \" \" +\n                                        _vm._s(\n                                          _vm.trans(\"student.search_parent\")\n                                        )\n                                    ),\n                                  ]\n                                ),\n                          ]),\n                        ]),\n                      ],\n                ],\n                2\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"student.previous_institute\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"previous_institute_id\",\n                        id: \"previous_institute_id\",\n                        options: _vm.previous_institutes,\n                        placeholder: _vm.trans(\"academic.select_institute\"),\n                      },\n                      on: {\n                        select: _vm.onPreviousInstituteSelect,\n                        close: function ($event) {\n                          return _vm.registrationForm.errors.clear(\n                            \"previous_institute_id\"\n                          )\n                        },\n                        remove: function ($event) {\n                          _vm.registrationForm.previous_institute_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_previous_institute,\n                        callback: function ($$v) {\n                          _vm.selected_previous_institute = $$v\n                        },\n                        expression: \"selected_previous_institute\",\n                      },\n                    },\n                    [\n                      !_vm.previous_institutes.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                            \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                        \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.registrationForm,\n                      \"prop-name\": \"registration_remarks\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-8\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"student.registration_remarks\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"autosize-textarea\", {\n                    attrs: {\n                      rows: \"1\",\n                      name: \"registration_remarks\",\n                      placeholder: _vm.trans(\"student.registration_remarks\"),\n                    },\n                    model: {\n                      value: _vm.registrationForm.registration_remarks,\n                      callback: function ($$v) {\n                        _vm.$set(\n                          _vm.registrationForm,\n                          \"registration_remarks\",\n                          $$v\n                        )\n                      },\n                      expression: \"registrationForm.registration_remarks\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.registrationForm,\n                      \"prop-name\": \"registration_remarks\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"custom-field\", {\n            attrs: {\n              fields: _vm.custom_fields,\n              customValues: _vm.custom_values,\n              clear: _vm.clearCustomField,\n              formErrors: _vm.customFieldFormErrors,\n            },\n            on: { updateCustomValues: _vm.updateCustomValues },\n          }),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { type: \"button\" },\n                on: {\n                  click: function ($event) {\n                    return _vm.$emit(\"cancel\")\n                  },\n                },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.searchParentModal\n        ? _c(\"search-parent\", {\n            on: {\n              completed: _vm.updateParentId,\n              close: function ($event) {\n                _vm.searchParentModal = false\n              },\n            },\n          })\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.searchStudentModal\n        ? _c(\"search-student\", {\n            on: {\n              completed: _vm.updateStudentId,\n              close: function ($event) {\n                _vm.searchStudentModal = false\n              },\n            },\n          })\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"student.registration\")) +\n                  \" (\" +\n                  _vm._s(_vm.getSession) +\n                  \")\\n                    \"\n              ),\n              _vm.registrations.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.registrations.total,\n                            from: _vm.registrations.from,\n                            to: _vm.registrations.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _c(\n                  \"button\",\n                  {\n                    directives: [\n                      {\n                        name: \"tooltip\",\n                        rawName: \"v-tooltip\",\n                        value: _vm.trans(\"general.card_view\"),\n                        expression: \"trans('general.card_view')\",\n                      },\n                    ],\n                    staticClass: \"btn btn-info btn-sm\",\n                    on: {\n                      click: function ($event) {\n                        return _vm.$router.push(\n                          \"/student/registration/card-view\"\n                        )\n                      },\n                    },\n                  },\n                  [\n                    _c(\"i\", { staticClass: \"fas fa-th\" }),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.card_view\"))),\n                    ]),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _vm.registrations.total &&\n                !_vm.showCreatePanel &&\n                _vm.hasPermission(\"new-registration\")\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"general.add_new\"),\n                            expression: \"trans('general.add_new')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showCreatePanel = !_vm.showCreatePanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"student.add_new_registration\"))\n                          ),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"student-registration\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  \"group-values\": \"courses\",\n                                  \"group-label\": \"course_group\",\n                                  \"group-select\": false,\n                                  name: \"course_id\",\n                                  id: \"course_id\",\n                                  options: _vm.courses,\n                                  placeholder: _vm.trans(\n                                    \"academic.select_course\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_courses,\n                                },\n                                on: {\n                                  select: _vm.onCourseSelect,\n                                  remove: _vm.onCourseRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_courses,\n                                  callback: function ($$v) {\n                                    _vm.selected_courses = $$v\n                                  },\n                                  expression: \"selected_courses\",\n                                },\n                              },\n                              [\n                                !_vm.courses.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"student.previous_institute\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"previous_institute_id\",\n                                  id: \"previous_institute_id\",\n                                  options: _vm.previous_institutes,\n                                  placeholder: _vm.trans(\n                                    \"academic.select_institute\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_institutes,\n                                },\n                                on: {\n                                  select: _vm.onPreviousInstituteSelect,\n                                  remove: _vm.onPreviousInstituteRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_institutes,\n                                  callback: function ($$v) {\n                                    _vm.selected_institutes = $$v\n                                  },\n                                  expression: \"selected_institutes\",\n                                },\n                              },\n                              [\n                                !_vm.previous_institutes.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"student.registration_status\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.filter.status,\n                                  expression: \"filter.status\",\n                                },\n                              ],\n                              staticClass: \"custom-select col-12\",\n                              on: {\n                                change: function ($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function (o) {\n                                      return o.selected\n                                    })\n                                    .map(function (o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.filter,\n                                    \"status\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _c(\n                                \"option\",\n                                { attrs: { value: \"null\", selected: \"\" } },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"general.select_one\"))\n                                  ),\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.statuses, function (status) {\n                                return _c(\n                                  \"option\",\n                                  { domProps: { value: status.value } },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                    \" +\n                                        _vm._s(status.text) +\n                                        \"\\n                                  \"\n                                    ),\n                                  ]\n                                )\n                              }),\n                            ],\n                            2\n                          ),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"student.registration_type\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.filter.registration_type,\n                                  expression: \"filter.registration_type\",\n                                },\n                              ],\n                              staticClass: \"custom-select col-12\",\n                              on: {\n                                change: function ($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function (o) {\n                                      return o.selected\n                                    })\n                                    .map(function (o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.filter,\n                                    \"registration_type\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _c(\n                                \"option\",\n                                { attrs: { value: \"null\", selected: \"\" } },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"general.select_one\"))\n                                  ),\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _vm._l(\n                                _vm.registration_types,\n                                function (registration_type) {\n                                  return _c(\n                                    \"option\",\n                                    {\n                                      domProps: {\n                                        value: registration_type.value,\n                                      },\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                                    \" +\n                                          _vm._s(registration_type.text) +\n                                          \"\\n                                  \"\n                                      ),\n                                    ]\n                                  )\n                                }\n                              ),\n                            ],\n                            2\n                          ),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-sm-6\" },\n                        [\n                          _c(\"date-range-picker\", {\n                            attrs: {\n                              \"start-date\":\n                                _vm.filter.date_of_registration_start_date,\n                              \"end-date\":\n                                _vm.filter.date_of_registration_end_date,\n                              label: _vm.trans(\n                                \"transport.date_of_registration_between\"\n                              ),\n                            },\n                            on: {\n                              \"update:startDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_registration_start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:start-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_registration_start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:endDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_registration_end_date\",\n                                  $event\n                                )\n                              },\n                              \"update:end-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_registration_end_date\",\n                                  $event\n                                )\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getRegistrations },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _vm.hasPermission(\"new-registration\")\n            ? _c(\"transition\", { attrs: { name: \"fade\" } }, [\n                _vm.showCreatePanel\n                  ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"card-body\" },\n                        [\n                          _c(\"h4\", { staticClass: \"card-title\" }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"student.add_new_registration\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"registration-form\", {\n                            on: {\n                              completed: _vm.getRegistrations,\n                              cancel: function ($event) {\n                                _vm.showCreatePanel = !_vm.showCreatePanel\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.hasPermission(\"list-registration\")\n            ? _c(\"div\", { staticClass: \"card\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"card-body\" },\n                  [\n                    _vm.registrations.total\n                      ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                          _c(\"table\", { staticClass: \"table table-sm\" }, [\n                            _c(\"thead\", [\n                              _c(\"tr\", [\n                                _c(\"th\", [\n                                  _vm._v(_vm._s(_vm.trans(\"student.name\"))),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"student.first_guardian_name\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"student.date_of_birth\"))\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"student.contact_number\"))\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", [\n                                  _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"student.registration_status\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"student.date_of_registration\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"student.registration_fee\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", { staticClass: \"table-option\" }, [\n                                  _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                                ]),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"tbody\",\n                              _vm._l(\n                                _vm.registrations.data,\n                                function (registration) {\n                                  return _c(\"tr\", [\n                                    _c(\"td\", [\n                                      _vm._v(\n                                        \"\\n                                    \" +\n                                          _vm._s(\n                                            _vm.getStudentName(\n                                              registration.student\n                                            )\n                                          ) +\n                                          \"\\n                                    \"\n                                      ),\n                                      registration.is_online\n                                        ? _c(\"span\", [\n                                            _c(\n                                              \"span\",\n                                              {\n                                                staticClass: \"label label-info\",\n                                              },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.trans(\n                                                      \"student.online_registration\"\n                                                    )\n                                                  )\n                                                ),\n                                              ]\n                                            ),\n                                          ])\n                                        : _vm._e(),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          registration.student.parent\n                                            ? registration.student.parent\n                                                .first_guardian_name\n                                            : \"\"\n                                        ),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm._f(\"moment\")(\n                                            registration.student.date_of_birth\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          registration.student.contact_number\n                                        ),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          registration.course.name\n                                        ),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"td\",\n                                      _vm._l(\n                                        _vm.getRegistrationStatus(registration),\n                                        function (status) {\n                                          return _c(\n                                            \"span\",\n                                            {\n                                              class: [\n                                                \"label\",\n                                                \"label-\" + status.color,\n                                                \"m-r-5\",\n                                              ],\n                                            },\n                                            [_vm._v(_vm._s(status.label))]\n                                          )\n                                        }\n                                      ),\n                                      0\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm._f(\"moment\")(\n                                            registration.date_of_registration\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", [\n                                      registration.registration_fee\n                                        ? _c(\"span\", [\n                                            _vm._v(\n                                              \"\\n                                        \" +\n                                                _vm._s(\n                                                  _vm.formatCurrency(\n                                                    registration.registration_fee\n                                                  )\n                                                ) +\n                                                \"\\n                                        \"\n                                            ),\n                                            registration.registration_fee_status ==\n                                            \"paid\"\n                                              ? _c(\n                                                  \"span\",\n                                                  {\n                                                    staticClass:\n                                                      \"label label-success\",\n                                                  },\n                                                  [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        _vm.trans(\n                                                          \"student.registration_fee_status_paid\"\n                                                        )\n                                                      )\n                                                    ),\n                                                  ]\n                                                )\n                                              : _c(\n                                                  \"span\",\n                                                  {\n                                                    staticClass:\n                                                      \"label label-danger\",\n                                                  },\n                                                  [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        _vm.trans(\n                                                          \"student.registration_fee_status_unpaid\"\n                                                        )\n                                                      )\n                                                    ),\n                                                  ]\n                                                ),\n                                          ])\n                                        : _c(\"span\", [_vm._v(\"-\")]),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", { staticClass: \"table-option\" }, [\n                                      _c(\n                                        \"div\",\n                                        { staticClass: \"btn-group\" },\n                                        [\n                                          _c(\n                                            \"router-link\",\n                                            {\n                                              directives: [\n                                                {\n                                                  name: \"tooltip\",\n                                                  rawName: \"v-tooltip\",\n                                                  value: _vm.trans(\n                                                    \"student.view_detail\"\n                                                  ),\n                                                  expression:\n                                                    \"trans('student.view_detail')\",\n                                                },\n                                              ],\n                                              staticClass:\n                                                \"btn btn-info btn-sm\",\n                                              attrs: {\n                                                to: `/student/registration/${registration.id}`,\n                                              },\n                                            },\n                                            [\n                                              _c(\"i\", {\n                                                staticClass:\n                                                  \"fas fa-arrow-circle-right\",\n                                              }),\n                                            ]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _vm.hasPermission(\n                                            \"delete-registration\"\n                                          )\n                                            ? _c(\n                                                \"button\",\n                                                {\n                                                  directives: [\n                                                    {\n                                                      name: \"confirm\",\n                                                      rawName: \"v-confirm\",\n                                                      value: {\n                                                        ok: _vm.confirmDelete(\n                                                          registration\n                                                        ),\n                                                      },\n                                                      expression:\n                                                        \"{ok: confirmDelete(registration)}\",\n                                                    },\n                                                    {\n                                                      name: \"tooltip\",\n                                                      rawName: \"v-tooltip\",\n                                                      value: _vm.trans(\n                                                        \"student.delete_registration\"\n                                                      ),\n                                                      expression:\n                                                        \"trans('student.delete_registration')\",\n                                                    },\n                                                  ],\n                                                  key: registration.id,\n                                                  staticClass:\n                                                    \"btn btn-danger btn-sm\",\n                                                },\n                                                [\n                                                  _c(\"i\", {\n                                                    staticClass: \"fas fa-trash\",\n                                                  }),\n                                                ]\n                                              )\n                                            : _vm._e(),\n                                        ],\n                                        1\n                                      ),\n                                    ]),\n                                  ])\n                                }\n                              ),\n                              0\n                            ),\n                          ]),\n                        ])\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    !_vm.registrations.total\n                      ? _c(\n                          \"module-info\",\n                          {\n                            attrs: {\n                              module: \"student\",\n                              title: \"registration_module_title\",\n                              description: \"registration_module_description\",\n                              icon: \"check-circle\",\n                            },\n                          },\n                          [\n                            _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                              !_vm.showCreatePanel\n                                ? _c(\n                                    \"button\",\n                                    {\n                                      staticClass: \"btn btn-info btn-md\",\n                                      on: {\n                                        click: function ($event) {\n                                          _vm.showCreatePanel =\n                                            !_vm.showCreatePanel\n                                        },\n                                      },\n                                    },\n                                    [\n                                      _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                      _vm._v(\n                                        \" \" +\n                                          _vm._s(_vm.trans(\"general.add_new\"))\n                                      ),\n                                    ]\n                                  )\n                                : _vm._e(),\n                            ]),\n                          ]\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\"pagination-record\", {\n                      attrs: {\n                        \"page-length\": _vm.filter.page_length,\n                        records: _vm.registrations,\n                      },\n                      on: {\n                        \"update:pageLength\": function ($event) {\n                          return _vm.$set(_vm.filter, \"page_length\", $event)\n                        },\n                        \"update:page-length\": function ($event) {\n                          return _vm.$set(_vm.filter, \"page_length\", $event)\n                        },\n                        updateRecords: _vm.getRegistrations,\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ])\n            : _vm._e(),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"transition\", { attrs: { name: \"modal\" } }, [\n    _c(\"div\", { staticClass: \"modal-mask\" }, [\n      _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n        _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"modal-header\" },\n            [\n              _vm._t(\"header\", function () {\n                return [\n                  _vm._v(\n                    \"\\n                            \" +\n                      _vm._s(_vm.trans(\"student.search_parent\")) +\n                      \"\\n                            \"\n                  ),\n                  _c(\n                    \"span\",\n                    {\n                      staticClass: \"float-right pointer\",\n                      on: {\n                        click: function ($event) {\n                          return _vm.$emit(\"close\")\n                        },\n                      },\n                    },\n                    [_vm._v(\"x\")]\n                  ),\n                ]\n              }),\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"modal-body m-t-0\" },\n            [\n              _vm._t(\"body\", function () {\n                return [\n                  _c(\"div\", { staticClass: \"card card-form\" }, [\n                    _c(\"div\", { staticClass: \"card-body\" }, [\n                      _c(\"div\", { staticClass: \"row\" }, [\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\"div\", { staticClass: \"form-group\" }, [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\n                                    \"student.parent_search_by_father_mother_name\"\n                                  )\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.searchForm.query,\n                                  expression: \"searchForm.query\",\n                                },\n                              ],\n                              staticClass: \"form-control\",\n                              attrs: {\n                                type: \"text\",\n                                name: \"query\",\n                                placeholder: _vm.trans(\"general.search_query\"),\n                              },\n                              domProps: { value: _vm.searchForm.query },\n                              on: {\n                                input: function ($event) {\n                                  if ($event.target.composing) return\n                                  _vm.$set(\n                                    _vm.searchForm,\n                                    \"query\",\n                                    $event.target.value\n                                  )\n                                },\n                              },\n                            }),\n                          ]),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass:\n                              \"btn btn-info waves-effect waves-light\",\n                            attrs: { type: \"button\" },\n                            on: { click: _vm.search },\n                          },\n                          [_vm._v(_vm._s(_vm.trans(\"general.search\")))]\n                        ),\n                      ]),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _vm.parents.total\n                    ? _c(\n                        \"div\",\n                        {\n                          staticClass: \"search-results m-t-30\",\n                          staticStyle: { \"max-height\": \"100px\" },\n                        },\n                        [\n                          _c(\n                            \"h4\",\n                            {\n                              staticClass:\n                                \"text-themecolor p-b-10 m-b-20 border-bottom\",\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"student.parent_search_result\")\n                                ) + \" \\n                                    \"\n                              ),\n                              _c(\n                                \"span\",\n                                {\n                                  staticClass:\n                                    \"card-subtitle d-none d-sm-inline\",\n                                },\n                                [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"general.total_result_found\", {\n                                        count: _vm.parents.total,\n                                        from: _vm.parents.from,\n                                        to: _vm.parents.to,\n                                      })\n                                    )\n                                  ),\n                                ]\n                              ),\n                            ]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"table-responsive\" }, [\n                            _c(\"table\", { staticClass: \"table table-sm\" }, [\n                              _c(\"thead\", [\n                                _c(\"tr\", [\n                                  _c(\"th\", [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"student.father_name\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"student.mother_name\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", { staticClass: \"table-option\" }, [\n                                    _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                                  ]),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"tbody\",\n                                _vm._l(_vm.parents.data, function (parent) {\n                                  return _c(\"tr\", [\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(parent.father_name),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(parent.mother_name),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", { staticClass: \"table-option\" }, [\n                                      _c(\"div\", { staticClass: \"btn-group\" }, [\n                                        _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"confirm\",\n                                                rawName: \"v-confirm\",\n                                                value: {\n                                                  ok: _vm.confirm(parent),\n                                                },\n                                                expression:\n                                                  \"{ok: confirm(parent)}\",\n                                              },\n                                              {\n                                                name: \"tooltip\",\n                                                rawName: \"v-tooltip\",\n                                                value:\n                                                  _vm.trans(\n                                                    \"student.add_parent\"\n                                                  ),\n                                                expression:\n                                                  \"trans('student.add_parent')\",\n                                              },\n                                            ],\n                                            key: parent.id,\n                                            staticClass: \"btn btn-info btn-sm\",\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-user-plus\",\n                                            }),\n                                          ]\n                                        ),\n                                      ]),\n                                    ]),\n                                  ])\n                                }),\n                                0\n                              ),\n                            ]),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"pagination-record\", {\n                            attrs: {\n                              \"page-length\": _vm.searchForm.page_length,\n                              records: _vm.parents,\n                            },\n                            on: {\n                              \"update:pageLength\": function ($event) {\n                                return _vm.$set(\n                                  _vm.searchForm,\n                                  \"page_length\",\n                                  $event\n                                )\n                              },\n                              \"update:page-length\": function ($event) {\n                                return _vm.$set(\n                                  _vm.searchForm,\n                                  \"page_length\",\n                                  $event\n                                )\n                              },\n                              updateRecords: _vm.search,\n                            },\n                          }),\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"clearfix\" }),\n                ]\n              }),\n            ],\n            2\n          ),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"transition\", { attrs: { name: \"modal\" } }, [\n    _c(\"div\", { staticClass: \"modal-mask\" }, [\n      _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n        _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"modal-header\" },\n            [\n              _vm._t(\"header\", function () {\n                return [\n                  _vm._v(\n                    \"\\n                            \" +\n                      _vm._s(_vm.trans(\"student.search_student\")) +\n                      \"\\n                            \"\n                  ),\n                  _c(\n                    \"span\",\n                    {\n                      staticClass: \"float-right pointer\",\n                      on: {\n                        click: function ($event) {\n                          return _vm.$emit(\"close\")\n                        },\n                      },\n                    },\n                    [_vm._v(\"x\")]\n                  ),\n                ]\n              }),\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"modal-body m-t-0\" },\n            [\n              _vm._t(\"body\", function () {\n                return [\n                  _c(\"div\", { staticClass: \"card card-form\" }, [\n                    _c(\"div\", { staticClass: \"card-body\" }, [\n                      _c(\"div\", { staticClass: \"row\" }, [\n                        _c(\"div\", { staticClass: \"col-12\" }, [\n                          _c(\"div\", { staticClass: \"form-group\" }, [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"student.name\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.searchForm.name,\n                                  expression: \"searchForm.name\",\n                                },\n                              ],\n                              staticClass: \"form-control\",\n                              attrs: {\n                                type: \"text\",\n                                name: \"name\",\n                                placeholder: _vm.trans(\"general.search_query\"),\n                              },\n                              domProps: { value: _vm.searchForm.name },\n                              on: {\n                                input: function ($event) {\n                                  if ($event.target.composing) return\n                                  _vm.$set(\n                                    _vm.searchForm,\n                                    \"name\",\n                                    $event.target.value\n                                  )\n                                },\n                              },\n                            }),\n                          ]),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                        _c(\n                          \"button\",\n                          {\n                            staticClass:\n                              \"btn btn-info waves-effect waves-light\",\n                            attrs: { type: \"button\" },\n                            on: { click: _vm.search },\n                          },\n                          [_vm._v(_vm._s(_vm.trans(\"general.search\")))]\n                        ),\n                      ]),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _vm.students.total\n                    ? _c(\n                        \"div\",\n                        {\n                          staticClass: \"search-results m-t-30\",\n                          staticStyle: { \"max-height\": \"100px\" },\n                        },\n                        [\n                          _c(\n                            \"h4\",\n                            {\n                              staticClass:\n                                \"text-themecolor p-b-10 m-b-20 border-bottom\",\n                            },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"student.student_search_result\")\n                                ) + \" \\n                                    \"\n                              ),\n                              _c(\n                                \"span\",\n                                {\n                                  staticClass:\n                                    \"card-subtitle d-none d-sm-inline\",\n                                },\n                                [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"general.total_result_found\", {\n                                        count: _vm.students.total,\n                                        from: _vm.students.from,\n                                        to: _vm.students.to,\n                                      })\n                                    )\n                                  ),\n                                ]\n                              ),\n                            ]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"table-responsive\" }, [\n                            _c(\"table\", { staticClass: \"table table-sm\" }, [\n                              _c(\"thead\", [\n                                _c(\"tr\", [\n                                  _c(\"th\", [\n                                    _vm._v(_vm._s(_vm.trans(\"student.name\"))),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"student.father_name\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"student.mother_name\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", { staticClass: \"table-option\" }, [\n                                    _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                                  ]),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"tbody\",\n                                _vm._l(_vm.students.data, function (student) {\n                                  return _c(\"tr\", [\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.getStudentName(student)\n                                        ),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student.parent.father_name\n                                        ),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          student.parent.mother_name\n                                        ),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", { staticClass: \"table-option\" }, [\n                                      _c(\"div\", { staticClass: \"btn-group\" }, [\n                                        _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"confirm\",\n                                                rawName: \"v-confirm\",\n                                                value: {\n                                                  ok: _vm.confirm(student),\n                                                },\n                                                expression:\n                                                  \"{ok: confirm(student)}\",\n                                              },\n                                              {\n                                                name: \"tooltip\",\n                                                rawName: \"v-tooltip\",\n                                                value: _vm.trans(\n                                                  \"student.add_student\"\n                                                ),\n                                                expression:\n                                                  \"trans('student.add_student')\",\n                                              },\n                                            ],\n                                            key: student.id,\n                                            staticClass: \"btn btn-info btn-sm\",\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-user-plus\",\n                                            }),\n                                          ]\n                                        ),\n                                      ]),\n                                    ]),\n                                  ])\n                                }),\n                                0\n                              ),\n                            ]),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"pagination-record\", {\n                            attrs: {\n                              \"page-length\": _vm.searchForm.page_length,\n                              records: _vm.students,\n                            },\n                            on: {\n                              \"update:pageLength\": function ($event) {\n                                return _vm.$set(\n                                  _vm.searchForm,\n                                  \"page_length\",\n                                  $event\n                                )\n                              },\n                              \"update:page-length\": function ($event) {\n                                return _vm.$set(\n                                  _vm.searchForm,\n                                  \"page_length\",\n                                  $event\n                                )\n                              },\n                              updateRecords: _vm.search,\n                            },\n                          }),\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"clearfix\" }),\n                ]\n              }),\n            ],\n            2\n          ),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.loading-overlay{\\n\\tz-index: 1060;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/student/registration/search-parent.vue\"],\"names\":[],\"mappings\":\";AAgHA;CACA,aAAA;AACA\",\"sourcesContent\":[\"<template>\\n    <transition name=\\\"modal\\\">\\n        <div class=\\\"modal-mask\\\">\\n            <div class=\\\"modal-wrapper\\\">\\n                <div class=\\\"modal-container modal-lg\\\">\\n                    <div class=\\\"modal-header\\\">\\n                        <slot name=\\\"header\\\">\\n                            {{trans('student.search_parent')}}\\n                            <span class=\\\"float-right pointer\\\" @click=\\\"$emit('close')\\\">x</span>\\n                        </slot>\\n                    </div>\\n                    <div class=\\\"modal-body m-t-0\\\">\\n                        <slot name=\\\"body\\\">\\n                            <div class=\\\"card card-form\\\">\\n                                <div class=\\\"card-body\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-12\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <label for=\\\"\\\">{{trans('student.parent_search_by_father_mother_name')}}</label>\\n                                                <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"searchForm.query\\\" name=\\\"query\\\" :placeholder=\\\"trans('general.search_query')\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"card-footer text-right\\\">\\n                                        <button type=\\\"button\\\" @click=\\\"search\\\" class=\\\"btn btn-info waves-effect waves-light\\\">{{trans('general.search')}}</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"search-results m-t-30\\\" style=\\\"max-height: 100px\\\" v-if=\\\"parents.total\\\">\\n                                <h4 class=\\\"text-themecolor p-b-10 m-b-20 border-bottom\\\">{{trans('student.parent_search_result')}} \\n                                    <span class=\\\"card-subtitle d-none d-sm-inline\\\">{{trans('general.total_result_found',{count : parents.total, from: parents.from, to: parents.to})}}</span>\\n                                </h4>\\n                                <div class=\\\"table-responsive\\\">\\n                                    <table class=\\\"table table-sm\\\">\\n                                        <thead>\\n                                            <tr>\\n                                                <th>{{trans('student.father_name')}}</th>\\n                                                <th>{{trans('student.mother_name')}}</th>\\n                                                <th class=\\\"table-option\\\">{{trans('general.action')}}</th>\\n                                            </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                            <tr v-for=\\\"parent in parents.data\\\">\\n                                                <td v-text=\\\"parent.father_name\\\"></td>\\n                                                <td v-text=\\\"parent.mother_name\\\"></td>\\n                                                <td class=\\\"table-option\\\">\\n                                                    <div class=\\\"btn-group\\\">\\n                                                        <button class=\\\"btn btn-info btn-sm\\\" :key=\\\"parent.id\\\" v-confirm=\\\"{ok: confirm(parent)}\\\" v-tooltip=\\\"trans('student.add_parent')\\\"><i class=\\\"fas fa-user-plus\\\"></i></button>\\n                                                    </div>\\n                                                </td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                                </div>\\n                                <pagination-record :page-length.sync=\\\"searchForm.page_length\\\" :records=\\\"parents\\\" @updateRecords=\\\"search\\\"></pagination-record>\\n                            </div>\\n\\t\\t\\t\\t\\t        <div class=\\\"clearfix\\\"></div>\\n                        </slot>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </transition>\\n</template>\\n\\n<script>\\n    export default {\\n        components: {},\\n        props: [],\\n        data() {\\n        \\treturn {\\n        \\t\\tparents: {\\n        \\t\\t\\tdata: [],\\n        \\t\\t\\ttotal: 0\\n        \\t\\t},\\n        \\t\\tsearchForm: {\\n        \\t\\t\\tquery: '',\\n                    page_length: helper.getConfig('page_length')\\n        \\t\\t}\\n        \\t}\\n        },\\n        methods: {\\n            search(page){\\n                let loader = this.$loading.show();\\n                if (typeof page !== 'number') {\\n                    page = 1;\\n                }\\n                let url = helper.getFilterURL(this.searchForm);\\n    \\t\\t\\taxios.get('/api/student/parent/search?page=' + page + url)\\n    \\t\\t\\t\\t.then(response => {\\n    \\t\\t\\t\\t\\tthis.parents = response;\\n                        loader.hide();\\n    \\t\\t\\t\\t})\\n    \\t\\t\\t\\t.catch(error => {\\n                        loader.hide();\\n    \\t\\t\\t\\t\\thelper.showErrorMsg(error);\\n    \\t\\t\\t\\t})\\n            },\\n            confirm(parent){\\n                return dialog => this.addParent(parent);\\n            },\\n            addParent(parent){\\n                let loader = this.$loading.show();\\n                this.$emit('completed',parent);\\n                loader.hide();\\n            }\\n        }\\n    }\\n</script>\\n\\n<style>\\n.loading-overlay{\\n\\tz-index: 1060;\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.loading-overlay{\\n\\tz-index: 1060;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/student/registration/search-student.vue\"],\"names\":[],\"mappings\":\";AAqHA;CACA,aAAA;AACA\",\"sourcesContent\":[\"<template>\\n    <transition name=\\\"modal\\\">\\n        <div class=\\\"modal-mask\\\">\\n            <div class=\\\"modal-wrapper\\\">\\n                <div class=\\\"modal-container modal-lg\\\">\\n                    <div class=\\\"modal-header\\\">\\n                        <slot name=\\\"header\\\">\\n                            {{trans('student.search_student')}}\\n                            <span class=\\\"float-right pointer\\\" @click=\\\"$emit('close')\\\">x</span>\\n                        </slot>\\n                    </div>\\n                    <div class=\\\"modal-body m-t-0\\\">\\n                        <slot name=\\\"body\\\">\\n                            <div class=\\\"card card-form\\\">\\n                                <div class=\\\"card-body\\\">\\n                                    <div class=\\\"row\\\">\\n                                        <div class=\\\"col-12\\\">\\n                                            <div class=\\\"form-group\\\">\\n                                                <label for=\\\"\\\">{{trans('student.name')}}</label>\\n                                                <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"searchForm.name\\\" name=\\\"name\\\" :placeholder=\\\"trans('general.search_query')\\\">\\n                                            </div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"card-footer text-right\\\">\\n                                        <button type=\\\"button\\\" @click=\\\"search\\\" class=\\\"btn btn-info waves-effect waves-light\\\">{{trans('general.search')}}</button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"search-results m-t-30\\\" style=\\\"max-height: 100px\\\" v-if=\\\"students.total\\\">\\n                                <h4 class=\\\"text-themecolor p-b-10 m-b-20 border-bottom\\\">{{trans('student.student_search_result')}} \\n                                    <span class=\\\"card-subtitle d-none d-sm-inline\\\">{{trans('general.total_result_found',{count : students.total, from: students.from, to: students.to})}}</span>\\n                                </h4>\\n                                <div class=\\\"table-responsive\\\">\\n                                    <table class=\\\"table table-sm\\\">\\n                                        <thead>\\n                                            <tr>\\n                                                <th>{{trans('student.name')}}</th>\\n                                                <th>{{trans('student.father_name')}}</th>\\n                                                <th>{{trans('student.mother_name')}}</th>\\n                                                <th class=\\\"table-option\\\">{{trans('general.action')}}</th>\\n                                            </tr>\\n                                        </thead>\\n                                        <tbody>\\n                                            <tr v-for=\\\"student in students.data\\\">\\n                                                <td v-text=\\\"getStudentName(student)\\\"></td>\\n                                                <td v-text=\\\"student.parent.father_name\\\"></td>\\n                                                <td v-text=\\\"student.parent.mother_name\\\"></td>\\n                                                <td class=\\\"table-option\\\">\\n                                                    <div class=\\\"btn-group\\\">\\n                                                        <button class=\\\"btn btn-info btn-sm\\\" :key=\\\"student.id\\\" v-confirm=\\\"{ok: confirm(student)}\\\" v-tooltip=\\\"trans('student.add_student')\\\"><i class=\\\"fas fa-user-plus\\\"></i></button>\\n                                                    </div>\\n                                                </td>\\n                                            </tr>\\n                                        </tbody>\\n                                    </table>\\n                                </div>\\n                                <pagination-record :page-length.sync=\\\"searchForm.page_length\\\" :records=\\\"students\\\" @updateRecords=\\\"search\\\"></pagination-record>\\n                            </div>\\n\\t\\t\\t\\t\\t        <div class=\\\"clearfix\\\"></div>\\n                        </slot>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </transition>\\n</template>\\n\\n<script>\\n    export default {\\n        components: {},\\n        props: [],\\n        data() {\\n        \\treturn {\\n        \\t\\tstudents: {\\n        \\t\\t\\tdata: [],\\n        \\t\\t\\ttotal: 0\\n        \\t\\t},\\n        \\t\\tsearchForm: {\\n        \\t\\t\\tname: '',\\n                    page_length: helper.getConfig('page_length')\\n        \\t\\t}\\n        \\t}\\n        },\\n        methods: {\\n            getStudentName(student){\\n                return helper.getStudentName(student);\\n            },\\n            search(page){\\n                let loader = this.$loading.show();\\n                if (typeof page !== 'number') {\\n                    page = 1;\\n                }\\n                let url = helper.getFilterURL(this.searchForm);\\n    \\t\\t\\taxios.get('/api/student/search/registration?page=' + page + url)\\n    \\t\\t\\t\\t.then(response => {\\n    \\t\\t\\t\\t\\tthis.students = response;\\n                        loader.hide();\\n    \\t\\t\\t\\t})\\n    \\t\\t\\t\\t.catch(error => {\\n                        loader.hide();\\n    \\t\\t\\t\\t\\thelper.showErrorMsg(error);\\n    \\t\\t\\t\\t})\\n            },\\n            confirm(student){\\n                return dialog => this.addStudent(student);\\n            },\\n            addStudent(student){\\n                let loader = this.$loading.show();\\n                this.$emit('completed',student);\\n                loader.hide();\\n            }\\n        }\\n    }\\n</script>\\n\\n<style>\\n.loading-overlay{\\n\\tz-index: 1060;\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".contact-info-box .comma:before {\\n  content: \\\", \\\";\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/pages/themes/default/online-registration.vue\"],\"names\":[],\"mappings\":\"AAEE;EACE,aAAA;AADJ\",\"sourcesContent\":[\"\\n.contact-info-box {\\n  .comma:before {\\n    content: \\\", \\\"\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-parent.vue?vue&type=style&index=0&id=593f08ac&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-student.vue?vue&type=style&index=0&id=21143a29&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19.use[1]!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19.use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19.use[3]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration.vue?vue&type=style&index=0&id=1df38d0a&lang=scss&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./online-registration.vue?vue&type=template&id=1df38d0a&\"\nimport script from \"./online-registration.vue?vue&type=script&lang=js&\"\nexport * from \"./online-registration.vue?vue&type=script&lang=js&\"\nimport style0 from \"./online-registration.vue?vue&type=style&index=0&id=1df38d0a&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1df38d0a')) {\n      api.createRecord('1df38d0a', component.options)\n    } else {\n      api.reload('1df38d0a', component.options)\n    }\n    module.hot.accept(\"./online-registration.vue?vue&type=template&id=1df38d0a&\", function () {\n      api.rerender('1df38d0a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/pages/themes/default/online-registration.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=20e92a97&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('20e92a97')) {\n      api.createRecord('20e92a97', component.options)\n    } else {\n      api.reload('20e92a97', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=20e92a97&\", function () {\n      api.rerender('20e92a97', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/registration/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=62dc5c8f&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('62dc5c8f')) {\n      api.createRecord('62dc5c8f', component.options)\n    } else {\n      api.reload('62dc5c8f', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=62dc5c8f&\", function () {\n      api.rerender('62dc5c8f', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/registration/index.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./search-parent.vue?vue&type=template&id=593f08ac&\"\nimport script from \"./search-parent.vue?vue&type=script&lang=js&\"\nexport * from \"./search-parent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./search-parent.vue?vue&type=style&index=0&id=593f08ac&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('593f08ac')) {\n      api.createRecord('593f08ac', component.options)\n    } else {\n      api.reload('593f08ac', component.options)\n    }\n    module.hot.accept(\"./search-parent.vue?vue&type=template&id=593f08ac&\", function () {\n      api.rerender('593f08ac', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/registration/search-parent.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./search-student.vue?vue&type=template&id=21143a29&\"\nimport script from \"./search-student.vue?vue&type=script&lang=js&\"\nexport * from \"./search-student.vue?vue&type=script&lang=js&\"\nimport style0 from \"./search-student.vue?vue&type=style&index=0&id=21143a29&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('21143a29')) {\n      api.createRecord('21143a29', component.options)\n    } else {\n      api.reload('21143a29', component.options)\n    }\n    module.hot.accept(\"./search-student.vue?vue&type=template&id=21143a29&\", function () {\n      api.rerender('21143a29', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/registration/search-student.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-parent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-parent.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-student.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-student.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration.vue?vue&type=template&id=1df38d0a&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=20e92a97&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=62dc5c8f&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-parent.vue?vue&type=template&id=593f08ac&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-student.vue?vue&type=template&id=21143a29&\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-parent.vue?vue&type=style&index=0&id=593f08ac&lang=css&\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./search-student.vue?vue&type=style&index=0&id=21143a29&lang=css&\"","export * from \"-!../../../../../../node_modules/style-loader/dist/cjs.js!../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19.use[1]!../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19.use[2]!../../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19.use[3]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./online-registration.vue?vue&type=style&index=0&id=1df38d0a&lang=scss&\""],"names":[],"sourceRoot":""}