{"version":3,"file":"js/chunks/js/academic/subject/index.js?id=f76960f11eb60848","mappings":";;;;;;;;;;;;;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACrcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;AC9cA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAOA;AAMA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAQA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAsBA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAoBA;AAUA;AAAA;AAIA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAOA;AAMA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AAiBA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AAiBA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AAmBA;AAAA;AAAA;AACA;AAMA;AAAA;AAIA;AAAA;AAyDA;AACA;AAmBA;AA2CA;AACA;AAGA;AACA;AAGA;AACA;AAKA;AACA;AAGA;AACA;AAKA;AACA;AAKA;AAEA;AAKA;AAEA;AAQA;AAGA;AACA;AAEA;AAIA;AAEA;AAEA;AAEA;AACA;AAIA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AAWA;AAGA;AACA;AAEA;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AAIA;AAEA;AAEA;AACA;AAEA;AAGA;AAEA;AASA;AAWA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAAA;AAIA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AAUA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;ACn/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/academic/subject/form.vue","webpack://InstiKit/resources/js/views/academic/subject/index.vue","webpack://InstiKit/./resources/js/views/academic/subject/form.vue","webpack://InstiKit/./resources/js/views/academic/subject/index.vue","webpack://InstiKit/./resources/js/views/academic/subject/form.vue?4988","webpack://InstiKit/./resources/js/views/academic/subject/index.vue?a741","webpack://InstiKit/./resources/js/views/academic/subject/form.vue?cecf","webpack://InstiKit/./resources/js/views/academic/subject/index.vue?2cbd","webpack://InstiKit/./resources/js/views/academic/subject/form.vue?8d09","webpack://InstiKit/./resources/js/views/academic/subject/index.vue?4dfb"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"proceed\" @keydown=\"subjectForm.errors.clear($event.target.name)\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('academic.batch')}}</label>\r\n                    <v-select label=\"name\" v-model=\"selected_batch\" group-values=\"batches\" group-label=\"course_group\" :group-select=\"false\" name=\"batch_id\" id=\"batch_id\" :options=\"batches\" :placeholder=\"trans('academic.select_batch')\" @select=\"onBatchSelect\" @close=\"subjectForm.errors.clear('batch_id')\" @remove=\"subjectForm.batch_id = ''\">\r\n                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!batches.length\">\r\n                            {{trans('general.no_option_found')}}\r\n                        </div>\r\n                    </v-select>\r\n                    <show-error :form-name=\"subjectForm\" prop-name=\"batch_id\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('academic.subject_name')}}</label>\r\n                    <input class=\"form-control\" type=\"text\" v-model=\"subjectForm.name\" name=\"name\" :placeholder=\"trans('academic.subject_name')\">\r\n                    <show-error :form-name=\"subjectForm\" prop-name=\"name\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('academic.subject_group')}}</label>\r\n                    <input class=\"form-control\" type=\"text\" v-model=\"subjectForm.group\" name=\"group\" :placeholder=\"trans('academic.subject_group')\">\r\n                    <show-error :form-name=\"subjectForm\" prop-name=\"group\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('academic.subject_code')}}</label>\r\n                    <input class=\"form-control\" type=\"text\" v-model=\"subjectForm.code\" name=\"code\" :placeholder=\"trans('academic.subject_code')\">\r\n                    <show-error :form-name=\"subjectForm\" prop-name=\"code\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('academic.subject_shortcode')}}</label>\r\n                    <input class=\"form-control\" type=\"text\" v-model=\"subjectForm.shortcode\" name=\"shortcode\" :placeholder=\"trans('academic.subject_shortcode')\">\r\n                    <show-error :form-name=\"subjectForm\" prop-name=\"shortcode\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('academic.subject_max_class_per_week')}}</label>\r\n                    <input class=\"form-control\" type=\"text\" v-model=\"subjectForm.max_class_per_week\" name=\"max_class_per_week\" :placeholder=\"trans('academic.subject_max_class_per_week')\">\r\n                    <show-error :form-name=\"subjectForm\" prop-name=\"max_class_per_week\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-2\">\r\n                <div class=\"form-group\">\r\n                    <div>{{trans('academic.subject_is_elective')}}</div>\r\n                    <switches class=\"m-t-20\" v-model=\"subjectForm.is_elective\" theme=\"bootstrap\" color=\"success\"></switches>\r\n                    <show-error :form-name=\"subjectForm\" prop-name=\"is_elective\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-2\">\r\n                <div class=\"form-group\">\r\n                    <div>{{trans('academic.subject_has_no_exam')}}</div>\r\n                    <switches class=\"m-t-20\" v-model=\"subjectForm.has_no_exam\" theme=\"bootstrap\" color=\"success\"></switches>\r\n                    <show-error :form-name=\"subjectForm\" prop-name=\"has_no_exam\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-8\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('academic.subject_description')}}</label>\r\n                    <autosize-textarea v-model=\"subjectForm.description\" rows=\"1\" name=\"description\" :placeholder=\"trans('academic.subject_description')\"></autosize-textarea>\r\n                    <show-error :form-name=\"subjectForm\" prop-name=\"description\"></show-error>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card-footer text-right\">\r\n            <router-link to=\"/academic/subject\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\r\n            <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n            <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n                <span v-if=\"id\">{{trans('general.update')}}</span>\r\n                <span v-else>{{trans('general.save')}}</span>\r\n            </button>\r\n        </div>\r\n    </form>\r\n</template>\r\n\r\n\r\n<script>\r\n    export default {\r\n        components: {},\r\n        data() {\r\n            return {\r\n                subjectForm: new Form({\r\n                    name: '',\r\n                    group: '',\r\n                    batch_id: '',\r\n                    code: '',\r\n                    shortcode: '',\r\n                    max_class_per_week: '',\r\n                    is_elective: false,\r\n                    has_no_exam: false,\r\n                    description: ''\r\n                }),\r\n                batches: [],\r\n                selected_batch: null\r\n            };\r\n        },\r\n        props: ['id'],\r\n        mounted() {\r\n            if(!helper.hasPermission('create-subject') && !helper.hasPermission('edit-subject')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            if(this.id)\r\n                this.get();\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/subject/pre-requisite')\r\n                    .then(response => {\r\n                        this.batches = response.batches;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n                },\r\n            proceed(){\r\n                if(this.id)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.subjectForm.post('/api/subject')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.selected_batch = null;\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/subject/'+this.id)\r\n                    .then(response => {\r\n                        this.subjectForm.name = response.subject.name;\r\n                        this.subjectForm.code = response.subject.code;\r\n                        this.subjectForm.shortcode = response.subject.shortcode;\r\n                        this.subjectForm.batch_id = response.subject.batch_id;\r\n                        this.subjectForm.description = response.subject.description;\r\n                        this.subjectForm.max_class_per_week = response.subject.max_class_per_week;\r\n                        this.subjectForm.is_elective = response.subject.is_elective;\r\n                        this.subjectForm.has_no_exam = response.subject.has_no_exam;\r\n                        this.subjectForm.group = response.subject.options.group;\r\n                        this.selected_batch = response.selected_batch;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/academic/subject');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.subjectForm.patch('/api/subject/'+this.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/academic/subject');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onBatchSelect(selectedOption){\r\n                this.subjectForm.batch_id = selectedOption.id;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('academic.batch_wise_subject')}} \r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"batches.total\">{{trans('general.total_result_found',{count : batches.total, from: batches.from, to: batches.to})}}</span>\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\r\n                    </h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"batches.total && !showCreatePanel && hasPermission('create-subject')\" @click=\"showCreatePanel = !showCreatePanel\" v-tooltip=\"trans('general.add_new')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('academic.add_new_subject')}}</span></button>\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\r\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\r\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\r\n                            </button>\r\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\r\n                            </div>\r\n                        </div>\r\n                        <help-button @clicked=\"help_topic = 'academic.subject'\"></help-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <transition name=\"fade\">\r\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('general.filter')}}\r\n                        </h4>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-4\">\r\n                                <div class=\"form-group\">\r\n                                    <v-select label=\"name\" track-by=\"id\" group-values=\"courses\" group-label=\"course_group\" :group-select=\"false\" v-model=\"selected_courses\" name=\"course_id\" id=\"course_id\" :options=\"courses\" :placeholder=\"trans('academic.select_course')\" @select=\"onCourseSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onCourseRemove\" :selected=\"selected_courses\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!courses.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"card-footer text-right\">\r\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\r\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getSubjects\">{{trans('general.filter')}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <transition name=\"fade\" v-if=\"hasPermission('create-subject')\">\r\n                <div class=\"card card-form\" v-if=\"showCreatePanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('academic.add_new_subject')}}</h4>\r\n                        <subject-form @completed=\"getSubjects\" @cancel=\"showCreatePanel = !showCreatePanel\"></subject-form>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\" v-if=\"batches.total\">\r\n                        <table class=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{{trans('academic.course')}}</th>\r\n                                    <th>{{trans('academic.batch')}}</th>\r\n                                    <th>{{trans('academic.subject')}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"batch in batches.data\">\r\n                                    <td>\r\n                                        {{batch.course.name}} <br />\r\n                                        <div class=\"dropdown\" v-if=\"hasPermission('edit-subject')\">\r\n                                            <button type=\"button\" class=\"btn btn-info btn-sm\" href=\"#\" role=\"button\" id=\"moreSubOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.option')\">\r\n                                                <i class=\"fas fa-ellipsis-h\"></i>\r\n                                            </button>\r\n                                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreSubOption\">\r\n                                                <button class=\"dropdown-item custom-dropdown\" v-if=\"hasPermission('edit-subject')\" :key=\"`reorder_${batch.id}`\" v-tooltip=\"trans('academic.reorder_subject')\" @click.prevent=\"showReorderAction(batch)\"><i class=\"fas fa-arrows-alt\"></i> {{trans('academic.reorder_subject')}}</button>\r\n                                                <button class=\"dropdown-item custom-dropdown\" v-if=\"hasPermission('create-subject')\" :key=\"`copy_${batch.id}`\" v-confirm=\"{ok: confirmCopyBatchSubject(batch)}\" v-tooltip=\"trans('academic.copy_batch_subjects')\"><i class=\"fas fa-copy\"></i> {{trans('general.copy')}}</button>\r\n                                                <button class=\"dropdown-item custom-dropdown\" v-if=\"hasPermission('delete-subject')\" :key=\"`delete_${batch.id}`\" v-confirm=\"{ok: confirmDeleteBatchSubject(batch)}\" v-tooltip=\"trans('academic.delete_batch_subjects')\"><i class=\"fas fa-trash\"></i> {{trans('general.delete')}}</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td v-text=\"batch.name\"></td>\r\n                                    <td>\r\n                                        <div class=\"table-responsive\" v-if=\"batch.subjects\">\r\n                                            <table class=\"table table-hover\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>{{trans('academic.subject_name')}}</th>\r\n                                                        <th>{{trans('academic.subject_code')}}</th>\r\n                                                        <th>{{trans('academic.subject_max_class_per_week')}}</th>\r\n                                                        <th>{{trans('academic.subject_is_elective')}}</th>\r\n                                                        <th>{{trans('academic.subject_has_no_exam')}}</th>\r\n                                                        <th class=\"table-option\">{{trans('general.action')}}</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    <tr v-for=\"subject in batch.subjects\">\r\n                                                        <td>\r\n                                                            {{subject.name}}\r\n                                                            <span v-if=\"subject.options && subject.options.group\">({{subject.options.group}})</span>\r\n                                                        </td>\r\n                                                        <td>\r\n                                                            {{subject.code}} <span v-if=\"subject.shortcode\">({{subject.shortcode}})</span>\r\n                                                        </td>\r\n                                                        <td v-text=\"subject.max_class_per_week\"></td>\r\n                                                        <td v-html=\"getElectiveData(subject)\"></td>\r\n                                                        <td v-html=\"getExamData(subject)\"></td>\r\n                                                        <td class=\"table-option\">\r\n                                                            <div class=\"btn-group\">\r\n                                                                <button class=\"btn btn-info btn-xs\" v-if=\"hasPermission('edit-subject')\" v-tooltip=\"trans('academic.edit_subject')\" @click.prevent=\"editSubject(subject)\"><i class=\"fas fa-edit\"></i></button>\r\n                                                                <button class=\"btn btn-danger btn-xs\" v-if=\"hasPermission('delete-subject')\" :key=\"subject.id\" v-confirm=\"{ok: confirmDelete(subject)}\" v-tooltip=\"trans('academic.delete_subject')\"><i class=\"fas fa-trash\"></i></button>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                </tbody>\r\n                                            </table>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <module-info v-if=\"!batches.total\" module=\"academic\" title=\"subject_module_title\" description=\"subject_module_description\" icon=\"list\">\r\n                        <div slot=\"btn\">\r\n                            <button class=\"btn btn-info btn-md\" v-if=\"!showCreatePanel && hasPermission('create-subject')\" @click=\"showCreatePanel = !showCreatePanel\"><i class=\"fas fa-plus\"></i> {{trans('general.add_new')}}</button>\r\n                        </div>\r\n                    </module-info>\r\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"batches\" @updateRecords=\"getSubjects\"></pagination-record>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <transition name=\"modal\" v-if=\"hasPermission('edit-subject') && showReorderModal\">\r\n            <div class=\"modal-mask\">\r\n                <div class=\"modal-wrapper\">\r\n                    <div class=\"modal-container modal-lg\">\r\n                        <div class=\"modal-header\">\r\n                            <slot name=\"header\">\r\n                                {{trans('academic.reorder_subject')}}\r\n                                <span class=\"float-right pointer\" @click=\"showReorderModal = false\">x</span>\r\n                            </slot>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <slot name=\"body\">\r\n                                <draggable v-model=\"subject_list\" @start=\"drag=true\" @end=\"drag=false\" class=\"list-group\">\r\n                                    <div class=\"list-group-item pointer\" v-for=\"item in subject_list\" :key=\"item.id\"><i class=\"fas fa-arrows-alt\"></i> {{item}}</div>\r\n                                </draggable>\r\n                                <button type=\"button\" class=\"btn btn-info pull-right m-t-10\" @click=\"reorderSubject\">{{trans('general.save')}}</button>\r\n                            </slot>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </transition>\r\n\r\n        <right-panel :topic=\"help_topic\"></right-panel>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import subjectForm from './form'\r\n\r\n    export default {\r\n        components : { subjectForm },\r\n        data() {\r\n            return {\r\n                batches: {\r\n                    total: 0,\r\n                    data: []\r\n                },\r\n                batch: {},\r\n                batch_id: null,\r\n                filter: {\r\n                    sort_by : 'name',\r\n                    order: 'asc',\r\n                    course_id: [],\r\n                    page_length: helper.getConfig('page_length')\r\n                },\r\n                orderByOptions: [\r\n                    {\r\n                        value: 'name',\r\n                        translation: i18n.academic.subject_name\r\n                    }\r\n                ],\r\n                courses: [],\r\n                selected_courses: null,\r\n                showFilterPanel: false,\r\n                showCreatePanel: false,\r\n                subject_list: [],\r\n                showReorderModal: false,\r\n                help_topic: ''\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('list-subject')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.getSubjects();\r\n            helper.showDemoNotification(['academic']);\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            showReorderAction(batch){\r\n                this.showReorderModal = true;\r\n                this.getSubjectList(batch);\r\n            },\r\n            getSubjectList(batch){\r\n                this.subject_list = [];\r\n                this.batch = batch;\r\n                batch.subjects.forEach(batch => {\r\n                    this.subject_list.push(batch.name);\r\n                })\r\n            },\r\n            getSubjects(page){\r\n                let loader = this.$loading.show();\r\n                this.batch_id = null;\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                let url = helper.getFilterURL(this.filter);\r\n                axios.get('/api/subject?page=' + page + url)\r\n                    .then(response => {\r\n                        this.batches = response.batches;\r\n                        this.courses = response.filters.courses;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            editSubject(subject){\r\n                this.$router.push('/academic/subject/'+subject.id+'/edit');\r\n            },\r\n            confirmDelete(subject){\r\n                return dialog => this.deleteSubject(subject);\r\n            },\r\n            deleteSubject(subject){\r\n                let loader = this.$loading.show();\r\n                axios.delete('/api/subject/'+subject.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getSubjects();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            confirmCopyBatchSubject(batch){\r\n                return dialog => this.copySubject(batch);\r\n            },\r\n            copySubject(batch){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/subject/'+batch.id+'/copy')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getSubjects();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            confirmDeleteBatchSubject(batch){\r\n                return dialog => this.deleteBatchSubject(batch);\r\n            },\r\n            deleteBatchSubject(batch){\r\n                axios.delete('/api/subject/'+batch.id+'/delete')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getSubjects();\r\n                    }).catch(error => {\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getConfig(config){\r\n                return helper.getConfig(config);\r\n            },\r\n            getElectiveData(subject){\r\n                return subject.is_elective ? '<i class=\"fas fa-check\"></i>' : '<i class=\"fas fa-times\"></i>';\r\n            },\r\n            getExamData(subject){\r\n                return subject.has_no_exam ? '<i class=\"fas fa-check\"></i>' : '<i class=\"fas fa-times\"></i>';\r\n            },\r\n            print(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/subject/print',{filter: this.filter})\r\n                    .then(response => {\r\n                        let print = window.open(\"/print\");\r\n                        loader.hide();\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            pdf(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/subject/pdf',{filter: this.filter})\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        window.open('/download/report/'+response+'?token='+this.authToken);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onCourseSelect(selectedOption){\r\n                this.filter.course_id.push(selectedOption.id);\r\n            },\r\n            onCourseRemove(removedOption){\r\n                this.filter.course_id.splice(this.filter.course_id.indexOf(removedOption.id), 1);\r\n            },\r\n            reorderSubject(){\r\n                axios.post('/api/batch/'+this.batch.id+'/subject/reorder',{list: this.subject_list})\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.showReorderModal = false;\r\n                        this.getSubjects();\r\n                    })\r\n                    .catch(error => {\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        },\r\n        watch: {\r\n            'filter.sort_by': function(val){\r\n                this.getSubjects();\r\n            },\r\n            'filter.order': function(val){\r\n                this.getSubjects();\r\n            },\r\n            'filter.page_length': function(val){\r\n                this.getSubjects();\r\n            }\r\n        },\r\n        computed: {\r\n            authToken(){\r\n                return helper.getAuthToken();\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.proceed.apply(null, arguments)\n        },\n        keydown: function ($event) {\n          return _vm.subjectForm.errors.clear($event.target.name)\n        },\n      },\n    },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.batch\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"v-select\",\n                {\n                  attrs: {\n                    label: \"name\",\n                    \"group-values\": \"batches\",\n                    \"group-label\": \"course_group\",\n                    \"group-select\": false,\n                    name: \"batch_id\",\n                    id: \"batch_id\",\n                    options: _vm.batches,\n                    placeholder: _vm.trans(\"academic.select_batch\"),\n                  },\n                  on: {\n                    select: _vm.onBatchSelect,\n                    close: function ($event) {\n                      return _vm.subjectForm.errors.clear(\"batch_id\")\n                    },\n                    remove: function ($event) {\n                      _vm.subjectForm.batch_id = \"\"\n                    },\n                  },\n                  model: {\n                    value: _vm.selected_batch,\n                    callback: function ($$v) {\n                      _vm.selected_batch = $$v\n                    },\n                    expression: \"selected_batch\",\n                  },\n                },\n                [\n                  !_vm.batches.length\n                    ? _c(\n                        \"div\",\n                        {\n                          staticClass: \"multiselect__option\",\n                          attrs: { slot: \"afterList\" },\n                          slot: \"afterList\",\n                        },\n                        [\n                          _vm._v(\n                            \"\\n                        \" +\n                              _vm._s(_vm.trans(\"general.no_option_found\")) +\n                              \"\\n                    \"\n                          ),\n                        ]\n                      )\n                    : _vm._e(),\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.subjectForm,\n                  \"prop-name\": \"batch_id\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.subject_name\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.subjectForm.name,\n                    expression: \"subjectForm.name\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"name\",\n                  placeholder: _vm.trans(\"academic.subject_name\"),\n                },\n                domProps: { value: _vm.subjectForm.name },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(_vm.subjectForm, \"name\", $event.target.value)\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: { \"form-name\": _vm.subjectForm, \"prop-name\": \"name\" },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.subject_group\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.subjectForm.group,\n                    expression: \"subjectForm.group\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"group\",\n                  placeholder: _vm.trans(\"academic.subject_group\"),\n                },\n                domProps: { value: _vm.subjectForm.group },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(_vm.subjectForm, \"group\", $event.target.value)\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: { \"form-name\": _vm.subjectForm, \"prop-name\": \"group\" },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.subject_code\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.subjectForm.code,\n                    expression: \"subjectForm.code\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"code\",\n                  placeholder: _vm.trans(\"academic.subject_code\"),\n                },\n                domProps: { value: _vm.subjectForm.code },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(_vm.subjectForm, \"code\", $event.target.value)\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: { \"form-name\": _vm.subjectForm, \"prop-name\": \"code\" },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.subject_shortcode\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.subjectForm.shortcode,\n                    expression: \"subjectForm.shortcode\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"shortcode\",\n                  placeholder: _vm.trans(\"academic.subject_shortcode\"),\n                },\n                domProps: { value: _vm.subjectForm.shortcode },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(_vm.subjectForm, \"shortcode\", $event.target.value)\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.subjectForm,\n                  \"prop-name\": \"shortcode\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(\n                  _vm._s(_vm.trans(\"academic.subject_max_class_per_week\"))\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.subjectForm.max_class_per_week,\n                    expression: \"subjectForm.max_class_per_week\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"max_class_per_week\",\n                  placeholder: _vm.trans(\"academic.subject_max_class_per_week\"),\n                },\n                domProps: { value: _vm.subjectForm.max_class_per_week },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(\n                      _vm.subjectForm,\n                      \"max_class_per_week\",\n                      $event.target.value\n                    )\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.subjectForm,\n                  \"prop-name\": \"max_class_per_week\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"div\", [\n                _vm._v(_vm._s(_vm.trans(\"academic.subject_is_elective\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"switches\", {\n                staticClass: \"m-t-20\",\n                attrs: { theme: \"bootstrap\", color: \"success\" },\n                model: {\n                  value: _vm.subjectForm.is_elective,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.subjectForm, \"is_elective\", $$v)\n                  },\n                  expression: \"subjectForm.is_elective\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.subjectForm,\n                  \"prop-name\": \"is_elective\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-2\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"div\", [\n                _vm._v(_vm._s(_vm.trans(\"academic.subject_has_no_exam\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"switches\", {\n                staticClass: \"m-t-20\",\n                attrs: { theme: \"bootstrap\", color: \"success\" },\n                model: {\n                  value: _vm.subjectForm.has_no_exam,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.subjectForm, \"has_no_exam\", $$v)\n                  },\n                  expression: \"subjectForm.has_no_exam\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.subjectForm,\n                  \"prop-name\": \"has_no_exam\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-8\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.subject_description\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"autosize-textarea\", {\n                attrs: {\n                  rows: \"1\",\n                  name: \"description\",\n                  placeholder: _vm.trans(\"academic.subject_description\"),\n                },\n                model: {\n                  value: _vm.subjectForm.description,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.subjectForm, \"description\", $$v)\n                  },\n                  expression: \"subjectForm.description\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.subjectForm,\n                  \"prop-name\": \"description\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"card-footer text-right\" },\n        [\n          _c(\n            \"router-link\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.id,\n                  expression: \"id\",\n                },\n              ],\n              staticClass: \"btn btn-danger waves-effect waves-light\",\n              attrs: { to: \"/academic/subject\" },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n          ),\n          _vm._v(\" \"),\n          !_vm.id\n            ? _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-danger waves-effect waves-light\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.$emit(\"cancel\")\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info waves-effect waves-light\",\n              attrs: { type: \"submit\" },\n            },\n            [\n              _vm.id\n                ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n            ]\n          ),\n        ],\n        1\n      ),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"academic.batch_wise_subject\")) +\n                  \" \\n                    \"\n              ),\n              _vm.batches.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.batches.total,\n                            from: _vm.batches.from,\n                            to: _vm.batches.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _vm.batches.total &&\n                !_vm.showCreatePanel &&\n                _vm.hasPermission(\"create-subject\")\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"general.add_new\"),\n                            expression: \"trans('general.add_new')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showCreatePanel = !_vm.showCreatePanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"academic.add_new_subject\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"academic.subject\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"general.filter\")) +\n                          \"\\n                    \"\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  \"group-values\": \"courses\",\n                                  \"group-label\": \"course_group\",\n                                  \"group-select\": false,\n                                  name: \"course_id\",\n                                  id: \"course_id\",\n                                  options: _vm.courses,\n                                  placeholder: _vm.trans(\n                                    \"academic.select_course\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_courses,\n                                },\n                                on: {\n                                  select: _vm.onCourseSelect,\n                                  remove: _vm.onCourseRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_courses,\n                                  callback: function ($$v) {\n                                    _vm.selected_courses = $$v\n                                  },\n                                  expression: \"selected_courses\",\n                                },\n                              },\n                              [\n                                !_vm.courses.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getSubjects },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _vm.hasPermission(\"create-subject\")\n            ? _c(\"transition\", { attrs: { name: \"fade\" } }, [\n                _vm.showCreatePanel\n                  ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"card-body\" },\n                        [\n                          _c(\"h4\", { staticClass: \"card-title\" }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"academic.add_new_subject\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"subject-form\", {\n                            on: {\n                              completed: _vm.getSubjects,\n                              cancel: function ($event) {\n                                _vm.showCreatePanel = !_vm.showCreatePanel\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.batches.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"academic.batch\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"academic.subject\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(_vm.batches.data, function (batch) {\n                            return _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(batch.course.name) +\n                                    \" \"\n                                ),\n                                _c(\"br\"),\n                                _vm._v(\" \"),\n                                _vm.hasPermission(\"edit-subject\")\n                                  ? _c(\"div\", { staticClass: \"dropdown\" }, [\n                                      _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"tooltip\",\n                                              rawName: \"v-tooltip\",\n                                              value:\n                                                _vm.trans(\"general.option\"),\n                                              expression:\n                                                \"trans('general.option')\",\n                                            },\n                                          ],\n                                          staticClass: \"btn btn-info btn-sm\",\n                                          attrs: {\n                                            type: \"button\",\n                                            href: \"#\",\n                                            role: \"button\",\n                                            id: \"moreSubOption\",\n                                            \"data-toggle\": \"dropdown\",\n                                            \"aria-haspopup\": \"true\",\n                                            \"aria-expanded\": \"false\",\n                                          },\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-ellipsis-h\",\n                                          }),\n                                        ]\n                                      ),\n                                      _vm._v(\" \"),\n                                      _c(\n                                        \"div\",\n                                        {\n                                          class: [\n                                            \"dropdown-menu\",\n                                            _vm.getConfig(\"direction\") == \"ltr\"\n                                              ? \"dropdown-menu-right\"\n                                              : \"\",\n                                          ],\n                                          attrs: {\n                                            \"aria-labelledby\": \"moreSubOption\",\n                                          },\n                                        },\n                                        [\n                                          _vm.hasPermission(\"edit-subject\")\n                                            ? _c(\n                                                \"button\",\n                                                {\n                                                  directives: [\n                                                    {\n                                                      name: \"tooltip\",\n                                                      rawName: \"v-tooltip\",\n                                                      value: _vm.trans(\n                                                        \"academic.reorder_subject\"\n                                                      ),\n                                                      expression:\n                                                        \"trans('academic.reorder_subject')\",\n                                                    },\n                                                  ],\n                                                  key: `reorder_${batch.id}`,\n                                                  staticClass:\n                                                    \"dropdown-item custom-dropdown\",\n                                                  on: {\n                                                    click: function ($event) {\n                                                      $event.preventDefault()\n                                                      return _vm.showReorderAction(\n                                                        batch\n                                                      )\n                                                    },\n                                                  },\n                                                },\n                                                [\n                                                  _c(\"i\", {\n                                                    staticClass:\n                                                      \"fas fa-arrows-alt\",\n                                                  }),\n                                                  _vm._v(\n                                                    \" \" +\n                                                      _vm._s(\n                                                        _vm.trans(\n                                                          \"academic.reorder_subject\"\n                                                        )\n                                                      )\n                                                  ),\n                                                ]\n                                              )\n                                            : _vm._e(),\n                                          _vm._v(\" \"),\n                                          _vm.hasPermission(\"create-subject\")\n                                            ? _c(\n                                                \"button\",\n                                                {\n                                                  directives: [\n                                                    {\n                                                      name: \"confirm\",\n                                                      rawName: \"v-confirm\",\n                                                      value: {\n                                                        ok: _vm.confirmCopyBatchSubject(\n                                                          batch\n                                                        ),\n                                                      },\n                                                      expression:\n                                                        \"{ok: confirmCopyBatchSubject(batch)}\",\n                                                    },\n                                                    {\n                                                      name: \"tooltip\",\n                                                      rawName: \"v-tooltip\",\n                                                      value: _vm.trans(\n                                                        \"academic.copy_batch_subjects\"\n                                                      ),\n                                                      expression:\n                                                        \"trans('academic.copy_batch_subjects')\",\n                                                    },\n                                                  ],\n                                                  key: `copy_${batch.id}`,\n                                                  staticClass:\n                                                    \"dropdown-item custom-dropdown\",\n                                                },\n                                                [\n                                                  _c(\"i\", {\n                                                    staticClass: \"fas fa-copy\",\n                                                  }),\n                                                  _vm._v(\n                                                    \" \" +\n                                                      _vm._s(\n                                                        _vm.trans(\n                                                          \"general.copy\"\n                                                        )\n                                                      )\n                                                  ),\n                                                ]\n                                              )\n                                            : _vm._e(),\n                                          _vm._v(\" \"),\n                                          _vm.hasPermission(\"delete-subject\")\n                                            ? _c(\n                                                \"button\",\n                                                {\n                                                  directives: [\n                                                    {\n                                                      name: \"confirm\",\n                                                      rawName: \"v-confirm\",\n                                                      value: {\n                                                        ok: _vm.confirmDeleteBatchSubject(\n                                                          batch\n                                                        ),\n                                                      },\n                                                      expression:\n                                                        \"{ok: confirmDeleteBatchSubject(batch)}\",\n                                                    },\n                                                    {\n                                                      name: \"tooltip\",\n                                                      rawName: \"v-tooltip\",\n                                                      value: _vm.trans(\n                                                        \"academic.delete_batch_subjects\"\n                                                      ),\n                                                      expression:\n                                                        \"trans('academic.delete_batch_subjects')\",\n                                                    },\n                                                  ],\n                                                  key: `delete_${batch.id}`,\n                                                  staticClass:\n                                                    \"dropdown-item custom-dropdown\",\n                                                },\n                                                [\n                                                  _c(\"i\", {\n                                                    staticClass: \"fas fa-trash\",\n                                                  }),\n                                                  _vm._v(\n                                                    \" \" +\n                                                      _vm._s(\n                                                        _vm.trans(\n                                                          \"general.delete\"\n                                                        )\n                                                      )\n                                                  ),\n                                                ]\n                                              )\n                                            : _vm._e(),\n                                        ]\n                                      ),\n                                    ])\n                                  : _vm._e(),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: { textContent: _vm._s(batch.name) },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                batch.subjects\n                                  ? _c(\n                                      \"div\",\n                                      { staticClass: \"table-responsive\" },\n                                      [\n                                        _c(\n                                          \"table\",\n                                          { staticClass: \"table table-hover\" },\n                                          [\n                                            _c(\"thead\", [\n                                              _c(\"tr\", [\n                                                _c(\"th\", [\n                                                  _vm._v(\n                                                    _vm._s(\n                                                      _vm.trans(\n                                                        \"academic.subject_name\"\n                                                      )\n                                                    )\n                                                  ),\n                                                ]),\n                                                _vm._v(\" \"),\n                                                _c(\"th\", [\n                                                  _vm._v(\n                                                    _vm._s(\n                                                      _vm.trans(\n                                                        \"academic.subject_code\"\n                                                      )\n                                                    )\n                                                  ),\n                                                ]),\n                                                _vm._v(\" \"),\n                                                _c(\"th\", [\n                                                  _vm._v(\n                                                    _vm._s(\n                                                      _vm.trans(\n                                                        \"academic.subject_max_class_per_week\"\n                                                      )\n                                                    )\n                                                  ),\n                                                ]),\n                                                _vm._v(\" \"),\n                                                _c(\"th\", [\n                                                  _vm._v(\n                                                    _vm._s(\n                                                      _vm.trans(\n                                                        \"academic.subject_is_elective\"\n                                                      )\n                                                    )\n                                                  ),\n                                                ]),\n                                                _vm._v(\" \"),\n                                                _c(\"th\", [\n                                                  _vm._v(\n                                                    _vm._s(\n                                                      _vm.trans(\n                                                        \"academic.subject_has_no_exam\"\n                                                      )\n                                                    )\n                                                  ),\n                                                ]),\n                                                _vm._v(\" \"),\n                                                _c(\n                                                  \"th\",\n                                                  {\n                                                    staticClass: \"table-option\",\n                                                  },\n                                                  [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        _vm.trans(\n                                                          \"general.action\"\n                                                        )\n                                                      )\n                                                    ),\n                                                  ]\n                                                ),\n                                              ]),\n                                            ]),\n                                            _vm._v(\" \"),\n                                            _c(\n                                              \"tbody\",\n                                              _vm._l(\n                                                batch.subjects,\n                                                function (subject) {\n                                                  return _c(\"tr\", [\n                                                    _c(\"td\", [\n                                                      _vm._v(\n                                                        \"\\n                                                        \" +\n                                                          _vm._s(subject.name) +\n                                                          \"\\n                                                        \"\n                                                      ),\n                                                      subject.options &&\n                                                      subject.options.group\n                                                        ? _c(\"span\", [\n                                                            _vm._v(\n                                                              \"(\" +\n                                                                _vm._s(\n                                                                  subject\n                                                                    .options\n                                                                    .group\n                                                                ) +\n                                                                \")\"\n                                                            ),\n                                                          ])\n                                                        : _vm._e(),\n                                                    ]),\n                                                    _vm._v(\" \"),\n                                                    _c(\"td\", [\n                                                      _vm._v(\n                                                        \"\\n                                                        \" +\n                                                          _vm._s(subject.code) +\n                                                          \" \"\n                                                      ),\n                                                      subject.shortcode\n                                                        ? _c(\"span\", [\n                                                            _vm._v(\n                                                              \"(\" +\n                                                                _vm._s(\n                                                                  subject.shortcode\n                                                                ) +\n                                                                \")\"\n                                                            ),\n                                                          ])\n                                                        : _vm._e(),\n                                                    ]),\n                                                    _vm._v(\" \"),\n                                                    _c(\"td\", {\n                                                      domProps: {\n                                                        textContent: _vm._s(\n                                                          subject.max_class_per_week\n                                                        ),\n                                                      },\n                                                    }),\n                                                    _vm._v(\" \"),\n                                                    _c(\"td\", {\n                                                      domProps: {\n                                                        innerHTML: _vm._s(\n                                                          _vm.getElectiveData(\n                                                            subject\n                                                          )\n                                                        ),\n                                                      },\n                                                    }),\n                                                    _vm._v(\" \"),\n                                                    _c(\"td\", {\n                                                      domProps: {\n                                                        innerHTML: _vm._s(\n                                                          _vm.getExamData(\n                                                            subject\n                                                          )\n                                                        ),\n                                                      },\n                                                    }),\n                                                    _vm._v(\" \"),\n                                                    _c(\n                                                      \"td\",\n                                                      {\n                                                        staticClass:\n                                                          \"table-option\",\n                                                      },\n                                                      [\n                                                        _c(\n                                                          \"div\",\n                                                          {\n                                                            staticClass:\n                                                              \"btn-group\",\n                                                          },\n                                                          [\n                                                            _vm.hasPermission(\n                                                              \"edit-subject\"\n                                                            )\n                                                              ? _c(\n                                                                  \"button\",\n                                                                  {\n                                                                    directives:\n                                                                      [\n                                                                        {\n                                                                          name: \"tooltip\",\n                                                                          rawName:\n                                                                            \"v-tooltip\",\n                                                                          value:\n                                                                            _vm.trans(\n                                                                              \"academic.edit_subject\"\n                                                                            ),\n                                                                          expression:\n                                                                            \"trans('academic.edit_subject')\",\n                                                                        },\n                                                                      ],\n                                                                    staticClass:\n                                                                      \"btn btn-info btn-xs\",\n                                                                    on: {\n                                                                      click:\n                                                                        function (\n                                                                          $event\n                                                                        ) {\n                                                                          $event.preventDefault()\n                                                                          return _vm.editSubject(\n                                                                            subject\n                                                                          )\n                                                                        },\n                                                                    },\n                                                                  },\n                                                                  [\n                                                                    _c(\"i\", {\n                                                                      staticClass:\n                                                                        \"fas fa-edit\",\n                                                                    }),\n                                                                  ]\n                                                                )\n                                                              : _vm._e(),\n                                                            _vm._v(\" \"),\n                                                            _vm.hasPermission(\n                                                              \"delete-subject\"\n                                                            )\n                                                              ? _c(\n                                                                  \"button\",\n                                                                  {\n                                                                    directives:\n                                                                      [\n                                                                        {\n                                                                          name: \"confirm\",\n                                                                          rawName:\n                                                                            \"v-confirm\",\n                                                                          value:\n                                                                            {\n                                                                              ok: _vm.confirmDelete(\n                                                                                subject\n                                                                              ),\n                                                                            },\n                                                                          expression:\n                                                                            \"{ok: confirmDelete(subject)}\",\n                                                                        },\n                                                                        {\n                                                                          name: \"tooltip\",\n                                                                          rawName:\n                                                                            \"v-tooltip\",\n                                                                          value:\n                                                                            _vm.trans(\n                                                                              \"academic.delete_subject\"\n                                                                            ),\n                                                                          expression:\n                                                                            \"trans('academic.delete_subject')\",\n                                                                        },\n                                                                      ],\n                                                                    key: subject.id,\n                                                                    staticClass:\n                                                                      \"btn btn-danger btn-xs\",\n                                                                  },\n                                                                  [\n                                                                    _c(\"i\", {\n                                                                      staticClass:\n                                                                        \"fas fa-trash\",\n                                                                    }),\n                                                                  ]\n                                                                )\n                                                              : _vm._e(),\n                                                          ]\n                                                        ),\n                                                      ]\n                                                    ),\n                                                  ])\n                                                }\n                                              ),\n                                              0\n                                            ),\n                                          ]\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]),\n                            ])\n                          }),\n                          0\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.batches.total\n                  ? _c(\n                      \"module-info\",\n                      {\n                        attrs: {\n                          module: \"academic\",\n                          title: \"subject_module_title\",\n                          description: \"subject_module_description\",\n                          icon: \"list\",\n                        },\n                      },\n                      [\n                        _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                          !_vm.showCreatePanel &&\n                          _vm.hasPermission(\"create-subject\")\n                            ? _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-info btn-md\",\n                                  on: {\n                                    click: function ($event) {\n                                      _vm.showCreatePanel = !_vm.showCreatePanel\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                  _vm._v(\n                                    \" \" + _vm._s(_vm.trans(\"general.add_new\"))\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.batches,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getSubjects,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.hasPermission(\"edit-subject\") && _vm.showReorderModal\n        ? _c(\"transition\", { attrs: { name: \"modal\" } }, [\n            _c(\"div\", { staticClass: \"modal-mask\" }, [\n              _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n                _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-header\" },\n                    [\n                      _vm._t(\"header\", function () {\n                        return [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(_vm.trans(\"academic.reorder_subject\")) +\n                              \"\\n                            \"\n                          ),\n                          _c(\n                            \"span\",\n                            {\n                              staticClass: \"float-right pointer\",\n                              on: {\n                                click: function ($event) {\n                                  _vm.showReorderModal = false\n                                },\n                              },\n                            },\n                            [_vm._v(\"x\")]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-body\" },\n                    [\n                      _vm._t(\"body\", function () {\n                        return [\n                          _c(\n                            \"draggable\",\n                            {\n                              staticClass: \"list-group\",\n                              on: {\n                                start: function ($event) {\n                                  _vm.drag = true\n                                },\n                                end: function ($event) {\n                                  _vm.drag = false\n                                },\n                              },\n                              model: {\n                                value: _vm.subject_list,\n                                callback: function ($$v) {\n                                  _vm.subject_list = $$v\n                                },\n                                expression: \"subject_list\",\n                              },\n                            },\n                            _vm._l(_vm.subject_list, function (item) {\n                              return _c(\n                                \"div\",\n                                {\n                                  key: item.id,\n                                  staticClass: \"list-group-item pointer\",\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-arrows-alt\" }),\n                                  _vm._v(\" \" + _vm._s(item)),\n                                ]\n                              )\n                            }),\n                            0\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"button\",\n                            {\n                              staticClass: \"btn btn-info pull-right m-t-10\",\n                              attrs: { type: \"button\" },\n                              on: { click: _vm.reorderSubject },\n                            },\n                            [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                ]),\n              ]),\n            ]),\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=29241e40&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('29241e40')) {\n      api.createRecord('29241e40', component.options)\n    } else {\n      api.reload('29241e40', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=29241e40&\", function () {\n      api.rerender('29241e40', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/academic/subject/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2e1f4134&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2e1f4134')) {\n      api.createRecord('2e1f4134', component.options)\n    } else {\n      api.reload('2e1f4134', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=2e1f4134&\", function () {\n      api.rerender('2e1f4134', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/academic/subject/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=29241e40&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=2e1f4134&\""],"names":[],"sourceRoot":""}