{"version":3,"file":"js/chunks/js/academic/certificate/edit.js?id=3d6046c9fa9aa602","mappings":";;;;;;;;;;;;;;AAyBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACukBA;AACA;AACA;AAEA;AAcA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5bA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAGA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AASA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAYA;AAAA;AACA;AAAA;AA+BA;AAAA;AAUA;AAGA;AAqCA;AAAA;AAKA;AAEA;AAAA;AAAA;AACA;AACA;AAGA;AAIA;AACA;AACA;AAcA;AAEA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AAYA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAYA;AAAA;AACA;AAAA;AA+BA;AAAA;AASA;AA6BA;AAAA;AAKA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAcA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AAWA;AAAA;AACA;AAAA;AACA;AAAA;AAUA;AAAA;AAWA;AAAA;AAYA;AAAA;AAcA;AAAA;AACA;AAAA;AACA;AAAA;AAUA;AAAA;AAUA;AAAA;AAWA;AAAA;AAgBA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AAMA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AACA;;;;;;;;;;;;;;;;;;AC3pBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/academic/certificate/edit.vue","webpack://InstiKit/resources/js/views/academic/certificate/form.vue","webpack://InstiKit/./resources/js/views/academic/certificate/edit.vue","webpack://InstiKit/./resources/js/views/academic/certificate/form.vue","webpack://InstiKit/./resources/js/views/academic/certificate/edit.vue?86f0","webpack://InstiKit/./resources/js/views/academic/certificate/form.vue?3c0f","webpack://InstiKit/./resources/js/views/academic/certificate/edit.vue?2ab2","webpack://InstiKit/./resources/js/views/academic/certificate/form.vue?8751","webpack://InstiKit/./resources/js/views/academic/certificate/edit.vue?62ca"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('academic.edit_certificate')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/academic/certificate')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('academic.certificate')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card p-4\">\r\n                <div class=\"card-body\">\r\n                    <certificate-form :uuid=\"uuid\"></certificate-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import certificateForm from './form';\r\n\r\n    export default {\r\n        components : { certificateForm },\r\n        data() {\r\n            return {\r\n                uuid:this.$route.params.uuid\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('edit-certificate')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","<template>\r\n\t<div>\r\n\t    <form @submit.prevent=\"proceed\" @keydown=\"certificateForm.errors.clear($event.target.name)\">\r\n\t        <div class=\"row\">\r\n\t        \t<div class=\"col-12 col-sm-5\">\r\n\t                <div class=\"form-group\">\r\n\t                    <label for=\"\">{{trans('academic.certificate_template')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_certificate_template\" name=\"certificate_template_id\" id=\"certificate_template_id\" :options=\"certificate_templates\" :placeholder=\"trans('academic.select_certificate_template')\" @select=\"onCertificateTemplateSelect\" @close=\"certificateForm.errors.clear('certificate_template_id')\" @remove=\"onCertificateTemplateRemove\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!certificate_templates.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"certificateForm\" prop-name=\"certificate_template_id\"></show-error>\r\n\t                </div>\r\n\t\t            <div v-if=\"type == 'student'\">\r\n\t\t                <div class=\"form-group\">\r\n\t\t\t            \t<div class=\"input-group mb-3\">\r\n\t\t                    \t<input class=\"form-control\" type=\"text\" v-model=\"studentFilter.name\" name=\"student_name\" :placeholder=\"trans('student.student_search_by_name')\">\r\n\t\t\t\t\t\t\t\t<div class=\"input-group-append\">\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-info pull-right\" @click=\"searchStudent\"><i class=\"fas fa-search\"></i> {{trans('general.search')}}</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t                </div>\r\n\t\t                <template v-if=\"students.total\" class=\"m-b-10\">\r\n\t\t\t            \t<div class=\"table-responsive\">\r\n\t\t\t            \t\t<table class=\"table table-sm\">\r\n\t\t\t            \t\t\t<thead>\r\n\t\t\t            \t\t\t\t<tr>\r\n\t\t\t            \t\t\t\t\t<th>{{trans('student.name')}}</th>\r\n\t\t\t            \t\t\t\t\t<th>{{trans('academic.batch')}}</th>\r\n\t\t\t            \t\t\t\t\t<th>{{trans('student.first_guardian_name')}}</th>\r\n\t\t\t            \t\t\t\t\t<th>{{trans('student.contact_number')}}</th>\r\n\t\t\t            \t\t\t\t\t<th class=\"table-option\"></th>\r\n\t\t\t            \t\t\t\t</tr>\r\n\t\t\t            \t\t\t</thead>\r\n\t\t\t            \t\t\t<tbody>\r\n\t\t\t            \t\t\t\t<template v-for=\"student in students.data\">\r\n\t\t\t\t            \t\t\t\t<tr v-for=\"student_record in student.student_records\">\r\n\t\t\t\t            \t\t\t\t\t<td>{{getStudentName(student)}}</td>\r\n\t\t\t\t            \t\t\t\t\t<td>{{student_record.batch.course.name+' '+student_record.batch.name}}</td>\r\n\t\t\t\t            \t\t\t\t\t<td>{{student.parent.first_guardian_name}}</td>\r\n\t\t\t\t            \t\t\t\t\t<td>{{student.contact_number}}</td>\r\n\t\t\t\t            \t\t\t\t\t<td class=\"table-option\">\r\n\t\t\t\t            \t\t\t\t\t\t<button type=\"button\" class=\"btn btn-sm btn-info\" @click=\"selectStudentRecord(student, student_record)\">{{trans('student.select_student')}}</button>\r\n\t\t\t\t            \t\t\t\t\t</td>\r\n\t\t\t\t            \t\t\t\t</tr>\r\n\t\t\t\t            \t\t\t</template>\r\n\t\t\t            \t\t\t</tbody>\r\n\t\t\t            \t\t</table>\r\n\t\t\t            \t</div>\r\n\t\t\t            \t<pagination-record :page-length.sync=\"studentFilter.page_length\" :records=\"students\" @updateRecords=\"searchStudent\"></pagination-record>\r\n\t\t\t            </template>\r\n\t\t            </div>\r\n\r\n\t\t            <div v-if=\"type == 'employee'\">\r\n\t\t                <div class=\"form-group\">\r\n\t\t\t            \t<div class=\"input-group mb-3\">\r\n\t\t                    \t<input class=\"form-control\" type=\"text\" v-model=\"employeeFilter.name\" name=\"employee_name\" :placeholder=\"trans('employee.employee_search_by_name')\">\r\n\t\t\t\t\t\t\t\t<div class=\"input-group-append\">\r\n\t\t\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-info pull-right\" @click=\"searchEmployee\"><i class=\"fas fa-search\"></i> {{trans('general.search')}}</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t                </div>\r\n\r\n\t\t                <template v-if=\"employees.total\" class=\"m-b-10\">\r\n\t\t\t            \t<div class=\"table-responsive\">\r\n\t\t\t            \t\t<table class=\"table table-sm\">\r\n\t\t\t            \t\t\t<thead>\r\n\t\t\t            \t\t\t\t<tr>\r\n\t\t\t            \t\t\t\t\t<th>{{trans('employee.code')}}</th>\r\n\t\t\t            \t\t\t\t\t<th>{{trans('employee.name')}}</th>\r\n\t\t\t            \t\t\t\t\t<th>{{trans('employee.father_name')}}</th>\r\n\t\t\t            \t\t\t\t\t<th>{{trans('employee.contact_number')}}</th>\r\n\t\t\t            \t\t\t\t\t<th class=\"table-option\"></th>\r\n\t\t\t            \t\t\t\t</tr>\r\n\t\t\t            \t\t\t</thead>\r\n\t\t\t            \t\t\t<tbody>\r\n\t\t\t            \t\t\t\t<tr v-for=\"employee in employees.data\">\r\n\t\t\t            \t\t\t\t\t<td>{{getEmployeeCode(employee)}}</td>\r\n\t\t\t            \t\t\t\t\t<td>{{getEmployeeName(employee)}}</td>\r\n\t\t\t            \t\t\t\t\t<td>{{employee.father_name}}</td>\r\n\t\t\t            \t\t\t\t\t<td>{{employee.contact_number}}</td>\r\n\t\t\t            \t\t\t\t\t<td class=\"table-option\">\r\n\t\t\t            \t\t\t\t\t\t<button type=\"button\" class=\"btn btn-sm btn-info\" @click=\"selectEmployee(employee)\">{{trans('employee.select_employee')}}</button>\r\n\t\t\t            \t\t\t\t\t</td>\r\n\t\t\t            \t\t\t\t</tr>\r\n\t\t\t            \t\t\t</tbody>\r\n\t\t\t            \t\t</table>\r\n\t\t\t            \t</div>\r\n\t\t\t            \t<pagination-record :page-length.sync=\"employeeFilter.page_length\" :records=\"employees\" @updateRecords=\"searchEmployee\"></pagination-record>\r\n\t\t\t            </template>\r\n\t\t            </div>\r\n\r\n\t            \t<div class=\"m-b-20\" v-if=\"type == 'student' && selected_student && selected_student_record\">\r\n\t            \t\t<div class=\"row\">\r\n\t            \t\t\t<div class=\"col-6\">{{trans('student.name')+': '+getStudentName(selected_student)}}</div>\r\n\t            \t\t\t<div class=\"col-6\">{{trans('student.father_name')+': '+getStudentFatherName(selected_student)}} <br /></div>\r\n\t            \t\t\t<div class=\"col-6\">{{trans('academic.batch')+': '+selected_student_record.batch.course.name+' '+selected_student_record.batch.name}}</div>\r\n\t            \t\t\t<div class=\"col-6\">{{trans('student.contact_number')+': '+selected_student.contact_number}}</div>\r\n\t            \t\t</div>\r\n\t            \t</div>\r\n\t            \t<div class=\"m-b-20\" v-if=\"type == 'employee' && selected_employee\">\r\n\t            \t\t<div class=\"row\">\r\n\t            \t\t\t<div class=\"col-6\">{{trans('employee.code')+': '+getEmployeeCode(selected_employee)}}</div>\r\n\t            \t\t\t<div class=\"col-6\">{{trans('employee.name')+': '+getEmployeeName(selected_employee)}}</div>\r\n\t            \t\t\t<div class=\"col-6\">{{trans('employee.father_name')+': '+selected_employee.father_name}} <br /></div>\r\n\t            \t\t\t<div class=\"col-6\">{{trans('employee.contact_number')+': '+selected_employee.contact_number}}</div>\r\n\t            \t\t</div>\r\n\t            \t</div>\r\n\r\n\t            \t<div class=\"form-group\" v-for=\"(custom_field, index) in certificateForm.custom_fields\">\r\n                        <label for=\"\">{{custom_field.name}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"custom_field.value\" :name=\"getCustomFieldName(index)\" :placeholder=\"trans('academic.enter_certificate_template_custom_field_value')\">\r\n                        <show-error :form-name=\"certificateForm\" :prop-name=\"getCustomFieldName(index)\"></show-error>\r\n\t            \t</div>\r\n\r\n\t            \t<button type=\"submit\" v-if=\"certificateForm.certificate_template_id\" class=\"btn btn-info\">{{trans('general.save')}}</button>\r\n\t        \t</div>\r\n\t        \t<div class=\"col-12 col-sm-7\">\r\n\t        \t\t<div class=\"border p-4\" v-if=\"certificateForm.body\" v-html=\"certificateForm.body\"></div>\r\n\t        \t</div>\r\n\t        </div>\r\n\t    </form>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tcomponents: {},\r\n\t\tprops: ['uuid'],\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tcertificateForm: new Form({\r\n\t\t\t\t\tcertificate_template_id: '',\r\n\t\t\t\t\tbody: '',\r\n\t\t\t\t\tstudent_record_id: '',\r\n\t\t\t\t\temployee_id: '',\r\n\t\t\t\t\tcustom_fields: []\r\n\t\t\t\t}),\r\n\t\t\t\ttype: '',\r\n\t\t\t\tcertificate_templates: [],\r\n\t\t\t\tcertificate_template_details: [],\r\n\t\t\t\tselected_certificate_template: null,\r\n\t\t\t\tselected_student: null,\r\n\t\t\t\tselected_student_record: null,\r\n\t\t\t\tselected_employee: null,\r\n\t\t\t\tstudentFilter: {\r\n\t\t\t\t\tname: '',\r\n\t\t\t\t\tpage_length: helper.getConfig('page_length')\r\n\t\t\t\t},\r\n\t\t\t\temployeeFilter: {\r\n\t\t\t\t\tname: '',\r\n\t\t\t\t\tpage_length: helper.getConfig('page_length')\r\n\t\t\t\t},\r\n\t\t\t\tstudents: {\r\n\t\t\t\t\tdata: [],\r\n\t\t\t\t\ttotal: 0\r\n\t\t\t\t},\r\n\t\t\t\temployees: {\r\n\t\t\t\t\tdata: [],\r\n\t\t\t\t\ttotal: 0\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted(){\r\n\t\t\tthis.getPreRequisite();\r\n\t\t},\r\n\t\tmethods: {\r\n            getStudentName(student){\r\n                return helper.getStudentName(student);\r\n            },\r\n            getStudentFatherName(student){\r\n            \treturn student.parent.father_name;\r\n            },\r\n            getEmployeeName(employee){\r\n                return helper.getEmployeeName(employee);\r\n            },\r\n            getEmployeeCode(employee){\r\n                return helper.getEmployeeCode(employee);\r\n            },\r\n            getCustomFieldName(index){\r\n            \treturn index+'_custom_field';\r\n            },\r\n        \tgetPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/certificate/pre-requisite')\r\n                    .then(response => {\r\n                        this.certificate_templates = response.certificate_templates;\r\n                        this.certificate_template_details = response.certificate_template_details;\r\n\r\n\t\t\t\t\t\tif (this.uuid)\r\n\t\t\t\t\t\t\tthis.get();\r\n\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n        \t},\r\n\t\t\tonCertificateTemplateSelect(selectedOption){\r\n\t\t\t\tthis.certificateForm.certificate_template_id = selectedOption.id;\r\n\t\t\t\tlet certificate_template = this.certificate_template_details.find(o => o.id == selectedOption.id);\r\n\r\n\t\t\t\tthis.certificateForm.custom_fields = [];\r\n\r\n\t\t\t\tif (typeof certificate_template != 'undefined') {\r\n\t\t\t\t\tthis.type = certificate_template.type;\r\n\t\t\t\t\tthis.certificateForm.body = certificate_template.body;\r\n\t\t\t\t\tcertificate_template.options.custom_fields.forEach(custom_field => {\r\n\t\t\t\t\t\tthis.certificateForm.custom_fields.push({\r\n\t\t\t\t\t\t\tname: custom_field,\r\n\t\t\t\t\t\t\tvalue: ''\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCertificateTemplateRemove(removedOption){\r\n\t\t\t\tthis.certificateForm.certificate_template_id = '';\r\n\t\t\t\tthis.type = '';\r\n\t\t\t\tthis.certificateForm.body = '';\r\n\t\t\t},\r\n\t\t\tsearchStudent(page){\r\n\t\t\t\tlet loader = this.$loading.show();\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                let url = helper.getFilterURL(this.studentFilter);\r\n\t\t\t\taxios.get('/api/student/search/name?page=' + page + url)\r\n\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\tthis.students = response;\r\n\r\n\t\t\t\t\t\tif(! response.total) {\r\n\t\t\t\t\t\t\tloader.hide();\r\n\t\t\t\t\t\t\treturn toastr.error(i18n.general.no_search_result_found);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tloader.hide();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tloader.hide();\r\n\t\t\t\t\t\thelper.showErrorMsg(error);\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tselectStudentRecord(student, student_record){\r\n\t\t\t\tthis.certificateForm.student_record_id = student_record.id;\r\n\t\t\t\tthis.selected_student = student;\r\n\t\t\t\tthis.selected_student_record = student_record;\r\n\t\t\t\tthis.students = [];\r\n\t\t\t\tthis.studentFilter.name = '';\r\n                this.updateTemplate();\r\n\t\t\t},\r\n\t\t\tsearchEmployee(page){\r\n\t\t\t\tlet loader = this.$loading.show();\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                let url = helper.getFilterURL(this.employeeFilter);\r\n\t\t\t\taxios.get('/api/employee/search/name?page=' + page + url)\r\n\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\tthis.employees = response;\r\n\r\n\t\t\t\t\t\tif(! response.total) {\r\n\t\t\t\t\t\t\tloader.hide();\r\n\t\t\t\t\t\t\treturn toastr.error(i18n.general.no_search_result_found);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tloader.hide();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tloader.hide();\r\n\t\t\t\t\t\thelper.showErrorMsg(error);\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tselectEmployee(employee){\r\n\t\t\t\tthis.certificateForm.employee_id = employee.id;\r\n\t\t\t\tthis.selected_employee = employee;\r\n\t\t\t\tthis.employees = [];\r\n\t\t\t\tthis.employeeFilter.name = '';\r\n                this.updateTemplate();\r\n\t\t\t},\r\n\t\t\tupdateTemplate(){\r\n\t\t\t\tlet certificate_template = this.certificate_template_details.find(o => o.id == this.certificateForm.certificate_template_id);\r\n\r\n\t\t\t\tif (typeof certificate_template == 'undefined')\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tlet body = certificate_template.body;\r\n\r\n\t\t\t\tbody = this.updateCustomFields(body);\r\n\r\n\t\t\t\tif (!this.selected_student && !this.selected_employee) {\r\n\t\t\t\t\tthis.certificateForm.body = body;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.certificateForm.body = (this.selected_student) ? this.updateStudentRecord(body) : this.updateEmployeeRecord(body);\r\n\t\t\t},\r\n\t\t\tupdateStudentRecord(body) {\r\n\t\t\t\tlet student = this.selected_student;\r\n            \tlet student_record = this.selected_student_record;\r\n            \tlet parent = student.parent;\r\n\r\n            \tif (! student_record || ! parent)\r\n            \t\treturn body;\r\n\r\n            \tlet name = this.getStudentName(student);\r\n\r\n            \treturn body.replace(\"#NAME#\", name)\r\n            \t\t.replace(\"#FIRST_NAME#\", student.first_name)\r\n            \t\t.replace(\"#LAST_NAME#\", student.last_name || '')\r\n            \t\t.replace(\"#FATHER_NAME#\", parent.father_name)\r\n            \t\t.replace(\"#MOTHER_NAME#\", parent.mother_name)\r\n            \t\t.replace(\"#COURSE#\", student_record.batch.course.name)\r\n            \t\t.replace(\"#BATCH#\", student_record.batch.name)\r\n            \t\t.replace(\"#SESSION#\", helper.getDefaultAcademicSession().name)\r\n            \t\t.replace(\"#DATE_OF_BIRTH#\", helper.formatDate(student.date_of_birth))\r\n            \t\t.replace(\"#ADMISSION_NUMBER#\", helper.getAdmissionNumber(student_record.admission))\r\n            \t\t.replace(\"#DATE_OF_ADMISSION#\", helper.formatDate(student_record.admission.date_of_admission))\r\n            \t\t.replace(\"#ROLL_NUMBER#\", helper.getRollNumber(student_record))\r\n            \t\t.replace(\"#CURRENT_DATE#\", helper.defaultDate())\r\n            \t\t.replace(\"#CURRENT_TIME#\", helper.defaultTime())\r\n            \t\t.replace(\"#CURRENT_DATE_TIME#\", helper.defaultDateTime())\r\n            \t\t.replace(\"#PRESENT_ADDRESS#\", student.present_address)\r\n            \t\t.replace(\"#PERMANENT_ADDRESS#\", student.permanent_address);\r\n\r\n\t\t\t},\r\n\t\t\tupdateEmployeeRecord(body) {\r\n\t\t\t\tlet employee = this.selected_employee;\r\n\r\n            \treturn body.replace(\"#NAME#\", this.getEmployeeName(employee))\r\n            \t\t.replace(\"#FIRST_NAME#\", employee.first_name)\r\n            \t\t.replace(\"#LAST_NAME#\", employee.last_name)\r\n            \t\t.replace(\"#FATHER_NAME#\", employee.father_name)\r\n            \t\t.replace(\"#MOTHER_NAME#\", employee.mother_name)\r\n            \t\t.replace(\"#DATE_OF_BIRTH#\", helper.formatDate(employee.date_of_birth))\r\n            \t\t.replace(\"#EMPLOYEE_CODE#\", this.getEmployeeCode(employee))\r\n            \t\t.replace(\"#DESIGNATION#\", helper.getEmployeeDesignationOnDate(employee))\r\n            \t\t.replace(\"#DATE_OF_JOINING#\", helper.getEmployeeDateOfJoining(employee))\r\n            \t\t.replace(\"#CURRENT_DATE#\", helper.defaultDate())\r\n            \t\t.replace(\"#CURRENT_TIME#\", helper.defaultTime())\r\n            \t\t.replace(\"#CURRENT_DATE_TIME#\", helper.defaultDateTime())\r\n            \t\t.replace(\"#PRESENT_ADDRESS#\", employee.present_address)\r\n            \t\t.replace(\"#PERMANENT_ADDRESS#\", employee.permanent_address);\r\n\t\t\t},\r\n\t\t\tupdateCustomFields(body) {\r\n\t\t\t\tthis.certificateForm.custom_fields.forEach(custom_field => {\r\n\t\t\t\t\tif (custom_field.value)\r\n\t\t\t\t\t\tbody = body.replace('#'+custom_field.name+'#', custom_field.value);\r\n\t\t\t\t})\r\n\r\n\t\t\t\treturn body;\r\n\t\t\t},\r\n            proceed(){\r\n                if(this.uuid)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.certificateForm.post('/api/certificate')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.type = null;\r\n                        this.selected_certificate_template = null;\r\n                        this.certificateForm.custom_fields = [];\r\n                        this.selected_student = null;\r\n                        this.selected_student_record = null;\r\n                        this.selected_employee = null;\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/certificate/'+this.uuid)\r\n                    .then(response => {\r\n                        this.certificateForm.certificate_template_id = response.certificate.certificate_template_id;\r\n                        this.selected_certificate_template = (response.certificate.certificate_template_id) ? {id: response.certificate.certificate_template_id, name: response.certificate.certificate_template.name} : null;\r\n                        this.certificateForm.student_record_id = response.certificate.student_record_id;\r\n                        this.certificateForm.employee_id = response.certificate.employee_id;\r\n                        this.type = response.certificate.certificate_template.type;\r\n\r\n                        if (this.type == 'student') {\r\n                        \tthis.selected_student = response.certificate.student_record.student;\r\n                        \tthis.selected_student.student_records = [response.certificate.student_record];\r\n                        \tthis.selected_student.parent = response.certificate.student_record.student.parent;\r\n                        } else if (this.type == 'employee') {\r\n                        \tthis.selected_employee = response.certificate.employee;\r\n                        }\r\n\r\n                        this.certificateForm.body = response.certificate.body;\r\n                        this.certificateForm.custom_fields = [];\r\n\r\n                        if (response.certificate.options && response.certificate.options.custom_fields) {\r\n                        \tlet custom_fields = [];\r\n\t                        response.certificate.options.custom_fields.forEach(custom_field => {\r\n\t                        \tcustom_fields.push({\r\n\t                        \t\tname: custom_field.name,\r\n\t                        \t\tvalue: custom_field. value\r\n\t                        \t});\r\n\t                        });\r\n\t                        this.certificateForm.custom_fields = custom_fields;\r\n                        }\r\n\r\n\t                    loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/academic/certificate');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.certificateForm.patch('/api/certificate/'+this.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/academic/certificate');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            }\r\n\t\t},\r\n\t\tcomputed: {\r\n\r\n\t\t},\r\n\t\tfilters: {\r\n\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\t'certificateForm.custom_fields': {\r\n\t\t\t\thandler(val) {\r\n\t\t\t\t\tthis.updateTemplate()\r\n\t\t\t\t},\r\n      \t\t\tdeep: true\r\n      \t\t}\r\n\t\t}\r\n\t}\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"academic.edit_certificate\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/academic/certificate\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"academic.certificate\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card p-4\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"card-body\" },\n          [_c(\"certificate-form\", { attrs: { uuid: _vm.uuid } })],\n          1\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.certificateForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"col-12 col-sm-5\" },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"academic.certificate_template\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"certificate_template_id\",\n                        id: \"certificate_template_id\",\n                        options: _vm.certificate_templates,\n                        placeholder: _vm.trans(\n                          \"academic.select_certificate_template\"\n                        ),\n                      },\n                      on: {\n                        select: _vm.onCertificateTemplateSelect,\n                        close: function ($event) {\n                          return _vm.certificateForm.errors.clear(\n                            \"certificate_template_id\"\n                          )\n                        },\n                        remove: _vm.onCertificateTemplateRemove,\n                      },\n                      model: {\n                        value: _vm.selected_certificate_template,\n                        callback: function ($$v) {\n                          _vm.selected_certificate_template = $$v\n                        },\n                        expression: \"selected_certificate_template\",\n                      },\n                    },\n                    [\n                      !_vm.certificate_templates.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                                \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                            \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.certificateForm,\n                      \"prop-name\": \"certificate_template_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _vm.type == \"student\"\n                ? _c(\n                    \"div\",\n                    [\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\"div\", { staticClass: \"input-group mb-3\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.studentFilter.name,\n                                expression: \"studentFilter.name\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: \"student_name\",\n                              placeholder: _vm.trans(\n                                \"student.student_search_by_name\"\n                              ),\n                            },\n                            domProps: { value: _vm.studentFilter.name },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.studentFilter,\n                                  \"name\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"input-group-append\" }, [\n                            _c(\n                              \"button\",\n                              {\n                                staticClass: \"btn btn-info pull-right\",\n                                attrs: { type: \"button\" },\n                                on: { click: _vm.searchStudent },\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-search\" }),\n                                _vm._v(\n                                  \" \" + _vm._s(_vm.trans(\"general.search\"))\n                                ),\n                              ]\n                            ),\n                          ]),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _vm.students.total\n                        ? [\n                            _c(\"div\", { staticClass: \"table-responsive\" }, [\n                              _c(\"table\", { staticClass: \"table table-sm\" }, [\n                                _c(\"thead\", [\n                                  _c(\"tr\", [\n                                    _c(\"th\", [\n                                      _vm._v(_vm._s(_vm.trans(\"student.name\"))),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", [\n                                      _vm._v(\n                                        _vm._s(_vm.trans(\"academic.batch\"))\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.trans(\n                                            \"student.first_guardian_name\"\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.trans(\"student.contact_number\")\n                                        )\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", { staticClass: \"table-option\" }),\n                                  ]),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"tbody\",\n                                  [\n                                    _vm._l(\n                                      _vm.students.data,\n                                      function (student) {\n                                        return _vm._l(\n                                          student.student_records,\n                                          function (student_record) {\n                                            return _c(\"tr\", [\n                                              _c(\"td\", [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.getStudentName(student)\n                                                  )\n                                                ),\n                                              ]),\n                                              _vm._v(\" \"),\n                                              _c(\"td\", [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    student_record.batch.course\n                                                      .name +\n                                                      \" \" +\n                                                      student_record.batch.name\n                                                  )\n                                                ),\n                                              ]),\n                                              _vm._v(\" \"),\n                                              _c(\"td\", [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    student.parent\n                                                      .first_guardian_name\n                                                  )\n                                                ),\n                                              ]),\n                                              _vm._v(\" \"),\n                                              _c(\"td\", [\n                                                _vm._v(\n                                                  _vm._s(student.contact_number)\n                                                ),\n                                              ]),\n                                              _vm._v(\" \"),\n                                              _c(\n                                                \"td\",\n                                                { staticClass: \"table-option\" },\n                                                [\n                                                  _c(\n                                                    \"button\",\n                                                    {\n                                                      staticClass:\n                                                        \"btn btn-sm btn-info\",\n                                                      attrs: { type: \"button\" },\n                                                      on: {\n                                                        click: function (\n                                                          $event\n                                                        ) {\n                                                          return _vm.selectStudentRecord(\n                                                            student,\n                                                            student_record\n                                                          )\n                                                        },\n                                                      },\n                                                    },\n                                                    [\n                                                      _vm._v(\n                                                        _vm._s(\n                                                          _vm.trans(\n                                                            \"student.select_student\"\n                                                          )\n                                                        )\n                                                      ),\n                                                    ]\n                                                  ),\n                                                ]\n                                              ),\n                                            ])\n                                          }\n                                        )\n                                      }\n                                    ),\n                                  ],\n                                  2\n                                ),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"pagination-record\", {\n                              attrs: {\n                                \"page-length\": _vm.studentFilter.page_length,\n                                records: _vm.students,\n                              },\n                              on: {\n                                \"update:pageLength\": function ($event) {\n                                  return _vm.$set(\n                                    _vm.studentFilter,\n                                    \"page_length\",\n                                    $event\n                                  )\n                                },\n                                \"update:page-length\": function ($event) {\n                                  return _vm.$set(\n                                    _vm.studentFilter,\n                                    \"page_length\",\n                                    $event\n                                  )\n                                },\n                                updateRecords: _vm.searchStudent,\n                              },\n                            }),\n                          ]\n                        : _vm._e(),\n                    ],\n                    2\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.type == \"employee\"\n                ? _c(\n                    \"div\",\n                    [\n                      _c(\"div\", { staticClass: \"form-group\" }, [\n                        _c(\"div\", { staticClass: \"input-group mb-3\" }, [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.employeeFilter.name,\n                                expression: \"employeeFilter.name\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: \"employee_name\",\n                              placeholder: _vm.trans(\n                                \"employee.employee_search_by_name\"\n                              ),\n                            },\n                            domProps: { value: _vm.employeeFilter.name },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.employeeFilter,\n                                  \"name\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"input-group-append\" }, [\n                            _c(\n                              \"button\",\n                              {\n                                staticClass: \"btn btn-info pull-right\",\n                                attrs: { type: \"button\" },\n                                on: { click: _vm.searchEmployee },\n                              },\n                              [\n                                _c(\"i\", { staticClass: \"fas fa-search\" }),\n                                _vm._v(\n                                  \" \" + _vm._s(_vm.trans(\"general.search\"))\n                                ),\n                              ]\n                            ),\n                          ]),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _vm.employees.total\n                        ? [\n                            _c(\"div\", { staticClass: \"table-responsive\" }, [\n                              _c(\"table\", { staticClass: \"table table-sm\" }, [\n                                _c(\"thead\", [\n                                  _c(\"tr\", [\n                                    _c(\"th\", [\n                                      _vm._v(\n                                        _vm._s(_vm.trans(\"employee.code\"))\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", [\n                                      _vm._v(\n                                        _vm._s(_vm.trans(\"employee.name\"))\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.trans(\"employee.father_name\")\n                                        )\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.trans(\"employee.contact_number\")\n                                        )\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", { staticClass: \"table-option\" }),\n                                  ]),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"tbody\",\n                                  _vm._l(\n                                    _vm.employees.data,\n                                    function (employee) {\n                                      return _c(\"tr\", [\n                                        _c(\"td\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.getEmployeeCode(employee)\n                                            )\n                                          ),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"td\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.getEmployeeName(employee)\n                                            )\n                                          ),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"td\", [\n                                          _vm._v(_vm._s(employee.father_name)),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"td\", [\n                                          _vm._v(\n                                            _vm._s(employee.contact_number)\n                                          ),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\n                                          \"td\",\n                                          { staticClass: \"table-option\" },\n                                          [\n                                            _c(\n                                              \"button\",\n                                              {\n                                                staticClass:\n                                                  \"btn btn-sm btn-info\",\n                                                attrs: { type: \"button\" },\n                                                on: {\n                                                  click: function ($event) {\n                                                    return _vm.selectEmployee(\n                                                      employee\n                                                    )\n                                                  },\n                                                },\n                                              },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.trans(\n                                                      \"employee.select_employee\"\n                                                    )\n                                                  )\n                                                ),\n                                              ]\n                                            ),\n                                          ]\n                                        ),\n                                      ])\n                                    }\n                                  ),\n                                  0\n                                ),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"pagination-record\", {\n                              attrs: {\n                                \"page-length\": _vm.employeeFilter.page_length,\n                                records: _vm.employees,\n                              },\n                              on: {\n                                \"update:pageLength\": function ($event) {\n                                  return _vm.$set(\n                                    _vm.employeeFilter,\n                                    \"page_length\",\n                                    $event\n                                  )\n                                },\n                                \"update:page-length\": function ($event) {\n                                  return _vm.$set(\n                                    _vm.employeeFilter,\n                                    \"page_length\",\n                                    $event\n                                  )\n                                },\n                                updateRecords: _vm.searchEmployee,\n                              },\n                            }),\n                          ]\n                        : _vm._e(),\n                    ],\n                    2\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.type == \"student\" &&\n              _vm.selected_student &&\n              _vm.selected_student_record\n                ? _c(\"div\", { staticClass: \"m-b-20\" }, [\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-6\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"student.name\") +\n                              \": \" +\n                              _vm.getStudentName(_vm.selected_student)\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-6\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"student.father_name\") +\n                              \": \" +\n                              _vm.getStudentFatherName(_vm.selected_student)\n                          ) + \" \"\n                        ),\n                        _c(\"br\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-6\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"academic.batch\") +\n                              \": \" +\n                              _vm.selected_student_record.batch.course.name +\n                              \" \" +\n                              _vm.selected_student_record.batch.name\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-6\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"student.contact_number\") +\n                              \": \" +\n                              _vm.selected_student.contact_number\n                          )\n                        ),\n                      ]),\n                    ]),\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.type == \"employee\" && _vm.selected_employee\n                ? _c(\"div\", { staticClass: \"m-b-20\" }, [\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-6\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"employee.code\") +\n                              \": \" +\n                              _vm.getEmployeeCode(_vm.selected_employee)\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-6\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"employee.name\") +\n                              \": \" +\n                              _vm.getEmployeeName(_vm.selected_employee)\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-6\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"employee.father_name\") +\n                              \": \" +\n                              _vm.selected_employee.father_name\n                          ) + \" \"\n                        ),\n                        _c(\"br\"),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-6\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"employee.contact_number\") +\n                              \": \" +\n                              _vm.selected_employee.contact_number\n                          )\n                        ),\n                      ]),\n                    ]),\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm._l(\n                _vm.certificateForm.custom_fields,\n                function (custom_field, index) {\n                  return _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(custom_field.name)),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: custom_field.value,\n                            expression: \"custom_field.value\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: _vm.getCustomFieldName(index),\n                          placeholder: _vm.trans(\n                            \"academic.enter_certificate_template_custom_field_value\"\n                          ),\n                        },\n                        domProps: { value: custom_field.value },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(custom_field, \"value\", $event.target.value)\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.certificateForm,\n                          \"prop-name\": _vm.getCustomFieldName(index),\n                        },\n                      }),\n                    ],\n                    1\n                  )\n                }\n              ),\n              _vm._v(\" \"),\n              _vm.certificateForm.certificate_template_id\n                ? _c(\n                    \"button\",\n                    { staticClass: \"btn btn-info\", attrs: { type: \"submit\" } },\n                    [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                  )\n                : _vm._e(),\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-7\" }, [\n            _vm.certificateForm.body\n              ? _c(\"div\", {\n                  staticClass: \"border p-4\",\n                  domProps: { innerHTML: _vm._s(_vm.certificateForm.body) },\n                })\n              : _vm._e(),\n          ]),\n        ]),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=1389329b&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1389329b')) {\n      api.createRecord('1389329b', component.options)\n    } else {\n      api.reload('1389329b', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=1389329b&\", function () {\n      api.rerender('1389329b', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/academic/certificate/edit.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=5f703756&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5f703756')) {\n      api.createRecord('5f703756', component.options)\n    } else {\n      api.reload('5f703756', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=5f703756&\", function () {\n      api.rerender('5f703756', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/academic/certificate/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=1389329b&\""],"names":[],"sourceRoot":""}