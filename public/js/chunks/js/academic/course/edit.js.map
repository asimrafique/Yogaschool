{"version":3,"file":"js/chunks/js/academic/course/edit.js?id=64af73d6020cae3e","mappings":";;;;;;;;;;;;;;AAyBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC0DA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC9LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;AC5aA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/academic/course/edit.vue","webpack://InstiKit/resources/js/views/academic/course/form.vue","webpack://InstiKit/resources/js/views/configuration/academic/course-group/form.vue","webpack://InstiKit/./resources/js/views/academic/course/edit.vue","webpack://InstiKit/./resources/js/views/academic/course/form.vue","webpack://InstiKit/./resources/js/views/configuration/academic/course-group/form.vue","webpack://InstiKit/./resources/js/views/academic/course/form.vue?57fc","webpack://InstiKit/./resources/js/views/academic/course/form.vue?15ef","webpack://InstiKit/./resources/js/views/academic/course/edit.vue?9457","webpack://InstiKit/./resources/js/views/academic/course/form.vue?25e5","webpack://InstiKit/./resources/js/views/configuration/academic/course-group/form.vue?730d","webpack://InstiKit/./resources/js/views/academic/course/edit.vue?e06f","webpack://InstiKit/./resources/js/views/academic/course/form.vue?8c94","webpack://InstiKit/./resources/js/views/configuration/academic/course-group/form.vue?a3eb","webpack://InstiKit/./resources/js/views/academic/course/edit.vue?2c7c"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('academic.edit_course')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/academic/course')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('academic.course')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card card-form\">\r\n                <div class=\"card-body p-t-20\">\r\n                    <course-form :id=\"id\"></course-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import courseForm from './form';\r\n\r\n    export default {\r\n        components : { courseForm },\r\n        data() {\r\n            return {\r\n                id:this.$route.params.id\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('edit-course')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","<template>\r\n    <div>\r\n        <form @submit.prevent=\"proceed\" @keydown=\"courseForm.errors.clear($event.target.name)\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('academic.course_name')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"courseForm.name\" name=\"name\" :placeholder=\"trans('academic.course_name')\">\r\n                        <show-error :form-name=\"courseForm\" prop-name=\"name\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('academic.course_group')}} </label> <button type=\"button\" class=\"btn btn-xs btn-info pull-right\" v-if=\"hasPermission('access-configuration')\" @click=\"showCourseGroupModal = true\">{{trans('general.add_new')}}</button>\r\n                        <v-select label=\"name\" v-model=\"selected_course_group\" name=\"course_group_id\" id=\"course_group_id\" :options=\"course_groups\" :placeholder=\"trans('academic.select_course_group')\" @select=\"onCourseGroupSelect\" @close=\"courseForm.errors.clear('course_group_id')\" @remove=\"courseForm.course_group_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!course_groups.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"courseForm\" prop-name=\"course_group_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('academic.course_description')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"courseForm.description\" name=\"description\" :placeholder=\"trans('academic.course_description')\">\r\n                        <show-error :form-name=\"courseForm\" prop-name=\"description\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <!-- <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('student.attendance_type')}}</label>\r\n                        <select v-model=\"courseForm.attendance_type\" class=\"custom-select col-12\" name=\"attendance_type\" @change=\"courseForm.errors.clear('attendance_type')\">\r\n                          <option v-for=\"option in attendance_types\" v-bind:value=\"option.value\">\r\n                            {{ option.text }}\r\n                          </option>\r\n                        </select>\r\n                        <show-error :form-name=\"courseForm\" prop-name=\"attendance_type\"></show-error>\r\n                    </div>\r\n                </div> -->\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <div>{{trans('student.enable_registration')}}</div>\r\n                        <switches class=\"m-t-10\" v-model=\"courseForm.enable_registration\" theme=\"bootstrap\" color=\"success\"></switches> \r\n                        <show-error :form-name=\"courseForm\" prop-name=\"enable_registration\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <div>{{trans('student.enable_registration_fee')}}</div>\r\n                        <switches class=\"m-t-10\" v-model=\"courseForm.enable_registration_fee\" theme=\"bootstrap\" color=\"success\"></switches> \r\n                        <show-error :form-name=\"courseForm\" prop-name=\"enable_registration_fee\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\" v-if=\"courseForm.enable_registration_fee\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('student.registration_fee')}}</label>\r\n                        <currency-input :position=\"default_currency.position\" :symbol=\"default_currency.symbol\" name=\"registration_fee\" :placeholder=\"trans('student.registration_fee')\" v-model=\"courseForm.registration_fee\" @input.native=\"courseForm.errors.clear('registration_fee')\"></currency-input>\r\n                        <show-error :form-name=\"courseForm\" prop-name=\"registration_fee\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"card-footer text-right\">\r\n                <router-link to=\"/academic/course\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\r\n                <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n                    <span v-if=\"id\">{{trans('general.update')}}</span>\r\n                    <span v-else>{{trans('general.save')}}</span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n\r\n        <transition name=\"modal\" v-if=\"showCourseGroupModal\">\r\n            <div class=\"modal-mask\">\r\n                <div class=\"modal-wrapper\">\r\n                    <div class=\"modal-container modal-lg\">\r\n                        <div class=\"modal-header\">\r\n                            <slot name=\"header\">\r\n                                {{trans('academic.add_new_course_group')}}\r\n                                <span class=\"float-right pointer\" @click=\"showCourseGroupModal = false\">x</span>\r\n                            </slot>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <slot name=\"body\">\r\n                                <course-group-form @completed=\"getPreRequisite\" @cancel=\"showCourseGroupModal = false\"></course-group-form>\r\n                                <div class=\"clearfix\"></div>\r\n                            </slot>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </transition>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import courseGroupForm from '../../configuration/academic/course-group/form'\r\n\r\n    export default {\r\n        components: {courseGroupForm},\r\n        data() {\r\n            return {\r\n                courseForm: new Form({\r\n                    name : '',\r\n                    description : '',\r\n                    course_group_id: '',\r\n                    attendance_type: helper.getConfig('default_attendance_type'),\r\n                    enable_registration: '',\r\n                    enable_registration_fee: '',\r\n                    registration_fee: ''\r\n                }),\r\n                course_groups: [],\r\n                selected_course_group: null,\r\n                default_currency: helper.getConfig('default_currency'),\r\n                attendance_types: [\r\n                    {\r\n                        \"text\": i18n.student.attendance_type_daily,\r\n                        \"value\": \"daily\"\r\n                    }\r\n                    // {\r\n                    //     \"text\": i18n.student.attendance_type_subject_wise,\r\n                    //     \"value\": \"subject_wise\"\r\n                    // }\r\n                ],\r\n                showCourseGroupModal: false\r\n            };\r\n        },\r\n        props: ['id'],\r\n        mounted() {\r\n            if(!helper.hasPermission('create-course') && !helper.hasPermission('edit-course')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            if(this.id)\r\n                this.get();\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            proceed(){\r\n                if(this.id)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/course/pre-requisite')\r\n                    .then(response => {\r\n                        this.course_groups = response;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.courseForm.post('/api/course')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.courseForm.attendance_type = helper.getConfig('default_attendance_type');\r\n                        this.selected_course_group = null;\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/course/'+this.id)\r\n                    .then(response => {\r\n                        this.courseForm.name = response.name;\r\n                        this.courseForm.description = response.description;\r\n                        this.courseForm.attendance_type = response.options ? response.options.attendance_type : helper.getConfig('default_attendance_type');\r\n                        this.courseForm.enable_registration = response.options ? response.options.enable_registration : helper.getConfig('enable_registration');\r\n                        this.courseForm.enable_registration_fee = response.options ? response.options.enable_registration_fee : helper.getConfig('enable_registration_fee');\r\n                        this.courseForm.registration_fee = response.options ? response.options.registration_fee : helper.getConfig('registration_fee');\r\n                        this.courseForm.course_group_id = response.course_group_id;\r\n                        this.selected_course_group = {id: response.course_group_id, name: response.course_group.name};\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/academic/course');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.courseForm.patch('/api/course/'+this.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/academic/course');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getConfig(config) {\r\n                return helper.getConfig(config);\r\n            },\r\n            onCourseGroupSelect(selectedOption){\r\n                this.courseForm.course_group_id = selectedOption.id;\r\n            },\r\n            hideCourseGroupForm(){\r\n                $('.add-course-group-form').modal('hide');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n.loading-overlay.is-full-page{\r\n    z-index: 1060;\r\n}\r\n</style>","<template>\r\n    <form @submit.prevent=\"proceed\" @keydown=\"courseGroupForm.errors.clear($event.target.name)\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12 col-sm-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('academic.course_group_name')}}</label>\r\n                    <input class=\"form-control\" type=\"text\" v-model=\"courseGroupForm.name\" name=\"name\" :placeholder=\"trans('academic.course_group_name')\">\r\n                    <show-error :form-name=\"courseGroupForm\" prop-name=\"name\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-6\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('academic.course_group_description')}}</label>\r\n                    <input class=\"form-control\" type=\"text\" v-model=\"courseGroupForm.description\" name=\"description\" :placeholder=\"trans('academic.course_group_description')\">\r\n                    <show-error :form-name=\"courseGroupForm\" prop-name=\"description\"></show-error>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-footer text-right\">\r\n            <router-link to=\"/configuration/academic/course/group\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\r\n            <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n            <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n                <span v-if=\"id\">{{trans('general.update')}}</span>\r\n                <span v-else>{{trans('general.save')}}</span>\r\n            </button>\r\n        </div>\r\n    </form>\r\n</template>\r\n\r\n\r\n<script>\r\n    export default {\r\n        components: {},\r\n        data() {\r\n            return {\r\n                courseGroupForm: new Form({\r\n                    name : '',\r\n                    description : ''\r\n                })\r\n            };\r\n        },\r\n        props: ['id'],\r\n        mounted() {\r\n            if(this.id)\r\n                this.get();\r\n        },\r\n        methods: {\r\n            proceed(){\r\n                if(this.id)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.courseGroupForm.post('/api/academic/course/group')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/academic/course/group/'+this.id)\r\n                    .then(response => {\r\n                        this.courseGroupForm.name = response.name;\r\n                        this.courseGroupForm.description = response.description;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/configuration/academic/course/group');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.courseGroupForm.patch('/api/academic/course/group/'+this.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/configuration/academic/course/group');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"academic.edit_course\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/academic/course\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"card-body p-t-20\" },\n          [_c(\"course-form\", { attrs: { id: _vm.id } })],\n          1\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function ($event) {\n              $event.preventDefault()\n              return _vm.proceed.apply(null, arguments)\n            },\n            keydown: function ($event) {\n              return _vm.courseForm.errors.clear($event.target.name)\n            },\n          },\n        },\n        [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"academic.course_name\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.courseForm.name,\n                        expression: \"courseForm.name\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"name\",\n                      placeholder: _vm.trans(\"academic.course_name\"),\n                    },\n                    domProps: { value: _vm.courseForm.name },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(_vm.courseForm, \"name\", $event.target.value)\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: { \"form-name\": _vm.courseForm, \"prop-name\": \"name\" },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"academic.course_group\")) + \" \"),\n                  ]),\n                  _vm._v(\" \"),\n                  _vm.hasPermission(\"access-configuration\")\n                    ? _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-xs btn-info pull-right\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showCourseGroupModal = true\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.add_new\")))]\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"course_group_id\",\n                        id: \"course_group_id\",\n                        options: _vm.course_groups,\n                        placeholder: _vm.trans(\"academic.select_course_group\"),\n                      },\n                      on: {\n                        select: _vm.onCourseGroupSelect,\n                        close: function ($event) {\n                          return _vm.courseForm.errors.clear(\"course_group_id\")\n                        },\n                        remove: function ($event) {\n                          _vm.courseForm.course_group_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_course_group,\n                        callback: function ($$v) {\n                          _vm.selected_course_group = $$v\n                        },\n                        expression: \"selected_course_group\",\n                      },\n                    },\n                    [\n                      !_vm.course_groups.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                            \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                        \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.courseForm,\n                      \"prop-name\": \"course_group_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"academic.course_description\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.courseForm.description,\n                        expression: \"courseForm.description\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"description\",\n                      placeholder: _vm.trans(\"academic.course_description\"),\n                    },\n                    domProps: { value: _vm.courseForm.description },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(\n                          _vm.courseForm,\n                          \"description\",\n                          $event.target.value\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.courseForm,\n                      \"prop-name\": \"description\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"div\", [\n                    _vm._v(_vm._s(_vm.trans(\"student.enable_registration\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"switches\", {\n                    staticClass: \"m-t-10\",\n                    attrs: { theme: \"bootstrap\", color: \"success\" },\n                    model: {\n                      value: _vm.courseForm.enable_registration,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.courseForm, \"enable_registration\", $$v)\n                      },\n                      expression: \"courseForm.enable_registration\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.courseForm,\n                      \"prop-name\": \"enable_registration\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"div\", [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"student.enable_registration_fee\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"switches\", {\n                    staticClass: \"m-t-10\",\n                    attrs: { theme: \"bootstrap\", color: \"success\" },\n                    model: {\n                      value: _vm.courseForm.enable_registration_fee,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.courseForm, \"enable_registration_fee\", $$v)\n                      },\n                      expression: \"courseForm.enable_registration_fee\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.courseForm,\n                      \"prop-name\": \"enable_registration_fee\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _vm.courseForm.enable_registration_fee\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.registration_fee\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"currency-input\", {\n                        attrs: {\n                          position: _vm.default_currency.position,\n                          symbol: _vm.default_currency.symbol,\n                          name: \"registration_fee\",\n                          placeholder: _vm.trans(\"student.registration_fee\"),\n                        },\n                        nativeOn: {\n                          input: function ($event) {\n                            return _vm.courseForm.errors.clear(\n                              \"registration_fee\"\n                            )\n                          },\n                        },\n                        model: {\n                          value: _vm.courseForm.registration_fee,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.courseForm, \"registration_fee\", $$v)\n                          },\n                          expression: \"courseForm.registration_fee\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.courseForm,\n                          \"prop-name\": \"registration_fee\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"card-footer text-right\" },\n            [\n              _c(\n                \"router-link\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.id,\n                      expression: \"id\",\n                    },\n                  ],\n                  staticClass: \"btn btn-danger waves-effect waves-light\",\n                  attrs: { to: \"/academic/course\" },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              ),\n              _vm._v(\" \"),\n              !_vm.id\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-danger waves-effect waves-light\",\n                      attrs: { type: \"button\" },\n                      on: {\n                        click: function ($event) {\n                          return _vm.$emit(\"cancel\")\n                        },\n                      },\n                    },\n                    [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-info waves-effect waves-light\",\n                  attrs: { type: \"submit\" },\n                },\n                [\n                  _vm.id\n                    ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                    : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n                ]\n              ),\n            ],\n            1\n          ),\n        ]\n      ),\n      _vm._v(\" \"),\n      _vm.showCourseGroupModal\n        ? _c(\"transition\", { attrs: { name: \"modal\" } }, [\n            _c(\"div\", { staticClass: \"modal-mask\" }, [\n              _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n                _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-header\" },\n                    [\n                      _vm._t(\"header\", function () {\n                        return [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(\n                                _vm.trans(\"academic.add_new_course_group\")\n                              ) +\n                              \"\\n                            \"\n                          ),\n                          _c(\n                            \"span\",\n                            {\n                              staticClass: \"float-right pointer\",\n                              on: {\n                                click: function ($event) {\n                                  _vm.showCourseGroupModal = false\n                                },\n                              },\n                            },\n                            [_vm._v(\"x\")]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-body\" },\n                    [\n                      _vm._t(\"body\", function () {\n                        return [\n                          _c(\"course-group-form\", {\n                            on: {\n                              completed: _vm.getPreRequisite,\n                              cancel: function ($event) {\n                                _vm.showCourseGroupModal = false\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"clearfix\" }),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                ]),\n              ]),\n            ]),\n          ])\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.proceed.apply(null, arguments)\n        },\n        keydown: function ($event) {\n          return _vm.courseGroupForm.errors.clear($event.target.name)\n        },\n      },\n    },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.course_group_name\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.courseGroupForm.name,\n                    expression: \"courseGroupForm.name\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"name\",\n                  placeholder: _vm.trans(\"academic.course_group_name\"),\n                },\n                domProps: { value: _vm.courseGroupForm.name },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(_vm.courseGroupForm, \"name\", $event.target.value)\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.courseGroupForm,\n                  \"prop-name\": \"name\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.course_group_description\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.courseGroupForm.description,\n                    expression: \"courseGroupForm.description\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"description\",\n                  placeholder: _vm.trans(\"academic.course_group_description\"),\n                },\n                domProps: { value: _vm.courseGroupForm.description },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(\n                      _vm.courseGroupForm,\n                      \"description\",\n                      $event.target.value\n                    )\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.courseGroupForm,\n                  \"prop-name\": \"description\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"card-footer text-right\" },\n        [\n          _c(\n            \"router-link\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.id,\n                  expression: \"id\",\n                },\n              ],\n              staticClass: \"btn btn-danger waves-effect waves-light\",\n              attrs: { to: \"/configuration/academic/course/group\" },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n          ),\n          _vm._v(\" \"),\n          !_vm.id\n            ? _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-danger waves-effect waves-light\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.$emit(\"cancel\")\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info waves-effect waves-light\",\n              attrs: { type: \"submit\" },\n            },\n            [\n              _vm.id\n                ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n            ]\n          ),\n        ],\n        1\n      ),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.loading-overlay.is-full-page{\\r\\n    z-index: 1060;\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/academic/course/form.vue\"],\"names\":[],\"mappings\":\";AAiOA;IACA,aAAA;AACA\",\"sourcesContent\":[\"<template>\\r\\n    <div>\\r\\n        <form @submit.prevent=\\\"proceed\\\" @keydown=\\\"courseForm.errors.clear($event.target.name)\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12 col-sm-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"\\\">{{trans('academic.course_name')}}</label>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"courseForm.name\\\" name=\\\"name\\\" :placeholder=\\\"trans('academic.course_name')\\\">\\r\\n                        <show-error :form-name=\\\"courseForm\\\" prop-name=\\\"name\\\"></show-error>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-sm-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"\\\">{{trans('academic.course_group')}} </label> <button type=\\\"button\\\" class=\\\"btn btn-xs btn-info pull-right\\\" v-if=\\\"hasPermission('access-configuration')\\\" @click=\\\"showCourseGroupModal = true\\\">{{trans('general.add_new')}}</button>\\r\\n                        <v-select label=\\\"name\\\" v-model=\\\"selected_course_group\\\" name=\\\"course_group_id\\\" id=\\\"course_group_id\\\" :options=\\\"course_groups\\\" :placeholder=\\\"trans('academic.select_course_group')\\\" @select=\\\"onCourseGroupSelect\\\" @close=\\\"courseForm.errors.clear('course_group_id')\\\" @remove=\\\"courseForm.course_group_id = ''\\\">\\r\\n                            <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!course_groups.length\\\">\\r\\n                                {{trans('general.no_option_found')}}\\r\\n                            </div>\\r\\n                        </v-select>\\r\\n                        <show-error :form-name=\\\"courseForm\\\" prop-name=\\\"course_group_id\\\"></show-error>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-sm-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"\\\">{{trans('academic.course_description')}}</label>\\r\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"courseForm.description\\\" name=\\\"description\\\" :placeholder=\\\"trans('academic.course_description')\\\">\\r\\n                        <show-error :form-name=\\\"courseForm\\\" prop-name=\\\"description\\\"></show-error>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"col-12 col-sm-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"\\\">{{trans('student.attendance_type')}}</label>\\r\\n                        <select v-model=\\\"courseForm.attendance_type\\\" class=\\\"custom-select col-12\\\" name=\\\"attendance_type\\\" @change=\\\"courseForm.errors.clear('attendance_type')\\\">\\r\\n                          <option v-for=\\\"option in attendance_types\\\" v-bind:value=\\\"option.value\\\">\\r\\n                            {{ option.text }}\\r\\n                          </option>\\r\\n                        </select>\\r\\n                        <show-error :form-name=\\\"courseForm\\\" prop-name=\\\"attendance_type\\\"></show-error>\\r\\n                    </div>\\r\\n                </div> -->\\r\\n                <div class=\\\"col-12 col-sm-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div>{{trans('student.enable_registration')}}</div>\\r\\n                        <switches class=\\\"m-t-10\\\" v-model=\\\"courseForm.enable_registration\\\" theme=\\\"bootstrap\\\" color=\\\"success\\\"></switches> \\r\\n                        <show-error :form-name=\\\"courseForm\\\" prop-name=\\\"enable_registration\\\"></show-error>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-sm-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <div>{{trans('student.enable_registration_fee')}}</div>\\r\\n                        <switches class=\\\"m-t-10\\\" v-model=\\\"courseForm.enable_registration_fee\\\" theme=\\\"bootstrap\\\" color=\\\"success\\\"></switches> \\r\\n                        <show-error :form-name=\\\"courseForm\\\" prop-name=\\\"enable_registration_fee\\\"></show-error>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-sm-3\\\" v-if=\\\"courseForm.enable_registration_fee\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"\\\">{{trans('student.registration_fee')}}</label>\\r\\n                        <currency-input :position=\\\"default_currency.position\\\" :symbol=\\\"default_currency.symbol\\\" name=\\\"registration_fee\\\" :placeholder=\\\"trans('student.registration_fee')\\\" v-model=\\\"courseForm.registration_fee\\\" @input.native=\\\"courseForm.errors.clear('registration_fee')\\\"></currency-input>\\r\\n                        <show-error :form-name=\\\"courseForm\\\" prop-name=\\\"registration_fee\\\"></show-error>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"card-footer text-right\\\">\\r\\n                <router-link to=\\\"/academic/course\\\" class=\\\"btn btn-danger waves-effect waves-light \\\" v-show=\\\"id\\\">{{trans('general.cancel')}}</router-link>\\r\\n                <button v-if=\\\"!id\\\" type=\\\"button\\\" class=\\\"btn btn-danger waves-effect waves-light \\\" @click=\\\"$emit('cancel')\\\">{{trans('general.cancel')}}</button>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-info waves-effect waves-light\\\">\\r\\n                    <span v-if=\\\"id\\\">{{trans('general.update')}}</span>\\r\\n                    <span v-else>{{trans('general.save')}}</span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </form>\\r\\n\\r\\n        <transition name=\\\"modal\\\" v-if=\\\"showCourseGroupModal\\\">\\r\\n            <div class=\\\"modal-mask\\\">\\r\\n                <div class=\\\"modal-wrapper\\\">\\r\\n                    <div class=\\\"modal-container modal-lg\\\">\\r\\n                        <div class=\\\"modal-header\\\">\\r\\n                            <slot name=\\\"header\\\">\\r\\n                                {{trans('academic.add_new_course_group')}}\\r\\n                                <span class=\\\"float-right pointer\\\" @click=\\\"showCourseGroupModal = false\\\">x</span>\\r\\n                            </slot>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-body\\\">\\r\\n                            <slot name=\\\"body\\\">\\r\\n                                <course-group-form @completed=\\\"getPreRequisite\\\" @cancel=\\\"showCourseGroupModal = false\\\"></course-group-form>\\r\\n                                <div class=\\\"clearfix\\\"></div>\\r\\n                            </slot>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </transition>\\r\\n    </div>\\r\\n</template>\\r\\n\\r\\n\\r\\n<script>\\r\\n    import courseGroupForm from '../../configuration/academic/course-group/form'\\r\\n\\r\\n    export default {\\r\\n        components: {courseGroupForm},\\r\\n        data() {\\r\\n            return {\\r\\n                courseForm: new Form({\\r\\n                    name : '',\\r\\n                    description : '',\\r\\n                    course_group_id: '',\\r\\n                    attendance_type: helper.getConfig('default_attendance_type'),\\r\\n                    enable_registration: '',\\r\\n                    enable_registration_fee: '',\\r\\n                    registration_fee: ''\\r\\n                }),\\r\\n                course_groups: [],\\r\\n                selected_course_group: null,\\r\\n                default_currency: helper.getConfig('default_currency'),\\r\\n                attendance_types: [\\r\\n                    {\\r\\n                        \\\"text\\\": i18n.student.attendance_type_daily,\\r\\n                        \\\"value\\\": \\\"daily\\\"\\r\\n                    }\\r\\n                    // {\\r\\n                    //     \\\"text\\\": i18n.student.attendance_type_subject_wise,\\r\\n                    //     \\\"value\\\": \\\"subject_wise\\\"\\r\\n                    // }\\r\\n                ],\\r\\n                showCourseGroupModal: false\\r\\n            };\\r\\n        },\\r\\n        props: ['id'],\\r\\n        mounted() {\\r\\n            if(!helper.hasPermission('create-course') && !helper.hasPermission('edit-course')){\\r\\n                helper.notAccessibleMsg();\\r\\n                this.$router.push('/dashboard');\\r\\n            }\\r\\n\\r\\n            if(this.id)\\r\\n                this.get();\\r\\n\\r\\n            this.getPreRequisite();\\r\\n        },\\r\\n        methods: {\\r\\n            hasPermission(permission){\\r\\n                return helper.hasPermission(permission);\\r\\n            },\\r\\n            proceed(){\\r\\n                if(this.id)\\r\\n                    this.update();\\r\\n                else\\r\\n                    this.store();\\r\\n            },\\r\\n            getPreRequisite(){\\r\\n                let loader = this.$loading.show();\\r\\n                axios.get('/api/course/pre-requisite')\\r\\n                    .then(response => {\\r\\n                        this.course_groups = response;\\r\\n                        loader.hide();\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    });\\r\\n            },\\r\\n            store(){\\r\\n                let loader = this.$loading.show();\\r\\n                this.courseForm.post('/api/course')\\r\\n                    .then(response => {\\r\\n                        toastr.success(response.message);\\r\\n                        this.courseForm.attendance_type = helper.getConfig('default_attendance_type');\\r\\n                        this.selected_course_group = null;\\r\\n                        this.$emit('completed');\\r\\n                        loader.hide();\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    });\\r\\n            },\\r\\n            get(){\\r\\n                let loader = this.$loading.show();\\r\\n                axios.get('/api/course/'+this.id)\\r\\n                    .then(response => {\\r\\n                        this.courseForm.name = response.name;\\r\\n                        this.courseForm.description = response.description;\\r\\n                        this.courseForm.attendance_type = response.options ? response.options.attendance_type : helper.getConfig('default_attendance_type');\\r\\n                        this.courseForm.enable_registration = response.options ? response.options.enable_registration : helper.getConfig('enable_registration');\\r\\n                        this.courseForm.enable_registration_fee = response.options ? response.options.enable_registration_fee : helper.getConfig('enable_registration_fee');\\r\\n                        this.courseForm.registration_fee = response.options ? response.options.registration_fee : helper.getConfig('registration_fee');\\r\\n                        this.courseForm.course_group_id = response.course_group_id;\\r\\n                        this.selected_course_group = {id: response.course_group_id, name: response.course_group.name};\\r\\n                        loader.hide();\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                        this.$router.push('/academic/course');\\r\\n                    });\\r\\n            },\\r\\n            update(){\\r\\n                let loader = this.$loading.show();\\r\\n                this.courseForm.patch('/api/course/'+this.id)\\r\\n                    .then(response => {\\r\\n                        toastr.success(response.message);\\r\\n                        loader.hide();\\r\\n                        this.$router.push('/academic/course');\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    });\\r\\n            },\\r\\n            getConfig(config) {\\r\\n                return helper.getConfig(config);\\r\\n            },\\r\\n            onCourseGroupSelect(selectedOption){\\r\\n                this.courseForm.course_group_id = selectedOption.id;\\r\\n            },\\r\\n            hideCourseGroupForm(){\\r\\n                $('.add-course-group-form').modal('hide');\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n.loading-overlay.is-full-page{\\r\\n    z-index: 1060;\\r\\n}\\r\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&id=eb4c5aa2&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=64c9be16&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('64c9be16')) {\n      api.createRecord('64c9be16', component.options)\n    } else {\n      api.reload('64c9be16', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=64c9be16&\", function () {\n      api.rerender('64c9be16', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/academic/course/edit.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=eb4c5aa2&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\nimport style0 from \"./form.vue?vue&type=style&index=0&id=eb4c5aa2&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('eb4c5aa2')) {\n      api.createRecord('eb4c5aa2', component.options)\n    } else {\n      api.reload('eb4c5aa2', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=eb4c5aa2&\", function () {\n      api.rerender('eb4c5aa2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/academic/course/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=08e07d76&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('08e07d76')) {\n      api.createRecord('08e07d76', component.options)\n    } else {\n      api.reload('08e07d76', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=08e07d76&\", function () {\n      api.rerender('08e07d76', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/academic/course-group/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=64c9be16&\""],"names":[],"sourceRoot":""}