{"version":3,"file":"js/chunks/js/academic/course/index.js?id=4a387e108d5ce151","mappings":";;;;;;;;;;;;;;AAkGA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACnpUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9FA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;AC5aA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAOA;AAMA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAQA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAsBA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AA2BA;AAAA;AASA;AAEA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAcA;AAEA;AAmBA;AAEA;AA0BA;AAEA;AAmBA;AAEA;AA0BA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAKA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AASA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AASA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAOA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAAA;AAIA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAAA;AAIA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AAUA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;ACp5BA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACvKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/academic/course/form.vue","webpack://InstiKit/resources/js/views/academic/course/index.vue","webpack://InstiKit/resources/js/views/configuration/academic/course-group/form.vue","webpack://InstiKit/./resources/js/views/academic/course/form.vue","webpack://InstiKit/./resources/js/views/academic/course/index.vue","webpack://InstiKit/./resources/js/views/configuration/academic/course-group/form.vue","webpack://InstiKit/./resources/js/views/academic/course/form.vue?57fc","webpack://InstiKit/./resources/js/views/academic/course/form.vue?15ef","webpack://InstiKit/./resources/js/views/academic/course/form.vue?25e5","webpack://InstiKit/./resources/js/views/academic/course/index.vue?cc72","webpack://InstiKit/./resources/js/views/configuration/academic/course-group/form.vue?730d","webpack://InstiKit/./resources/js/views/academic/course/form.vue?8c94","webpack://InstiKit/./resources/js/views/academic/course/index.vue?4ca2","webpack://InstiKit/./resources/js/views/configuration/academic/course-group/form.vue?a3eb","webpack://InstiKit/./resources/js/views/academic/course/form.vue?9d31","webpack://InstiKit/./resources/js/views/academic/course/index.vue?1279","webpack://InstiKit/./resources/js/views/academic/course/form.vue?95d4"],"sourcesContent":["<template>\n    <div>\n        <form @submit.prevent=\"proceed\" @keydown=\"courseForm.errors.clear($event.target.name)\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('academic.course_name')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"courseForm.name\" name=\"name\" :placeholder=\"trans('academic.course_name')\">\n                        <show-error :form-name=\"courseForm\" prop-name=\"name\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('academic.course_group')}} </label> <button type=\"button\" class=\"btn btn-xs btn-info pull-right\" v-if=\"hasPermission('access-configuration')\" @click=\"showCourseGroupModal = true\">{{trans('general.add_new')}}</button>\n                        <v-select label=\"name\" v-model=\"selected_course_group\" name=\"course_group_id\" id=\"course_group_id\" :options=\"course_groups\" :placeholder=\"trans('academic.select_course_group')\" @select=\"onCourseGroupSelect\" @close=\"courseForm.errors.clear('course_group_id')\" @remove=\"courseForm.course_group_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!course_groups.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n                        <show-error :form-name=\"courseForm\" prop-name=\"course_group_id\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('academic.course_description')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"courseForm.description\" name=\"description\" :placeholder=\"trans('academic.course_description')\">\n                        <show-error :form-name=\"courseForm\" prop-name=\"description\"></show-error>\n                    </div>\n                </div>\n                <!-- <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('student.attendance_type')}}</label>\n                        <select v-model=\"courseForm.attendance_type\" class=\"custom-select col-12\" name=\"attendance_type\" @change=\"courseForm.errors.clear('attendance_type')\">\n                          <option v-for=\"option in attendance_types\" v-bind:value=\"option.value\">\n                            {{ option.text }}\n                          </option>\n                        </select>\n                        <show-error :form-name=\"courseForm\" prop-name=\"attendance_type\"></show-error>\n                    </div>\n                </div> -->\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <div>{{trans('student.enable_registration')}}</div>\n                        <switches class=\"m-t-10\" v-model=\"courseForm.enable_registration\" theme=\"bootstrap\" color=\"success\"></switches> \n                        <show-error :form-name=\"courseForm\" prop-name=\"enable_registration\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <div>{{trans('student.enable_registration_fee')}}</div>\n                        <switches class=\"m-t-10\" v-model=\"courseForm.enable_registration_fee\" theme=\"bootstrap\" color=\"success\"></switches> \n                        <show-error :form-name=\"courseForm\" prop-name=\"enable_registration_fee\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\" v-if=\"courseForm.enable_registration_fee\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('student.registration_fee')}}</label>\n                        <currency-input :position=\"default_currency.position\" :symbol=\"default_currency.symbol\" name=\"registration_fee\" :placeholder=\"trans('student.registration_fee')\" v-model=\"courseForm.registration_fee\" @input.native=\"courseForm.errors.clear('registration_fee')\"></currency-input>\n                        <show-error :form-name=\"courseForm\" prop-name=\"registration_fee\"></show-error>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"card-footer text-right\">\n                <router-link to=\"/academic/course\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\n                <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n                    <span v-if=\"id\">{{trans('general.update')}}</span>\n                    <span v-else>{{trans('general.save')}}</span>\n                </button>\n            </div>\n        </form>\n\n        <transition name=\"modal\" v-if=\"showCourseGroupModal\">\n            <div class=\"modal-mask\">\n                <div class=\"modal-wrapper\">\n                    <div class=\"modal-container modal-lg\">\n                        <div class=\"modal-header\">\n                            <slot name=\"header\">\n                                {{trans('academic.add_new_course_group')}}\n                                <span class=\"float-right pointer\" @click=\"showCourseGroupModal = false\">x</span>\n                            </slot>\n                        </div>\n                        <div class=\"modal-body\">\n                            <slot name=\"body\">\n                                <course-group-form @completed=\"getPreRequisite\" @cancel=\"showCourseGroupModal = false\"></course-group-form>\n                                <div class=\"clearfix\"></div>\n                            </slot>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </transition>\n    </div>\n</template>\n\n\n<script>\n    import courseGroupForm from '../../configuration/academic/course-group/form'\n\n    export default {\n        components: {courseGroupForm},\n        data() {\n            return {\n                courseForm: new Form({\n                    name : '',\n                    description : '',\n                    course_group_id: '',\n                    attendance_type: helper.getConfig('default_attendance_type'),\n                    enable_registration: '',\n                    enable_registration_fee: '',\n                    registration_fee: ''\n                }),\n                course_groups: [],\n                selected_course_group: null,\n                default_currency: helper.getConfig('default_currency'),\n                attendance_types: [\n                    {\n                        \"text\": i18n.student.attendance_type_daily,\n                        \"value\": \"daily\"\n                    }\n                    // {\n                    //     \"text\": i18n.student.attendance_type_subject_wise,\n                    //     \"value\": \"subject_wise\"\n                    // }\n                ],\n                showCourseGroupModal: false\n            };\n        },\n        props: ['id'],\n        mounted() {\n            if(!helper.hasPermission('create-course') && !helper.hasPermission('edit-course')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            if(this.id)\n                this.get();\n\n            this.getPreRequisite();\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            proceed(){\n                if(this.id)\n                    this.update();\n                else\n                    this.store();\n            },\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/course/pre-requisite')\n                    .then(response => {\n                        this.course_groups = response;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            store(){\n                let loader = this.$loading.show();\n                this.courseForm.post('/api/course')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.courseForm.attendance_type = helper.getConfig('default_attendance_type');\n                        this.selected_course_group = null;\n                        this.$emit('completed');\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/course/'+this.id)\n                    .then(response => {\n                        this.courseForm.name = response.name;\n                        this.courseForm.description = response.description;\n                        this.courseForm.attendance_type = response.options ? response.options.attendance_type : helper.getConfig('default_attendance_type');\n                        this.courseForm.enable_registration = response.options ? response.options.enable_registration : helper.getConfig('enable_registration');\n                        this.courseForm.enable_registration_fee = response.options ? response.options.enable_registration_fee : helper.getConfig('enable_registration_fee');\n                        this.courseForm.registration_fee = response.options ? response.options.registration_fee : helper.getConfig('registration_fee');\n                        this.courseForm.course_group_id = response.course_group_id;\n                        this.selected_course_group = {id: response.course_group_id, name: response.course_group.name};\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        this.$router.push('/academic/course');\n                    });\n            },\n            update(){\n                let loader = this.$loading.show();\n                this.courseForm.patch('/api/course/'+this.id)\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/academic/course');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getConfig(config) {\n                return helper.getConfig(config);\n            },\n            onCourseGroupSelect(selectedOption){\n                this.courseForm.course_group_id = selectedOption.id;\n            },\n            hideCourseGroupForm(){\n                $('.add-course-group-form').modal('hide');\n            }\n        }\n    }\n</script>\n\n<style>\n.loading-overlay.is-full-page{\n    z-index: 1060;\n}\n</style>","<template>\n    <div>\n        <div class=\"page-titles\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('academic.course')}} \n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"courses.total\">{{trans('general.total_result_found',{count : courses.total, from: courses.from, to: courses.to})}}</span>\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\n                    </h3>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"action-buttons pull-right\">\n                        <button class=\"btn btn-info btn-sm\" v-if=\"courses.total && !showCreatePanel && hasPermission('create-course')\" @click=\"showCreatePanel = !showCreatePanel\" v-tooltip=\"trans('general.add_new')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('academic.add_new_course')}}</span></button>\n                        <button class=\"btn btn-info btn-sm\" v-if=\"hasPermission('edit-course') && courses.total\" @click=\"showReorderModal = true\" v-tooltip=\"trans('academic.reorder_course')\"><i class=\"fas fa-arrows-alt\"></i> <span class=\"d-none d-sm-inline\">{{trans('academic.reorder_course')}}</span></button>\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\n                        <div class=\"btn-group\">\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\n                            </button>\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\n                            </div>\n                        </div>\n                        <help-button @clicked=\"help_topic = 'academic.course'\"></help-button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <transition name=\"fade\">\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{trans('general.filter')}}</h4>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_course_groups\" name=\"course_group_id\" id=\"course_group_id\" :options=\"course_groups\" :placeholder=\"trans('academic.select_course_group')\" @select=\"onCourseGroupSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onCourseGroupRemove\" :selected=\"selected_course_groups\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!course_groups.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"card-footer text-right\">\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getCourses\">{{trans('general.filter')}}</button>\n                        </div>\n                    </div>\n                </div>\n            </transition>\n            <transition name=\"fade\" v-if=\"hasPermission('create-course')\">\n                <div class=\"card card-form\" v-if=\"showCreatePanel\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{trans('academic.add_new_course')}}</h4>\n                        <course-form @completed=\"getCourses\" @cancel=\"showCreatePanel = !showCreatePanel\"></course-form>\n                    </div>\n                </div>\n            </transition>\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <div class=\"table-responsive\" v-if=\"courses.total\">\n                        <table class=\"table table-sm\">\n                            <thead>\n                                <tr>\n                                    <th>{{trans('academic.course_name')}}</th>\n                                    <th>{{trans('academic.course_group')}}</th>\n                                    <th>{{trans('academic.batch')}}</th>\n                                    <th>{{trans('general.option')}}</th>\n                                    <th>{{trans('academic.course_description')}}</th>\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"course in courses.data\">\n                                    <td v-text=\"course.name\"></td>\n                                    <td v-text=\"course.course_group.name\"></td>\n                                    <td>\n                                        <ul style=\"list-style:none;padding:0;margin:0;\">\n                                            <li v-for=\"batch in course.batches\">{{batch.name}}</li>\n                                        </ul>\n                                    </td>\n                                    <td>\n                                        <template v-if=\"course.options\">\n                                            <span class=\"badge badge-success\" v-if=\"course.options.enable_registration\">{{trans('student.registration_enabled')}}</span>\n                                            <br />\n                                            <span class=\"badge badge-success\" v-if=\"course.options.enable_registration_fee\">{{trans('student.registration_fee_enabled')}} ({{formatCurrency(course.options.registration_fee)}}) </span>\n                                        </template>\n                                        <template v-else>\n                                            <span class=\"badge badge-success\" v-if=\"getConfig('enable_registration')\">{{trans('student.registration_enabled')}}</span>\n                                            <br />\n                                            <span class=\"badge badge-success\" v-if=\"getConfig('enable_registration_fee')\">{{trans('student.registration_fee_enabled')}} ({{formatCurrency(course.options.registration_fee)}}) </span>\n                                        </template>\n                                    </td>\n                                    <td v-text=\"course.description\"></td>\n                                    <td class=\"table-option\">\n                                        <div class=\"btn-group\">\n                                            <button v-if=\"course.batches\" class=\"btn btn-success btn-sm\" v-tooltip=\"trans('academic.reorder_batch')\" @click.prevent=\"showBatchReorderAction(course)\"><i class=\"fas fa-arrows-alt\"></i></button>\n                                            <button class=\"btn btn-info btn-sm\" v-if=\"hasPermission('edit-course')\" v-tooltip=\"trans('academic.edit_course')\" @click.prevent=\"editCourse(course)\"><i class=\"fas fa-edit\"></i></button>\n                                            <button class=\"btn btn-danger btn-sm\" v-if=\"hasPermission('delete-course')\" :key=\"course.id\" v-confirm=\"{ok: confirmDelete(course)}\" v-tooltip=\"trans('academic.delete_course')\"><i class=\"fas fa-trash\"></i></button>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <module-info v-if=\"!courses.total\" module=\"academic\" title=\"course_module_title\" description=\"course_module_description\" icon=\"list\">\n                        <div slot=\"btn\">\n                            <button class=\"btn btn-info btn-md\" v-if=\"!showCreatePanel && hasPermission('create-course')\" @click=\"showCreatePanel = !showCreatePanel\"><i class=\"fas fa-plus\"></i> {{trans('general.add_new')}}</button>\n                        </div>\n                    </module-info>\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"courses\" @updateRecords=\"getCourses\"></pagination-record>\n                </div>\n            </div>\n        </div>\n\n        <transition name=\"modal\" v-if=\"hasPermission('edit-course') && showReorderModal\">\n            <div class=\"modal-mask\">\n                <div class=\"modal-wrapper\">\n                    <div class=\"modal-container modal-lg\">\n                        <div class=\"modal-header\">\n                            <slot name=\"header\">\n                                {{trans('academic.reorder_course')}}\n                                <span class=\"float-right pointer\" @click=\"showReorderModal = false\">x</span>\n                            </slot>\n                        </div>\n                        <div class=\"modal-body\">\n                            <slot name=\"body\">\n                                <draggable v-model=\"list\" @start=\"drag=true\" @end=\"drag=false\" class=\"list-group\">\n                                    <div class=\"list-group-item pointer\" v-for=\"item in list\" :key=\"item.id\"><i class=\"fas fa-arrows-alt\"></i> {{item}}</div>\n                                </draggable>\n                                <button type=\"button\" class=\"btn btn-info pull-right m-t-10\" @click=\"reorderCourse\">{{trans('general.save')}}</button>\n                            </slot>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </transition>\n\n        <transition name=\"modal\" v-if=\"hasPermission('edit-course') && showBatchReorderModal\">\n            <div class=\"modal-mask\">\n                <div class=\"modal-wrapper\">\n                    <div class=\"modal-container modal-lg\">\n                        <div class=\"modal-header\">\n                            <slot name=\"header\">\n                                {{trans('academic.reorder_batch')}}\n                                <span class=\"float-right pointer\" @click=\"showBatchReorderModal = false\">x</span>\n                            </slot>\n                        </div>\n                        <div class=\"modal-body\">\n                            <slot name=\"body\">\n                                <draggable v-model=\"batch_list\" @start=\"drag=true\" @end=\"drag=false\" class=\"list-group\">\n                                    <div class=\"list-group-item pointer\" v-for=\"item in batch_list\" :key=\"item.id\"><i class=\"fas fa-arrows-alt\"></i> {{item}}</div>\n                                </draggable>\n                                <button type=\"button\" class=\"btn btn-info pull-right m-t-10\" @click=\"reorderBatch\">{{trans('general.save')}}</button>\n                            </slot>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </transition>\n\n        <right-panel :topic=\"help_topic\"></right-panel>\n    </div>\n</template>\n\n<script>\n    import courseForm from './form'\n\n    export default {\n        components : { courseForm },\n        data() {\n            return {\n                courses: {\n                    total: 0,\n                    data: []\n                },\n                course: {},\n                filter: {\n                    sort_by : 'position',\n                    order: 'asc',\n                    course_group_id: [],\n                    page_length: helper.getConfig('page_length')\n                },\n                orderByOptions: [\n                    {\n                        value: 'position',\n                        translation: i18n.academic.course_order\n                    },\n                    {\n                        value: 'name',\n                        translation: i18n.academic.course_name\n                    }\n                ],\n                course_groups: [],\n                selected_course_groups: null,\n                showFilterPanel: false,\n                showCreatePanel: false,\n                showReorderModal: false,\n                showBatchReorderModal: false,\n                list: [],\n                batch_list: [],\n                help_topic: ''\n            };\n        },\n        mounted(){\n            if(!helper.hasPermission('list-course')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getCourses();\n            helper.showDemoNotification(['academic']);\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            showBatchReorderAction(course){\n                this.showBatchReorderModal = true;\n                this.getBatchList(course);\n            },\n            getBatchList(course){\n                this.batch_list = [];\n                this.course = course;\n                course.batches.forEach(batch => {\n                    this.batch_list.push(batch.name);\n                })\n            },\n            getCourses(page){\n                let loader = this.$loading.show();\n                if (typeof page !== 'number') {\n                    page = 1;\n                }\n                let url = helper.getFilterURL(this.filter);\n                axios.get('/api/course?page=' + page + url)\n                    .then(response => {\n                        this.list = [];\n                        this.courses = response.courses;\n                        this.course_groups = response.filters.course_groups;\n                        this.courses.data.forEach(course_group => {\n                            this.list.push(course_group.name);\n                        })\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            editCourse(course){\n                this.$router.push('/academic/course/'+course.id+'/edit');\n            },\n            confirmDelete(course){\n                return dialog => this.deleteCourse(course);\n            },\n            deleteCourse(course){\n                let loader = this.$loading.show();\n                axios.delete('/api/course/'+course.id)\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.getCourses();\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getConfig(config){\n                return helper.getConfig(config);\n            },\n            formatCurrency(price){\n                return helper.formatCurrency(price);\n            },\n            print(){\n                let loader = this.$loading.show();\n                axios.post('/api/course/print',{filter: this.filter})\n                    .then(response => {\n                        let print = window.open(\"/print\");\n                        loader.hide();\n                        print.document.write(response);\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            pdf(){\n                let loader = this.$loading.show();\n                axios.post('/api/course/pdf',{filter: this.filter})\n                    .then(response => {\n                        loader.hide();\n                        window.open('/download/report/'+response+'?token='+this.authToken);\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            onCourseGroupSelect(selectedOption){\n                this.filter.course_group_id.push(selectedOption.id);\n            },\n            onCourseGroupRemove(removedOption){\n                this.filter.course_group_id.splice(this.filter.course_group_id.indexOf(removedOption.id), 1);\n            },\n            reorderCourse(){\n                axios.post('/api/course/reorder',{list: this.list})\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.showReorderModal = false;\n                        this.getCourses();\n                    })\n                    .catch(error => {\n                        helper.showErrorMsg(error);\n                    })\n            },\n            reorderBatch(){\n                axios.post('/api/course/'+this.course.id+'/batch/reorder',{list: this.batch_list})\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.showBatchReorderModal = false;\n                        this.getCourses();\n                    })\n                    .catch(error => {\n                        helper.showErrorMsg(error);\n                    })\n            }\n        },\n        filters: {\n          moment(date) {\n            return helper.formatDate(date);\n          },\n          momentDateTime(date) {\n            return helper.formatDateTime(date);\n          }\n        },\n        watch: {\n            'filter.sort_by': function(val){\n                this.getCourses();\n            },\n            'filter.order': function(val){\n                this.getCourses();\n            },\n            'filter.page_length': function(val){\n                this.getCourses();\n            }\n        },\n        computed: {\n            authToken(){\n                return helper.getAuthToken();\n            }\n        }\n    }\n</script>","<template>\n    <form @submit.prevent=\"proceed\" @keydown=\"courseGroupForm.errors.clear($event.target.name)\">\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('academic.course_group_name')}}</label>\n                    <input class=\"form-control\" type=\"text\" v-model=\"courseGroupForm.name\" name=\"name\" :placeholder=\"trans('academic.course_group_name')\">\n                    <show-error :form-name=\"courseGroupForm\" prop-name=\"name\"></show-error>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-6\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('academic.course_group_description')}}</label>\n                    <input class=\"form-control\" type=\"text\" v-model=\"courseGroupForm.description\" name=\"description\" :placeholder=\"trans('academic.course_group_description')\">\n                    <show-error :form-name=\"courseGroupForm\" prop-name=\"description\"></show-error>\n                </div>\n            </div>\n        </div>\n        <div class=\"card-footer text-right\">\n            <router-link to=\"/configuration/academic/course/group\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\n            <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n            <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n                <span v-if=\"id\">{{trans('general.update')}}</span>\n                <span v-else>{{trans('general.save')}}</span>\n            </button>\n        </div>\n    </form>\n</template>\n\n\n<script>\n    export default {\n        components: {},\n        data() {\n            return {\n                courseGroupForm: new Form({\n                    name : '',\n                    description : ''\n                })\n            };\n        },\n        props: ['id'],\n        mounted() {\n            if(this.id)\n                this.get();\n        },\n        methods: {\n            proceed(){\n                if(this.id)\n                    this.update();\n                else\n                    this.store();\n            },\n            store(){\n                let loader = this.$loading.show();\n                this.courseGroupForm.post('/api/academic/course/group')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.$emit('completed');\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/academic/course/group/'+this.id)\n                    .then(response => {\n                        this.courseGroupForm.name = response.name;\n                        this.courseGroupForm.description = response.description;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        this.$router.push('/configuration/academic/course/group');\n                    });\n            },\n            update(){\n                let loader = this.$loading.show();\n                this.courseGroupForm.patch('/api/academic/course/group/'+this.id)\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/configuration/academic/course/group');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            }\n        }\n    }\n</script>\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function ($event) {\n              $event.preventDefault()\n              return _vm.proceed.apply(null, arguments)\n            },\n            keydown: function ($event) {\n              return _vm.courseForm.errors.clear($event.target.name)\n            },\n          },\n        },\n        [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"academic.course_name\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.courseForm.name,\n                        expression: \"courseForm.name\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"name\",\n                      placeholder: _vm.trans(\"academic.course_name\"),\n                    },\n                    domProps: { value: _vm.courseForm.name },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(_vm.courseForm, \"name\", $event.target.value)\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: { \"form-name\": _vm.courseForm, \"prop-name\": \"name\" },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"academic.course_group\")) + \" \"),\n                  ]),\n                  _vm._v(\" \"),\n                  _vm.hasPermission(\"access-configuration\")\n                    ? _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-xs btn-info pull-right\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showCourseGroupModal = true\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.add_new\")))]\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"course_group_id\",\n                        id: \"course_group_id\",\n                        options: _vm.course_groups,\n                        placeholder: _vm.trans(\"academic.select_course_group\"),\n                      },\n                      on: {\n                        select: _vm.onCourseGroupSelect,\n                        close: function ($event) {\n                          return _vm.courseForm.errors.clear(\"course_group_id\")\n                        },\n                        remove: function ($event) {\n                          _vm.courseForm.course_group_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_course_group,\n                        callback: function ($$v) {\n                          _vm.selected_course_group = $$v\n                        },\n                        expression: \"selected_course_group\",\n                      },\n                    },\n                    [\n                      !_vm.course_groups.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                            \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                        \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.courseForm,\n                      \"prop-name\": \"course_group_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"academic.course_description\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.courseForm.description,\n                        expression: \"courseForm.description\",\n                      },\n                    ],\n                    staticClass: \"form-control\",\n                    attrs: {\n                      type: \"text\",\n                      name: \"description\",\n                      placeholder: _vm.trans(\"academic.course_description\"),\n                    },\n                    domProps: { value: _vm.courseForm.description },\n                    on: {\n                      input: function ($event) {\n                        if ($event.target.composing) return\n                        _vm.$set(\n                          _vm.courseForm,\n                          \"description\",\n                          $event.target.value\n                        )\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.courseForm,\n                      \"prop-name\": \"description\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"div\", [\n                    _vm._v(_vm._s(_vm.trans(\"student.enable_registration\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"switches\", {\n                    staticClass: \"m-t-10\",\n                    attrs: { theme: \"bootstrap\", color: \"success\" },\n                    model: {\n                      value: _vm.courseForm.enable_registration,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.courseForm, \"enable_registration\", $$v)\n                      },\n                      expression: \"courseForm.enable_registration\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.courseForm,\n                      \"prop-name\": \"enable_registration\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"div\", [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"student.enable_registration_fee\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"switches\", {\n                    staticClass: \"m-t-10\",\n                    attrs: { theme: \"bootstrap\", color: \"success\" },\n                    model: {\n                      value: _vm.courseForm.enable_registration_fee,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.courseForm, \"enable_registration_fee\", $$v)\n                      },\n                      expression: \"courseForm.enable_registration_fee\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.courseForm,\n                      \"prop-name\": \"enable_registration_fee\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _vm.courseForm.enable_registration_fee\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.registration_fee\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"currency-input\", {\n                        attrs: {\n                          position: _vm.default_currency.position,\n                          symbol: _vm.default_currency.symbol,\n                          name: \"registration_fee\",\n                          placeholder: _vm.trans(\"student.registration_fee\"),\n                        },\n                        nativeOn: {\n                          input: function ($event) {\n                            return _vm.courseForm.errors.clear(\n                              \"registration_fee\"\n                            )\n                          },\n                        },\n                        model: {\n                          value: _vm.courseForm.registration_fee,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.courseForm, \"registration_fee\", $$v)\n                          },\n                          expression: \"courseForm.registration_fee\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.courseForm,\n                          \"prop-name\": \"registration_fee\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"card-footer text-right\" },\n            [\n              _c(\n                \"router-link\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.id,\n                      expression: \"id\",\n                    },\n                  ],\n                  staticClass: \"btn btn-danger waves-effect waves-light\",\n                  attrs: { to: \"/academic/course\" },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              ),\n              _vm._v(\" \"),\n              !_vm.id\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-danger waves-effect waves-light\",\n                      attrs: { type: \"button\" },\n                      on: {\n                        click: function ($event) {\n                          return _vm.$emit(\"cancel\")\n                        },\n                      },\n                    },\n                    [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-info waves-effect waves-light\",\n                  attrs: { type: \"submit\" },\n                },\n                [\n                  _vm.id\n                    ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                    : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n                ]\n              ),\n            ],\n            1\n          ),\n        ]\n      ),\n      _vm._v(\" \"),\n      _vm.showCourseGroupModal\n        ? _c(\"transition\", { attrs: { name: \"modal\" } }, [\n            _c(\"div\", { staticClass: \"modal-mask\" }, [\n              _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n                _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-header\" },\n                    [\n                      _vm._t(\"header\", function () {\n                        return [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(\n                                _vm.trans(\"academic.add_new_course_group\")\n                              ) +\n                              \"\\n                            \"\n                          ),\n                          _c(\n                            \"span\",\n                            {\n                              staticClass: \"float-right pointer\",\n                              on: {\n                                click: function ($event) {\n                                  _vm.showCourseGroupModal = false\n                                },\n                              },\n                            },\n                            [_vm._v(\"x\")]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-body\" },\n                    [\n                      _vm._t(\"body\", function () {\n                        return [\n                          _c(\"course-group-form\", {\n                            on: {\n                              completed: _vm.getPreRequisite,\n                              cancel: function ($event) {\n                                _vm.showCourseGroupModal = false\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"clearfix\" }),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                ]),\n              ]),\n            ]),\n          ])\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"academic.course\")) + \" \\n                    \"\n              ),\n              _vm.courses.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.courses.total,\n                            from: _vm.courses.from,\n                            to: _vm.courses.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _vm.courses.total &&\n                !_vm.showCreatePanel &&\n                _vm.hasPermission(\"create-course\")\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"general.add_new\"),\n                            expression: \"trans('general.add_new')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showCreatePanel = !_vm.showCreatePanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"academic.add_new_course\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _vm.hasPermission(\"edit-course\") && _vm.courses.total\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"academic.reorder_course\"),\n                            expression: \"trans('academic.reorder_course')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showReorderModal = true\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-arrows-alt\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"academic.reorder_course\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"academic.course\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"course_group_id\",\n                                  id: \"course_group_id\",\n                                  options: _vm.course_groups,\n                                  placeholder: _vm.trans(\n                                    \"academic.select_course_group\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_course_groups,\n                                },\n                                on: {\n                                  select: _vm.onCourseGroupSelect,\n                                  remove: _vm.onCourseGroupRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_course_groups,\n                                  callback: function ($$v) {\n                                    _vm.selected_course_groups = $$v\n                                  },\n                                  expression: \"selected_course_groups\",\n                                },\n                              },\n                              [\n                                !_vm.course_groups.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getCourses },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _vm.hasPermission(\"create-course\")\n            ? _c(\"transition\", { attrs: { name: \"fade\" } }, [\n                _vm.showCreatePanel\n                  ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"card-body\" },\n                        [\n                          _c(\"h4\", { staticClass: \"card-title\" }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"academic.add_new_course\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"course-form\", {\n                            on: {\n                              completed: _vm.getCourses,\n                              cancel: function ($event) {\n                                _vm.showCreatePanel = !_vm.showCreatePanel\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.courses.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"academic.course_name\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"academic.course_group\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"academic.batch\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"general.option\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"academic.course_description\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", { staticClass: \"table-option\" }, [\n                              _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(_vm.courses.data, function (course) {\n                            return _c(\"tr\", [\n                              _c(\"td\", {\n                                domProps: { textContent: _vm._s(course.name) },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(course.course_group.name),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _c(\n                                  \"ul\",\n                                  {\n                                    staticStyle: {\n                                      \"list-style\": \"none\",\n                                      padding: \"0\",\n                                      margin: \"0\",\n                                    },\n                                  },\n                                  _vm._l(course.batches, function (batch) {\n                                    return _c(\"li\", [\n                                      _vm._v(_vm._s(batch.name)),\n                                    ])\n                                  }),\n                                  0\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"td\",\n                                [\n                                  course.options\n                                    ? [\n                                        course.options.enable_registration\n                                          ? _c(\n                                              \"span\",\n                                              {\n                                                staticClass:\n                                                  \"badge badge-success\",\n                                              },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.trans(\n                                                      \"student.registration_enabled\"\n                                                    )\n                                                  )\n                                                ),\n                                              ]\n                                            )\n                                          : _vm._e(),\n                                        _vm._v(\" \"),\n                                        _c(\"br\"),\n                                        _vm._v(\" \"),\n                                        course.options.enable_registration_fee\n                                          ? _c(\n                                              \"span\",\n                                              {\n                                                staticClass:\n                                                  \"badge badge-success\",\n                                              },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.trans(\n                                                      \"student.registration_fee_enabled\"\n                                                    )\n                                                  ) +\n                                                    \" (\" +\n                                                    _vm._s(\n                                                      _vm.formatCurrency(\n                                                        course.options\n                                                          .registration_fee\n                                                      )\n                                                    ) +\n                                                    \") \"\n                                                ),\n                                              ]\n                                            )\n                                          : _vm._e(),\n                                      ]\n                                    : [\n                                        _vm.getConfig(\"enable_registration\")\n                                          ? _c(\n                                              \"span\",\n                                              {\n                                                staticClass:\n                                                  \"badge badge-success\",\n                                              },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.trans(\n                                                      \"student.registration_enabled\"\n                                                    )\n                                                  )\n                                                ),\n                                              ]\n                                            )\n                                          : _vm._e(),\n                                        _vm._v(\" \"),\n                                        _c(\"br\"),\n                                        _vm._v(\" \"),\n                                        _vm.getConfig(\"enable_registration_fee\")\n                                          ? _c(\n                                              \"span\",\n                                              {\n                                                staticClass:\n                                                  \"badge badge-success\",\n                                              },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.trans(\n                                                      \"student.registration_fee_enabled\"\n                                                    )\n                                                  ) +\n                                                    \" (\" +\n                                                    _vm._s(\n                                                      _vm.formatCurrency(\n                                                        course.options\n                                                          .registration_fee\n                                                      )\n                                                    ) +\n                                                    \") \"\n                                                ),\n                                              ]\n                                            )\n                                          : _vm._e(),\n                                      ],\n                                ],\n                                2\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(course.description),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", { staticClass: \"table-option\" }, [\n                                _c(\"div\", { staticClass: \"btn-group\" }, [\n                                  course.batches\n                                    ? _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"tooltip\",\n                                              rawName: \"v-tooltip\",\n                                              value: _vm.trans(\n                                                \"academic.reorder_batch\"\n                                              ),\n                                              expression:\n                                                \"trans('academic.reorder_batch')\",\n                                            },\n                                          ],\n                                          staticClass: \"btn btn-success btn-sm\",\n                                          on: {\n                                            click: function ($event) {\n                                              $event.preventDefault()\n                                              return _vm.showBatchReorderAction(\n                                                course\n                                              )\n                                            },\n                                          },\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-arrows-alt\",\n                                          }),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _vm.hasPermission(\"edit-course\")\n                                    ? _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"tooltip\",\n                                              rawName: \"v-tooltip\",\n                                              value: _vm.trans(\n                                                \"academic.edit_course\"\n                                              ),\n                                              expression:\n                                                \"trans('academic.edit_course')\",\n                                            },\n                                          ],\n                                          staticClass: \"btn btn-info btn-sm\",\n                                          on: {\n                                            click: function ($event) {\n                                              $event.preventDefault()\n                                              return _vm.editCourse(course)\n                                            },\n                                          },\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-edit\",\n                                          }),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _vm.hasPermission(\"delete-course\")\n                                    ? _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"confirm\",\n                                              rawName: \"v-confirm\",\n                                              value: {\n                                                ok: _vm.confirmDelete(course),\n                                              },\n                                              expression:\n                                                \"{ok: confirmDelete(course)}\",\n                                            },\n                                            {\n                                              name: \"tooltip\",\n                                              rawName: \"v-tooltip\",\n                                              value: _vm.trans(\n                                                \"academic.delete_course\"\n                                              ),\n                                              expression:\n                                                \"trans('academic.delete_course')\",\n                                            },\n                                          ],\n                                          key: course.id,\n                                          staticClass: \"btn btn-danger btn-sm\",\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-trash\",\n                                          }),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                ]),\n                              ]),\n                            ])\n                          }),\n                          0\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.courses.total\n                  ? _c(\n                      \"module-info\",\n                      {\n                        attrs: {\n                          module: \"academic\",\n                          title: \"course_module_title\",\n                          description: \"course_module_description\",\n                          icon: \"list\",\n                        },\n                      },\n                      [\n                        _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                          !_vm.showCreatePanel &&\n                          _vm.hasPermission(\"create-course\")\n                            ? _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-info btn-md\",\n                                  on: {\n                                    click: function ($event) {\n                                      _vm.showCreatePanel = !_vm.showCreatePanel\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                  _vm._v(\n                                    \" \" + _vm._s(_vm.trans(\"general.add_new\"))\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.courses,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getCourses,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.hasPermission(\"edit-course\") && _vm.showReorderModal\n        ? _c(\"transition\", { attrs: { name: \"modal\" } }, [\n            _c(\"div\", { staticClass: \"modal-mask\" }, [\n              _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n                _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-header\" },\n                    [\n                      _vm._t(\"header\", function () {\n                        return [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(_vm.trans(\"academic.reorder_course\")) +\n                              \"\\n                            \"\n                          ),\n                          _c(\n                            \"span\",\n                            {\n                              staticClass: \"float-right pointer\",\n                              on: {\n                                click: function ($event) {\n                                  _vm.showReorderModal = false\n                                },\n                              },\n                            },\n                            [_vm._v(\"x\")]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-body\" },\n                    [\n                      _vm._t(\"body\", function () {\n                        return [\n                          _c(\n                            \"draggable\",\n                            {\n                              staticClass: \"list-group\",\n                              on: {\n                                start: function ($event) {\n                                  _vm.drag = true\n                                },\n                                end: function ($event) {\n                                  _vm.drag = false\n                                },\n                              },\n                              model: {\n                                value: _vm.list,\n                                callback: function ($$v) {\n                                  _vm.list = $$v\n                                },\n                                expression: \"list\",\n                              },\n                            },\n                            _vm._l(_vm.list, function (item) {\n                              return _c(\n                                \"div\",\n                                {\n                                  key: item.id,\n                                  staticClass: \"list-group-item pointer\",\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-arrows-alt\" }),\n                                  _vm._v(\" \" + _vm._s(item)),\n                                ]\n                              )\n                            }),\n                            0\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"button\",\n                            {\n                              staticClass: \"btn btn-info pull-right m-t-10\",\n                              attrs: { type: \"button\" },\n                              on: { click: _vm.reorderCourse },\n                            },\n                            [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                ]),\n              ]),\n            ]),\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.hasPermission(\"edit-course\") && _vm.showBatchReorderModal\n        ? _c(\"transition\", { attrs: { name: \"modal\" } }, [\n            _c(\"div\", { staticClass: \"modal-mask\" }, [\n              _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n                _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-header\" },\n                    [\n                      _vm._t(\"header\", function () {\n                        return [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(_vm.trans(\"academic.reorder_batch\")) +\n                              \"\\n                            \"\n                          ),\n                          _c(\n                            \"span\",\n                            {\n                              staticClass: \"float-right pointer\",\n                              on: {\n                                click: function ($event) {\n                                  _vm.showBatchReorderModal = false\n                                },\n                              },\n                            },\n                            [_vm._v(\"x\")]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-body\" },\n                    [\n                      _vm._t(\"body\", function () {\n                        return [\n                          _c(\n                            \"draggable\",\n                            {\n                              staticClass: \"list-group\",\n                              on: {\n                                start: function ($event) {\n                                  _vm.drag = true\n                                },\n                                end: function ($event) {\n                                  _vm.drag = false\n                                },\n                              },\n                              model: {\n                                value: _vm.batch_list,\n                                callback: function ($$v) {\n                                  _vm.batch_list = $$v\n                                },\n                                expression: \"batch_list\",\n                              },\n                            },\n                            _vm._l(_vm.batch_list, function (item) {\n                              return _c(\n                                \"div\",\n                                {\n                                  key: item.id,\n                                  staticClass: \"list-group-item pointer\",\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-arrows-alt\" }),\n                                  _vm._v(\" \" + _vm._s(item)),\n                                ]\n                              )\n                            }),\n                            0\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"button\",\n                            {\n                              staticClass: \"btn btn-info pull-right m-t-10\",\n                              attrs: { type: \"button\" },\n                              on: { click: _vm.reorderBatch },\n                            },\n                            [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                ]),\n              ]),\n            ]),\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.proceed.apply(null, arguments)\n        },\n        keydown: function ($event) {\n          return _vm.courseGroupForm.errors.clear($event.target.name)\n        },\n      },\n    },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.course_group_name\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.courseGroupForm.name,\n                    expression: \"courseGroupForm.name\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"name\",\n                  placeholder: _vm.trans(\"academic.course_group_name\"),\n                },\n                domProps: { value: _vm.courseGroupForm.name },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(_vm.courseGroupForm, \"name\", $event.target.value)\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.courseGroupForm,\n                  \"prop-name\": \"name\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.course_group_description\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.courseGroupForm.description,\n                    expression: \"courseGroupForm.description\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"description\",\n                  placeholder: _vm.trans(\"academic.course_group_description\"),\n                },\n                domProps: { value: _vm.courseGroupForm.description },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(\n                      _vm.courseGroupForm,\n                      \"description\",\n                      $event.target.value\n                    )\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.courseGroupForm,\n                  \"prop-name\": \"description\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"card-footer text-right\" },\n        [\n          _c(\n            \"router-link\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.id,\n                  expression: \"id\",\n                },\n              ],\n              staticClass: \"btn btn-danger waves-effect waves-light\",\n              attrs: { to: \"/configuration/academic/course/group\" },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n          ),\n          _vm._v(\" \"),\n          !_vm.id\n            ? _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-danger waves-effect waves-light\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.$emit(\"cancel\")\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info waves-effect waves-light\",\n              attrs: { type: \"submit\" },\n            },\n            [\n              _vm.id\n                ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n            ]\n          ),\n        ],\n        1\n      ),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.loading-overlay.is-full-page{\\n    z-index: 1060;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/academic/course/form.vue\"],\"names\":[],\"mappings\":\";AAiOA;IACA,aAAA;AACA\",\"sourcesContent\":[\"<template>\\n    <div>\\n        <form @submit.prevent=\\\"proceed\\\" @keydown=\\\"courseForm.errors.clear($event.target.name)\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-sm-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"\\\">{{trans('academic.course_name')}}</label>\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"courseForm.name\\\" name=\\\"name\\\" :placeholder=\\\"trans('academic.course_name')\\\">\\n                        <show-error :form-name=\\\"courseForm\\\" prop-name=\\\"name\\\"></show-error>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-12 col-sm-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"\\\">{{trans('academic.course_group')}} </label> <button type=\\\"button\\\" class=\\\"btn btn-xs btn-info pull-right\\\" v-if=\\\"hasPermission('access-configuration')\\\" @click=\\\"showCourseGroupModal = true\\\">{{trans('general.add_new')}}</button>\\n                        <v-select label=\\\"name\\\" v-model=\\\"selected_course_group\\\" name=\\\"course_group_id\\\" id=\\\"course_group_id\\\" :options=\\\"course_groups\\\" :placeholder=\\\"trans('academic.select_course_group')\\\" @select=\\\"onCourseGroupSelect\\\" @close=\\\"courseForm.errors.clear('course_group_id')\\\" @remove=\\\"courseForm.course_group_id = ''\\\">\\n                            <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!course_groups.length\\\">\\n                                {{trans('general.no_option_found')}}\\n                            </div>\\n                        </v-select>\\n                        <show-error :form-name=\\\"courseForm\\\" prop-name=\\\"course_group_id\\\"></show-error>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-12 col-sm-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"\\\">{{trans('academic.course_description')}}</label>\\n                        <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"courseForm.description\\\" name=\\\"description\\\" :placeholder=\\\"trans('academic.course_description')\\\">\\n                        <show-error :form-name=\\\"courseForm\\\" prop-name=\\\"description\\\"></show-error>\\n                    </div>\\n                </div>\\n                <!-- <div class=\\\"col-12 col-sm-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"\\\">{{trans('student.attendance_type')}}</label>\\n                        <select v-model=\\\"courseForm.attendance_type\\\" class=\\\"custom-select col-12\\\" name=\\\"attendance_type\\\" @change=\\\"courseForm.errors.clear('attendance_type')\\\">\\n                          <option v-for=\\\"option in attendance_types\\\" v-bind:value=\\\"option.value\\\">\\n                            {{ option.text }}\\n                          </option>\\n                        </select>\\n                        <show-error :form-name=\\\"courseForm\\\" prop-name=\\\"attendance_type\\\"></show-error>\\n                    </div>\\n                </div> -->\\n                <div class=\\\"col-12 col-sm-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <div>{{trans('student.enable_registration')}}</div>\\n                        <switches class=\\\"m-t-10\\\" v-model=\\\"courseForm.enable_registration\\\" theme=\\\"bootstrap\\\" color=\\\"success\\\"></switches> \\n                        <show-error :form-name=\\\"courseForm\\\" prop-name=\\\"enable_registration\\\"></show-error>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-12 col-sm-3\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <div>{{trans('student.enable_registration_fee')}}</div>\\n                        <switches class=\\\"m-t-10\\\" v-model=\\\"courseForm.enable_registration_fee\\\" theme=\\\"bootstrap\\\" color=\\\"success\\\"></switches> \\n                        <show-error :form-name=\\\"courseForm\\\" prop-name=\\\"enable_registration_fee\\\"></show-error>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-12 col-sm-3\\\" v-if=\\\"courseForm.enable_registration_fee\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"\\\">{{trans('student.registration_fee')}}</label>\\n                        <currency-input :position=\\\"default_currency.position\\\" :symbol=\\\"default_currency.symbol\\\" name=\\\"registration_fee\\\" :placeholder=\\\"trans('student.registration_fee')\\\" v-model=\\\"courseForm.registration_fee\\\" @input.native=\\\"courseForm.errors.clear('registration_fee')\\\"></currency-input>\\n                        <show-error :form-name=\\\"courseForm\\\" prop-name=\\\"registration_fee\\\"></show-error>\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"card-footer text-right\\\">\\n                <router-link to=\\\"/academic/course\\\" class=\\\"btn btn-danger waves-effect waves-light \\\" v-show=\\\"id\\\">{{trans('general.cancel')}}</router-link>\\n                <button v-if=\\\"!id\\\" type=\\\"button\\\" class=\\\"btn btn-danger waves-effect waves-light \\\" @click=\\\"$emit('cancel')\\\">{{trans('general.cancel')}}</button>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-info waves-effect waves-light\\\">\\n                    <span v-if=\\\"id\\\">{{trans('general.update')}}</span>\\n                    <span v-else>{{trans('general.save')}}</span>\\n                </button>\\n            </div>\\n        </form>\\n\\n        <transition name=\\\"modal\\\" v-if=\\\"showCourseGroupModal\\\">\\n            <div class=\\\"modal-mask\\\">\\n                <div class=\\\"modal-wrapper\\\">\\n                    <div class=\\\"modal-container modal-lg\\\">\\n                        <div class=\\\"modal-header\\\">\\n                            <slot name=\\\"header\\\">\\n                                {{trans('academic.add_new_course_group')}}\\n                                <span class=\\\"float-right pointer\\\" @click=\\\"showCourseGroupModal = false\\\">x</span>\\n                            </slot>\\n                        </div>\\n                        <div class=\\\"modal-body\\\">\\n                            <slot name=\\\"body\\\">\\n                                <course-group-form @completed=\\\"getPreRequisite\\\" @cancel=\\\"showCourseGroupModal = false\\\"></course-group-form>\\n                                <div class=\\\"clearfix\\\"></div>\\n                            </slot>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </transition>\\n    </div>\\n</template>\\n\\n\\n<script>\\n    import courseGroupForm from '../../configuration/academic/course-group/form'\\n\\n    export default {\\n        components: {courseGroupForm},\\n        data() {\\n            return {\\n                courseForm: new Form({\\n                    name : '',\\n                    description : '',\\n                    course_group_id: '',\\n                    attendance_type: helper.getConfig('default_attendance_type'),\\n                    enable_registration: '',\\n                    enable_registration_fee: '',\\n                    registration_fee: ''\\n                }),\\n                course_groups: [],\\n                selected_course_group: null,\\n                default_currency: helper.getConfig('default_currency'),\\n                attendance_types: [\\n                    {\\n                        \\\"text\\\": i18n.student.attendance_type_daily,\\n                        \\\"value\\\": \\\"daily\\\"\\n                    }\\n                    // {\\n                    //     \\\"text\\\": i18n.student.attendance_type_subject_wise,\\n                    //     \\\"value\\\": \\\"subject_wise\\\"\\n                    // }\\n                ],\\n                showCourseGroupModal: false\\n            };\\n        },\\n        props: ['id'],\\n        mounted() {\\n            if(!helper.hasPermission('create-course') && !helper.hasPermission('edit-course')){\\n                helper.notAccessibleMsg();\\n                this.$router.push('/dashboard');\\n            }\\n\\n            if(this.id)\\n                this.get();\\n\\n            this.getPreRequisite();\\n        },\\n        methods: {\\n            hasPermission(permission){\\n                return helper.hasPermission(permission);\\n            },\\n            proceed(){\\n                if(this.id)\\n                    this.update();\\n                else\\n                    this.store();\\n            },\\n            getPreRequisite(){\\n                let loader = this.$loading.show();\\n                axios.get('/api/course/pre-requisite')\\n                    .then(response => {\\n                        this.course_groups = response;\\n                        loader.hide();\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                    });\\n            },\\n            store(){\\n                let loader = this.$loading.show();\\n                this.courseForm.post('/api/course')\\n                    .then(response => {\\n                        toastr.success(response.message);\\n                        this.courseForm.attendance_type = helper.getConfig('default_attendance_type');\\n                        this.selected_course_group = null;\\n                        this.$emit('completed');\\n                        loader.hide();\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                    });\\n            },\\n            get(){\\n                let loader = this.$loading.show();\\n                axios.get('/api/course/'+this.id)\\n                    .then(response => {\\n                        this.courseForm.name = response.name;\\n                        this.courseForm.description = response.description;\\n                        this.courseForm.attendance_type = response.options ? response.options.attendance_type : helper.getConfig('default_attendance_type');\\n                        this.courseForm.enable_registration = response.options ? response.options.enable_registration : helper.getConfig('enable_registration');\\n                        this.courseForm.enable_registration_fee = response.options ? response.options.enable_registration_fee : helper.getConfig('enable_registration_fee');\\n                        this.courseForm.registration_fee = response.options ? response.options.registration_fee : helper.getConfig('registration_fee');\\n                        this.courseForm.course_group_id = response.course_group_id;\\n                        this.selected_course_group = {id: response.course_group_id, name: response.course_group.name};\\n                        loader.hide();\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                        this.$router.push('/academic/course');\\n                    });\\n            },\\n            update(){\\n                let loader = this.$loading.show();\\n                this.courseForm.patch('/api/course/'+this.id)\\n                    .then(response => {\\n                        toastr.success(response.message);\\n                        loader.hide();\\n                        this.$router.push('/academic/course');\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                    });\\n            },\\n            getConfig(config) {\\n                return helper.getConfig(config);\\n            },\\n            onCourseGroupSelect(selectedOption){\\n                this.courseForm.course_group_id = selectedOption.id;\\n            },\\n            hideCourseGroupForm(){\\n                $('.add-course-group-form').modal('hide');\\n            }\\n        }\\n    }\\n</script>\\n\\n<style>\\n.loading-overlay.is-full-page{\\n    z-index: 1060;\\n}\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&id=eb4c5aa2&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=eb4c5aa2&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\nimport style0 from \"./form.vue?vue&type=style&index=0&id=eb4c5aa2&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('eb4c5aa2')) {\n      api.createRecord('eb4c5aa2', component.options)\n    } else {\n      api.reload('eb4c5aa2', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=eb4c5aa2&\", function () {\n      api.rerender('eb4c5aa2', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/academic/course/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2780b777&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2780b777')) {\n      api.createRecord('2780b777', component.options)\n    } else {\n      api.reload('2780b777', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=2780b777&\", function () {\n      api.rerender('2780b777', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/academic/course/index.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=08e07d76&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('08e07d76')) {\n      api.createRecord('08e07d76', component.options)\n    } else {\n      api.reload('08e07d76', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=08e07d76&\", function () {\n      api.rerender('08e07d76', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/academic/course-group/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=eb4c5aa2&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=2780b777&\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&id=eb4c5aa2&lang=css&\""],"names":[],"sourceRoot":""}