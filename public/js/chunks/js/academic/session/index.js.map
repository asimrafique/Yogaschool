{"version":3,"file":"js/chunks/js/academic/session/index.js?id=9794ea32dd7e161a","mappings":";;;;;;;;;;;;;AAuFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC1CA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpVA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AASA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAYA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAiBA;AACA;AACA;;;;;;;;;;;;;;;;AC7fA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAOA;AAMA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAQA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAGA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAmCA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AAuBA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAEA;AAAA;AACA;AAAA;AAKA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AASA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AAOA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAaaA;AAAA;AAIA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAQA;AACA;AACA;AAKA;AACA;AACA;AACA;AAIA;AAAA;AAWA;AAAA;AAIA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAQA;AACA;AACA;AAKA;AACA;AACA;AACA;AAIA;AAAA;AAWA;AAAA;AAIA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAQA;AACA;AACA;AAKA;AACA;AACA;AACA;AAIA;AAAA;AAYA;AAAA;AACA;AAAA;AAIA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAQA;AACA;AACA;AAKA;AACA;AACA;AACA;AAIA;AAAA;AAWA;AAAA;AAIA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAQA;AACA;AACA;AAKA;AACA;AACA;AACA;AAIA;AAAA;AAWA;AAAA;AAIA;AAEA;AAGA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAQA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAQA;AACA;AACA;AAKA;AACA;AACA;AACA;AAIA;AAAA;AAoBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAUA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5qCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/academic/session/form.vue","webpack://InstiKit/resources/js/views/academic/session/index.vue","webpack://InstiKit/./resources/js/views/academic/session/form.vue","webpack://InstiKit/./resources/js/views/academic/session/index.vue","webpack://InstiKit/./resources/js/views/academic/session/form.vue?73a8","webpack://InstiKit/./resources/js/views/academic/session/index.vue?0963","webpack://InstiKit/./resources/js/views/academic/session/form.vue?b428","webpack://InstiKit/./resources/js/views/academic/session/index.vue?f721","webpack://InstiKit/./resources/js/views/academic/session/index.vue?8ebc"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"proceed\" @keydown=\"academicSessionForm.errors.clear($event.target.name)\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('academic.session_name')}}</label>\r\n                    <input class=\"form-control\" type=\"text\" v-model=\"academicSessionForm.name\" name=\"name\" :placeholder=\"trans('academic.session_name')\">\r\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"name\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('academic.session_start_date')}}</label>\r\n                    <datepicker v-model=\"academicSessionForm.start_date\" :bootstrapStyling=\"true\" @selected=\"academicSessionForm.errors.clear('start_date')\" :placeholder=\"trans('academic.session_start_date')\" :disabled=\"id ? true : false\"></datepicker>\r\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"start_date\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('academic.session_end_date')}}</label>\r\n                    <datepicker v-model=\"academicSessionForm.end_date\" :bootstrapStyling=\"true\" @selected=\"academicSessionForm.errors.clear('end_date')\" :placeholder=\"trans('academic.session_end_date')\" :disabled=\"id ? true : false\"></datepicker>\r\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"end_date\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('academic.session_description')}}</label>\r\n                    <autosize-textarea v-model=\"academicSessionForm.description\" rows=\"1\" name=\"description\" :placeholder=\"trans('academic.session_description')\"></autosize-textarea>\r\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"description\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('academic.transfer_certificate_format')}}</label>\r\n                    <v-select label=\"name\" v-model=\"selected_transfer_certificate_format\" name=\"transfer_certificate_format\" id=\"transfer_certificate_format\" :options=\"transfer_certificate_formats\" :placeholder=\"trans('academic.select_transfer_certificate_format')\" @select=\"onTransferCertificateFormatSelect\" @close=\"academicSessionForm.errors.clear('transfer_certificate_format')\" @remove=\"academicSessionForm.transfer_certificate_format = ''\">\r\n                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!transfer_certificate_formats.length\">\r\n                            {{trans('general.no_option_found')}}\r\n                        </div>\r\n                    </v-select>\r\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"transfer_certificate_format\"></show-error>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <template v-if=\"!setupWizard\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <switches class=\"m-l-20\" v-model=\"academicSessionForm.is_default\" theme=\"bootstrap\" color=\"success\"></switches> {{trans('academic.session_is_default')}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <switches class=\"m-l-20\" v-model=\"academicSessionForm.exam_report_analysis\" theme=\"bootstrap\" color=\"success\"></switches> {{trans('exam.exam_report_analysis')}}\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12\" v-if=\"academicSessionForm.exam_report_analysis\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('academic.exam_report_analysis_student_token')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"academicSessionForm.exam_report_analysis_student_token\" name=\"exam_report_analysis_student_token\" :placeholder=\"trans('academic.exam_report_analysis_student_token')\">\r\n                        <show-error :form-name=\"academicSessionForm\" prop-name=\"exam_report_analysis_student_token\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12\" v-if=\"academicSessionForm.exam_report_analysis\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('academic.exam_report_analysis_staff_token')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"academicSessionForm.exam_report_analysis_staff_token\" name=\"exam_report_analysis_staff_token\" :placeholder=\"trans('academic.exam_report_analysis_staff_token')\">\r\n                        <show-error :form-name=\"academicSessionForm\" prop-name=\"exam_report_analysis_staff_token\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"card-footer text-right\">\r\n                <router-link to=\"/academic/session\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\r\n                <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n                    <span v-if=\"id\">{{trans('general.update')}}</span>\r\n                    <span v-else>{{trans('general.save')}}</span>\r\n                </button>\r\n            </div>\r\n        </template>\r\n    </form>\r\n</template>\r\n\r\n\r\n<script>\r\n    export default {\r\n        props: {\r\n            setupWizard: {\r\n                default: false\r\n            },\r\n            id: ''\r\n        },\r\n        components: {},\r\n        data() {\r\n            return {\r\n                academicSessionForm: new Form({\r\n                    name : '',\r\n                    description : '',\r\n                    start_date: '',\r\n                    end_date: '',\r\n                    transfer_certificate_format: '',\r\n                    is_default: 0,\r\n                    exam_report_analysis: false,\r\n                    exam_report_analysis_staff_token: '',\r\n                    exam_report_analysis_student_token: '',\r\n                }),\r\n                transfer_certificate_formats: [],\r\n                selected_transfer_certificate_format: null,\r\n            };\r\n        },\r\n        mounted() {\r\n            if(!helper.hasPermission('create-academic-session') && !helper.hasPermission('edit-academic-session')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            proceed(){\r\n                if(this.id)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/academic/session/pre-requisite')\r\n                    .then(response => {\r\n                        this.transfer_certificate_formats = response.transfer_certificate_formats;\r\n\r\n                        if(this.id)\r\n                            this.get();\r\n\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },  \r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.academicSessionForm.post('/api/academic/session')\r\n                    .then(response => {\r\n                        this.$store.dispatch('setAcademicSession',response.academic_sessions);\r\n                        toastr.success(response.message);\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                        if (this.setupWizard)\r\n                            this.$router.push('/dashboard');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/academic/session/'+this.id)\r\n                    .then(response => {\r\n                        this.academicSessionForm.name = response.name;\r\n                        this.academicSessionForm.description = response.description;\r\n                        this.academicSessionForm.start_date = response.start_date;\r\n                        this.academicSessionForm.end_date = response.end_date;\r\n                        this.academicSessionForm.is_default = response.is_default;\r\n\r\n                        let transfer_certificate_format_id = response.options && response.options.hasOwnProperty(\"transfer_certificate_format\") ? response.options.transfer_certificate_format : null;\r\n\r\n                        let transfer_certificate_format = this.transfer_certificate_formats.find(o => o.id == transfer_certificate_format_id);\r\n\r\n                        this.academicSessionForm.transfer_certificate_format = transfer_certificate_format_id;\r\n                        this.selected_transfer_certificate_format = transfer_certificate_format || null; \r\n\r\n                        this.academicSessionForm.exam_report_analysis = response.exam_report_analysis\r\n                        this.academicSessionForm.exam_report_analysis_staff_token = response.exam_report_analysis_staff_token\r\n                        this.academicSessionForm.exam_report_analysis_student_token = response.exam_report_analysis_student_token\r\n\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/academic/session');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.academicSessionForm.patch('/api/academic/session/'+this.id)\r\n                    .then(response => {\r\n                        this.$store.dispatch('setConfig',{loaded: false});\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/academic/session');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onTransferCertificateFormatSelect(selectedOption){\r\n                return this.academicSessionForm.transfer_certificate_format = selectedOption.id;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('academic.session')}} \r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"academic_sessions.total\">{{ trans('general.total_result_found',{count: academic_sessions.total, from: academic_sessions.from, to: academic_sessions.to}) }}</span>\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\r\n                    </h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"academic_sessions.total && !showCreatePanel && hasPermission('create-academic-session')\" @click=\"showCreatePanel = !showCreatePanel\" v-tooltip=\"trans('general.add_new')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('academic.add_new_session')}}</span></button>\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"hasPermission('import-previous-session-data')\" @click=\"showImportModal = true\" v-tooltip=\"trans('general.import')\"><i class=\"fas fa-file-import\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.import')}}</span></button>\r\n\r\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\r\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\r\n                            </button>\r\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\r\n                            </div>\r\n                        </div>\r\n                        <help-button @clicked=\"help_topic = 'academic.session'\"></help-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <transition name=\"fade\" v-if=\"hasPermission('create-academic-session')\">\r\n                <div class=\"card card-form\" v-if=\"showCreatePanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('academic.add_new_session')}}</h4>\r\n                        <show-tip module=\"academic\" tip=\"date_of_academic_session_not_editable\"></show-tip>\r\n                        <academic-session-form @completed=\"getAcademicSessions\" @cancel=\"showCreatePanel = !showCreatePanel\"></academic-session-form>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\" v-if=\"academic_sessions.total\">\r\n                        <table class=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{{trans('academic.session_name')}}</th>\r\n                                    <th>{{trans('academic.session_start_date')}}</th>\r\n                                    <th>{{trans('academic.session_end_date')}}</th>\r\n                                    <th>{{trans('academic.session_default')}}</th>\r\n                                    <th>{{trans('academic.session_description')}}</th>\r\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"academic_session in academic_sessions.data\">\r\n                                    <td v-text=\"academic_session.name\"></td>\r\n                                    <td>{{academic_session.start_date | moment}}</td>\r\n                                    <td>{{academic_session.end_date | moment}}</td>\r\n                                    <td v-html=\"getStatus(academic_session)\"></td>\r\n                                    <td v-text=\"academic_session.description\"></td>\r\n                                    <td class=\"table-option\">\r\n                                        <div class=\"btn-group\">\r\n                                            <button class=\"btn btn-info btn-sm\" v-if=\"hasPermission('edit-academic-session')\" v-tooltip=\"trans('academic.edit_session')\" @click.prevent=\"editAcademicSession(academic_session)\"><i class=\"fas fa-edit\"></i></button>\r\n                                            <button class=\"btn btn-danger btn-sm\" v-if=\"hasPermission('delete-academic-session')\" :key=\"academic_session.id\" v-confirm=\"{ok: confirmDelete(academic_session)}\" v-tooltip=\"trans('academic.delete_session')\"><i class=\"fas fa-trash\"></i></button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <module-info v-if=\"!academic_sessions.total\" module=\"academic\" title=\"session_module_title\" description=\"session_module_description\" icon=\"list\">\r\n                        <div slot=\"btn\">\r\n                            <button class=\"btn btn-info btn-md\" v-if=\"!showCreatePanel && hasPermission('create-academic-session')\" @click=\"showCreatePanel = !showCreatePanel\"><i class=\"fas fa-plus\"></i> {{trans('general.add_new')}}</button>\r\n                        </div>\r\n                    </module-info>\r\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"academic_sessions\" @updateRecords=\"getAcademicSessions\"></pagination-record>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <transition name=\"modal\" v-if=\"showImportModal\">\r\n            <div class=\"modal-mask\">\r\n                <div class=\"modal-wrapper\">\r\n                    <div class=\"modal-container modal-lg\">\r\n                        <div class=\"modal-header\">\r\n                            <slot name=\"header\">\r\n                                {{trans('academic.import_data')}}\r\n                                <span class=\"float-right pointer\" @click=\"showImportModal = false\">x</span>\r\n                            </slot>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <slot name=\"body\">\r\n                                <div class=\"form-group\">\r\n                                    <select v-model=\"importForm.academic_session_id\" class=\"custom-select col-12\" name=\"academic_session_id\">\r\n                                      <option value=\"\">{{trans('academic.select_session')}}</option>\r\n                                      <option v-if=\"academic_session.id != getDefaultAcademicSession.id\" v-for=\"academic_session in getAcademicSessionList\" v-bind:value=\"academic_session.id\">\r\n                                        {{ academic_session.name }}\r\n                                      </option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-12 col-sm-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"custom-control custom-checkbox\">\r\n                                                <input type=\"checkbox\" class=\"custom-control-input\" value=\"1\" v-model=\"importForm.course_group\">\r\n                                                <span class=\"custom-control-label\">{{trans('academic.course_group')}}</span>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"custom-control custom-checkbox\">\r\n                                                <input type=\"checkbox\" class=\"custom-control-input\" value=\"1\" v-model=\"importForm.course\">\r\n                                                <span class=\"custom-control-label\">{{trans('academic.course')}}</span>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"custom-control custom-checkbox\">\r\n                                                <input type=\"checkbox\" class=\"custom-control-input\" value=\"1\" v-model=\"importForm.batch\">\r\n                                                <span class=\"custom-control-label\">{{trans('academic.batch')}}</span>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"custom-control custom-checkbox\">\r\n                                                <input type=\"checkbox\" class=\"custom-control-input\" value=\"1\" v-model=\"importForm.subject\">\r\n                                                <span class=\"custom-control-label\">{{trans('academic.subject')}}</span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"col-12 col-sm-6\">\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"custom-control custom-checkbox\">\r\n                                                <input type=\"checkbox\" class=\"custom-control-input\" value=\"1\" v-model=\"importForm.fee_group\">\r\n                                                <span class=\"custom-control-label\">{{trans('finance.fee_group')}}</span>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"custom-control custom-checkbox\">\r\n                                                <input type=\"checkbox\" class=\"custom-control-input\" value=\"1\" v-model=\"importForm.fee_head\">\r\n                                                <span class=\"custom-control-label\">{{trans('finance.fee_head')}}</span>\r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"form-group\">\r\n                                            <label class=\"custom-control custom-checkbox\">\r\n                                                <input type=\"checkbox\" class=\"custom-control-input\" value=\"1\" v-model=\"importForm.transport_circle\">\r\n                                                <span class=\"custom-control-label\">{{trans('transport.transport_circle')}}</span>\r\n                                            </label>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <button type=\"button\" class=\"btn btn-info pull-right\" @click=\"importData\">{{trans('general.import')}}</button>\r\n                                <button type=\"button\" class=\"btn btn-danger pull-right m-r-10\" @click=\"showImportModal = false\">{{trans('general.cancel')}}</button>\r\n                            </slot>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </transition>\r\n\r\n        <right-panel :topic=\"help_topic\"></right-panel>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import academicSessionForm from './form'\r\n\r\n    export default {\r\n        components : { academicSessionForm},\r\n        data() {\r\n            return {\r\n                academic_sessions: {\r\n                    total: 0,\r\n                    data: []\r\n                },\r\n                filter: {\r\n                    sort_by : 'start_date',\r\n                    order: 'desc',\r\n                    page_length: helper.getConfig('page_length')\r\n                },\r\n                orderByOptions: [\r\n                    {\r\n                        value: 'name',\r\n                        translation: i18n.academic.session_name\r\n                    },\r\n                    {\r\n                        value: 'start_date',\r\n                        translation: i18n.academic.session_start_date\r\n                    },\r\n                    {\r\n                        value: 'end_date',\r\n                        translation: i18n.academic.session_end_date\r\n                    }\r\n                ],\r\n                showCreatePanel: false,\r\n                showImportModal: false,\r\n                importForm: new Form({\r\n                    academic_session_id: '',\r\n                    course_group: 0,\r\n                    course: 0,\r\n                    batch: 0,\r\n                    subject: 0,\r\n                    fee_group: 0,\r\n                    fee_head: 0,\r\n                    transport_circle: 0\r\n                }),\r\n                help_topic: ''\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('list-academic-session')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.getAcademicSessions();\r\n            helper.showDemoNotification(['academic']);\r\n        },\r\n        methods: {\r\n            getConfig(config){\r\n                return helper.getConfig(config);\r\n            },\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            getAcademicSessions(page){\r\n                let loader = this.$loading.show();\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                let url = helper.getFilterURL(this.filter);\r\n                axios.get('/api/academic/session?page=' + page + url)\r\n                    .then(response => {\r\n                        this.academic_sessions = response;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            editAcademicSession(academic_session){\r\n                this.$router.push('/academic/session/'+academic_session.id+'/edit');\r\n            },\r\n            confirmDelete(academic_session){\r\n                return dialog => this.deleteAcademicSession(academic_session);\r\n            },\r\n            deleteAcademicSession(academic_session){\r\n                let loader = this.$loading.show();\r\n                axios.delete('/api/academic/session/'+academic_session.id)\r\n                    .then(response => {\r\n                        this.$store.dispatch('setAcademicSession',response.academic_sessions);\r\n                        toastr.success(response.message);\r\n                        this.getAcademicSessions();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getStatus(academic_session){\r\n                return academic_session.is_default ? '<i class=\"fas fa-check\"></i>' : '<i class=\"fas fa-times\"></i>';\r\n            },\r\n            print(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/academic/session/print',{filter: this.filter})\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        let print = window.open(\"/print\");\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            pdf(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/academic/session/pdf',{filter: this.filter})\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        window.open('/download/report/'+response+'?token='+this.authToken);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            importData(){\r\n                this.importForm.post('/api/academic/session/import')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.showImportModal = false;\r\n                    })\r\n                    .catch(error => {\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        },\r\n        watch: {\r\n            'filter.sort_by': function(val) {\r\n                this.getAcademicSessions();\r\n            },\r\n            'filter.order': function(val) {\r\n                this.getAcademicSessions();\r\n            },\r\n            'filter.page_length': function(val) {\r\n                this.getAcademicSessions();\r\n            },\r\n            'importForm.subject': function(val) {\r\n                this.importForm.batch = this.importForm.subject || this.importForm.batch\r\n            },\r\n            'importForm.batch': function(val) {\r\n                this.importForm.course = this.importForm.batch || this.importForm.course\r\n            },\r\n            'importForm.course': function(val) {\r\n                this.importForm.course_group = this.importForm.course || this.importForm.course_group\r\n            },\r\n            'importForm.fee_head': function(val) {\r\n                this.importForm.fee_group = this.importForm.fee_head || this.importForm.fee_group\r\n            }\r\n        },\r\n        computed: {\r\n            authToken(){\r\n                return helper.getAuthToken();\r\n            },\r\n            getAcademicSessionList(){\r\n                return helper.getAcademicSessions();\r\n            },\r\n            getDefaultAcademicSession(){\r\n                return helper.getDefaultAcademicSession();\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.proceed.apply(null, arguments)\n        },\n        keydown: function ($event) {\n          return _vm.academicSessionForm.errors.clear($event.target.name)\n        },\n      },\n    },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.session_name\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.academicSessionForm.name,\n                    expression: \"academicSessionForm.name\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"name\",\n                  placeholder: _vm.trans(\"academic.session_name\"),\n                },\n                domProps: { value: _vm.academicSessionForm.name },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(\n                      _vm.academicSessionForm,\n                      \"name\",\n                      $event.target.value\n                    )\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"name\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.session_start_date\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"datepicker\", {\n                attrs: {\n                  bootstrapStyling: true,\n                  placeholder: _vm.trans(\"academic.session_start_date\"),\n                  disabled: _vm.id ? true : false,\n                },\n                on: {\n                  selected: function ($event) {\n                    return _vm.academicSessionForm.errors.clear(\"start_date\")\n                  },\n                },\n                model: {\n                  value: _vm.academicSessionForm.start_date,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.academicSessionForm, \"start_date\", $$v)\n                  },\n                  expression: \"academicSessionForm.start_date\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"start_date\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.session_end_date\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"datepicker\", {\n                attrs: {\n                  bootstrapStyling: true,\n                  placeholder: _vm.trans(\"academic.session_end_date\"),\n                  disabled: _vm.id ? true : false,\n                },\n                on: {\n                  selected: function ($event) {\n                    return _vm.academicSessionForm.errors.clear(\"end_date\")\n                  },\n                },\n                model: {\n                  value: _vm.academicSessionForm.end_date,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.academicSessionForm, \"end_date\", $$v)\n                  },\n                  expression: \"academicSessionForm.end_date\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"end_date\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.session_description\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"autosize-textarea\", {\n                attrs: {\n                  rows: \"1\",\n                  name: \"description\",\n                  placeholder: _vm.trans(\"academic.session_description\"),\n                },\n                model: {\n                  value: _vm.academicSessionForm.description,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.academicSessionForm, \"description\", $$v)\n                  },\n                  expression: \"academicSessionForm.description\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"description\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(\n                  _vm._s(_vm.trans(\"academic.transfer_certificate_format\"))\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"v-select\",\n                {\n                  attrs: {\n                    label: \"name\",\n                    name: \"transfer_certificate_format\",\n                    id: \"transfer_certificate_format\",\n                    options: _vm.transfer_certificate_formats,\n                    placeholder: _vm.trans(\n                      \"academic.select_transfer_certificate_format\"\n                    ),\n                  },\n                  on: {\n                    select: _vm.onTransferCertificateFormatSelect,\n                    close: function ($event) {\n                      return _vm.academicSessionForm.errors.clear(\n                        \"transfer_certificate_format\"\n                      )\n                    },\n                    remove: function ($event) {\n                      _vm.academicSessionForm.transfer_certificate_format = \"\"\n                    },\n                  },\n                  model: {\n                    value: _vm.selected_transfer_certificate_format,\n                    callback: function ($$v) {\n                      _vm.selected_transfer_certificate_format = $$v\n                    },\n                    expression: \"selected_transfer_certificate_format\",\n                  },\n                },\n                [\n                  !_vm.transfer_certificate_formats.length\n                    ? _c(\n                        \"div\",\n                        {\n                          staticClass: \"multiselect__option\",\n                          attrs: { slot: \"afterList\" },\n                          slot: \"afterList\",\n                        },\n                        [\n                          _vm._v(\n                            \"\\n                        \" +\n                              _vm._s(_vm.trans(\"general.no_option_found\")) +\n                              \"\\n                    \"\n                          ),\n                        ]\n                      )\n                    : _vm._e(),\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"transfer_certificate_format\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      !_vm.setupWizard\n        ? [\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"switches\", {\n                      staticClass: \"m-l-20\",\n                      attrs: { theme: \"bootstrap\", color: \"success\" },\n                      model: {\n                        value: _vm.academicSessionForm.is_default,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.academicSessionForm, \"is_default\", $$v)\n                        },\n                        expression: \"academicSessionForm.is_default\",\n                      },\n                    }),\n                    _vm._v(\n                      \" \" +\n                        _vm._s(_vm.trans(\"academic.session_is_default\")) +\n                        \"\\n                \"\n                    ),\n                  ],\n                  1\n                ),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"switches\", {\n                      staticClass: \"m-l-20\",\n                      attrs: { theme: \"bootstrap\", color: \"success\" },\n                      model: {\n                        value: _vm.academicSessionForm.exam_report_analysis,\n                        callback: function ($$v) {\n                          _vm.$set(\n                            _vm.academicSessionForm,\n                            \"exam_report_analysis\",\n                            $$v\n                          )\n                        },\n                        expression: \"academicSessionForm.exam_report_analysis\",\n                      },\n                    }),\n                    _vm._v(\n                      \" \" +\n                        _vm._s(_vm.trans(\"exam.exam_report_analysis\")) +\n                        \"\\n                \"\n                    ),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _vm.academicSessionForm.exam_report_analysis\n                ? _c(\"div\", { staticClass: \"col-12\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"academic.exam_report_analysis_student_token\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value:\n                                _vm.academicSessionForm\n                                  .exam_report_analysis_student_token,\n                              expression:\n                                \"academicSessionForm.exam_report_analysis_student_token\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"exam_report_analysis_student_token\",\n                            placeholder: _vm.trans(\n                              \"academic.exam_report_analysis_student_token\"\n                            ),\n                          },\n                          domProps: {\n                            value:\n                              _vm.academicSessionForm\n                                .exam_report_analysis_student_token,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.academicSessionForm,\n                                \"exam_report_analysis_student_token\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.academicSessionForm,\n                            \"prop-name\": \"exam_report_analysis_student_token\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.academicSessionForm.exam_report_analysis\n                ? _c(\"div\", { staticClass: \"col-12\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"academic.exam_report_analysis_staff_token\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value:\n                                _vm.academicSessionForm\n                                  .exam_report_analysis_staff_token,\n                              expression:\n                                \"academicSessionForm.exam_report_analysis_staff_token\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"exam_report_analysis_staff_token\",\n                            placeholder: _vm.trans(\n                              \"academic.exam_report_analysis_staff_token\"\n                            ),\n                          },\n                          domProps: {\n                            value:\n                              _vm.academicSessionForm\n                                .exam_report_analysis_staff_token,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.academicSessionForm,\n                                \"exam_report_analysis_staff_token\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.academicSessionForm,\n                            \"prop-name\": \"exam_report_analysis_staff_token\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ])\n                : _vm._e(),\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"card-footer text-right\" },\n              [\n                _c(\n                  \"router-link\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.id,\n                        expression: \"id\",\n                      },\n                    ],\n                    staticClass: \"btn btn-danger waves-effect waves-light\",\n                    attrs: { to: \"/academic/session\" },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                ),\n                _vm._v(\" \"),\n                !_vm.id\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-danger waves-effect waves-light\",\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.$emit(\"cancel\")\n                          },\n                        },\n                      },\n                      [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info waves-effect waves-light\",\n                    attrs: { type: \"submit\" },\n                  },\n                  [\n                    _vm.id\n                      ? _c(\"span\", [\n                          _vm._v(_vm._s(_vm.trans(\"general.update\"))),\n                        ])\n                      : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n                  ]\n                ),\n              ],\n              1\n            ),\n          ]\n        : _vm._e(),\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"academic.session\")) +\n                  \" \\n                    \"\n              ),\n              _vm.academic_sessions.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.academic_sessions.total,\n                            from: _vm.academic_sessions.from,\n                            to: _vm.academic_sessions.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _vm.academic_sessions.total &&\n                !_vm.showCreatePanel &&\n                _vm.hasPermission(\"create-academic-session\")\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"general.add_new\"),\n                            expression: \"trans('general.add_new')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showCreatePanel = !_vm.showCreatePanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"academic.add_new_session\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _vm.hasPermission(\"import-previous-session-data\")\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"general.import\"),\n                            expression: \"trans('general.import')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showImportModal = true\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-file-import\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.import\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"academic.session\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _vm.hasPermission(\"create-academic-session\")\n            ? _c(\"transition\", { attrs: { name: \"fade\" } }, [\n                _vm.showCreatePanel\n                  ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"card-body\" },\n                        [\n                          _c(\"h4\", { staticClass: \"card-title\" }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"academic.add_new_session\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"show-tip\", {\n                            attrs: {\n                              module: \"academic\",\n                              tip: \"date_of_academic_session_not_editable\",\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"academic-session-form\", {\n                            on: {\n                              completed: _vm.getAcademicSessions,\n                              cancel: function ($event) {\n                                _vm.showCreatePanel = !_vm.showCreatePanel\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.academic_sessions.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"academic.session_name\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"academic.session_start_date\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"academic.session_end_date\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"academic.session_default\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"academic.session_description\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", { staticClass: \"table-option\" }, [\n                              _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(\n                            _vm.academic_sessions.data,\n                            function (academic_session) {\n                              return _c(\"tr\", [\n                                _c(\"td\", {\n                                  domProps: {\n                                    textContent: _vm._s(academic_session.name),\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm._f(\"moment\")(\n                                        academic_session.start_date\n                                      )\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm._f(\"moment\")(\n                                        academic_session.end_date\n                                      )\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", {\n                                  domProps: {\n                                    innerHTML: _vm._s(\n                                      _vm.getStatus(academic_session)\n                                    ),\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"td\", {\n                                  domProps: {\n                                    textContent: _vm._s(\n                                      academic_session.description\n                                    ),\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"td\", { staticClass: \"table-option\" }, [\n                                  _c(\"div\", { staticClass: \"btn-group\" }, [\n                                    _vm.hasPermission(\"edit-academic-session\")\n                                      ? _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"tooltip\",\n                                                rawName: \"v-tooltip\",\n                                                value: _vm.trans(\n                                                  \"academic.edit_session\"\n                                                ),\n                                                expression:\n                                                  \"trans('academic.edit_session')\",\n                                              },\n                                            ],\n                                            staticClass: \"btn btn-info btn-sm\",\n                                            on: {\n                                              click: function ($event) {\n                                                $event.preventDefault()\n                                                return _vm.editAcademicSession(\n                                                  academic_session\n                                                )\n                                              },\n                                            },\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-edit\",\n                                            }),\n                                          ]\n                                        )\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _vm.hasPermission(\"delete-academic-session\")\n                                      ? _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"confirm\",\n                                                rawName: \"v-confirm\",\n                                                value: {\n                                                  ok: _vm.confirmDelete(\n                                                    academic_session\n                                                  ),\n                                                },\n                                                expression:\n                                                  \"{ok: confirmDelete(academic_session)}\",\n                                              },\n                                              {\n                                                name: \"tooltip\",\n                                                rawName: \"v-tooltip\",\n                                                value: _vm.trans(\n                                                  \"academic.delete_session\"\n                                                ),\n                                                expression:\n                                                  \"trans('academic.delete_session')\",\n                                              },\n                                            ],\n                                            key: academic_session.id,\n                                            staticClass:\n                                              \"btn btn-danger btn-sm\",\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-trash\",\n                                            }),\n                                          ]\n                                        )\n                                      : _vm._e(),\n                                  ]),\n                                ]),\n                              ])\n                            }\n                          ),\n                          0\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.academic_sessions.total\n                  ? _c(\n                      \"module-info\",\n                      {\n                        attrs: {\n                          module: \"academic\",\n                          title: \"session_module_title\",\n                          description: \"session_module_description\",\n                          icon: \"list\",\n                        },\n                      },\n                      [\n                        _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                          !_vm.showCreatePanel &&\n                          _vm.hasPermission(\"create-academic-session\")\n                            ? _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-info btn-md\",\n                                  on: {\n                                    click: function ($event) {\n                                      _vm.showCreatePanel = !_vm.showCreatePanel\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                  _vm._v(\n                                    \" \" + _vm._s(_vm.trans(\"general.add_new\"))\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.academic_sessions,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getAcademicSessions,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.showImportModal\n        ? _c(\"transition\", { attrs: { name: \"modal\" } }, [\n            _c(\"div\", { staticClass: \"modal-mask\" }, [\n              _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n                _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-header\" },\n                    [\n                      _vm._t(\"header\", function () {\n                        return [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(_vm.trans(\"academic.import_data\")) +\n                              \"\\n                            \"\n                          ),\n                          _c(\n                            \"span\",\n                            {\n                              staticClass: \"float-right pointer\",\n                              on: {\n                                click: function ($event) {\n                                  _vm.showImportModal = false\n                                },\n                              },\n                            },\n                            [_vm._v(\"x\")]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-body\" },\n                    [\n                      _vm._t(\"body\", function () {\n                        return [\n                          _c(\"div\", { staticClass: \"form-group\" }, [\n                            _c(\n                              \"select\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.importForm.academic_session_id,\n                                    expression:\n                                      \"importForm.academic_session_id\",\n                                  },\n                                ],\n                                staticClass: \"custom-select col-12\",\n                                attrs: { name: \"academic_session_id\" },\n                                on: {\n                                  change: function ($event) {\n                                    var $$selectedVal = Array.prototype.filter\n                                      .call(\n                                        $event.target.options,\n                                        function (o) {\n                                          return o.selected\n                                        }\n                                      )\n                                      .map(function (o) {\n                                        var val =\n                                          \"_value\" in o ? o._value : o.value\n                                        return val\n                                      })\n                                    _vm.$set(\n                                      _vm.importForm,\n                                      \"academic_session_id\",\n                                      $event.target.multiple\n                                        ? $$selectedVal\n                                        : $$selectedVal[0]\n                                    )\n                                  },\n                                },\n                              },\n                              [\n                                _c(\"option\", { attrs: { value: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"academic.select_session\"))\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _vm._l(\n                                  _vm.getAcademicSessionList,\n                                  function (academic_session) {\n                                    return academic_session.id !=\n                                      _vm.getDefaultAcademicSession.id\n                                      ? _c(\n                                          \"option\",\n                                          {\n                                            domProps: {\n                                              value: academic_session.id,\n                                            },\n                                          },\n                                          [\n                                            _vm._v(\n                                              \"\\n                                    \" +\n                                                _vm._s(academic_session.name) +\n                                                \"\\n                                  \"\n                                            ),\n                                          ]\n                                        )\n                                      : _vm._e()\n                                  }\n                                ),\n                              ],\n                              2\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"row\" }, [\n                            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                              _c(\"div\", { staticClass: \"form-group\" }, [\n                                _c(\n                                  \"label\",\n                                  {\n                                    staticClass:\n                                      \"custom-control custom-checkbox\",\n                                  },\n                                  [\n                                    _c(\"input\", {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value: _vm.importForm.course_group,\n                                          expression: \"importForm.course_group\",\n                                        },\n                                      ],\n                                      staticClass: \"custom-control-input\",\n                                      attrs: { type: \"checkbox\", value: \"1\" },\n                                      domProps: {\n                                        checked: Array.isArray(\n                                          _vm.importForm.course_group\n                                        )\n                                          ? _vm._i(\n                                              _vm.importForm.course_group,\n                                              \"1\"\n                                            ) > -1\n                                          : _vm.importForm.course_group,\n                                      },\n                                      on: {\n                                        change: function ($event) {\n                                          var $$a = _vm.importForm.course_group,\n                                            $$el = $event.target,\n                                            $$c = $$el.checked ? true : false\n                                          if (Array.isArray($$a)) {\n                                            var $$v = \"1\",\n                                              $$i = _vm._i($$a, $$v)\n                                            if ($$el.checked) {\n                                              $$i < 0 &&\n                                                _vm.$set(\n                                                  _vm.importForm,\n                                                  \"course_group\",\n                                                  $$a.concat([$$v])\n                                                )\n                                            } else {\n                                              $$i > -1 &&\n                                                _vm.$set(\n                                                  _vm.importForm,\n                                                  \"course_group\",\n                                                  $$a\n                                                    .slice(0, $$i)\n                                                    .concat($$a.slice($$i + 1))\n                                                )\n                                            }\n                                          } else {\n                                            _vm.$set(\n                                              _vm.importForm,\n                                              \"course_group\",\n                                              $$c\n                                            )\n                                          }\n                                        },\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"span\",\n                                      { staticClass: \"custom-control-label\" },\n                                      [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\"academic.course_group\")\n                                          )\n                                        ),\n                                      ]\n                                    ),\n                                  ]\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"div\", { staticClass: \"form-group\" }, [\n                                _c(\n                                  \"label\",\n                                  {\n                                    staticClass:\n                                      \"custom-control custom-checkbox\",\n                                  },\n                                  [\n                                    _c(\"input\", {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value: _vm.importForm.course,\n                                          expression: \"importForm.course\",\n                                        },\n                                      ],\n                                      staticClass: \"custom-control-input\",\n                                      attrs: { type: \"checkbox\", value: \"1\" },\n                                      domProps: {\n                                        checked: Array.isArray(\n                                          _vm.importForm.course\n                                        )\n                                          ? _vm._i(_vm.importForm.course, \"1\") >\n                                            -1\n                                          : _vm.importForm.course,\n                                      },\n                                      on: {\n                                        change: function ($event) {\n                                          var $$a = _vm.importForm.course,\n                                            $$el = $event.target,\n                                            $$c = $$el.checked ? true : false\n                                          if (Array.isArray($$a)) {\n                                            var $$v = \"1\",\n                                              $$i = _vm._i($$a, $$v)\n                                            if ($$el.checked) {\n                                              $$i < 0 &&\n                                                _vm.$set(\n                                                  _vm.importForm,\n                                                  \"course\",\n                                                  $$a.concat([$$v])\n                                                )\n                                            } else {\n                                              $$i > -1 &&\n                                                _vm.$set(\n                                                  _vm.importForm,\n                                                  \"course\",\n                                                  $$a\n                                                    .slice(0, $$i)\n                                                    .concat($$a.slice($$i + 1))\n                                                )\n                                            }\n                                          } else {\n                                            _vm.$set(\n                                              _vm.importForm,\n                                              \"course\",\n                                              $$c\n                                            )\n                                          }\n                                        },\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"span\",\n                                      { staticClass: \"custom-control-label\" },\n                                      [\n                                        _vm._v(\n                                          _vm._s(_vm.trans(\"academic.course\"))\n                                        ),\n                                      ]\n                                    ),\n                                  ]\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"div\", { staticClass: \"form-group\" }, [\n                                _c(\n                                  \"label\",\n                                  {\n                                    staticClass:\n                                      \"custom-control custom-checkbox\",\n                                  },\n                                  [\n                                    _c(\"input\", {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value: _vm.importForm.batch,\n                                          expression: \"importForm.batch\",\n                                        },\n                                      ],\n                                      staticClass: \"custom-control-input\",\n                                      attrs: { type: \"checkbox\", value: \"1\" },\n                                      domProps: {\n                                        checked: Array.isArray(\n                                          _vm.importForm.batch\n                                        )\n                                          ? _vm._i(_vm.importForm.batch, \"1\") >\n                                            -1\n                                          : _vm.importForm.batch,\n                                      },\n                                      on: {\n                                        change: function ($event) {\n                                          var $$a = _vm.importForm.batch,\n                                            $$el = $event.target,\n                                            $$c = $$el.checked ? true : false\n                                          if (Array.isArray($$a)) {\n                                            var $$v = \"1\",\n                                              $$i = _vm._i($$a, $$v)\n                                            if ($$el.checked) {\n                                              $$i < 0 &&\n                                                _vm.$set(\n                                                  _vm.importForm,\n                                                  \"batch\",\n                                                  $$a.concat([$$v])\n                                                )\n                                            } else {\n                                              $$i > -1 &&\n                                                _vm.$set(\n                                                  _vm.importForm,\n                                                  \"batch\",\n                                                  $$a\n                                                    .slice(0, $$i)\n                                                    .concat($$a.slice($$i + 1))\n                                                )\n                                            }\n                                          } else {\n                                            _vm.$set(\n                                              _vm.importForm,\n                                              \"batch\",\n                                              $$c\n                                            )\n                                          }\n                                        },\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"span\",\n                                      { staticClass: \"custom-control-label\" },\n                                      [\n                                        _vm._v(\n                                          _vm._s(_vm.trans(\"academic.batch\"))\n                                        ),\n                                      ]\n                                    ),\n                                  ]\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"div\", { staticClass: \"form-group\" }, [\n                                _c(\n                                  \"label\",\n                                  {\n                                    staticClass:\n                                      \"custom-control custom-checkbox\",\n                                  },\n                                  [\n                                    _c(\"input\", {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value: _vm.importForm.subject,\n                                          expression: \"importForm.subject\",\n                                        },\n                                      ],\n                                      staticClass: \"custom-control-input\",\n                                      attrs: { type: \"checkbox\", value: \"1\" },\n                                      domProps: {\n                                        checked: Array.isArray(\n                                          _vm.importForm.subject\n                                        )\n                                          ? _vm._i(\n                                              _vm.importForm.subject,\n                                              \"1\"\n                                            ) > -1\n                                          : _vm.importForm.subject,\n                                      },\n                                      on: {\n                                        change: function ($event) {\n                                          var $$a = _vm.importForm.subject,\n                                            $$el = $event.target,\n                                            $$c = $$el.checked ? true : false\n                                          if (Array.isArray($$a)) {\n                                            var $$v = \"1\",\n                                              $$i = _vm._i($$a, $$v)\n                                            if ($$el.checked) {\n                                              $$i < 0 &&\n                                                _vm.$set(\n                                                  _vm.importForm,\n                                                  \"subject\",\n                                                  $$a.concat([$$v])\n                                                )\n                                            } else {\n                                              $$i > -1 &&\n                                                _vm.$set(\n                                                  _vm.importForm,\n                                                  \"subject\",\n                                                  $$a\n                                                    .slice(0, $$i)\n                                                    .concat($$a.slice($$i + 1))\n                                                )\n                                            }\n                                          } else {\n                                            _vm.$set(\n                                              _vm.importForm,\n                                              \"subject\",\n                                              $$c\n                                            )\n                                          }\n                                        },\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"span\",\n                                      { staticClass: \"custom-control-label\" },\n                                      [\n                                        _vm._v(\n                                          _vm._s(_vm.trans(\"academic.subject\"))\n                                        ),\n                                      ]\n                                    ),\n                                  ]\n                                ),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                              _c(\"div\", { staticClass: \"form-group\" }, [\n                                _c(\n                                  \"label\",\n                                  {\n                                    staticClass:\n                                      \"custom-control custom-checkbox\",\n                                  },\n                                  [\n                                    _c(\"input\", {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value: _vm.importForm.fee_group,\n                                          expression: \"importForm.fee_group\",\n                                        },\n                                      ],\n                                      staticClass: \"custom-control-input\",\n                                      attrs: { type: \"checkbox\", value: \"1\" },\n                                      domProps: {\n                                        checked: Array.isArray(\n                                          _vm.importForm.fee_group\n                                        )\n                                          ? _vm._i(\n                                              _vm.importForm.fee_group,\n                                              \"1\"\n                                            ) > -1\n                                          : _vm.importForm.fee_group,\n                                      },\n                                      on: {\n                                        change: function ($event) {\n                                          var $$a = _vm.importForm.fee_group,\n                                            $$el = $event.target,\n                                            $$c = $$el.checked ? true : false\n                                          if (Array.isArray($$a)) {\n                                            var $$v = \"1\",\n                                              $$i = _vm._i($$a, $$v)\n                                            if ($$el.checked) {\n                                              $$i < 0 &&\n                                                _vm.$set(\n                                                  _vm.importForm,\n                                                  \"fee_group\",\n                                                  $$a.concat([$$v])\n                                                )\n                                            } else {\n                                              $$i > -1 &&\n                                                _vm.$set(\n                                                  _vm.importForm,\n                                                  \"fee_group\",\n                                                  $$a\n                                                    .slice(0, $$i)\n                                                    .concat($$a.slice($$i + 1))\n                                                )\n                                            }\n                                          } else {\n                                            _vm.$set(\n                                              _vm.importForm,\n                                              \"fee_group\",\n                                              $$c\n                                            )\n                                          }\n                                        },\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"span\",\n                                      { staticClass: \"custom-control-label\" },\n                                      [\n                                        _vm._v(\n                                          _vm._s(_vm.trans(\"finance.fee_group\"))\n                                        ),\n                                      ]\n                                    ),\n                                  ]\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"div\", { staticClass: \"form-group\" }, [\n                                _c(\n                                  \"label\",\n                                  {\n                                    staticClass:\n                                      \"custom-control custom-checkbox\",\n                                  },\n                                  [\n                                    _c(\"input\", {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value: _vm.importForm.fee_head,\n                                          expression: \"importForm.fee_head\",\n                                        },\n                                      ],\n                                      staticClass: \"custom-control-input\",\n                                      attrs: { type: \"checkbox\", value: \"1\" },\n                                      domProps: {\n                                        checked: Array.isArray(\n                                          _vm.importForm.fee_head\n                                        )\n                                          ? _vm._i(\n                                              _vm.importForm.fee_head,\n                                              \"1\"\n                                            ) > -1\n                                          : _vm.importForm.fee_head,\n                                      },\n                                      on: {\n                                        change: function ($event) {\n                                          var $$a = _vm.importForm.fee_head,\n                                            $$el = $event.target,\n                                            $$c = $$el.checked ? true : false\n                                          if (Array.isArray($$a)) {\n                                            var $$v = \"1\",\n                                              $$i = _vm._i($$a, $$v)\n                                            if ($$el.checked) {\n                                              $$i < 0 &&\n                                                _vm.$set(\n                                                  _vm.importForm,\n                                                  \"fee_head\",\n                                                  $$a.concat([$$v])\n                                                )\n                                            } else {\n                                              $$i > -1 &&\n                                                _vm.$set(\n                                                  _vm.importForm,\n                                                  \"fee_head\",\n                                                  $$a\n                                                    .slice(0, $$i)\n                                                    .concat($$a.slice($$i + 1))\n                                                )\n                                            }\n                                          } else {\n                                            _vm.$set(\n                                              _vm.importForm,\n                                              \"fee_head\",\n                                              $$c\n                                            )\n                                          }\n                                        },\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"span\",\n                                      { staticClass: \"custom-control-label\" },\n                                      [\n                                        _vm._v(\n                                          _vm._s(_vm.trans(\"finance.fee_head\"))\n                                        ),\n                                      ]\n                                    ),\n                                  ]\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"div\", { staticClass: \"form-group\" }, [\n                                _c(\n                                  \"label\",\n                                  {\n                                    staticClass:\n                                      \"custom-control custom-checkbox\",\n                                  },\n                                  [\n                                    _c(\"input\", {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value:\n                                            _vm.importForm.transport_circle,\n                                          expression:\n                                            \"importForm.transport_circle\",\n                                        },\n                                      ],\n                                      staticClass: \"custom-control-input\",\n                                      attrs: { type: \"checkbox\", value: \"1\" },\n                                      domProps: {\n                                        checked: Array.isArray(\n                                          _vm.importForm.transport_circle\n                                        )\n                                          ? _vm._i(\n                                              _vm.importForm.transport_circle,\n                                              \"1\"\n                                            ) > -1\n                                          : _vm.importForm.transport_circle,\n                                      },\n                                      on: {\n                                        change: function ($event) {\n                                          var $$a =\n                                              _vm.importForm.transport_circle,\n                                            $$el = $event.target,\n                                            $$c = $$el.checked ? true : false\n                                          if (Array.isArray($$a)) {\n                                            var $$v = \"1\",\n                                              $$i = _vm._i($$a, $$v)\n                                            if ($$el.checked) {\n                                              $$i < 0 &&\n                                                _vm.$set(\n                                                  _vm.importForm,\n                                                  \"transport_circle\",\n                                                  $$a.concat([$$v])\n                                                )\n                                            } else {\n                                              $$i > -1 &&\n                                                _vm.$set(\n                                                  _vm.importForm,\n                                                  \"transport_circle\",\n                                                  $$a\n                                                    .slice(0, $$i)\n                                                    .concat($$a.slice($$i + 1))\n                                                )\n                                            }\n                                          } else {\n                                            _vm.$set(\n                                              _vm.importForm,\n                                              \"transport_circle\",\n                                              $$c\n                                            )\n                                          }\n                                        },\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"span\",\n                                      { staticClass: \"custom-control-label\" },\n                                      [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\n                                              \"transport.transport_circle\"\n                                            )\n                                          )\n                                        ),\n                                      ]\n                                    ),\n                                  ]\n                                ),\n                              ]),\n                            ]),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"button\",\n                            {\n                              staticClass: \"btn btn-info pull-right\",\n                              attrs: { type: \"button\" },\n                              on: { click: _vm.importData },\n                            },\n                            [_vm._v(_vm._s(_vm.trans(\"general.import\")))]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"button\",\n                            {\n                              staticClass: \"btn btn-danger pull-right m-r-10\",\n                              attrs: { type: \"button\" },\n                              on: {\n                                click: function ($event) {\n                                  _vm.showImportModal = false\n                                },\n                              },\n                            },\n                            [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                ]),\n              ]),\n            ]),\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=0fd33ab6&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0fd33ab6')) {\n      api.createRecord('0fd33ab6', component.options)\n    } else {\n      api.reload('0fd33ab6', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=0fd33ab6&\", function () {\n      api.rerender('0fd33ab6', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/academic/session/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=51345050&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('51345050')) {\n      api.createRecord('51345050', component.options)\n    } else {\n      api.reload('51345050', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=51345050&\", function () {\n      api.rerender('51345050', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/academic/session/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=51345050&\""],"names":[],"sourceRoot":""}