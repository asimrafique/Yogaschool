{"version":3,"file":"js/chunks/js/setup.js?id=a455a465892a6d8b","mappings":";;;;;;;;;;;;;AAuFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;ACtOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC2JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACrYA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AASA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAYA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAiBA;AACA;AACA;;;;;;;;;;;;;;;;AC7fA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAWA;AAEA;AAAA;AAAA;AACA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AAAA;AAKA;AA0BA;AAWA;AACA;AACA;;;;;;;;;;;;;;;;AC74BA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AASA;AAKA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAWA;AAEA;AAAA;AAAA;AACA;AAMA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAWA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAWA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AAIA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAWA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAWA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAaA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAKA;AACA;AAGA;AAIA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAWA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAgBA;AACA;AACA;;;;;;;;;;;;;;;;AChjCA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAGA;AAAA;AAGA;AACA;AAAA;AAIA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAQA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAIA;AAAA;AAYA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAWA;AAEA;AAUA;AAEA;AAAA;AAAA;AACA;AAUA;AACA;AACA;;;;;;;;;;;;;;;;AC7NA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAIA;AACA;AAGA;AAEA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AASA;AAKA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAcA;AAEA;AAAA;AAAA;AACA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;AC97CA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAGA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;AC3JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/academic/session/form.vue","webpack://InstiKit/resources/js/views/configuration/basic/form.vue","webpack://InstiKit/resources/js/views/configuration/mail/form.vue","webpack://InstiKit/resources/js/views/configuration/menu/form.vue","webpack://InstiKit/resources/js/views/configuration/system/form.vue","webpack://InstiKit/resources/js/views/setup/index.vue","webpack://InstiKit/./resources/js/views/academic/session/form.vue","webpack://InstiKit/./resources/js/views/configuration/basic/form.vue","webpack://InstiKit/./resources/js/views/configuration/mail/form.vue","webpack://InstiKit/./resources/js/views/configuration/menu/form.vue","webpack://InstiKit/./resources/js/views/configuration/system/form.vue","webpack://InstiKit/./resources/js/views/setup/index.vue","webpack://InstiKit/./resources/js/views/academic/session/form.vue?73a8","webpack://InstiKit/./resources/js/views/configuration/basic/form.vue?1a00","webpack://InstiKit/./resources/js/views/configuration/mail/form.vue?9508","webpack://InstiKit/./resources/js/views/configuration/menu/form.vue?2f43","webpack://InstiKit/./resources/js/views/configuration/system/form.vue?a508","webpack://InstiKit/./resources/js/views/setup/index.vue?2bec","webpack://InstiKit/./resources/js/views/academic/session/form.vue?b428","webpack://InstiKit/./resources/js/views/configuration/basic/form.vue?ecb1","webpack://InstiKit/./resources/js/views/configuration/mail/form.vue?f169","webpack://InstiKit/./resources/js/views/configuration/menu/form.vue?0be4","webpack://InstiKit/./resources/js/views/configuration/system/form.vue?523a","webpack://InstiKit/./resources/js/views/setup/index.vue?9755","webpack://InstiKit/./resources/js/views/academic/session/form.vue?ab18","webpack://InstiKit/./resources/js/views/configuration/basic/form.vue?7aa3","webpack://InstiKit/./resources/js/views/configuration/mail/form.vue?9967","webpack://InstiKit/./resources/js/views/configuration/menu/form.vue?e4d9","webpack://InstiKit/./resources/js/views/configuration/system/form.vue?c73c","webpack://InstiKit/./resources/js/views/setup/index.vue?4232"],"sourcesContent":["<template>\n    <form @submit.prevent=\"proceed\" @keydown=\"academicSessionForm.errors.clear($event.target.name)\">\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-3\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('academic.session_name')}}</label>\n                    <input class=\"form-control\" type=\"text\" v-model=\"academicSessionForm.name\" name=\"name\" :placeholder=\"trans('academic.session_name')\">\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"name\"></show-error>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-3\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('academic.session_start_date')}}</label>\n                    <datepicker v-model=\"academicSessionForm.start_date\" :bootstrapStyling=\"true\" @selected=\"academicSessionForm.errors.clear('start_date')\" :placeholder=\"trans('academic.session_start_date')\" :disabled=\"id ? true : false\"></datepicker>\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"start_date\"></show-error>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-3\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('academic.session_end_date')}}</label>\n                    <datepicker v-model=\"academicSessionForm.end_date\" :bootstrapStyling=\"true\" @selected=\"academicSessionForm.errors.clear('end_date')\" :placeholder=\"trans('academic.session_end_date')\" :disabled=\"id ? true : false\"></datepicker>\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"end_date\"></show-error>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-3\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('academic.session_description')}}</label>\n                    <autosize-textarea v-model=\"academicSessionForm.description\" rows=\"1\" name=\"description\" :placeholder=\"trans('academic.session_description')\"></autosize-textarea>\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"description\"></show-error>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-3\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('academic.transfer_certificate_format')}}</label>\n                    <v-select label=\"name\" v-model=\"selected_transfer_certificate_format\" name=\"transfer_certificate_format\" id=\"transfer_certificate_format\" :options=\"transfer_certificate_formats\" :placeholder=\"trans('academic.select_transfer_certificate_format')\" @select=\"onTransferCertificateFormatSelect\" @close=\"academicSessionForm.errors.clear('transfer_certificate_format')\" @remove=\"academicSessionForm.transfer_certificate_format = ''\">\n                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!transfer_certificate_formats.length\">\n                            {{trans('general.no_option_found')}}\n                        </div>\n                    </v-select>\n                    <show-error :form-name=\"academicSessionForm\" prop-name=\"transfer_certificate_format\"></show-error>\n                </div>\n            </div>\n        </div>\n        <template v-if=\"!setupWizard\">\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <switches class=\"m-l-20\" v-model=\"academicSessionForm.is_default\" theme=\"bootstrap\" color=\"success\"></switches> {{trans('academic.session_is_default')}}\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <switches class=\"m-l-20\" v-model=\"academicSessionForm.exam_report_analysis\" theme=\"bootstrap\" color=\"success\"></switches> {{trans('exam.exam_report_analysis')}}\n                    </div>\n                </div>\n                <div class=\"col-12\" v-if=\"academicSessionForm.exam_report_analysis\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('academic.exam_report_analysis_student_token')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"academicSessionForm.exam_report_analysis_student_token\" name=\"exam_report_analysis_student_token\" :placeholder=\"trans('academic.exam_report_analysis_student_token')\">\n                        <show-error :form-name=\"academicSessionForm\" prop-name=\"exam_report_analysis_student_token\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12\" v-if=\"academicSessionForm.exam_report_analysis\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('academic.exam_report_analysis_staff_token')}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"academicSessionForm.exam_report_analysis_staff_token\" name=\"exam_report_analysis_staff_token\" :placeholder=\"trans('academic.exam_report_analysis_staff_token')\">\n                        <show-error :form-name=\"academicSessionForm\" prop-name=\"exam_report_analysis_staff_token\"></show-error>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"card-footer text-right\">\n                <router-link to=\"/academic/session\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\n                <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n                    <span v-if=\"id\">{{trans('general.update')}}</span>\n                    <span v-else>{{trans('general.save')}}</span>\n                </button>\n            </div>\n        </template>\n    </form>\n</template>\n\n\n<script>\n    export default {\n        props: {\n            setupWizard: {\n                default: false\n            },\n            id: ''\n        },\n        components: {},\n        data() {\n            return {\n                academicSessionForm: new Form({\n                    name : '',\n                    description : '',\n                    start_date: '',\n                    end_date: '',\n                    transfer_certificate_format: '',\n                    is_default: 0,\n                    exam_report_analysis: false,\n                    exam_report_analysis_staff_token: '',\n                    exam_report_analysis_student_token: '',\n                }),\n                transfer_certificate_formats: [],\n                selected_transfer_certificate_format: null,\n            };\n        },\n        mounted() {\n            if(!helper.hasPermission('create-academic-session') && !helper.hasPermission('edit-academic-session')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getPreRequisite();\n        },\n        methods: {\n            proceed(){\n                if(this.id)\n                    this.update();\n                else\n                    this.store();\n            },\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/academic/session/pre-requisite')\n                    .then(response => {\n                        this.transfer_certificate_formats = response.transfer_certificate_formats;\n\n                        if(this.id)\n                            this.get();\n\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },  \n            store(){\n                let loader = this.$loading.show();\n                this.academicSessionForm.post('/api/academic/session')\n                    .then(response => {\n                        this.$store.dispatch('setAcademicSession',response.academic_sessions);\n                        toastr.success(response.message);\n                        this.$emit('completed');\n                        loader.hide();\n                        if (this.setupWizard)\n                            this.$router.push('/dashboard');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/academic/session/'+this.id)\n                    .then(response => {\n                        this.academicSessionForm.name = response.name;\n                        this.academicSessionForm.description = response.description;\n                        this.academicSessionForm.start_date = response.start_date;\n                        this.academicSessionForm.end_date = response.end_date;\n                        this.academicSessionForm.is_default = response.is_default;\n\n                        let transfer_certificate_format_id = response.options && response.options.hasOwnProperty(\"transfer_certificate_format\") ? response.options.transfer_certificate_format : null;\n\n                        let transfer_certificate_format = this.transfer_certificate_formats.find(o => o.id == transfer_certificate_format_id);\n\n                        this.academicSessionForm.transfer_certificate_format = transfer_certificate_format_id;\n                        this.selected_transfer_certificate_format = transfer_certificate_format || null; \n\n                        this.academicSessionForm.exam_report_analysis = response.exam_report_analysis\n                        this.academicSessionForm.exam_report_analysis_staff_token = response.exam_report_analysis_staff_token\n                        this.academicSessionForm.exam_report_analysis_student_token = response.exam_report_analysis_student_token\n\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        this.$router.push('/academic/session');\n                    });\n            },\n            update(){\n                let loader = this.$loading.show();\n                this.academicSessionForm.patch('/api/academic/session/'+this.id)\n                    .then(response => {\n                        this.$store.dispatch('setConfig',{loaded: false});\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/academic/session');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            onTransferCertificateFormatSelect(selectedOption){\n                return this.academicSessionForm.transfer_certificate_format = selectedOption.id;\n            }\n        }\n    }\n</script>\n","<template>\n    <div class=\"row\">\n        <div :class=\"['col-12', !setupWizard ? 'col-sm-7' : '', 'p-0', 'pl-3']\">\n            <div class=\"card\">\n                <div class=\"card-body p-4\">\n                    <form @submit.prevent=\"submit\" @keydown=\"configForm.errors.clear($event.target.name)\">\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-8\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.institute_name')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.institute_name\" name=\"institute_name\" :placeholder=\"trans('configuration.institute_name')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"institute_name\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.institute_running_body')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.institute_running_body\" name=\"institute_running_body\" :placeholder=\"trans('configuration.institute_running_body')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"institute_running_body\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.institute_foundation_date')}}</label>\n                                    <datepicker v-model=\"configForm.institute_foundation_date\" :bootstrapStyling=\"true\" @selected=\"configForm.errors.clear('institute_foundation_date')\" :placeholder=\"trans('configuration.institute_foundation_date')\"></datepicker>\n                                    <show-error :form-name=\"configForm\" prop-name=\"institute_foundation_date\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.institute_recognition_body')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.institute_recognition_body\" name=\"institute_recognition_body\" :placeholder=\"trans('configuration.institute_recognition_body')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"institute_recognition_body\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.institute_recognition_number')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.institute_recognition_number\" name=\"institute_recognition_number\" :placeholder=\"trans('configuration.institute_recognition_number')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"institute_recognition_number\"></show-error>\n                                </div>\n                            </div>\n                        </div>\n                        <h4 class=\"card-title\">{{trans('configuration.contact_information')}}</h4>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.address_line_1')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.address_line_1\" name=\"address_line_1\" :placeholder=\"trans('configuration.address_line_1')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"address_line_1\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.address_line_2')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.address_line_2\" name=\"address_line_2\" :placeholder=\"trans('configuration.address_line_2')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"address_line_2\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.city')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.city\" name=\"city\" :placeholder=\"trans('configuration.city')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"city\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.state')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.state\" name=\"state\" :placeholder=\"trans('configuration.state')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"state\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.zipcode')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.zipcode\" name=\"zipcode\" :placeholder=\"trans('configuration.zipcode')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"zipcode\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.country')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.country\" name=\"country\" :placeholder=\"trans('configuration.country')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"country\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.phone')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.phone\" name=\"phone\" :placeholder=\"trans('configuration.phone')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"phone\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.fax')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.fax\" name=\"fax\" :placeholder=\"trans('configuration.fax')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"fax\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.email')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.email\" name=\"email\" :placeholder=\"trans('configuration.email')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"email\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.website')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.website\" name=\"website\" :placeholder=\"trans('configuration.website')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"website\"></show-error>\n                                </div>\n                            </div>\n                        </div>\n                        <button v-if=\"!setupWizard\" type=\"submit\" class=\"btn btn-info waves-effect waves-light m-t-10 pull-right\">{{trans('general.save')}}</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-12 col-sm-5 hidden-sm-down p-0 pr-3\" v-if=\"!setupWizard\">\n            <div class=\"card border-left\">\n                <div class=\"card-body\">\n                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-6\">\n                            <upload-image id=\"logo\" :button-text=\"trans('general.choose_logo')\" upload-path=\"/configuration/logo\" remove-path=\"/configuration/logo/remove\" :image-source=\"logo\" @uploaded=\"updateLogo\" @removed=\"updateLogo\"></upload-image>\n                        </div>\n                        <div class=\"col-12 col-sm-6\">\n                            <upload-image id=\"icon\" :button-text=\"trans('general.choose_icon')\" upload-path=\"/configuration/icon\" remove-path=\"/configuration/icon/remove\" :image-source=\"icon\" @uploaded=\"updateIcon\" @removed=\"updateIcon\"></upload-image>\n                        </div>\n                    </div>\n\n                    <div class=\"table-responsive\">\n                        <table class=\"table table-sm custom-show-table\">\n                            <tbody>\n                                <tr v-for=\"(config,key) in configForm\" v-if=\"key != 'config_type' && key != 'errors' && key != 'originalData' && key != 'autoReset'\">\n                                    <td>{{trans('configuration.'+key)}}</td>\n                                    <td>\n                                        <span v-if=\"key == 'institute_foundation_date'\">{{configForm[key] | moment}}</span>\n                                        <span v-else>{{configForm[key]}}</span>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n    \tprops: {\n            setupWizard: {\n                default: false\n            },\n            configurations: {\n                required: false\n            }\n        },\n        components : {},\n        data() {\n            return {\n                configForm: new Form({\n                    institute_name : '',\n                    institute_running_body: '',\n                    institute_recognition_number: '',\n                    institute_recognition_body: '',\n                    institute_foundation_date: '',\n                    address_line_1: '',\n                    address_line_2: '',\n                    city: '',\n                    state: '',\n                    zipcode: '',\n                    country: '',\n                    phone: '',\n                    fax: '',\n                    email: '',\n                    website: '',\n                    config_type: ''\n                }, false),\n                icon: '',\n                logo: ''\n            };\n        },\n        mounted(){\n            if(!helper.hasPermission('access-configuration')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n            this.icon = helper.getConfig('icon');\n            this.logo = helper.getConfig('logo');\n\n            if(!this.setupWizard)\n                this.getConfiguration();\n        },\n        methods: {\n            getConfiguration(){\n                let loader = this.$loading.show();\n                axios.get('/api/configuration')\n                    .then(response => {\n                        this.configForm = helper.formAssign(this.configForm, response);\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            submit(){\n                let loader = this.$loading.show();\n                this.configForm.config_type = 'basic';\n                return this.configForm.post('/api/configuration')\n                    .then(response => {\n                        this.$store.dispatch('setConfig',{loaded: false});\n                        toastr.success(response.message);\n                        loader.hide();\n                        return true;\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        return false;\n                    });\n            },\n            updateLogo(val){\n                this.$store.dispatch('setConfig',{\n                    logo: val\n                });\n            },\n            updateIcon(val){\n                this.$store.dispatch('setConfig',{\n                    icon: val\n                });\n            }\n        },\n        filters: {\n          moment(date) {\n            return helper.formatDate(date);\n          },\n          momentDateTime(date) {\n            return helper.formatDateTime(date);\n          }\n        },\n        watch: {\n            configurations(val){\n                if (val)\n                    helper.formAssign(this.configForm,val);\n            }\n        }\n    }\n</script>","<template>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"card\">\n                <div class=\"card-body p-4\">\n                    <form @submit.prevent=\"submit\" @keydown=\"configForm.errors.clear($event.target.name)\">\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.mail_driver')}}</label>\n                                    <select v-model=\"configForm.driver\" class=\"custom-select col-12\" name=\"driver\" @change=\"configForm.errors.clear('driver')\">\n                                      <option v-for=\"option in mail_drivers\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"driver\"></show-error>\n                                </div>\n                                <div class=\"row\">\n                                    <div class=\"col-12 col-sm-6\">\n                                        <div class=\"form-group\">\n                                            <label for=\"\">{{trans('configuration.mail_from_name')}}</label>\n                                            <input class=\"form-control\" type=\"text\" v-model=\"configForm.from_name\" name=\"from_name\" :placeholder=\"trans('configuration.mail_from_name')\">\n                                            <show-error :form-name=\"configForm\" prop-name=\"from_name\"></show-error>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-12 col-sm-6\">\n                                        <div class=\"form-group\">\n                                            <label for=\"\">{{trans('configuration.mail_from_address')}}</label>\n                                            <input class=\"form-control\" type=\"text\" v-model=\"configForm.from_address\" name=\"from_address\" :placeholder=\"trans('configuration.mail_from_address')\">\n                                            <show-error :form-name=\"configForm\" prop-name=\"from_address\"></show-error>\n                                        </div>\n                                    </div>\n                                </div>\n                                <button type=\"submit\" v-if=\"!setupWizard\" class=\"btn btn-info waves-effect waves-light m-t-10\">{{trans('general.save')}}</button>\n                            </div>\n                            <div class=\"col-12 col-sm-8\">\n                                <div v-if=\"configForm.driver === 'mailgun'\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('configuration.mailgun_domain')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"configForm.mailgun_domain\" name=\"mailgun_domain\" :placeholder=\"trans('configuration.mailgun_domain')\">\n                                                <show-error :form-name=\"configForm\" prop-name=\"mailgun_domain\"></show-error>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('configuration.mailgun_secret')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"configForm.mailgun_secret\" name=\"mailgun_secret\" :placeholder=\"trans('configuration.mailgun_secret')\">\n                                                <show-error :form-name=\"configForm\" prop-name=\"mailgun_secret\"></show-error>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div v-if=\"configForm.driver === 'mandrill'\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('configuration.mandrill_secret')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"configForm.mandrill_secret\" name=\"mandrill_secret\" :placeholder=\"trans('configuration.mandrill_secret')\">\n                                                <show-error :form-name=\"configForm\" prop-name=\"mandrill_secret\"></show-error>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div v-if=\"configForm.driver === 'smtp'\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('configuration.smtp_host')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"configForm.smtp_host\" name=\"smtp_host\" :placeholder=\"trans('configuration.smtp_host')\">\n                                                <show-error :form-name=\"configForm\" prop-name=\"smtp_host\"></show-error>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('configuration.smtp_port')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"configForm.smtp_port\" name=\"smtp_port\" :placeholder=\"trans('configuration.smtp_port')\">\n                                                <show-error :form-name=\"configForm\" prop-name=\"smtp_port\"></show-error>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('configuration.smtp_username')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"configForm.smtp_username\" name=\"smtp_username\" :placeholder=\"trans('configuration.smtp_username')\">\n                                                <show-error :form-name=\"configForm\" prop-name=\"smtp_username\"></show-error>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('configuration.smtp_password')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"configForm.smtp_password\" name=\"smtp_password\" :placeholder=\"trans('configuration.smtp_password')\">\n                                                <show-error :form-name=\"configForm\" prop-name=\"smtp_password\"></show-error>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('configuration.smtp_encryption')}}</label>\n                                                <select v-model=\"configForm.smtp_encryption\" class=\"custom-select col-12\" name=\"smtp_encryption\" @change=\"configForm.errors.clear('smtp_encryption')\">\n                                                  <option value=null selected>{{trans('general.select_one')}}</option>\n                                                  <option v-for=\"option in encryptions\" v-bind:value=\"option.value\">\n                                                    {{ option.text }}\n                                                  </option>\n                                                </select>\n                                                <show-error :form-name=\"configForm\" prop-name=\"smtp_encryption\"></show-error>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div v-if=\"configForm.driver === 'mailgun'\">\n                                    <div class=\"row\">\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('configuration.mailgun_host')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"configForm.mailgun_host\" name=\"mailgun_host\" :placeholder=\"trans('configuration.mailgun_host')\">\n                                                <show-error :form-name=\"configForm\" prop-name=\"mailgun_host\"></show-error>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('configuration.mailgun_port')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"configForm.mailgun_port\" name=\"mailgun_port\" :placeholder=\"trans('configuration.mailgun_port')\">\n                                                <show-error :form-name=\"configForm\" prop-name=\"mailgun_port\"></show-error>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('configuration.mailgun_username')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"configForm.mailgun_username\" name=\"mailgun_username\" :placeholder=\"trans('configuration.mailgun_username')\">\n                                                <show-error :form-name=\"configForm\" prop-name=\"mailgun_username\"></show-error>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('configuration.mailgun_password')}}</label>\n                                                <input class=\"form-control\" type=\"text\" v-model=\"configForm.mailgun_password\" name=\"mailgun_password\" :placeholder=\"trans('configuration.mailgun_password')\">\n                                                <show-error :form-name=\"configForm\" prop-name=\"mailgun_password\"></show-error>\n                                            </div>\n                                        </div>\n                                        <div class=\"col-12 col-sm-6\">\n                                            <div class=\"form-group\">\n                                                <label for=\"\">{{trans('configuration.mailgun_encryption')}}</label>\n                                                <select v-model=\"configForm.smtp_encryption\" class=\"custom-select col-12\" name=\"smtp_encryption\" @change=\"configForm.errors.clear('smtp_encryption')\">\n                                                  <option value=null selected>{{trans('general.select_one')}}</option>\n                                                  <option v-for=\"option in encryptions\" v-bind:value=\"option.value\">\n                                                    {{ option.text }}\n                                                  </option>\n                                                </select>\n                                                <show-error :form-name=\"configForm\" prop-name=\"mailgun_encryption\"></show-error>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\n    export default {\n        props: {\n            setupWizard: {\n                default: false\n            },\n            configurations: {\n                required: false\n            }\n        },\n        components : { },\n        data() {\n            return {\n                configForm: new Form({\n                    driver : '',\n                    from_name: '',\n                    from_address: '',\n                    smtp_host: '',\n                    smtp_port: '',\n                    smtp_username: '',\n                    smtp_password: '',\n                    smtp_encryption: '',\n                    mailgun_host: '',\n                    mailgun_port: '',\n                    mailgun_username: '',\n                    mailgun_password: '',\n                    mailgun_encryption: '',\n                    mailgun_domain: '',\n                    mailgun_secret: '',\n                    mandrill_secret: '',\n                    config_type: ''\n                }, false),\n                mail_drivers: [],\n                encryptions: [\n                    {\n                        text: 'SSL',\n                        value: 'ssl'\n                    },\n                    {\n                        text: 'TLS',\n                        value: 'tls'\n                    }\n                ]\n            };\n        },\n        mounted(){\n            if(!helper.hasPermission('access-configuration')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n            this.getPreRequisite();\n\n            if(!this.setupWizard)\n                this.getConfiguration();\n        },\n        methods: {\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/configuration/variable?type=mail')\n                    .then(response => {\n                        this.mail_drivers = response.mail_drivers;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getConfiguration(){\n                let loader = this.$loading.show();\n                axios.get('/api/configuration')\n                    .then(response => {\n                        this.configForm = helper.formAssign(this.configForm, response);\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            submit(){\n                let loader = this.$loading.show();\n                this.configForm.config_type = 'mail';\n                return this.configForm.post('/api/configuration')\n                    .then(response => {\n                        this.$store.dispatch('setConfig',{loaded: false});\n                        toastr.success(response.message);\n                        loader.hide();\n                        return true;\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        return false;\n                    });\n            }\n        },\n        watch: {\n            configurations(val){\n                if (val)\n                    helper.formAssign(this.configForm,val);\n            }\n        }\n    }\n</script>","<template>\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"card\">\n                <div class=\"card-body p-4\">\n                    <form @submit.prevent=\"submit\" @keydown=\"configForm.errors.clear($event.target.name)\">\n                        <div class=\"row\">\n                            <div class=\"col-12 offset-md-1\">\n                                <template v-for=\"module in configForm.modules\">\n                                    <h4 class=\"card-title\">{{trans(module.translation)}}</h4>\n                                    <div class=\"form-group\">\n                                        <label class=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" class=\"custom-control-input\" value=\"1\" v-model=\"module.menu.visibility\" :name=\"getMenuName(module.menu.name)\" @change=\"updateSubMenu(module.menu)\">\n                                            <span class=\"custom-control-label\">{{trans(module.menu.translation)}}</span>\n                                        </label>\n                                    </div>\n                                    <div v-show=\"module.menu.visibility\" class=\"form-group\" style=\"padding-left: 40px;\" v-for=\"submenu in module.menu.submenu\">\n                                        <label class=\"custom-control custom-checkbox\">\n                                            <input type=\"checkbox\" class=\"custom-control-input\" value=\"1\" v-model=\"submenu.visibility\" :name=\"getMenuName(submenu.name)\">\n                                            <span class=\"custom-control-label\">{{trans(submenu.translation)}}</span>\n                                        </label>\n                                    </div>\n                                </template>\n                            </div>\n                        </div>\n                        <button type=\"submit\" v-if=\"!setupWizard\" class=\"btn btn-info waves-effect waves-light pull-right m-t-10\">{{trans('general.save')}}</button>\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n\texport default {\n        props: {\n            setupWizard: {\n                default: false\n            },\n            configurations: {\n                required: false\n            }\n        },\n        components : { },\n        data() {\n            return {\n                configForm: new Form({\n                    config_type: 'menu',\n                    modules: []\n                },false),\n                menus: [],\n                help_topic: ''\n            }\n        },\n        mounted(){\n            if(!helper.hasPermission('access-configuration')){\n                helper.notAccessibleMsg();\n                this.$router.push('/home');\n            }\n\n            this.getPreRequisite();\n\n            // if(!this.setupWizard)\n            //     this.getConfiguration();\n        },\n        methods: {\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/configuration/variable?type=menu')\n                    .then(response => {\n                        this.configForm.modules = response.modules;\n                        \n                        this.menus = response.menus;\n                        this.configForm.modules.forEach(module => {\n                            if (response.menus.findIndex(o => o === module.menu.name) >= 0) {\n                                module.menu.visibility = true;\n                            } else {\n                                module.menu.visibility = false;\n                            }\n\n                            module.menu.submenu.forEach(sbmenu => {\n                                if (response.menus.findIndex(o => o === sbmenu.name) >= 0) {\n                                    sbmenu.visibility = true;\n                                } else {\n                                    sbmenu.visibility = false;\n                                }\n                            })\n                        });\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getMenuName(name) {\n                return 'show_'+name+'_menu';\n            },\n            updateSubMenu(menu){\n                if (! menu.visibility) {\n                    menu.submenu.forEach(sbmenu => {\n                        sbmenu.visibility = false;\n                    });\n                } else {\n                    menu.submenu.forEach(sbmenu => {\n                        sbmenu.visibility = true;\n                    });\n                }\n            },\n            submit(){\n                let loader = this.$loading.show();\n                return this.configForm.post('/api/configuration')\n                    .then(response => {\n                        loader.hide();\n                        this.$store.dispatch('setConfig',{loaded: false});\n                        toastr.success(response.message);\n                        return true;\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        return false;\n                    });\n            }\n        }\n\t}\n</script>","<template>\n    <div class=\"card\">\n        <div class=\"card-body p-4\">\n            <form @submit.prevent=\"submit\" @keydown=\"configForm.errors.clear($event.target.name)\">\n                <div class=\"row\">\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.default_color_theme')}}</label>\n                                    <select v-model=\"configForm.color_theme\" class=\"custom-select col-12\" name=\"color_theme\" @change=\"configForm.errors.clear('color_theme')\">\n                                      <option v-for=\"option in systemConfigVariables.color_themes\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"color_theme\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.default_direction')}}</label>\n                                    <select v-model=\"configForm.direction\" class=\"custom-select col-12\" name=\"direction\" @change=\"configForm.errors.clear('direction')\">\n                                      <option v-for=\"option in systemConfigVariables.directions\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"direction\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.default_sidebar')}}</label>\n                                    <select v-model=\"configForm.sidebar\" class=\"custom-select col-12\" name=\"sidebar\" @change=\"configForm.errors.clear('sidebar')\">\n                                      <option v-for=\"option in systemConfigVariables.sidebar\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"sidebar\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\" v-if=\"getConfig('multilingual')\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.default_locale')}}</label>\n                                    <select v-model=\"configForm.locale\" class=\"custom-select col-12\" name=\"locale\" @change=\"configForm.errors.clear('locale')\">\n                                      <option v-for=\"option in systemConfigVariables.locales\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"locale\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.date_format')}}</label>\n                                    <select v-model=\"configForm.date_format\" class=\"custom-select col-12\" name=\"date_format\" @change=\"configForm.errors.clear('date_format')\">\n                                      <option v-for=\"option in systemConfigVariables.date_formats\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"date_format\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.time_format')}}</label>\n                                    <select v-model=\"configForm.time_format\" class=\"custom-select col-12\" name=\"time_format\" @change=\"configForm.errors.clear('time_format')\">\n                                      <option v-for=\"option in systemConfigVariables.time_formats\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"time_format\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.notification_position')}}</label>\n                                    <select v-model=\"configForm.notification_position\" class=\"custom-select col-12\" name=\"notification_position\" @change=\"configForm.errors.clear('notification_position')\">\n                                      <option v-for=\"option in systemConfigVariables.notification_positions\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"notification_position\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.timezone')}}</label>\n                                    <select v-model=\"configForm.timezone\" class=\"custom-select col-12\" name=\"timezone\" @change=\"configForm.errors.clear('timezone')\">\n                                      <option v-for=\"option in systemConfigVariables.timezones\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"timezone\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('calendar.first_day_of_week')}}</label>\n                                    <select v-model=\"configForm.first_day_of_week\" class=\"custom-select col-12\" name=\"first_day_of_week\" @change=\"configForm.errors.clear('first_day_of_week')\">\n                                      <option v-for=\"option in systemConfigVariables.days\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"first_day_of_week\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.currency')}}</label>\n                                    <select v-model=\"configForm.currency\" class=\"custom-select col-12\" name=\"currency\" @change=\"configForm.errors.clear('currency')\">\n                                      <option v-for=\"option in systemConfigVariables.currencies\" v-bind:value=\"option.value\">\n                                        {{ option.text }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"currency\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.page_length')}}</label>\n                                    <select v-model=\"configForm.page_length\" class=\"custom-select col-12\" name=\"page_length\" @change=\"configForm.errors.clear('page_length')\">\n                                      <option v-for=\"option in getConfig('pagination')\" v-bind:value=\"option\">\n                                        {{ option+' '+trans('general.per_page') }}\n                                      </option>\n                                    </select>\n                                    <show-error :form-name=\"configForm\" prop-name=\"page_length\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-8\" v-if=\"getConfig('show_footer_credit')\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.footer_credit')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.footer_credit\" name=\"footer_credit\" :placeholder=\"trans('configuration.footer_credit')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"footer_credit\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.biometric_auth_token')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.biometric_auth_token\" name=\"biometric_auth_token\" :placeholder=\"trans('configuration.biometric_auth_token')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"biometric_auth_token\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.pusher_auth_token')}}</label>\n                                    <input class=\"form-control\" type=\"text\" v-model=\"configForm.pusher_auth_token\" name=\"pusher_auth_token\" :placeholder=\"trans('configuration.pusher_auth_token')\">\n                                    <show-error :form-name=\"configForm\" prop-name=\"pusher_auth_token\"></show-error>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"col-12 col-sm-6\">\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.https')}}</label>\n                                    <div>\n                                        <switches class=\"\" v-model=\"configForm.https\" theme=\"bootstrap\" color=\"success\"></switches>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.error_display')}}</label>\n                                    <div>\n                                        <switches class=\"\" v-model=\"configForm.error_display\" theme=\"bootstrap\" color=\"success\"></switches>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.multilingual')}}</label>\n                                    <div>\n                                        <switches class=\"\" v-model=\"configForm.multilingual\" theme=\"bootstrap\" color=\"success\"></switches>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('frontend.enable_frontend_website')}}</label>\n                                    <div>\n                                        <switches class=\"\" v-model=\"configForm.frontend_website\" theme=\"bootstrap\" color=\"success\"></switches>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.enable_online_registration')}}</label>\n                                    <div>\n                                        <switches class=\"\" v-model=\"configForm.online_registration\" theme=\"bootstrap\" color=\"success\"></switches>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-12\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.online_registration_header')}}</label>\n                                    <autosize-textarea row=\"1\" class=\"form-control\" v-model=\"configForm.online_registration_header\" :placeholder=\"trans('configuration.online_registration_header')\" rows=\"2\" name=\"online_registration_header\"></autosize-textarea>\n                                    <show-error :form-name=\"configForm\" prop-name=\"online_registration_header\"></show-error>\n                                </div>\n                            </div>\n                            <div class=\"col-12\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('student.online_registration_success_message')}}</label>\n                                    <autosize-textarea row=\"1\" class=\"form-control\" v-model=\"configForm.online_registration_success_message\" :placeholder=\"trans('configuration.online_registration_success_message')\" rows=\"2\" name=\"online_registration_success_message\"></autosize-textarea>\n                                    <show-error :form-name=\"configForm\" prop-name=\"online_registration_success_message\"></show-error>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('utility.ip_filter')}}</label>\n                                    <div>\n                                        <switches class=\"\" v-model=\"configForm.ip_filter\" theme=\"bootstrap\" color=\"success\"></switches>\n                                    </div>\n                                </div>\n                            </div>\n                            <!-- <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('utility.email_log')}}</label>\n                                    <div>\n                                        <switches class=\"\" v-model=\"configForm.email_log\" theme=\"bootstrap\" color=\"success\"></switches>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('utility.email_template')}}</label>\n                                    <div>\n                                        <switches class=\"\" v-model=\"configForm.email_template\" theme=\"bootstrap\" color=\"success\"></switches>\n                                    </div>\n                                </div>\n                            </div> -->\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('utility.todo')}}</label>\n                                    <div>\n                                        <switches class=\"\" v-model=\"configForm.todo\" theme=\"bootstrap\" color=\"success\"></switches>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-4\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('utility.backup')}}</label>\n                                    <div>\n                                        <switches class=\"\" v-model=\"configForm.backup\" theme=\"bootstrap\" color=\"success\"></switches>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-6\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('configuration.maintenance_mode')}}</label>\n                                    <div>\n                                        <switches class=\"\" v-model=\"configForm.maintenance_mode\" theme=\"bootstrap\" color=\"success\"></switches>\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-6\">\n                                <div class=\"form-group\" v-if=\"configForm.maintenance_mode\">\n                                    <label for=\"\">{{trans('configuration.maintenance_mode_message')}}</label>\n                                    <autosize-textarea row=\"1\" class=\"form-control\" v-model=\"configForm.maintenance_mode_message\" :placeholder=\"trans('configuration.maintenance_mode_message')\" rows=\"1\" name=\"maintenance_mode_message\"></autosize-textarea>\n                                    <show-error :form-name=\"configForm\" prop-name=\"maintenance_mode_message\"></show-error>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <button type=\"submit\" v-if=\"!setupWizard\" class=\"btn btn-info waves-effect waves-light pull-right m-t-10\">{{trans('general.save')}}</button>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            setupWizard: {\n                default: false\n            },\n            configurations: {\n                required: false\n            }\n        },\n        components : { },\n        data() {\n            return {\n                configForm: new Form({\n                    color_theme: '',\n                    direction: '',\n                    sidebar: '',\n                    date_format: '',\n                    time_format: '',\n                    notification_position: '',\n                    timezone: '',\n                    first_day_of_week: '',\n                    page_length: 10,\n                    locale: '',\n                    currency: '',\n                    footer_credit: '',\n                    biometric_auth_token: '',\n                    pusher_auth_token: '',\n                    https: 0,\n                    error_display: 0,\n                    frontend_website: 0,\n                    online_registration: 0,\n                    multilingual: 0,\n                    ip_filter: 0,\n                    email_log: 0,\n                    email_template: 0,\n                    todo: 0,\n                    backup: 0,\n                    maintenance_mode: 0,\n                    maintenance_mode_message: '',\n                    online_registration_header: '',\n                    online_registration_success_message: '',\n                    config_type: ''\n                }, false),\n                systemConfigVariables: {\n                    color_themes: [],\n                    directions: [],\n                    sidebar: [],\n                    date_formats: [],\n                    time_formats: [],\n                    notification_positions: [],\n                    timezones: [],\n                    locales: [],\n                    currencies: [],\n                    days: []\n                },\n                direction: '',\n                locale: '',\n                sidebar: ''\n            };\n        },\n        mounted(){\n            if(!helper.hasPermission('access-configuration')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n            this.getPreRequisite();\n\n            if(!this.setupWizard)\n                this.getConfiguration();\n        },\n        methods: {\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/configuration/variable?type=system')\n                    .then(response => {\n                        this.systemConfigVariables.color_themes = response.color_themes;\n                        this.systemConfigVariables.directions = response.directions;\n                        this.systemConfigVariables.currencies = response.currencies;\n                        this.systemConfigVariables.sidebar = response.sidebar;\n                        this.systemConfigVariables.date_formats = response.date_formats;\n                        this.systemConfigVariables.time_formats = response.time_formats;\n                        this.systemConfigVariables.days = response.days;\n                        this.systemConfigVariables.notification_positions = response.notification_positions;\n                        this.systemConfigVariables.timezones = response.timezones;\n                        this.systemConfigVariables.locales = response.locales;\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getConfiguration(){\n                let loader = this.$loading.show();\n                axios.get('/api/configuration')\n                    .then(response => {\n                        this.configForm = helper.formAssign(this.configForm, response);\n                        this.direction = response.direction;\n                        this.locale = response.locale;\n                        this.sidebar = response.sidebar;\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            submit(){\n                let loader = this.$loading.show();\n                this.configForm.config_type = 'system';\n                this.configForm.https = (this.configForm.https) ? 1 : 0;\n                this.configForm.error_display = (this.configForm.error_display) ? 1 : 0;\n                this.configForm.frontend_website = (this.configForm.frontend_website) ? 1 : 0;\n                this.configForm.online_registration = (this.configForm.online_registration) ? 1 : 0;\n                this.configForm.multilingual = (this.configForm.multilingual) ? 1 : 0;\n                this.configForm.ip_filter = (this.configForm.ip_filter) ? 1 : 0;\n                this.configForm.email_log = (this.configForm.email_log) ? 1 : 0;\n                this.configForm.email_template = (this.configForm.email_template) ? 1 : 0;\n                this.configForm.todo = (this.configForm.todo) ? 1 : 0;\n                this.configForm.backup = (this.configForm.backup) ? 1 : 0;\n                this.configForm.maintenance_mode = (this.configForm.maintenance_mode) ? 1 : 0;\n                return this.configForm.post('/api/configuration')\n                    .then(response => {\n                        this.$store.dispatch('setConfig',{loaded: false});\n                        toastr.success(response.message);\n                        loader.hide();\n                        return true;\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        return false;\n                    });\n            },\n            getConfig(config){\n                return helper.getConfig(config);\n            }\n        },\n        watch: {\n            configurations(val){\n                if (val)\n                    helper.formAssign(this.configForm,val);\n            }\n        }\n    }\t\n</script>","<template>\n  <div class=\"container-fluid\">\n      <div class=\"card\">\n          <div class=\"card-body\">\n              <button type=\"button\" v-tooltip=\"trans('configuration.hide_setup_wizard')\" @click=\"hideSetupWizard\" class=\"btn btn-danger pull-right m-2\"><i class=\"fa fa-times\"></i></button>\n              <div class=\"clearfix\"></div>\n\n              <form-wizard color=\"#55CE63\" :title=\"trans('configuration.setup_title')\" :subtitle=\"trans('configuration.setup_subtitle')\" :nextButtonText=\"trans('configuration.setup_next_button_content')\" :backButtonText=\"trans('configuration.setup_previous_button_content')\" :finishButtonText=\"trans('configuration.setup_finish_button_content')\" @on-complete=\"finish\">\n                  <tab-content :title=\"trans('configuration.basic_configuration')\" :before-change=\"storeBasicConfiguration\">\n                    <basic-configuration-form :setup-wizard=\"true\" class=\"m-b-20\" ref=\"basic\" :configurations=\"configurations\"></basic-configuration-form>\n                 </tab-content>\n                 <tab-content :title=\"trans('configuration.system_configuration')\" :before-change=\"storeSystemConfiguration\">\n                    <system-configuration-form :setup-wizard=\"true\" class=\"m-b-20\" ref=\"system\" :configurations=\"configurations\"></system-configuration-form>\n                 </tab-content>\n                 <tab-content :title=\"trans('configuration.mail_configuration')\" :before-change=\"storeMailConfiguration\">\n                    <mail-configuration-form :setup-wizard=\"true\" class=\"m-b-20\" ref=\"mail\" :configurations=\"configurations\"></mail-configuration-form>\n                 </tab-content>\n                 <tab-content :title=\"trans('configuration.menu_configuration')\" :before-change=\"storeMenuConfiguration\">\n                    <menu-configuration-form :setup-wizard=\"true\" class=\"m-b-20\" ref=\"menu\" :configurations=\"configurations\"></menu-configuration-form>\n                 </tab-content>\n                 <tab-content :title=\"trans('academic.academic_session')\">\n                    <academic-session-form :setup-wizard=\"true\" class=\"m-b-20\" ref=\"session\"></academic-session-form>\n                 </tab-content>\n              </form-wizard>\n          </div>\n      </div>\n  </div>\n</template>\n\n<script>\n    import basicConfigurationForm from '../configuration/basic/form'\n    import systemConfigurationForm from '../configuration/system/form'\n    import mailConfigurationForm from '../configuration/mail/form'\n    import menuConfigurationForm from '../configuration/menu/form'\n    import academicSessionForm from '../academic/session/form'\n    \n    export default {\n        components: {basicConfigurationForm,systemConfigurationForm,mailConfigurationForm,academicSessionForm,menuConfigurationForm},\n        methods: {\n        },\n        data() {\n            return {\n              configurations: []\n            }\n        },\n        mounted(){\n            if(this.$route.query.reload)\n                window.location = window.location.pathname;\n\n            if(!helper.hasRole('admin') || !helper.getConfig('setup_wizard'))\n              this.$router.push('/dashboard');\n\n            this.getConfiguration();\n        },\n        methods: {\n          getConfiguration(){\n              let loader = this.$loading.show();\n              axios.get('/api/configuration')\n                  .then(response => {\n                      this.configurations = response;\n                      loader.hide();\n                  }).catch(error => {\n                      loader.hide();\n                      helper.showErrorMsg(error);\n                  });\n          },\n          hideSetupWizard(){\n            let loader = this.$loading.show();\n            axios.post('/api/setup/wizard', {action: 'hide'})\n              .then(response => {\n                loader.hide();\n                this.$router.push('/dashboard');\n              })\n              .catch(error => {\n                loader.hide();\n                helper.showErrorMsg(error);\n              })\n          },\n          storeBasicConfiguration(){\n            return this.$refs.basic.submit();\n          },\n          storeSystemConfiguration(){\n            return this.$refs.system.submit();\n          },\n          storeMailConfiguration(){\n            return this.$refs.mail.submit();\n          },\n          storeMenuConfiguration(){\n            return this.$refs.menu.submit();\n          },\n          finish(){\n            this.$refs.session.store();\n          }\n        },\n        watch: {\n        }\n    }\n</script>\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.proceed.apply(null, arguments)\n        },\n        keydown: function ($event) {\n          return _vm.academicSessionForm.errors.clear($event.target.name)\n        },\n      },\n    },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.session_name\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.academicSessionForm.name,\n                    expression: \"academicSessionForm.name\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"name\",\n                  placeholder: _vm.trans(\"academic.session_name\"),\n                },\n                domProps: { value: _vm.academicSessionForm.name },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(\n                      _vm.academicSessionForm,\n                      \"name\",\n                      $event.target.value\n                    )\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"name\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.session_start_date\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"datepicker\", {\n                attrs: {\n                  bootstrapStyling: true,\n                  placeholder: _vm.trans(\"academic.session_start_date\"),\n                  disabled: _vm.id ? true : false,\n                },\n                on: {\n                  selected: function ($event) {\n                    return _vm.academicSessionForm.errors.clear(\"start_date\")\n                  },\n                },\n                model: {\n                  value: _vm.academicSessionForm.start_date,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.academicSessionForm, \"start_date\", $$v)\n                  },\n                  expression: \"academicSessionForm.start_date\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"start_date\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.session_end_date\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"datepicker\", {\n                attrs: {\n                  bootstrapStyling: true,\n                  placeholder: _vm.trans(\"academic.session_end_date\"),\n                  disabled: _vm.id ? true : false,\n                },\n                on: {\n                  selected: function ($event) {\n                    return _vm.academicSessionForm.errors.clear(\"end_date\")\n                  },\n                },\n                model: {\n                  value: _vm.academicSessionForm.end_date,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.academicSessionForm, \"end_date\", $$v)\n                  },\n                  expression: \"academicSessionForm.end_date\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"end_date\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"academic.session_description\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"autosize-textarea\", {\n                attrs: {\n                  rows: \"1\",\n                  name: \"description\",\n                  placeholder: _vm.trans(\"academic.session_description\"),\n                },\n                model: {\n                  value: _vm.academicSessionForm.description,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.academicSessionForm, \"description\", $$v)\n                  },\n                  expression: \"academicSessionForm.description\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"description\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(\n                  _vm._s(_vm.trans(\"academic.transfer_certificate_format\"))\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"v-select\",\n                {\n                  attrs: {\n                    label: \"name\",\n                    name: \"transfer_certificate_format\",\n                    id: \"transfer_certificate_format\",\n                    options: _vm.transfer_certificate_formats,\n                    placeholder: _vm.trans(\n                      \"academic.select_transfer_certificate_format\"\n                    ),\n                  },\n                  on: {\n                    select: _vm.onTransferCertificateFormatSelect,\n                    close: function ($event) {\n                      return _vm.academicSessionForm.errors.clear(\n                        \"transfer_certificate_format\"\n                      )\n                    },\n                    remove: function ($event) {\n                      _vm.academicSessionForm.transfer_certificate_format = \"\"\n                    },\n                  },\n                  model: {\n                    value: _vm.selected_transfer_certificate_format,\n                    callback: function ($$v) {\n                      _vm.selected_transfer_certificate_format = $$v\n                    },\n                    expression: \"selected_transfer_certificate_format\",\n                  },\n                },\n                [\n                  !_vm.transfer_certificate_formats.length\n                    ? _c(\n                        \"div\",\n                        {\n                          staticClass: \"multiselect__option\",\n                          attrs: { slot: \"afterList\" },\n                          slot: \"afterList\",\n                        },\n                        [\n                          _vm._v(\n                            \"\\n                        \" +\n                              _vm._s(_vm.trans(\"general.no_option_found\")) +\n                              \"\\n                    \"\n                          ),\n                        ]\n                      )\n                    : _vm._e(),\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.academicSessionForm,\n                  \"prop-name\": \"transfer_certificate_format\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      !_vm.setupWizard\n        ? [\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"switches\", {\n                      staticClass: \"m-l-20\",\n                      attrs: { theme: \"bootstrap\", color: \"success\" },\n                      model: {\n                        value: _vm.academicSessionForm.is_default,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.academicSessionForm, \"is_default\", $$v)\n                        },\n                        expression: \"academicSessionForm.is_default\",\n                      },\n                    }),\n                    _vm._v(\n                      \" \" +\n                        _vm._s(_vm.trans(\"academic.session_is_default\")) +\n                        \"\\n                \"\n                    ),\n                  ],\n                  1\n                ),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"switches\", {\n                      staticClass: \"m-l-20\",\n                      attrs: { theme: \"bootstrap\", color: \"success\" },\n                      model: {\n                        value: _vm.academicSessionForm.exam_report_analysis,\n                        callback: function ($$v) {\n                          _vm.$set(\n                            _vm.academicSessionForm,\n                            \"exam_report_analysis\",\n                            $$v\n                          )\n                        },\n                        expression: \"academicSessionForm.exam_report_analysis\",\n                      },\n                    }),\n                    _vm._v(\n                      \" \" +\n                        _vm._s(_vm.trans(\"exam.exam_report_analysis\")) +\n                        \"\\n                \"\n                    ),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _vm.academicSessionForm.exam_report_analysis\n                ? _c(\"div\", { staticClass: \"col-12\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"academic.exam_report_analysis_student_token\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value:\n                                _vm.academicSessionForm\n                                  .exam_report_analysis_student_token,\n                              expression:\n                                \"academicSessionForm.exam_report_analysis_student_token\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"exam_report_analysis_student_token\",\n                            placeholder: _vm.trans(\n                              \"academic.exam_report_analysis_student_token\"\n                            ),\n                          },\n                          domProps: {\n                            value:\n                              _vm.academicSessionForm\n                                .exam_report_analysis_student_token,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.academicSessionForm,\n                                \"exam_report_analysis_student_token\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.academicSessionForm,\n                            \"prop-name\": \"exam_report_analysis_student_token\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.academicSessionForm.exam_report_analysis\n                ? _c(\"div\", { staticClass: \"col-12\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"academic.exam_report_analysis_staff_token\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value:\n                                _vm.academicSessionForm\n                                  .exam_report_analysis_staff_token,\n                              expression:\n                                \"academicSessionForm.exam_report_analysis_staff_token\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"exam_report_analysis_staff_token\",\n                            placeholder: _vm.trans(\n                              \"academic.exam_report_analysis_staff_token\"\n                            ),\n                          },\n                          domProps: {\n                            value:\n                              _vm.academicSessionForm\n                                .exam_report_analysis_staff_token,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.academicSessionForm,\n                                \"exam_report_analysis_staff_token\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.academicSessionForm,\n                            \"prop-name\": \"exam_report_analysis_staff_token\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ])\n                : _vm._e(),\n            ]),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"card-footer text-right\" },\n              [\n                _c(\n                  \"router-link\",\n                  {\n                    directives: [\n                      {\n                        name: \"show\",\n                        rawName: \"v-show\",\n                        value: _vm.id,\n                        expression: \"id\",\n                      },\n                    ],\n                    staticClass: \"btn btn-danger waves-effect waves-light\",\n                    attrs: { to: \"/academic/session\" },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                ),\n                _vm._v(\" \"),\n                !_vm.id\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-danger waves-effect waves-light\",\n                        attrs: { type: \"button\" },\n                        on: {\n                          click: function ($event) {\n                            return _vm.$emit(\"cancel\")\n                          },\n                        },\n                      },\n                      [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info waves-effect waves-light\",\n                    attrs: { type: \"submit\" },\n                  },\n                  [\n                    _vm.id\n                      ? _c(\"span\", [\n                          _vm._v(_vm._s(_vm.trans(\"general.update\"))),\n                        ])\n                      : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n                  ]\n                ),\n              ],\n              1\n            ),\n          ]\n        : _vm._e(),\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"row\" }, [\n    _c(\n      \"div\",\n      { class: [\"col-12\", !_vm.setupWizard ? \"col-sm-7\" : \"\", \"p-0\", \"pl-3\"] },\n      [\n        _c(\"div\", { staticClass: \"card\" }, [\n          _c(\"div\", { staticClass: \"card-body p-4\" }, [\n            _c(\n              \"form\",\n              {\n                on: {\n                  submit: function ($event) {\n                    $event.preventDefault()\n                    return _vm.submit.apply(null, arguments)\n                  },\n                  keydown: function ($event) {\n                    return _vm.configForm.errors.clear($event.target.name)\n                  },\n                },\n              },\n              [\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\"div\", { staticClass: \"col-12 col-sm-8\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"configuration.institute_name\"))\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.institute_name,\n                              expression: \"configForm.institute_name\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"institute_name\",\n                            placeholder: _vm.trans(\n                              \"configuration.institute_name\"\n                            ),\n                          },\n                          domProps: { value: _vm.configForm.institute_name },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"institute_name\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"institute_name\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"configuration.institute_running_body\")\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.institute_running_body,\n                              expression: \"configForm.institute_running_body\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"institute_running_body\",\n                            placeholder: _vm.trans(\n                              \"configuration.institute_running_body\"\n                            ),\n                          },\n                          domProps: {\n                            value: _vm.configForm.institute_running_body,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"institute_running_body\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"institute_running_body\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"configuration.institute_foundation_date\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"datepicker\", {\n                          attrs: {\n                            bootstrapStyling: true,\n                            placeholder: _vm.trans(\n                              \"configuration.institute_foundation_date\"\n                            ),\n                          },\n                          on: {\n                            selected: function ($event) {\n                              return _vm.configForm.errors.clear(\n                                \"institute_foundation_date\"\n                              )\n                            },\n                          },\n                          model: {\n                            value: _vm.configForm.institute_foundation_date,\n                            callback: function ($$v) {\n                              _vm.$set(\n                                _vm.configForm,\n                                \"institute_foundation_date\",\n                                $$v\n                              )\n                            },\n                            expression: \"configForm.institute_foundation_date\",\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"institute_foundation_date\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"configuration.institute_recognition_body\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.institute_recognition_body,\n                              expression:\n                                \"configForm.institute_recognition_body\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"institute_recognition_body\",\n                            placeholder: _vm.trans(\n                              \"configuration.institute_recognition_body\"\n                            ),\n                          },\n                          domProps: {\n                            value: _vm.configForm.institute_recognition_body,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"institute_recognition_body\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"institute_recognition_body\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\n                                \"configuration.institute_recognition_number\"\n                              )\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value:\n                                _vm.configForm.institute_recognition_number,\n                              expression:\n                                \"configForm.institute_recognition_number\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"institute_recognition_number\",\n                            placeholder: _vm.trans(\n                              \"configuration.institute_recognition_number\"\n                            ),\n                          },\n                          domProps: {\n                            value: _vm.configForm.institute_recognition_number,\n                          },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"institute_recognition_number\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"institute_recognition_number\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"h4\", { staticClass: \"card-title\" }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"configuration.contact_information\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"configuration.address_line_1\"))\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.address_line_1,\n                              expression: \"configForm.address_line_1\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"address_line_1\",\n                            placeholder: _vm.trans(\n                              \"configuration.address_line_1\"\n                            ),\n                          },\n                          domProps: { value: _vm.configForm.address_line_1 },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"address_line_1\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"address_line_1\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"configuration.address_line_2\"))\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.address_line_2,\n                              expression: \"configForm.address_line_2\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"address_line_2\",\n                            placeholder: _vm.trans(\n                              \"configuration.address_line_2\"\n                            ),\n                          },\n                          domProps: { value: _vm.configForm.address_line_2 },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"address_line_2\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"address_line_2\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.city\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.city,\n                              expression: \"configForm.city\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"city\",\n                            placeholder: _vm.trans(\"configuration.city\"),\n                          },\n                          domProps: { value: _vm.configForm.city },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"city\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"city\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.state\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.state,\n                              expression: \"configForm.state\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"state\",\n                            placeholder: _vm.trans(\"configuration.state\"),\n                          },\n                          domProps: { value: _vm.configForm.state },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"state\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"state\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.zipcode\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.zipcode,\n                              expression: \"configForm.zipcode\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"zipcode\",\n                            placeholder: _vm.trans(\"configuration.zipcode\"),\n                          },\n                          domProps: { value: _vm.configForm.zipcode },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"zipcode\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"zipcode\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.country\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.country,\n                              expression: \"configForm.country\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"country\",\n                            placeholder: _vm.trans(\"configuration.country\"),\n                          },\n                          domProps: { value: _vm.configForm.country },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"country\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"country\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.phone\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.phone,\n                              expression: \"configForm.phone\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"phone\",\n                            placeholder: _vm.trans(\"configuration.phone\"),\n                          },\n                          domProps: { value: _vm.configForm.phone },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"phone\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"phone\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.fax\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.fax,\n                              expression: \"configForm.fax\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"fax\",\n                            placeholder: _vm.trans(\"configuration.fax\"),\n                          },\n                          domProps: { value: _vm.configForm.fax },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"fax\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"fax\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.email\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.email,\n                              expression: \"configForm.email\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"email\",\n                            placeholder: _vm.trans(\"configuration.email\"),\n                          },\n                          domProps: { value: _vm.configForm.email },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"email\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"email\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"configuration.website\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.website,\n                              expression: \"configForm.website\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: \"website\",\n                            placeholder: _vm.trans(\"configuration.website\"),\n                          },\n                          domProps: { value: _vm.configForm.website },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                _vm.configForm,\n                                \"website\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.configForm,\n                            \"prop-name\": \"website\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                !_vm.setupWizard\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass:\n                          \"btn btn-info waves-effect waves-light m-t-10 pull-right\",\n                        attrs: { type: \"submit\" },\n                      },\n                      [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                    )\n                  : _vm._e(),\n              ]\n            ),\n          ]),\n        ]),\n      ]\n    ),\n    _vm._v(\" \"),\n    !_vm.setupWizard\n      ? _c(\"div\", { staticClass: \"col-12 col-sm-5 hidden-sm-down p-0 pr-3\" }, [\n          _c(\"div\", { staticClass: \"card border-left\" }, [\n            _c(\"div\", { staticClass: \"card-body\" }, [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 col-sm-6\" },\n                  [\n                    _c(\"upload-image\", {\n                      attrs: {\n                        id: \"logo\",\n                        \"button-text\": _vm.trans(\"general.choose_logo\"),\n                        \"upload-path\": \"/configuration/logo\",\n                        \"remove-path\": \"/configuration/logo/remove\",\n                        \"image-source\": _vm.logo,\n                      },\n                      on: { uploaded: _vm.updateLogo, removed: _vm.updateLogo },\n                    }),\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 col-sm-6\" },\n                  [\n                    _c(\"upload-image\", {\n                      attrs: {\n                        id: \"icon\",\n                        \"button-text\": _vm.trans(\"general.choose_icon\"),\n                        \"upload-path\": \"/configuration/icon\",\n                        \"remove-path\": \"/configuration/icon/remove\",\n                        \"image-source\": _vm.icon,\n                      },\n                      on: { uploaded: _vm.updateIcon, removed: _vm.updateIcon },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"table-responsive\" }, [\n                _c(\n                  \"table\",\n                  { staticClass: \"table table-sm custom-show-table\" },\n                  [\n                    _c(\n                      \"tbody\",\n                      _vm._l(_vm.configForm, function (config, key) {\n                        return key != \"config_type\" &&\n                          key != \"errors\" &&\n                          key != \"originalData\" &&\n                          key != \"autoReset\"\n                          ? _c(\"tr\", [\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"configuration.\" + key))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                key == \"institute_foundation_date\"\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm._f(\"moment\")(_vm.configForm[key])\n                                        )\n                                      ),\n                                    ])\n                                  : _c(\"span\", [\n                                      _vm._v(_vm._s(_vm.configForm[key])),\n                                    ]),\n                              ]),\n                            ])\n                          : _vm._e()\n                      }),\n                      0\n                    ),\n                  ]\n                ),\n              ]),\n            ]),\n          ]),\n        ])\n      : _vm._e(),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"row\" }, [\n    _c(\"div\", { staticClass: \"col-12\" }, [\n      _c(\"div\", { staticClass: \"card\" }, [\n        _c(\"div\", { staticClass: \"card-body p-4\" }, [\n          _c(\n            \"form\",\n            {\n              on: {\n                submit: function ($event) {\n                  $event.preventDefault()\n                  return _vm.submit.apply(null, arguments)\n                },\n                keydown: function ($event) {\n                  return _vm.configForm.errors.clear($event.target.name)\n                },\n              },\n            },\n            [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.mail_driver\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.driver,\n                              expression: \"configForm.driver\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"driver\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"driver\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\"driver\")\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(_vm.mail_drivers, function (option) {\n                          return _c(\n                            \"option\",\n                            { domProps: { value: option.value } },\n                            [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(option.text) +\n                                  \"\\n                                  \"\n                              ),\n                            ]\n                          )\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"driver\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"row\" }, [\n                    _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"configuration.mail_from_name\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.configForm.from_name,\n                                expression: \"configForm.from_name\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: \"from_name\",\n                              placeholder: _vm.trans(\n                                \"configuration.mail_from_name\"\n                              ),\n                            },\n                            domProps: { value: _vm.configForm.from_name },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"from_name\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.configForm,\n                              \"prop-name\": \"from_name\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(\n                                _vm.trans(\"configuration.mail_from_address\")\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.configForm.from_address,\n                                expression: \"configForm.from_address\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: \"from_address\",\n                              placeholder: _vm.trans(\n                                \"configuration.mail_from_address\"\n                              ),\n                            },\n                            domProps: { value: _vm.configForm.from_address },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"from_address\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.configForm,\n                              \"prop-name\": \"from_address\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  !_vm.setupWizard\n                    ? _c(\n                        \"button\",\n                        {\n                          staticClass:\n                            \"btn btn-info waves-effect waves-light m-t-10\",\n                          attrs: { type: \"submit\" },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                      )\n                    : _vm._e(),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-8\" }, [\n                  _vm.configForm.driver === \"mailgun\"\n                    ? _c(\"div\", [\n                        _c(\"div\", { staticClass: \"row\" }, [\n                          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"configuration.mailgun_domain\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.configForm.mailgun_domain,\n                                      expression: \"configForm.mailgun_domain\",\n                                    },\n                                  ],\n                                  staticClass: \"form-control\",\n                                  attrs: {\n                                    type: \"text\",\n                                    name: \"mailgun_domain\",\n                                    placeholder: _vm.trans(\n                                      \"configuration.mailgun_domain\"\n                                    ),\n                                  },\n                                  domProps: {\n                                    value: _vm.configForm.mailgun_domain,\n                                  },\n                                  on: {\n                                    input: function ($event) {\n                                      if ($event.target.composing) return\n                                      _vm.$set(\n                                        _vm.configForm,\n                                        \"mailgun_domain\",\n                                        $event.target.value\n                                      )\n                                    },\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"show-error\", {\n                                  attrs: {\n                                    \"form-name\": _vm.configForm,\n                                    \"prop-name\": \"mailgun_domain\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"configuration.mailgun_secret\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.configForm.mailgun_secret,\n                                      expression: \"configForm.mailgun_secret\",\n                                    },\n                                  ],\n                                  staticClass: \"form-control\",\n                                  attrs: {\n                                    type: \"text\",\n                                    name: \"mailgun_secret\",\n                                    placeholder: _vm.trans(\n                                      \"configuration.mailgun_secret\"\n                                    ),\n                                  },\n                                  domProps: {\n                                    value: _vm.configForm.mailgun_secret,\n                                  },\n                                  on: {\n                                    input: function ($event) {\n                                      if ($event.target.composing) return\n                                      _vm.$set(\n                                        _vm.configForm,\n                                        \"mailgun_secret\",\n                                        $event.target.value\n                                      )\n                                    },\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"show-error\", {\n                                  attrs: {\n                                    \"form-name\": _vm.configForm,\n                                    \"prop-name\": \"mailgun_secret\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]),\n                        ]),\n                      ])\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _vm.configForm.driver === \"mandrill\"\n                    ? _c(\"div\", [\n                        _c(\"div\", { staticClass: \"row\" }, [\n                          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"configuration.mandrill_secret\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.configForm.mandrill_secret,\n                                      expression: \"configForm.mandrill_secret\",\n                                    },\n                                  ],\n                                  staticClass: \"form-control\",\n                                  attrs: {\n                                    type: \"text\",\n                                    name: \"mandrill_secret\",\n                                    placeholder: _vm.trans(\n                                      \"configuration.mandrill_secret\"\n                                    ),\n                                  },\n                                  domProps: {\n                                    value: _vm.configForm.mandrill_secret,\n                                  },\n                                  on: {\n                                    input: function ($event) {\n                                      if ($event.target.composing) return\n                                      _vm.$set(\n                                        _vm.configForm,\n                                        \"mandrill_secret\",\n                                        $event.target.value\n                                      )\n                                    },\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"show-error\", {\n                                  attrs: {\n                                    \"form-name\": _vm.configForm,\n                                    \"prop-name\": \"mandrill_secret\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]),\n                        ]),\n                      ])\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _vm.configForm.driver === \"smtp\"\n                    ? _c(\"div\", [\n                        _c(\"div\", { staticClass: \"row\" }, [\n                          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"configuration.smtp_host\"))\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.configForm.smtp_host,\n                                      expression: \"configForm.smtp_host\",\n                                    },\n                                  ],\n                                  staticClass: \"form-control\",\n                                  attrs: {\n                                    type: \"text\",\n                                    name: \"smtp_host\",\n                                    placeholder: _vm.trans(\n                                      \"configuration.smtp_host\"\n                                    ),\n                                  },\n                                  domProps: { value: _vm.configForm.smtp_host },\n                                  on: {\n                                    input: function ($event) {\n                                      if ($event.target.composing) return\n                                      _vm.$set(\n                                        _vm.configForm,\n                                        \"smtp_host\",\n                                        $event.target.value\n                                      )\n                                    },\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"show-error\", {\n                                  attrs: {\n                                    \"form-name\": _vm.configForm,\n                                    \"prop-name\": \"smtp_host\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"configuration.smtp_port\"))\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.configForm.smtp_port,\n                                      expression: \"configForm.smtp_port\",\n                                    },\n                                  ],\n                                  staticClass: \"form-control\",\n                                  attrs: {\n                                    type: \"text\",\n                                    name: \"smtp_port\",\n                                    placeholder: _vm.trans(\n                                      \"configuration.smtp_port\"\n                                    ),\n                                  },\n                                  domProps: { value: _vm.configForm.smtp_port },\n                                  on: {\n                                    input: function ($event) {\n                                      if ($event.target.composing) return\n                                      _vm.$set(\n                                        _vm.configForm,\n                                        \"smtp_port\",\n                                        $event.target.value\n                                      )\n                                    },\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"show-error\", {\n                                  attrs: {\n                                    \"form-name\": _vm.configForm,\n                                    \"prop-name\": \"smtp_port\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"configuration.smtp_username\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.configForm.smtp_username,\n                                      expression: \"configForm.smtp_username\",\n                                    },\n                                  ],\n                                  staticClass: \"form-control\",\n                                  attrs: {\n                                    type: \"text\",\n                                    name: \"smtp_username\",\n                                    placeholder: _vm.trans(\n                                      \"configuration.smtp_username\"\n                                    ),\n                                  },\n                                  domProps: {\n                                    value: _vm.configForm.smtp_username,\n                                  },\n                                  on: {\n                                    input: function ($event) {\n                                      if ($event.target.composing) return\n                                      _vm.$set(\n                                        _vm.configForm,\n                                        \"smtp_username\",\n                                        $event.target.value\n                                      )\n                                    },\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"show-error\", {\n                                  attrs: {\n                                    \"form-name\": _vm.configForm,\n                                    \"prop-name\": \"smtp_username\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"configuration.smtp_password\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.configForm.smtp_password,\n                                      expression: \"configForm.smtp_password\",\n                                    },\n                                  ],\n                                  staticClass: \"form-control\",\n                                  attrs: {\n                                    type: \"text\",\n                                    name: \"smtp_password\",\n                                    placeholder: _vm.trans(\n                                      \"configuration.smtp_password\"\n                                    ),\n                                  },\n                                  domProps: {\n                                    value: _vm.configForm.smtp_password,\n                                  },\n                                  on: {\n                                    input: function ($event) {\n                                      if ($event.target.composing) return\n                                      _vm.$set(\n                                        _vm.configForm,\n                                        \"smtp_password\",\n                                        $event.target.value\n                                      )\n                                    },\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"show-error\", {\n                                  attrs: {\n                                    \"form-name\": _vm.configForm,\n                                    \"prop-name\": \"smtp_password\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"configuration.smtp_encryption\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"select\",\n                                  {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value: _vm.configForm.smtp_encryption,\n                                        expression:\n                                          \"configForm.smtp_encryption\",\n                                      },\n                                    ],\n                                    staticClass: \"custom-select col-12\",\n                                    attrs: { name: \"smtp_encryption\" },\n                                    on: {\n                                      change: [\n                                        function ($event) {\n                                          var $$selectedVal =\n                                            Array.prototype.filter\n                                              .call(\n                                                $event.target.options,\n                                                function (o) {\n                                                  return o.selected\n                                                }\n                                              )\n                                              .map(function (o) {\n                                                var val =\n                                                  \"_value\" in o\n                                                    ? o._value\n                                                    : o.value\n                                                return val\n                                              })\n                                          _vm.$set(\n                                            _vm.configForm,\n                                            \"smtp_encryption\",\n                                            $event.target.multiple\n                                              ? $$selectedVal\n                                              : $$selectedVal[0]\n                                          )\n                                        },\n                                        function ($event) {\n                                          return _vm.configForm.errors.clear(\n                                            \"smtp_encryption\"\n                                          )\n                                        },\n                                      ],\n                                    },\n                                  },\n                                  [\n                                    _c(\n                                      \"option\",\n                                      {\n                                        attrs: { value: \"null\", selected: \"\" },\n                                      },\n                                      [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\"general.select_one\")\n                                          )\n                                        ),\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _vm._l(_vm.encryptions, function (option) {\n                                      return _c(\n                                        \"option\",\n                                        { domProps: { value: option.value } },\n                                        [\n                                          _vm._v(\n                                            \"\\n                                                \" +\n                                              _vm._s(option.text) +\n                                              \"\\n                                              \"\n                                          ),\n                                        ]\n                                      )\n                                    }),\n                                  ],\n                                  2\n                                ),\n                                _vm._v(\" \"),\n                                _c(\"show-error\", {\n                                  attrs: {\n                                    \"form-name\": _vm.configForm,\n                                    \"prop-name\": \"smtp_encryption\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]),\n                        ]),\n                      ])\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _vm.configForm.driver === \"mailgun\"\n                    ? _c(\"div\", [\n                        _c(\"div\", { staticClass: \"row\" }, [\n                          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"configuration.mailgun_host\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.configForm.mailgun_host,\n                                      expression: \"configForm.mailgun_host\",\n                                    },\n                                  ],\n                                  staticClass: \"form-control\",\n                                  attrs: {\n                                    type: \"text\",\n                                    name: \"mailgun_host\",\n                                    placeholder: _vm.trans(\n                                      \"configuration.mailgun_host\"\n                                    ),\n                                  },\n                                  domProps: {\n                                    value: _vm.configForm.mailgun_host,\n                                  },\n                                  on: {\n                                    input: function ($event) {\n                                      if ($event.target.composing) return\n                                      _vm.$set(\n                                        _vm.configForm,\n                                        \"mailgun_host\",\n                                        $event.target.value\n                                      )\n                                    },\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"show-error\", {\n                                  attrs: {\n                                    \"form-name\": _vm.configForm,\n                                    \"prop-name\": \"mailgun_host\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"configuration.mailgun_port\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.configForm.mailgun_port,\n                                      expression: \"configForm.mailgun_port\",\n                                    },\n                                  ],\n                                  staticClass: \"form-control\",\n                                  attrs: {\n                                    type: \"text\",\n                                    name: \"mailgun_port\",\n                                    placeholder: _vm.trans(\n                                      \"configuration.mailgun_port\"\n                                    ),\n                                  },\n                                  domProps: {\n                                    value: _vm.configForm.mailgun_port,\n                                  },\n                                  on: {\n                                    input: function ($event) {\n                                      if ($event.target.composing) return\n                                      _vm.$set(\n                                        _vm.configForm,\n                                        \"mailgun_port\",\n                                        $event.target.value\n                                      )\n                                    },\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"show-error\", {\n                                  attrs: {\n                                    \"form-name\": _vm.configForm,\n                                    \"prop-name\": \"mailgun_port\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\n                                        \"configuration.mailgun_username\"\n                                      )\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.configForm.mailgun_username,\n                                      expression: \"configForm.mailgun_username\",\n                                    },\n                                  ],\n                                  staticClass: \"form-control\",\n                                  attrs: {\n                                    type: \"text\",\n                                    name: \"mailgun_username\",\n                                    placeholder: _vm.trans(\n                                      \"configuration.mailgun_username\"\n                                    ),\n                                  },\n                                  domProps: {\n                                    value: _vm.configForm.mailgun_username,\n                                  },\n                                  on: {\n                                    input: function ($event) {\n                                      if ($event.target.composing) return\n                                      _vm.$set(\n                                        _vm.configForm,\n                                        \"mailgun_username\",\n                                        $event.target.value\n                                      )\n                                    },\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"show-error\", {\n                                  attrs: {\n                                    \"form-name\": _vm.configForm,\n                                    \"prop-name\": \"mailgun_username\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\n                                        \"configuration.mailgun_password\"\n                                      )\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.configForm.mailgun_password,\n                                      expression: \"configForm.mailgun_password\",\n                                    },\n                                  ],\n                                  staticClass: \"form-control\",\n                                  attrs: {\n                                    type: \"text\",\n                                    name: \"mailgun_password\",\n                                    placeholder: _vm.trans(\n                                      \"configuration.mailgun_password\"\n                                    ),\n                                  },\n                                  domProps: {\n                                    value: _vm.configForm.mailgun_password,\n                                  },\n                                  on: {\n                                    input: function ($event) {\n                                      if ($event.target.composing) return\n                                      _vm.$set(\n                                        _vm.configForm,\n                                        \"mailgun_password\",\n                                        $event.target.value\n                                      )\n                                    },\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"show-error\", {\n                                  attrs: {\n                                    \"form-name\": _vm.configForm,\n                                    \"prop-name\": \"mailgun_password\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\n                                        \"configuration.mailgun_encryption\"\n                                      )\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"select\",\n                                  {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value: _vm.configForm.smtp_encryption,\n                                        expression:\n                                          \"configForm.smtp_encryption\",\n                                      },\n                                    ],\n                                    staticClass: \"custom-select col-12\",\n                                    attrs: { name: \"smtp_encryption\" },\n                                    on: {\n                                      change: [\n                                        function ($event) {\n                                          var $$selectedVal =\n                                            Array.prototype.filter\n                                              .call(\n                                                $event.target.options,\n                                                function (o) {\n                                                  return o.selected\n                                                }\n                                              )\n                                              .map(function (o) {\n                                                var val =\n                                                  \"_value\" in o\n                                                    ? o._value\n                                                    : o.value\n                                                return val\n                                              })\n                                          _vm.$set(\n                                            _vm.configForm,\n                                            \"smtp_encryption\",\n                                            $event.target.multiple\n                                              ? $$selectedVal\n                                              : $$selectedVal[0]\n                                          )\n                                        },\n                                        function ($event) {\n                                          return _vm.configForm.errors.clear(\n                                            \"smtp_encryption\"\n                                          )\n                                        },\n                                      ],\n                                    },\n                                  },\n                                  [\n                                    _c(\n                                      \"option\",\n                                      {\n                                        attrs: { value: \"null\", selected: \"\" },\n                                      },\n                                      [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\"general.select_one\")\n                                          )\n                                        ),\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _vm._l(_vm.encryptions, function (option) {\n                                      return _c(\n                                        \"option\",\n                                        { domProps: { value: option.value } },\n                                        [\n                                          _vm._v(\n                                            \"\\n                                                \" +\n                                              _vm._s(option.text) +\n                                              \"\\n                                              \"\n                                          ),\n                                        ]\n                                      )\n                                    }),\n                                  ],\n                                  2\n                                ),\n                                _vm._v(\" \"),\n                                _c(\"show-error\", {\n                                  attrs: {\n                                    \"form-name\": _vm.configForm,\n                                    \"prop-name\": \"mailgun_encryption\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]),\n                        ]),\n                      ])\n                    : _vm._e(),\n                ]),\n              ]),\n            ]\n          ),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"row\" }, [\n    _c(\"div\", { staticClass: \"col-12\" }, [\n      _c(\"div\", { staticClass: \"card\" }, [\n        _c(\"div\", { staticClass: \"card-body p-4\" }, [\n          _c(\n            \"form\",\n            {\n              on: {\n                submit: function ($event) {\n                  $event.preventDefault()\n                  return _vm.submit.apply(null, arguments)\n                },\n                keydown: function ($event) {\n                  return _vm.configForm.errors.clear($event.target.name)\n                },\n              },\n            },\n            [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 offset-md-1\" },\n                  [\n                    _vm._l(_vm.configForm.modules, function (module) {\n                      return [\n                        _c(\"h4\", { staticClass: \"card-title\" }, [\n                          _vm._v(_vm._s(_vm.trans(module.translation))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\n                            \"label\",\n                            { staticClass: \"custom-control custom-checkbox\" },\n                            [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: module.menu.visibility,\n                                    expression: \"module.menu.visibility\",\n                                  },\n                                ],\n                                staticClass: \"custom-control-input\",\n                                attrs: {\n                                  type: \"checkbox\",\n                                  value: \"1\",\n                                  name: _vm.getMenuName(module.menu.name),\n                                },\n                                domProps: {\n                                  checked: Array.isArray(module.menu.visibility)\n                                    ? _vm._i(module.menu.visibility, \"1\") > -1\n                                    : module.menu.visibility,\n                                },\n                                on: {\n                                  change: [\n                                    function ($event) {\n                                      var $$a = module.menu.visibility,\n                                        $$el = $event.target,\n                                        $$c = $$el.checked ? true : false\n                                      if (Array.isArray($$a)) {\n                                        var $$v = \"1\",\n                                          $$i = _vm._i($$a, $$v)\n                                        if ($$el.checked) {\n                                          $$i < 0 &&\n                                            _vm.$set(\n                                              module.menu,\n                                              \"visibility\",\n                                              $$a.concat([$$v])\n                                            )\n                                        } else {\n                                          $$i > -1 &&\n                                            _vm.$set(\n                                              module.menu,\n                                              \"visibility\",\n                                              $$a\n                                                .slice(0, $$i)\n                                                .concat($$a.slice($$i + 1))\n                                            )\n                                        }\n                                      } else {\n                                        _vm.$set(module.menu, \"visibility\", $$c)\n                                      }\n                                    },\n                                    function ($event) {\n                                      return _vm.updateSubMenu(module.menu)\n                                    },\n                                  ],\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"span\",\n                                { staticClass: \"custom-control-label\" },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(module.menu.translation))\n                                  ),\n                                ]\n                              ),\n                            ]\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _vm._l(module.menu.submenu, function (submenu) {\n                          return _c(\n                            \"div\",\n                            {\n                              directives: [\n                                {\n                                  name: \"show\",\n                                  rawName: \"v-show\",\n                                  value: module.menu.visibility,\n                                  expression: \"module.menu.visibility\",\n                                },\n                              ],\n                              staticClass: \"form-group\",\n                              staticStyle: { \"padding-left\": \"40px\" },\n                            },\n                            [\n                              _c(\n                                \"label\",\n                                {\n                                  staticClass: \"custom-control custom-checkbox\",\n                                },\n                                [\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value: submenu.visibility,\n                                        expression: \"submenu.visibility\",\n                                      },\n                                    ],\n                                    staticClass: \"custom-control-input\",\n                                    attrs: {\n                                      type: \"checkbox\",\n                                      value: \"1\",\n                                      name: _vm.getMenuName(submenu.name),\n                                    },\n                                    domProps: {\n                                      checked: Array.isArray(submenu.visibility)\n                                        ? _vm._i(submenu.visibility, \"1\") > -1\n                                        : submenu.visibility,\n                                    },\n                                    on: {\n                                      change: function ($event) {\n                                        var $$a = submenu.visibility,\n                                          $$el = $event.target,\n                                          $$c = $$el.checked ? true : false\n                                        if (Array.isArray($$a)) {\n                                          var $$v = \"1\",\n                                            $$i = _vm._i($$a, $$v)\n                                          if ($$el.checked) {\n                                            $$i < 0 &&\n                                              _vm.$set(\n                                                submenu,\n                                                \"visibility\",\n                                                $$a.concat([$$v])\n                                              )\n                                          } else {\n                                            $$i > -1 &&\n                                              _vm.$set(\n                                                submenu,\n                                                \"visibility\",\n                                                $$a\n                                                  .slice(0, $$i)\n                                                  .concat($$a.slice($$i + 1))\n                                              )\n                                          }\n                                        } else {\n                                          _vm.$set(submenu, \"visibility\", $$c)\n                                        }\n                                      },\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"span\",\n                                    { staticClass: \"custom-control-label\" },\n                                    [\n                                      _vm._v(\n                                        _vm._s(_vm.trans(submenu.translation))\n                                      ),\n                                    ]\n                                  ),\n                                ]\n                              ),\n                            ]\n                          )\n                        }),\n                      ]\n                    }),\n                  ],\n                  2\n                ),\n              ]),\n              _vm._v(\" \"),\n              !_vm.setupWizard\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass:\n                        \"btn btn-info waves-effect waves-light pull-right m-t-10\",\n                      attrs: { type: \"submit\" },\n                    },\n                    [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                  )\n                : _vm._e(),\n            ]\n          ),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"card\" }, [\n    _c(\"div\", { staticClass: \"card-body p-4\" }, [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function ($event) {\n              $event.preventDefault()\n              return _vm.submit.apply(null, arguments)\n            },\n            keydown: function ($event) {\n              return _vm.configForm.errors.clear($event.target.name)\n            },\n          },\n        },\n        [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"configuration.default_color_theme\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.color_theme,\n                              expression: \"configForm.color_theme\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"color_theme\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"color_theme\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"color_theme\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.color_themes,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"color_theme\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"configuration.default_direction\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.direction,\n                              expression: \"configForm.direction\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"direction\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"direction\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\"direction\")\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.directions,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"direction\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"configuration.default_sidebar\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.sidebar,\n                              expression: \"configForm.sidebar\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"sidebar\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"sidebar\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\"sidebar\")\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.sidebar,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"sidebar\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _vm.getConfig(\"multilingual\")\n                  ? _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"configuration.default_locale\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.configForm.locale,\n                                  expression: \"configForm.locale\",\n                                },\n                              ],\n                              staticClass: \"custom-select col-12\",\n                              attrs: { name: \"locale\" },\n                              on: {\n                                change: [\n                                  function ($event) {\n                                    var $$selectedVal = Array.prototype.filter\n                                      .call(\n                                        $event.target.options,\n                                        function (o) {\n                                          return o.selected\n                                        }\n                                      )\n                                      .map(function (o) {\n                                        var val =\n                                          \"_value\" in o ? o._value : o.value\n                                        return val\n                                      })\n                                    _vm.$set(\n                                      _vm.configForm,\n                                      \"locale\",\n                                      $event.target.multiple\n                                        ? $$selectedVal\n                                        : $$selectedVal[0]\n                                    )\n                                  },\n                                  function ($event) {\n                                    return _vm.configForm.errors.clear(\"locale\")\n                                  },\n                                ],\n                              },\n                            },\n                            _vm._l(\n                              _vm.systemConfigVariables.locales,\n                              function (option) {\n                                return _c(\n                                  \"option\",\n                                  { domProps: { value: option.value } },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                    \" +\n                                        _vm._s(option.text) +\n                                        \"\\n                                  \"\n                                    ),\n                                  ]\n                                )\n                              }\n                            ),\n                            0\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.configForm,\n                              \"prop-name\": \"locale\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.date_format\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.date_format,\n                              expression: \"configForm.date_format\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"date_format\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"date_format\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"date_format\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.date_formats,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"date_format\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.time_format\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.time_format,\n                              expression: \"configForm.time_format\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"time_format\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"time_format\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"time_format\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.time_formats,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"time_format\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"configuration.notification_position\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.notification_position,\n                              expression: \"configForm.notification_position\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"notification_position\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"notification_position\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"notification_position\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.notification_positions,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"notification_position\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.timezone\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.timezone,\n                              expression: \"configForm.timezone\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"timezone\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"timezone\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\"timezone\")\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.timezones,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"timezone\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"calendar.first_day_of_week\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.first_day_of_week,\n                              expression: \"configForm.first_day_of_week\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"first_day_of_week\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"first_day_of_week\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"first_day_of_week\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.days,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"first_day_of_week\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.currency\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.currency,\n                              expression: \"configForm.currency\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"currency\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"currency\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\"currency\")\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(\n                          _vm.systemConfigVariables.currencies,\n                          function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n                                  \"\n                                ),\n                              ]\n                            )\n                          }\n                        ),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"currency\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"configuration.page_length\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.configForm.page_length,\n                              expression: \"configForm.page_length\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: { name: \"page_length\" },\n                          on: {\n                            change: [\n                              function ($event) {\n                                var $$selectedVal = Array.prototype.filter\n                                  .call($event.target.options, function (o) {\n                                    return o.selected\n                                  })\n                                  .map(function (o) {\n                                    var val = \"_value\" in o ? o._value : o.value\n                                    return val\n                                  })\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"page_length\",\n                                  $event.target.multiple\n                                    ? $$selectedVal\n                                    : $$selectedVal[0]\n                                )\n                              },\n                              function ($event) {\n                                return _vm.configForm.errors.clear(\n                                  \"page_length\"\n                                )\n                              },\n                            ],\n                          },\n                        },\n                        _vm._l(_vm.getConfig(\"pagination\"), function (option) {\n                          return _c(\"option\", { domProps: { value: option } }, [\n                            _vm._v(\n                              \"\\n                                    \" +\n                                _vm._s(\n                                  option + \" \" + _vm.trans(\"general.per_page\")\n                                ) +\n                                \"\\n                                  \"\n                            ),\n                          ])\n                        }),\n                        0\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"page_length\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _vm.getConfig(\"show_footer_credit\")\n                  ? _c(\"div\", { staticClass: \"col-12 col-sm-8\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"configuration.footer_credit\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.configForm.footer_credit,\n                                expression: \"configForm.footer_credit\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: \"footer_credit\",\n                              placeholder: _vm.trans(\n                                \"configuration.footer_credit\"\n                              ),\n                            },\n                            domProps: { value: _vm.configForm.footer_credit },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"footer_credit\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.configForm,\n                              \"prop-name\": \"footer_credit\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"configuration.biometric_auth_token\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.configForm.biometric_auth_token,\n                            expression: \"configForm.biometric_auth_token\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"biometric_auth_token\",\n                          placeholder: _vm.trans(\n                            \"configuration.biometric_auth_token\"\n                          ),\n                        },\n                        domProps: {\n                          value: _vm.configForm.biometric_auth_token,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.configForm,\n                              \"biometric_auth_token\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"biometric_auth_token\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"configuration.pusher_auth_token\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.configForm.pusher_auth_token,\n                            expression: \"configForm.pusher_auth_token\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"pusher_auth_token\",\n                          placeholder: _vm.trans(\n                            \"configuration.pusher_auth_token\"\n                          ),\n                        },\n                        domProps: { value: _vm.configForm.pusher_auth_token },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.configForm,\n                              \"pusher_auth_token\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"pusher_auth_token\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"configuration.https\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.https,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"https\", $$v)\n                            },\n                            expression: \"configForm.https\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"configuration.error_display\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.error_display,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"error_display\", $$v)\n                            },\n                            expression: \"configForm.error_display\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"configuration.multilingual\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.multilingual,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"multilingual\", $$v)\n                            },\n                            expression: \"configForm.multilingual\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"frontend.enable_frontend_website\"))\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.frontend_website,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"frontend_website\", $$v)\n                            },\n                            expression: \"configForm.frontend_website\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"student.enable_online_registration\"))\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.online_registration,\n                            callback: function ($$v) {\n                              _vm.$set(\n                                _vm.configForm,\n                                \"online_registration\",\n                                $$v\n                              )\n                            },\n                            expression: \"configForm.online_registration\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"student.online_registration_header\")\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"autosize-textarea\", {\n                        staticClass: \"form-control\",\n                        attrs: {\n                          row: \"1\",\n                          placeholder: _vm.trans(\n                            \"configuration.online_registration_header\"\n                          ),\n                          rows: \"2\",\n                          name: \"online_registration_header\",\n                        },\n                        model: {\n                          value: _vm.configForm.online_registration_header,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.configForm,\n                              \"online_registration_header\",\n                              $$v\n                            )\n                          },\n                          expression: \"configForm.online_registration_header\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"online_registration_header\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\n                              \"student.online_registration_success_message\"\n                            )\n                          )\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"autosize-textarea\", {\n                        staticClass: \"form-control\",\n                        attrs: {\n                          row: \"1\",\n                          placeholder: _vm.trans(\n                            \"configuration.online_registration_success_message\"\n                          ),\n                          rows: \"2\",\n                          name: \"online_registration_success_message\",\n                        },\n                        model: {\n                          value:\n                            _vm.configForm.online_registration_success_message,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.configForm,\n                              \"online_registration_success_message\",\n                              $$v\n                            )\n                          },\n                          expression:\n                            \"configForm.online_registration_success_message\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.configForm,\n                          \"prop-name\": \"online_registration_success_message\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"utility.ip_filter\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.ip_filter,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"ip_filter\", $$v)\n                            },\n                            expression: \"configForm.ip_filter\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"utility.todo\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.todo,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"todo\", $$v)\n                            },\n                            expression: \"configForm.todo\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"utility.backup\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.backup,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"backup\", $$v)\n                            },\n                            expression: \"configForm.backup\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                  _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(\n                        _vm._s(_vm.trans(\"configuration.maintenance_mode\"))\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      [\n                        _c(\"switches\", {\n                          attrs: { theme: \"bootstrap\", color: \"success\" },\n                          model: {\n                            value: _vm.configForm.maintenance_mode,\n                            callback: function ($$v) {\n                              _vm.$set(_vm.configForm, \"maintenance_mode\", $$v)\n                            },\n                            expression: \"configForm.maintenance_mode\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                  _vm.configForm.maintenance_mode\n                    ? _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(\n                                _vm.trans(\n                                  \"configuration.maintenance_mode_message\"\n                                )\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"autosize-textarea\", {\n                            staticClass: \"form-control\",\n                            attrs: {\n                              row: \"1\",\n                              placeholder: _vm.trans(\n                                \"configuration.maintenance_mode_message\"\n                              ),\n                              rows: \"1\",\n                              name: \"maintenance_mode_message\",\n                            },\n                            model: {\n                              value: _vm.configForm.maintenance_mode_message,\n                              callback: function ($$v) {\n                                _vm.$set(\n                                  _vm.configForm,\n                                  \"maintenance_mode_message\",\n                                  $$v\n                                )\n                              },\n                              expression: \"configForm.maintenance_mode_message\",\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.configForm,\n                              \"prop-name\": \"maintenance_mode_message\",\n                            },\n                          }),\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                ]),\n              ]),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          !_vm.setupWizard\n            ? _c(\n                \"button\",\n                {\n                  staticClass:\n                    \"btn btn-info waves-effect waves-light pull-right m-t-10\",\n                  attrs: { type: \"submit\" },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n              )\n            : _vm._e(),\n        ]\n      ),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"container-fluid\" }, [\n    _c(\"div\", { staticClass: \"card\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"card-body\" },\n        [\n          _c(\n            \"button\",\n            {\n              directives: [\n                {\n                  name: \"tooltip\",\n                  rawName: \"v-tooltip\",\n                  value: _vm.trans(\"configuration.hide_setup_wizard\"),\n                  expression: \"trans('configuration.hide_setup_wizard')\",\n                },\n              ],\n              staticClass: \"btn btn-danger pull-right m-2\",\n              attrs: { type: \"button\" },\n              on: { click: _vm.hideSetupWizard },\n            },\n            [_c(\"i\", { staticClass: \"fa fa-times\" })]\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"clearfix\" }),\n          _vm._v(\" \"),\n          _c(\n            \"form-wizard\",\n            {\n              attrs: {\n                color: \"#55CE63\",\n                title: _vm.trans(\"configuration.setup_title\"),\n                subtitle: _vm.trans(\"configuration.setup_subtitle\"),\n                nextButtonText: _vm.trans(\n                  \"configuration.setup_next_button_content\"\n                ),\n                backButtonText: _vm.trans(\n                  \"configuration.setup_previous_button_content\"\n                ),\n                finishButtonText: _vm.trans(\n                  \"configuration.setup_finish_button_content\"\n                ),\n              },\n              on: { \"on-complete\": _vm.finish },\n            },\n            [\n              _c(\n                \"tab-content\",\n                {\n                  attrs: {\n                    title: _vm.trans(\"configuration.basic_configuration\"),\n                    \"before-change\": _vm.storeBasicConfiguration,\n                  },\n                },\n                [\n                  _c(\"basic-configuration-form\", {\n                    ref: \"basic\",\n                    staticClass: \"m-b-20\",\n                    attrs: {\n                      \"setup-wizard\": true,\n                      configurations: _vm.configurations,\n                    },\n                  }),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"tab-content\",\n                {\n                  attrs: {\n                    title: _vm.trans(\"configuration.system_configuration\"),\n                    \"before-change\": _vm.storeSystemConfiguration,\n                  },\n                },\n                [\n                  _c(\"system-configuration-form\", {\n                    ref: \"system\",\n                    staticClass: \"m-b-20\",\n                    attrs: {\n                      \"setup-wizard\": true,\n                      configurations: _vm.configurations,\n                    },\n                  }),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"tab-content\",\n                {\n                  attrs: {\n                    title: _vm.trans(\"configuration.mail_configuration\"),\n                    \"before-change\": _vm.storeMailConfiguration,\n                  },\n                },\n                [\n                  _c(\"mail-configuration-form\", {\n                    ref: \"mail\",\n                    staticClass: \"m-b-20\",\n                    attrs: {\n                      \"setup-wizard\": true,\n                      configurations: _vm.configurations,\n                    },\n                  }),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"tab-content\",\n                {\n                  attrs: {\n                    title: _vm.trans(\"configuration.menu_configuration\"),\n                    \"before-change\": _vm.storeMenuConfiguration,\n                  },\n                },\n                [\n                  _c(\"menu-configuration-form\", {\n                    ref: \"menu\",\n                    staticClass: \"m-b-20\",\n                    attrs: {\n                      \"setup-wizard\": true,\n                      configurations: _vm.configurations,\n                    },\n                  }),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"tab-content\",\n                { attrs: { title: _vm.trans(\"academic.academic_session\") } },\n                [\n                  _c(\"academic-session-form\", {\n                    ref: \"session\",\n                    staticClass: \"m-b-20\",\n                    attrs: { \"setup-wizard\": true },\n                  }),\n                ],\n                1\n              ),\n            ],\n            1\n          ),\n        ],\n        1\n      ),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=0fd33ab6&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('0fd33ab6')) {\n      api.createRecord('0fd33ab6', component.options)\n    } else {\n      api.reload('0fd33ab6', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=0fd33ab6&\", function () {\n      api.rerender('0fd33ab6', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/academic/session/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=20cf2fbd&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('20cf2fbd')) {\n      api.createRecord('20cf2fbd', component.options)\n    } else {\n      api.reload('20cf2fbd', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=20cf2fbd&\", function () {\n      api.rerender('20cf2fbd', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/basic/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=a9825dd8&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('a9825dd8')) {\n      api.createRecord('a9825dd8', component.options)\n    } else {\n      api.reload('a9825dd8', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=a9825dd8&\", function () {\n      api.rerender('a9825dd8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/mail/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=4911de6c&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4911de6c')) {\n      api.createRecord('4911de6c', component.options)\n    } else {\n      api.reload('4911de6c', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=4911de6c&\", function () {\n      api.rerender('4911de6c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/menu/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=9d9258c8&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9d9258c8')) {\n      api.createRecord('9d9258c8', component.options)\n    } else {\n      api.reload('9d9258c8', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=9d9258c8&\", function () {\n      api.rerender('9d9258c8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/system/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=90a8c2de&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('90a8c2de')) {\n      api.createRecord('90a8c2de', component.options)\n    } else {\n      api.reload('90a8c2de', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=90a8c2de&\", function () {\n      api.rerender('90a8c2de', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/setup/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=0fd33ab6&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=20cf2fbd&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=a9825dd8&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=4911de6c&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=9d9258c8&\"","export * from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=90a8c2de&\""],"names":[],"sourceRoot":""}