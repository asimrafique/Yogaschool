{"version":3,"file":"js/chunks/js/frontend/page/edit.js?id=e9d9920e79b1c372","mappings":";;;;;;;;;;;;;;AAyBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;;;;;;;;;;;;;;ACtNA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAMA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAMA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAMA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAQA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAIA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAOA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAcA;AACA;AACA;;;;;;;;;;;;;;;;;;ACphBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/frontend/page/edit.vue","webpack://InstiKit/resources/js/views/frontend/page/form.vue","webpack://InstiKit/./resources/js/views/frontend/page/edit.vue","webpack://InstiKit/./resources/js/views/frontend/page/form.vue","webpack://InstiKit/./resources/js/views/frontend/page/edit.vue?9f70","webpack://InstiKit/./resources/js/views/frontend/page/form.vue?f870","webpack://InstiKit/./resources/js/views/frontend/page/edit.vue?21a5","webpack://InstiKit/./resources/js/views/frontend/page/form.vue?e73b","webpack://InstiKit/./resources/js/views/frontend/page/edit.vue?f642"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('frontend.edit_page')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/frontend/page')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('frontend.page')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card card-form\">\r\n                <div class=\"card-body p-t-20\">\r\n                    <page-form :uuid=\"uuid\"></page-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import pageForm from './form';\r\n\r\n    export default {\r\n        components : { pageForm },\r\n        data() {\r\n            return {\r\n                uuid:this.$route.params.uuid\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.frontendConfigurationAccessible()){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","<template>\r\n    <div>\r\n        <form @submit.prevent=\"proceed\" @keydown=\"pageForm.errors.clear($event.target.name)\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('frontend.page_title')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"pageForm.title\" name=\"title\" :placeholder=\"trans('frontend.page_title')\">\r\n                        <show-error :form-name=\"pageForm\" prop-name=\"title\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12 col-sm-3\">\r\n                            <label class=\"custom-control custom-checkbox\">\r\n                                <input type=\"checkbox\" class=\"custom-control-input\" v-model=\"pageForm.is_draft\" value=\"1\">\r\n                                <span class=\"custom-control-label\">{{trans('frontend.page_is_draft')}}</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"col-12 col-sm-3\">\r\n                            <label class=\"custom-control custom-checkbox\">\r\n                                <input type=\"checkbox\" class=\"custom-control-input\" v-model=\"pageForm.has_slider\" value=\"1\">\r\n                                <span class=\"custom-control-label\">{{trans('frontend.page_has_slider')}}</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"col-12 col-sm-3\">\r\n                            <label class=\"custom-control custom-checkbox\">\r\n                                <input type=\"checkbox\" class=\"custom-control-input\" v-model=\"pageForm.show_blocks\" value=\"1\">\r\n                                <span class=\"custom-control-label\">{{trans('frontend.show_blocks')}}</span>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"col-12 col-sm-3\">\r\n                            <label class=\"custom-control custom-checkbox\">\r\n                                <input type=\"checkbox\" class=\"custom-control-input\" v-model=\"pageForm.show_latest_articles\" value=\"1\">\r\n                                <span class=\"custom-control-label\">{{trans('frontend.show_latest_articles')}}</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <file-upload-input :button-text=\"trans('general.attachment')\" :token=\"pageForm.upload_token\" module=\"frontend-page\" :clear-file=\"clearAttachment\" :module-id=\"module_id\"></file-upload-input>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <html-editor name=\"body\" :model.sync=\"pageForm.body\" height=\"300\" :isUpdate=\"uuid ? true : false\" @clearErrors=\"pageForm.errors.clear('body')\"></html-editor>\r\n                        <show-error :form-name=\"pageForm\" prop-name=\"body\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" v-if=\"pageForm.has_slider\" :key=\"index\" v-for=\"(slider,index) in pageForm.sliders\">\r\n                <div class=\"col-12 col-sm-1\">\r\n                    <button type=\"button\" class=\"btn btn-danger btn-sm\" :key=\"index\" v-confirm=\"{ok: confirmDelete(index)}\" v-tooltip=\"trans('general.delete')\"><i class=\"fas fa-trash\"></i></button>\r\n                </div>\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"slider.title\" :name=\"getSliderTitle(index)\" :placeholder=\"trans('frontend.slider_image_title')\">\r\n                        <show-error :form-name=\"pageForm\" :prop-name=\"getSliderTitle(index)\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <autosize-textarea v-model=\"slider.description\" rows=\"2\" name=\"getSliderDescription(index)\" :placeholder=\"trans('frontend.slider_image_description')\"></autosize-textarea>\r\n                        <show-error :form-name=\"pageForm\" :prop-name=\"getSliderDescription(index)\"></show-error>\r\n                    </div>  \r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <upload-image :id=\"getSliderId(index)\" :button-text=\"trans('frontend.choose_slider_image')\" upload-path=\"/frontend/page/slider/image\" remove-path=\"/frontend/page/slider/image\" :image-source=\"slider.image\" @uploaded=\"slider.image = $event\" @removed=\"slider.image = ''\"></upload-image>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" v-if=\"pageForm.has_slider\" class=\"btn btn-info btn-sm mx-4 m-b-20\" @click=\"addNewSliderImage\">{{trans('frontend.add_new_slider_image')}}</button>\r\n\r\n            <div class=\"card-footer text-right\">\r\n                <router-link to=\"/frontend/page\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"uuid\">{{trans('general.cancel')}}</router-link>\r\n                <button v-if=\"!uuid\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n                    <span v-if=\"uuid\">{{trans('general.update')}}</span>\r\n                    <span v-else>{{trans('general.save')}}</span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n\r\n    export default {\r\n        components: {},\r\n        data() {\r\n            return {\r\n                pageForm: new Form({\r\n                    title: '',\r\n                    is_draft: 0,\r\n                    show_blocks: 0,\r\n                    show_latest_articles: 0,\r\n                    body: '',\r\n                    has_slider: 0,\r\n                    sliders: [],\r\n                    upload_token: ''\r\n                }),\r\n                module_id: '',\r\n                clearAttachment: true\r\n            };\r\n        },\r\n        props: ['uuid'],\r\n        mounted() {\r\n            if(!helper.frontendConfigurationAccessible()){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            if(this.uuid)\r\n                this.get();\r\n            else\r\n                this.pageForm.upload_token = this.$uuid.v4();\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            proceed(){\r\n                if(this.uuid)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.pageForm.post('/api/frontend/page')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.clearAttachment = !this.clearAttachment;\r\n                        this.pageForm.upload_token = this.$uuid.v4();\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/frontend/page/'+this.uuid)\r\n                    .then(response => {\r\n                        this.pageForm.title = response.page.title;\r\n                        this.pageForm.body = response.page.body;\r\n                        this.pageForm.is_draft = response.page.is_draft;\r\n                        this.pageForm.show_blocks = response.page.options.show_blocks;\r\n                        this.pageForm.show_latest_articles = response.page.options.show_latest_articles;\r\n                        this.pageForm.has_slider = response.page.options.has_slider;\r\n\r\n                        if (this.pageForm.has_slider) {\r\n                            this.pageForm.sliders = [];\r\n                            response.page.options.sliders.forEach(slider => {\r\n                                this.pageForm.sliders.push({\r\n                                    image: slider.image,\r\n                                    title: slider.title,\r\n                                    description: slider.description\r\n                                })\r\n                            })\r\n                        }\r\n\r\n                        this.pageForm.upload_token = response.page.upload_token;\r\n                        this.module_id = response.page.id;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/frontend/page');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.pageForm.patch('/api/frontend/page/'+this.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/frontend/page');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getSliderDescription(index){\r\n                return 'slider_description_'+index;\r\n            },\r\n            getSliderTitle(index){\r\n                return 'slider_title_'+index;\r\n            },\r\n            getSliderId(index){\r\n                return 'slider_id_'+index;\r\n            },\r\n            addNewSliderImage(){\r\n                this.pageForm.sliders.push({\r\n                    image: '',\r\n                    title: '',\r\n                    description: ''\r\n                });\r\n            },\r\n            confirmDelete(index){\r\n                return dialog => this.deleteSliderImage(index);\r\n            },\r\n            deleteSliderImage(index){\r\n                this.pageForm.sliders.splice(index, 1);\r\n            },\r\n            updateImage(){\r\n\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"frontend.edit_page\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/frontend/page\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"frontend.page\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"card-body p-t-20\" },\n          [_c(\"page-form\", { attrs: { uuid: _vm.uuid } })],\n          1\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.pageForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"frontend.page_title\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.pageForm.title,\n                      expression: \"pageForm.title\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"title\",\n                    placeholder: _vm.trans(\"frontend.page_title\"),\n                  },\n                  domProps: { value: _vm.pageForm.title },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(_vm.pageForm, \"title\", $event.target.value)\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: { \"form-name\": _vm.pageForm, \"prop-name\": \"title\" },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\"label\", { staticClass: \"custom-control custom-checkbox\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.pageForm.is_draft,\n                        expression: \"pageForm.is_draft\",\n                      },\n                    ],\n                    staticClass: \"custom-control-input\",\n                    attrs: { type: \"checkbox\", value: \"1\" },\n                    domProps: {\n                      checked: Array.isArray(_vm.pageForm.is_draft)\n                        ? _vm._i(_vm.pageForm.is_draft, \"1\") > -1\n                        : _vm.pageForm.is_draft,\n                    },\n                    on: {\n                      change: function ($event) {\n                        var $$a = _vm.pageForm.is_draft,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = \"1\",\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 &&\n                              _vm.$set(\n                                _vm.pageForm,\n                                \"is_draft\",\n                                $$a.concat([$$v])\n                              )\n                          } else {\n                            $$i > -1 &&\n                              _vm.$set(\n                                _vm.pageForm,\n                                \"is_draft\",\n                                $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                              )\n                          }\n                        } else {\n                          _vm.$set(_vm.pageForm, \"is_draft\", $$c)\n                        }\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"span\", { staticClass: \"custom-control-label\" }, [\n                    _vm._v(_vm._s(_vm.trans(\"frontend.page_is_draft\"))),\n                  ]),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\"label\", { staticClass: \"custom-control custom-checkbox\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.pageForm.has_slider,\n                        expression: \"pageForm.has_slider\",\n                      },\n                    ],\n                    staticClass: \"custom-control-input\",\n                    attrs: { type: \"checkbox\", value: \"1\" },\n                    domProps: {\n                      checked: Array.isArray(_vm.pageForm.has_slider)\n                        ? _vm._i(_vm.pageForm.has_slider, \"1\") > -1\n                        : _vm.pageForm.has_slider,\n                    },\n                    on: {\n                      change: function ($event) {\n                        var $$a = _vm.pageForm.has_slider,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = \"1\",\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 &&\n                              _vm.$set(\n                                _vm.pageForm,\n                                \"has_slider\",\n                                $$a.concat([$$v])\n                              )\n                          } else {\n                            $$i > -1 &&\n                              _vm.$set(\n                                _vm.pageForm,\n                                \"has_slider\",\n                                $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                              )\n                          }\n                        } else {\n                          _vm.$set(_vm.pageForm, \"has_slider\", $$c)\n                        }\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"span\", { staticClass: \"custom-control-label\" }, [\n                    _vm._v(_vm._s(_vm.trans(\"frontend.page_has_slider\"))),\n                  ]),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\"label\", { staticClass: \"custom-control custom-checkbox\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.pageForm.show_blocks,\n                        expression: \"pageForm.show_blocks\",\n                      },\n                    ],\n                    staticClass: \"custom-control-input\",\n                    attrs: { type: \"checkbox\", value: \"1\" },\n                    domProps: {\n                      checked: Array.isArray(_vm.pageForm.show_blocks)\n                        ? _vm._i(_vm.pageForm.show_blocks, \"1\") > -1\n                        : _vm.pageForm.show_blocks,\n                    },\n                    on: {\n                      change: function ($event) {\n                        var $$a = _vm.pageForm.show_blocks,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = \"1\",\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 &&\n                              _vm.$set(\n                                _vm.pageForm,\n                                \"show_blocks\",\n                                $$a.concat([$$v])\n                              )\n                          } else {\n                            $$i > -1 &&\n                              _vm.$set(\n                                _vm.pageForm,\n                                \"show_blocks\",\n                                $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                              )\n                          }\n                        } else {\n                          _vm.$set(_vm.pageForm, \"show_blocks\", $$c)\n                        }\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"span\", { staticClass: \"custom-control-label\" }, [\n                    _vm._v(_vm._s(_vm.trans(\"frontend.show_blocks\"))),\n                  ]),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\"label\", { staticClass: \"custom-control custom-checkbox\" }, [\n                  _c(\"input\", {\n                    directives: [\n                      {\n                        name: \"model\",\n                        rawName: \"v-model\",\n                        value: _vm.pageForm.show_latest_articles,\n                        expression: \"pageForm.show_latest_articles\",\n                      },\n                    ],\n                    staticClass: \"custom-control-input\",\n                    attrs: { type: \"checkbox\", value: \"1\" },\n                    domProps: {\n                      checked: Array.isArray(_vm.pageForm.show_latest_articles)\n                        ? _vm._i(_vm.pageForm.show_latest_articles, \"1\") > -1\n                        : _vm.pageForm.show_latest_articles,\n                    },\n                    on: {\n                      change: function ($event) {\n                        var $$a = _vm.pageForm.show_latest_articles,\n                          $$el = $event.target,\n                          $$c = $$el.checked ? true : false\n                        if (Array.isArray($$a)) {\n                          var $$v = \"1\",\n                            $$i = _vm._i($$a, $$v)\n                          if ($$el.checked) {\n                            $$i < 0 &&\n                              _vm.$set(\n                                _vm.pageForm,\n                                \"show_latest_articles\",\n                                $$a.concat([$$v])\n                              )\n                          } else {\n                            $$i > -1 &&\n                              _vm.$set(\n                                _vm.pageForm,\n                                \"show_latest_articles\",\n                                $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                              )\n                          }\n                        } else {\n                          _vm.$set(_vm.pageForm, \"show_latest_articles\", $$c)\n                        }\n                      },\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"span\", { staticClass: \"custom-control-label\" }, [\n                    _vm._v(_vm._s(_vm.trans(\"frontend.show_latest_articles\"))),\n                  ]),\n                ]),\n              ]),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"file-upload-input\", {\n                  attrs: {\n                    \"button-text\": _vm.trans(\"general.attachment\"),\n                    token: _vm.pageForm.upload_token,\n                    module: \"frontend-page\",\n                    \"clear-file\": _vm.clearAttachment,\n                    \"module-id\": _vm.module_id,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"html-editor\", {\n                  attrs: {\n                    name: \"body\",\n                    model: _vm.pageForm.body,\n                    height: \"300\",\n                    isUpdate: _vm.uuid ? true : false,\n                  },\n                  on: {\n                    \"update:model\": function ($event) {\n                      return _vm.$set(_vm.pageForm, \"body\", $event)\n                    },\n                    clearErrors: function ($event) {\n                      return _vm.pageForm.errors.clear(\"body\")\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: { \"form-name\": _vm.pageForm, \"prop-name\": \"body\" },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _vm._l(_vm.pageForm.sliders, function (slider, index) {\n          return _vm.pageForm.has_slider\n            ? _c(\"div\", { key: index, staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-1\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"confirm\",\n                          rawName: \"v-confirm\",\n                          value: { ok: _vm.confirmDelete(index) },\n                          expression: \"{ok: confirmDelete(index)}\",\n                        },\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.delete\"),\n                          expression: \"trans('general.delete')\",\n                        },\n                      ],\n                      key: index,\n                      staticClass: \"btn btn-danger btn-sm\",\n                      attrs: { type: \"button\" },\n                    },\n                    [_c(\"i\", { staticClass: \"fas fa-trash\" })]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: slider.title,\n                            expression: \"slider.title\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: _vm.getSliderTitle(index),\n                          placeholder: _vm.trans(\"frontend.slider_image_title\"),\n                        },\n                        domProps: { value: slider.title },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(slider, \"title\", $event.target.value)\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.pageForm,\n                          \"prop-name\": _vm.getSliderTitle(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"autosize-textarea\", {\n                        attrs: {\n                          rows: \"2\",\n                          name: \"getSliderDescription(index)\",\n                          placeholder: _vm.trans(\n                            \"frontend.slider_image_description\"\n                          ),\n                        },\n                        model: {\n                          value: slider.description,\n                          callback: function ($$v) {\n                            _vm.$set(slider, \"description\", $$v)\n                          },\n                          expression: \"slider.description\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.pageForm,\n                          \"prop-name\": _vm.getSliderDescription(index),\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"div\",\n                  { staticClass: \"col-12 col-sm-3\" },\n                  [\n                    _c(\"upload-image\", {\n                      attrs: {\n                        id: _vm.getSliderId(index),\n                        \"button-text\": _vm.trans(\n                          \"frontend.choose_slider_image\"\n                        ),\n                        \"upload-path\": \"/frontend/page/slider/image\",\n                        \"remove-path\": \"/frontend/page/slider/image\",\n                        \"image-source\": slider.image,\n                      },\n                      on: {\n                        uploaded: function ($event) {\n                          slider.image = $event\n                        },\n                        removed: function ($event) {\n                          slider.image = \"\"\n                        },\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ])\n            : _vm._e()\n        }),\n        _vm._v(\" \"),\n        _vm.pageForm.has_slider\n          ? _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm mx-4 m-b-20\",\n                attrs: { type: \"button\" },\n                on: { click: _vm.addNewSliderImage },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"frontend.add_new_slider_image\")))]\n            )\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"card-footer text-right\" },\n          [\n            _c(\n              \"router-link\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.uuid,\n                    expression: \"uuid\",\n                  },\n                ],\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { to: \"/frontend/page\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            !_vm.uuid\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-danger waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: {\n                      click: function ($event) {\n                        return _vm.$emit(\"cancel\")\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [\n                _vm.uuid\n                  ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                  : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n              ]\n            ),\n          ],\n          1\n        ),\n      ],\n      2\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=6967ae8c&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6967ae8c')) {\n      api.createRecord('6967ae8c', component.options)\n    } else {\n      api.reload('6967ae8c', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=6967ae8c&\", function () {\n      api.rerender('6967ae8c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/frontend/page/edit.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=26266046&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('26266046')) {\n      api.createRecord('26266046', component.options)\n    } else {\n      api.reload('26266046', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=26266046&\", function () {\n      api.rerender('26266046', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/frontend/page/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=6967ae8c&\""],"names":[],"sourceRoot":""}