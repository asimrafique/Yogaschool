{"version":3,"file":"js/chunks/js/student/attendance/index.js?id=7dea80b35eda50aa","mappings":";;;;;;;;;;;;;AA8JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3aA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAWA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAWA;AAEA;AAAA;AAAA;AAAA;AASA;AAOA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAMA;AAAA;AACA;AAAA;AAGA;AAAA;AAKA;AAEA;AAaA;AAEA;AAAA;AAGA;AAWA;AAWA;AACA;AACA;AACA;AAUA;AAGA;AAQA;AAKA;AAEA;AAUA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAGA;AAEA;AAOA;AAMA;AACA;AAIA;AAIA;AACA;AACA;AAKA;AAEA;AAMA;AAEA;AAMA;AAEA;AAQA;AAEA;AAOA;AAEA;AAKA;AAEA;AAMA;AAEA;AAMA;AAEA;AAMA;AAEA;AAQA;AAmBA;AACA;AACA;AACA;AAOA;AAEA;AAAA;AASA;AAOA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AASA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAUA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAaA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAaA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AAOA;AAAA;AAcA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC73BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACvCA","sources":["webpack://InstiKit/resources/js/views/student/attendance/index.vue","webpack://InstiKit/./resources/js/views/student/attendance/index.vue","webpack://InstiKit/./resources/js/views/student/attendance/index.vue?1347","webpack://InstiKit/./resources/js/views/student/attendance/index.vue?e36e","webpack://InstiKit/./resources/js/views/student/attendance/index.vue?d476","webpack://InstiKit/./resources/js/views/student/attendance/index.vue?44b0","webpack://InstiKit/./resources/js/views/student/attendance/index.vue?b2f4","webpack://InstiKit/./resources/js/views/student/attendance/index.vue?c5a3"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n            \t\t<h3 class=\"text-themecolor\">{{trans('student.attendance')}}</h3>\r\n            \t</div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"attendanceForm.date_of_attendance\" @click=\"$router.push('/student/attendance/absentee')\" v-tooltip=\"trans('student.absentee')\"><i class=\"fas fa-user-minus\"></i> <span class=\"d-none d-sm-inline\">{{trans('student.absentee')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n        \t<div class=\"card\">\r\n        \t\t<div class=\"card-body p-4\">\r\n\t\t\t\t    <form @submit.prevent=\"submit\" @keydown=\"attendanceForm.errors.clear($event.target.name)\">\r\n\t\t\t\t        <div class=\"row\">\r\n\t\t\t\t            <div class=\"col-12 col-sm-3\">\r\n\t\t\t\t                <div class=\"form-group\">\r\n\t\t\t\t                    <label for=\"\">{{trans('academic.batch')}}</label>\r\n\t\t\t\t                    <v-select :disabled=\"disable_filter\" label=\"name\" v-model=\"selected_batch\" group-values=\"batches\" group-label=\"course_group\" :group-select=\"false\" name=\"batch_id\" id=\"batch_id\" :options=\"batches\" :placeholder=\"trans('academic.select_batch')\" @select=\"onBatchSelect\" @close=\"attendanceForm.errors.clear('batch_id')\" @remove=\"onBatchRemove\">\r\n\t\t\t\t                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!batches.length\">\r\n\t\t\t\t                            {{trans('general.no_option_found')}}\r\n\t\t\t\t                        </div>\r\n\t\t\t\t                    </v-select>\r\n\t\t\t\t                    <show-error :form-name=\"attendanceForm\" prop-name=\"batch_id\"></show-error>\r\n\t\t\t\t                </div>\r\n\t\t\t\t            </div>\r\n\t                        <div class=\"col-12 col-sm-3\">\r\n\t                            <div class=\"form-group\">\r\n\t                                <label for=\"\">{{trans('student.attendance_method')}}</label>\r\n\t                                <select :disabled=\"disable_filter\" v-model=\"attendanceForm.attendance_method\" class=\"custom-select col-12\" name=\"attendance_method\">\r\n\t                                  <option value=\"\" selected>{{trans('general.select_one')}}</option>\r\n\t                                  <option v-for=\"option in attendance_methods\" v-bind:value=\"option.value\">\r\n\t                                    {{ option.text }}\r\n\t                                  </option>\r\n\t                                </select>\r\n\t                                <show-error :form-name=\"attendanceForm\" prop-name=\"attendance_method\"></show-error>\r\n\t                            </div>\r\n\t                        </div>\r\n\t                        <div class=\"col-12 col-sm-3\" v-if=\"attendanceForm.attendance_method == 'more_than_once'\">\r\n\t                            <div class=\"form-group\">\r\n\t                                <label for=\"\">{{trans('student.attendance_session')}}</label>\r\n\t                                <select :disabled=\"disable_filter\" v-model=\"attendanceForm.session\" class=\"custom-select col-12\" name=\"session\">\r\n\t                                  <option value=\"\" selected>{{trans('general.select_one')}}</option>\r\n\t                                  <option v-for=\"option in attendance_method_more_than_once_types\" v-bind:value=\"option.value\">\r\n\t                                    {{ option.text }}\r\n\t                                  </option>\r\n\t                                </select>\r\n\t                                <show-error :form-name=\"attendanceForm\" prop-name=\"session\"></show-error>\r\n\t                            </div>\r\n\t                        </div>\r\n\t\t\t                <div class=\"col-12 col-sm-3\" v-if=\"attendanceForm.attendance_method == 'subject_wise'\">\r\n\t\t\t                    <div class=\"form-group\">\r\n\t\t\t                        <label for=\"\">{{trans('academic.subject')}} </label>\r\n\t                                <select :disabled=\"disable_filter\" v-model=\"attendanceForm.subject_id\" class=\"custom-select col-12\" name=\"subject_id\">\r\n\t                                  <option value=\"\" selected>{{trans('general.select_one')}}</option>\r\n\t                                  <option v-for=\"option in subjects\" v-bind:value=\"option.id\">\r\n\t                                    {{ option.name }}\r\n\t                                  </option>\r\n\t                                </select>\r\n\t\t\t                        <show-error :form-name=\"attendanceForm\" prop-name=\"subject_id\"></show-error>\r\n\t\t\t                    </div>\r\n\t\t\t                </div>\r\n\t\t\t\t            <div class=\"col-12 col-sm-3\" v-if=\"attendanceForm.batch_id\">\r\n\t\t\t\t                <div class=\"form-group\">\r\n\t\t\t\t                    <label for=\"\">{{trans('student.date_of_attendance')}}</label>\r\n\t\t\t\t                    <datepicker :disabled=\"disable_filter\" v-model=\"attendanceForm.date_of_attendance\" :bootstrapStyling=\"true\" @selected=\"dateSelected\" :disabledDates=\"disabled\" :placeholder=\"trans('student.date_of_attendance')\"></datepicker>\r\n\t\t\t\t                    <show-error :form-name=\"attendanceForm\" prop-name=\"date_of_attendance\"></show-error>\r\n\t\t\t\t                </div>\r\n\t\t\t\t            </div>\r\n\t\t\t\t        </div>\r\n\t\t\t            <div class=\"text-right\">\r\n\t\t\t                <button type=\"button\" v-if=\"! disable_filter\" @click=\"getStudent\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.proceed')}}</button>\r\n                            <button type=\"button\" v-else @click=\"resetFilter\" class=\"btn btn-danger m-r-10\">{{trans('general.reset')}}</button>\r\n\t\t\t            </div>\r\n\r\n\t\t\t\t        <div class=\"row\" v-if=\"student_data.length\">\r\n\t\t\t\t            <div class=\"col-12\">\r\n\t\t\t\t            \t<div class=\"table-responsive font-90pc p-2\">\r\n\t\t\t\t            \t\t<table class=\"table table-sm table-bordered attendance-table\">\r\n\t\t\t\t            \t\t\t<thead>\r\n\t\t\t\t            \t\t\t\t<tr>\r\n\t\t\t\t            \t\t\t\t\t<th>#</th>\r\n\t\t\t\t            \t\t\t\t\t<th>{{trans('student.name')}}</th>\r\n\t\t\t\t            \t\t\t\t\t<th :class=\"['date-cell']\" v-for=\"header_date in header\">{{header_date}}</th>\r\n\t\t\t\t            \t\t\t\t\t<th></th>\r\n\t\t\t\t            \t\t\t\t</tr>\t\r\n\t\t\t\t            \t\t\t</thead>\r\n\t\t\t\t            \t\t\t<tbody>\r\n\t\t\t\t            \t\t\t\t<tr v-for=\"student in student_data\" v-if=\"student.sno\">\r\n\t\t\t\t            \t\t\t\t\t<td>{{student.sno}}</td>\r\n\t\t\t\t            \t\t\t\t\t<td style=\"font-size:120%;\">{{student.name}}</td>\r\n\t\t\t\t            \t\t\t\t\t<td :class=\"[(attendance_record.label == 'holiday' || attendance_record.label == 'unavailable') ? 'disabled' : '']\" v-for=\"(attendance_record,index) in student.attendances\">\r\n\t\t\t\t            \t\t\t\t\t\t<span class=\"marking-cell\">\r\n\t\t\t\t            \t\t\t\t\t\t\t<span v-if=\"attendance_record.label == 'unavailable'\"></span>\r\n\t\t\t\t            \t\t\t\t\t\t\t<span v-else-if=\"attendance_record.label == 'holiday'\" v-tooltip=\"attendance_record.description\">\r\n\t\t\t\t            \t\t\t\t\t\t\t\t<i class=\"fas fa-hospital-symbol\"></i>\r\n\t\t\t\t            \t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t            \t\t\t\t\t\t<span :class=\"['marking-cell', isEditable ? 'pointer' : '']\" v-else-if=\"currentDate(index)\" @click=\"toggleAttendance(student, index)\">\r\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class=\"fas fa-check text-success\" v-if=\"attendance_record.label == 'present'\"></i>\r\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class=\"fas fa-history text-info\" v-if=\"attendance_record.label == 'late'\"></i>\r\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class=\"fas fa-coffee text-warning\" v-if=\"attendance_record.label == 'half_day'\"></i>\r\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class=\"fas fa-times text-danger\" v-if=\"attendance_record.label == 'unmarked' || attendance_record.label == 'absent'\"></i>\r\n\t\t\t\t\t            \t\t\t\t\t\t</span>\r\n\t\t\t\t\t            \t\t\t\t\t\t<span class=\"marking-cell\" v-else>\r\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class=\"fas fa-check text-success\" v-if=\"attendance_record.label == 'present'\"></i>\r\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class=\"fas fa-history text-info\" v-if=\"attendance_record.label == 'late'\"></i>\r\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class=\"fas fa-coffee text-warning\" v-if=\"attendance_record.label == 'half_day'\"></i>\r\n\t\t\t\t\t            \t\t\t\t\t\t\t<i class=\"fas fa-times text-danger\" v-if=\"attendance_record.label == 'absent'\"></i>\r\n\t\t\t\t\t            \t\t\t\t\t\t</span>\r\n\t\t\t\t            \t\t\t\t\t\t</span>\r\n\t\t\t\t            \t\t\t\t\t</td>\r\n\t\t\t\t            \t\t\t\t\t<td>{{student.monthly_count}}</td>\r\n\t\t\t\t            \t\t\t\t</tr>\r\n\t\t\t\t            \t\t\t\t<tr v-else>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th style=\"font-size:120%;\">{{student.name}}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th :class=\"['date-cell']\" v-for=\"attendance_record in student.attendances\">{{attendance_record.count}}</th>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<th></th>\r\n\t\t\t\t            \t\t\t\t</tr>\r\n\t\t\t\t            \t\t\t</tbody>\r\n\t\t\t\t            \t\t</table>\r\n\t\t\t\t            \t</div>\r\n\t\t\t\t            </div>\r\n\t\t\t\t        </div>\r\n\r\n\t\t\t\t        <div class=\"row mt-2\" v-if=\"!student_data.length && disable_filter\">\r\n\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t<p class=\"alert alert-danger\">{{trans('general.no_data_found', {data: trans('student.student')})}}</p>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t        </div>\r\n\t\t\t\t        <div class=\"form-group\" v-if=\"student_data.length && isEditable\">\r\n\t\t\t\t        \t<button type=\"submit\" class=\"btn btn-success pull-right\">{{trans('general.save')}}</button>\r\n\t\t\t\t        \t<button type=\"button\" class=\"btn btn-info pull-right m-r-10\" v-if=\"isEditable && attendance && ! attendance.is_default\" key=\"make-attendance-default\" v-tooltip=\"trans('student.attendance_default_description')\" v-confirm=\"{ok: confirmDefault()}\">{{trans('student.attendance_default')}}</button>\r\n\t\t\t\t        \t<button type=\"button\" class=\"btn btn-danger pull-right m-r-10\" v-if=\"isEditable && isDeletable\" key=\"delete-attendance\" v-confirm=\"{ok: confirmDelete()}\">{{trans('general.delete')}}</button>\r\n\t\t\t\t        \t<button type=\"button\" @click=\"markAllPresent\" class=\"btn btn-info btn-sm\">{{trans('student.attendance_mark_all_present')}}</button>\r\n\t\t\t\t        \t<button type=\"button\" @click=\"markAllAbsent\" class=\"btn btn-info btn-sm\">{{trans('student.attendance_mark_all_absent')}}</button>\r\n\t\t\t\t        </div>\r\n\r\n\t\t\t\t        <div class=\"row mt-2\" v-if=\"student_data.length\">\r\n\t\t\t\t\t\t\t<div class=\"col-12\">\r\n\t\t\t\t\t\t\t\t<span class=\"mr-2\"><i class=\"fas fa-check text-success\"></i> {{trans('student.attendance_present')}}</span>\r\n\t\t\t\t\t\t\t\t<span class=\"mr-2\"><i class=\"fas fa-history text-info\"></i> {{trans('student.attendance_late')}}</span>\r\n\t\t\t\t\t\t\t\t<span class=\"mr-2\"><i class=\"fas fa-coffee text-warning\"></i> {{trans('student.attendance_half_day')}}</span>\r\n\t\t\t\t\t\t\t\t<span class=\"\"><i class=\"fas fa-times text-danger\"></i> {{trans('student.attendance_absent')}}</span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t        </div>\r\n\t\t\t\t    </form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tcomponents: {},\r\n\t\tdata(){\r\n\t\t\treturn {\r\n\t\t\t\tattendanceForm: new Form({\r\n\t\t\t\t\tbatch_id: '',\r\n\t\t\t\t\tattendance_method: '',\r\n\t\t\t\t\tsubject_id: '',\r\n\t\t\t\t\tsession: '',\r\n\t\t\t\t\tdate_of_attendance: '',\r\n\t\t\t\t\tstudents: []\r\n\t\t\t\t},false),\r\n                disable_filter: false,\r\n\t\t\t\tprevious_date: '',\r\n\t\t\t\tholidays: [],\r\n\t\t\t\tall_holidays: [],\r\n\t\t\t\tattendance: {},\r\n\t\t\t\tattendances: [],\r\n\t\t\t\tdisabled: {\r\n\t\t\t\t\tdates:[]\r\n\t\t\t\t},\r\n\t\t\t\tall_disabled: {\r\n\t\t\t\t\tdates:[]\r\n\t\t\t\t},\r\n\t\t\t\theader: [],\r\n\t\t\t\tstudent_data: [],\r\n\t\t\t\tdays: 0,\r\n\t\t\t\tsubjects: [],\r\n\t\t\t\tbatches: [],\r\n\t\t\t\tselected_batch: null,\r\n\t\t\t\tselected_batch_detail: {},\r\n\t\t\t\tstudent_records: [],\r\n\t\t\t\tbatch_with_subjects: [],\r\n\t\t\t\tattendance_methods: [],\r\n\t\t\t\tattendance_method_more_than_once_types: [],\r\n\t\t\t\tisEditable: false,\r\n\t\t\t\tisDeletable: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted(){\r\n\t\t\tif(!helper.hasPermission('list-student-attendance')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n\t\t\t}\r\n\r\n\t\t\tthis.attendanceForm.date_of_attendance = helper.getConfig('current_date');\r\n\t\t\tthis.previous_date = this.attendanceForm.date_of_attendance;\r\n\t\t\tthis.getPreRequisite();\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\thasPermission(permission){\r\n\t\t\t\treturn helper.hasPermission(permission);\r\n\t\t\t},\r\n            resetFilter(){\r\n            \tthis.student_data = [];\r\n                this.disable_filter = false;\r\n            },\r\n\t\t\tgetPreRequisite(){\r\n\t\t\t\tlet loader = this.$loading.show();\r\n\t\t\t\taxios.get('/api/student/attendance/pre-requisite')\r\n\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\tthis.attendance_methods = response.attendance_methods;\r\n\t\t\t\t\t\tthis.attendance_method_more_than_once_types = response.attendance_method_more_than_once_types;\r\n\t\t\t\t\t\tthis.batches = response.batches;\r\n\t\t\t\t\t\tthis.batch_with_subjects = response.batch_with_subjects;\r\n\t\t\t\t\t\tthis.holidays = response.holidays;\r\n\t\t\t\t\t\tthis.all_holidays = response.holidays;\r\n\t\t                response.holidays.forEach(holiday => {\r\n\t\t                    this.disabled.dates.push(new Date(holiday.date));\r\n\t\t                    this.all_disabled.dates.push(new Date(holiday.date));\r\n\t\t                });\r\n\t\t\t\t\t\tloader.hide();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tloader.hide();\r\n\t\t\t\t\t\thelper.showErrorMsg(error);\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tdateSelected(){\r\n\t\t\t},\r\n\t\t\tgetStudent(){\r\n\t\t\t\tthis.disable_filter = true;\r\n\t\t\t\tlet loader = this.$loading.show();\r\n\t\t\t\taxios.post('/api/student/attendance/fetch', {\r\n\t\t\t\t\tbatch_id: this.attendanceForm.batch_id, \r\n\t\t\t\t\tdate_of_attendance: this.attendanceForm.date_of_attendance,\r\n\t\t\t\t\tsubject_id: this.attendanceForm.subject_id,\r\n\t\t\t\t\tsession: this.attendanceForm.session,\r\n\t\t\t\t\tattendance_method: this.attendanceForm.attendance_method\r\n\t\t\t\t})\r\n\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\tthis.student_records = response.student_records;\r\n\t\t\t\t\t\tthis.selected_batch_detail = response.batch;\r\n\t\t\t\t\t\tthis.attendance = response.attendance;\r\n\t\t\t\t\t\tthis.attendances = response.attendances;\r\n\t\t\t\t\t\tthis.header = response.header;\r\n\t\t\t\t\t\tthis.student_data = response.student_data;\r\n\t\t\t\t\t\tthis.isEditable = response.is_editable;\r\n\t\t\t\t\t\tthis.isDeletable = response.is_deletable;\r\n\t\t\t\t\t\tthis.attendanceForm.students = response.current_date_attendance;\r\n\t\t\t\t\t\tloader.hide();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tthis.disable_filter = false;\r\n\t\t\t\t\t\tloader.hide();\r\n\t\t\t\t\t\thelper.showErrorMsg(error);\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tonBatchSelect(selectedOption){\r\n\t\t\t\tlet loader = this.$loading.show();\r\n\t\t\t\tthis.attendanceForm.batch_id = selectedOption.id;\r\n                let batch = this.batch_with_subjects.find(o => o.id == this.attendanceForm.batch_id);\r\n\r\n                if (typeof batch == 'undefined') {\r\n                \treturn;\r\n                }\r\n\r\n                this.holidays = this.all_holidays;\r\n                this.disabled.dates = this.all_disabled.dates;\r\n                let holidays_except = batch.holidays_except && Array.isArray(batch.holidays_except) ? batch.holidays_except : [];\r\n\r\n                holidays_except.forEach(holiday_except => {\r\n\t                this.disabled.dates = this.disabled.dates.filter(o => helper.toDate(o) != helper.toDate(holiday_except));\r\n\t                this.holidays = this.holidays.filter(o => helper.toDate(o.date) != helper.toDate(holiday_except));\r\n                })\r\n\r\n\t\t\t\tthis.attendanceForm.attendance_method = batch.options && batch.options.default_attendance_method ? batch.options.default_attendance_method : 'once';\r\n\r\n\t\t\t\tthis.attendanceForm.subject_id = '';\r\n                this.subjects = [];\r\n\r\n                batch.subjects.forEach(subject => {\r\n                \tthis.subjects.push({\r\n                \t\tid: subject.id,\r\n                \t\tname: subject.name+' ('+subject.code+')'\r\n                \t});\r\n                });\r\n\r\n\t\t\t\tloader.hide();\r\n\t\t\t},\r\n\t\t\tonBatchRemove(removedOption){\r\n\t\t\t\tthis.attendanceForm.batch_id = '';\r\n\t\t\t\tthis.student_data = [];\r\n\t\t\t\tthis.student_records = [];\r\n\t\t\t},\r\n\t\t\tcurrentDate(date){\r\n\t\t\t\tif (date == moment(this.attendanceForm.date_of_attendance).format('D'))\r\n\t\t\t\t\treturn true;\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\ttoggleAttendance(student, day){\r\n\t\t\t\tif (! this.isEditable) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tlet options = ['late'];\r\n\t\t\t\tif (this.attendanceForm.attendance_method == 'once') {\r\n\t\t\t\t\toptions.push('half_day');\r\n\t\t\t\t}\r\n\t\t\t\toptions.push('present');\r\n\t\t\t\toptions.push('absent');\r\n\t\t\t\tlet record_detail = this.student_data.find(o => o.id == student.id);\r\n\t\t\t\tlet record = record_detail.attendances[day];\r\n\t\t\t\tlet index = options.indexOf(record.label);\r\n\t\t\t\tindex = ++index%options.length; \r\n\t\t\t\trecord.label = options[index];\r\n\r\n\t\t\t\tlet data = this.attendanceForm.students.find(o => o.id == student.id);\r\n\t\t\t\tdata.attendance = options[index];\r\n\t\t\t},\r\n\t\t\tmarkAllPresent(){\r\n\t\t\t\tlet day = moment(this.attendanceForm.date_of_attendance).format('D');\r\n\t\t\t\tthis.student_data.forEach(student => {\r\n\t\t\t\t\tif (student.sno) {\r\n\t\t\t\t\t\tlet record = student.attendances[day];\r\n\t\t\t\t\t\tif (record.label != 'unavailable') {\r\n\t\t\t\t\t\t\trecord.label = 'present';\r\n\r\n\t\t\t\t\t\t\tlet data = this.attendanceForm.students.find(o => o.id == student.id);\r\n\t\t\t\t\t\t\tdata.attendance = 'present';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tmarkAllAbsent(){\r\n\t\t\t\tlet day = moment(this.attendanceForm.date_of_attendance).format('D');\r\n\t\t\t\tthis.student_data.forEach(student => {\r\n\t\t\t\t\tif (student.sno) {\r\n\t\t\t\t\t\tlet record = student.attendances[day];\r\n\t\t\t\t\t\tif (record.label != 'unavailable') {\r\n\t\t\t\t\t\t\trecord.label = 'absent';\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlet data = this.attendanceForm.students.find(o => o.id == student.id);\r\n\t\t\t\t\t\t\tdata.attendance = 'absent';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tsubmit(){\r\n\t\t\t\tlet loader = this.$loading.show();\r\n\t\t\t\tthis.attendanceForm.post('/api/student/attendance')\r\n\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\tthis.getStudent();\r\n\t\t\t\t\t\ttoastr.success(response.message);\r\n\t\t\t\t\t\tloader.hide();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n\t\t\t\t\t\tloader.hide();\r\n\t\t\t\t\t\thelper.showErrorMsg(error);\r\n\t\t\t\t\t})\r\n\t\t\t},\r\n            confirmDelete(){\r\n                return dialog => this.deleteAttendance();\r\n            },\r\n            deleteAttendance(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/student/attendance/delete', {\r\n                \t\tbatch_id: this.attendanceForm.batch_id,\r\n                \t\tdate_of_attendance: this.attendanceForm.date_of_attendance,\r\n                \t\tsubject_id: this.attendanceForm.subject_id,\r\n                \t\tsession: this.attendanceForm.session\r\n                \t})\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getStudent();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            confirmDefault(){\r\n                return dialog => this.defaultAttendance();\r\n            },\r\n            defaultAttendance(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/student/attendance/default', {\r\n                \t\tbatch_id: this.attendanceForm.batch_id,\r\n                \t\tdate_of_attendance: this.attendanceForm.date_of_attendance,\r\n                \t\tsubject_id: this.attendanceForm.subject_id,\r\n                \t\tsession: this.attendanceForm.session\r\n                \t})\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getStudent();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            }\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t},\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        },\r\n        watch: {\r\n        \t'attendanceForm.date_of_attendance': function(val){\r\n\t\t\t\tthis.days = moment(val, \"YYYY-MM\").daysInMonth();\r\n\t\t\t\tthis.previous_date = helper.toDate(val);\r\n        \t}\r\n        }\r\n\t}\r\n</script>\r\n\r\n<style>\r\n\t.disabled{\r\n\t\tbackground-color:#f1f2f3;\r\n\t}\r\n\t.current {\r\n\t\tfont-weight: 500;\r\n\t\tfont-size: 120%;\r\n\t}\r\n\t.attendance-table tr th.date-cell{\r\n\t\ttext-align: center;\r\n\t\tmin-width: 20px;\r\n\t\tmax-width: 20px;\r\n\t}\r\n\t.attendance-table tr td span.marking-cell {\r\n\t\tdisplay: block;\r\n\t\twidth: 100%;\r\n\t\theight: 100%;\r\n\t\ttext-align: center;\r\n\t}\r\n</style>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"student.attendance\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _vm.attendanceForm.date_of_attendance\n              ? _c(\n                  \"button\",\n                  {\n                    directives: [\n                      {\n                        name: \"tooltip\",\n                        rawName: \"v-tooltip\",\n                        value: _vm.trans(\"student.absentee\"),\n                        expression: \"trans('student.absentee')\",\n                      },\n                    ],\n                    staticClass: \"btn btn-info btn-sm\",\n                    on: {\n                      click: function ($event) {\n                        return _vm.$router.push(\"/student/attendance/absentee\")\n                      },\n                    },\n                  },\n                  [\n                    _c(\"i\", { staticClass: \"fas fa-user-minus\" }),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"student.absentee\"))),\n                    ]),\n                  ]\n                )\n              : _vm._e(),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card\" }, [\n        _c(\"div\", { staticClass: \"card-body p-4\" }, [\n          _c(\n            \"form\",\n            {\n              on: {\n                submit: function ($event) {\n                  $event.preventDefault()\n                  return _vm.submit.apply(null, arguments)\n                },\n                keydown: function ($event) {\n                  return _vm.attendanceForm.errors.clear($event.target.name)\n                },\n              },\n            },\n            [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"academic.batch\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-select\",\n                        {\n                          attrs: {\n                            disabled: _vm.disable_filter,\n                            label: \"name\",\n                            \"group-values\": \"batches\",\n                            \"group-label\": \"course_group\",\n                            \"group-select\": false,\n                            name: \"batch_id\",\n                            id: \"batch_id\",\n                            options: _vm.batches,\n                            placeholder: _vm.trans(\"academic.select_batch\"),\n                          },\n                          on: {\n                            select: _vm.onBatchSelect,\n                            close: function ($event) {\n                              return _vm.attendanceForm.errors.clear(\"batch_id\")\n                            },\n                            remove: _vm.onBatchRemove,\n                          },\n                          model: {\n                            value: _vm.selected_batch,\n                            callback: function ($$v) {\n                              _vm.selected_batch = $$v\n                            },\n                            expression: \"selected_batch\",\n                          },\n                        },\n                        [\n                          !_vm.batches.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  attrs: { slot: \"afterList\" },\n                                  slot: \"afterList\",\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n\\t\\t\\t\\t                            \" +\n                                      _vm._s(\n                                        _vm.trans(\"general.no_option_found\")\n                                      ) +\n                                      \"\\n\\t\\t\\t\\t                        \"\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.attendanceForm,\n                          \"prop-name\": \"batch_id\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.attendance_method\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"select\",\n                        {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.attendanceForm.attendance_method,\n                              expression: \"attendanceForm.attendance_method\",\n                            },\n                          ],\n                          staticClass: \"custom-select col-12\",\n                          attrs: {\n                            disabled: _vm.disable_filter,\n                            name: \"attendance_method\",\n                          },\n                          on: {\n                            change: function ($event) {\n                              var $$selectedVal = Array.prototype.filter\n                                .call($event.target.options, function (o) {\n                                  return o.selected\n                                })\n                                .map(function (o) {\n                                  var val = \"_value\" in o ? o._value : o.value\n                                  return val\n                                })\n                              _vm.$set(\n                                _vm.attendanceForm,\n                                \"attendance_method\",\n                                $event.target.multiple\n                                  ? $$selectedVal\n                                  : $$selectedVal[0]\n                              )\n                            },\n                          },\n                        },\n                        [\n                          _c(\"option\", { attrs: { value: \"\", selected: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _vm._l(_vm.attendance_methods, function (option) {\n                            return _c(\n                              \"option\",\n                              { domProps: { value: option.value } },\n                              [\n                                _vm._v(\n                                  \"\\n\\t                                    \" +\n                                    _vm._s(option.text) +\n                                    \"\\n\\t                                  \"\n                                ),\n                              ]\n                            )\n                          }),\n                        ],\n                        2\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.attendanceForm,\n                          \"prop-name\": \"attendance_method\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _vm.attendanceForm.attendance_method == \"more_than_once\"\n                  ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"student.attendance_session\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.attendanceForm.session,\n                                  expression: \"attendanceForm.session\",\n                                },\n                              ],\n                              staticClass: \"custom-select col-12\",\n                              attrs: {\n                                disabled: _vm.disable_filter,\n                                name: \"session\",\n                              },\n                              on: {\n                                change: function ($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function (o) {\n                                      return o.selected\n                                    })\n                                    .map(function (o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.attendanceForm,\n                                    \"session\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _c(\n                                \"option\",\n                                { attrs: { value: \"\", selected: \"\" } },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"general.select_one\"))\n                                  ),\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _vm._l(\n                                _vm.attendance_method_more_than_once_types,\n                                function (option) {\n                                  return _c(\n                                    \"option\",\n                                    { domProps: { value: option.value } },\n                                    [\n                                      _vm._v(\n                                        \"\\n\\t                                    \" +\n                                          _vm._s(option.text) +\n                                          \"\\n\\t                                  \"\n                                      ),\n                                    ]\n                                  )\n                                }\n                              ),\n                            ],\n                            2\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.attendanceForm,\n                              \"prop-name\": \"session\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _vm.attendanceForm.attendance_method == \"subject_wise\"\n                  ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"academic.subject\")) + \" \"),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.attendanceForm.subject_id,\n                                  expression: \"attendanceForm.subject_id\",\n                                },\n                              ],\n                              staticClass: \"custom-select col-12\",\n                              attrs: {\n                                disabled: _vm.disable_filter,\n                                name: \"subject_id\",\n                              },\n                              on: {\n                                change: function ($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function (o) {\n                                      return o.selected\n                                    })\n                                    .map(function (o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.attendanceForm,\n                                    \"subject_id\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _c(\n                                \"option\",\n                                { attrs: { value: \"\", selected: \"\" } },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"general.select_one\"))\n                                  ),\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.subjects, function (option) {\n                                return _c(\n                                  \"option\",\n                                  { domProps: { value: option.id } },\n                                  [\n                                    _vm._v(\n                                      \"\\n\\t                                    \" +\n                                        _vm._s(option.name) +\n                                        \"\\n\\t                                  \"\n                                    ),\n                                  ]\n                                )\n                              }),\n                            ],\n                            2\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.attendanceForm,\n                              \"prop-name\": \"subject_id\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _vm.attendanceForm.batch_id\n                  ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"student.date_of_attendance\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"datepicker\", {\n                            attrs: {\n                              disabled: _vm.disable_filter,\n                              bootstrapStyling: true,\n                              disabledDates: _vm.disabled,\n                              placeholder: _vm.trans(\n                                \"student.date_of_attendance\"\n                              ),\n                            },\n                            on: { selected: _vm.dateSelected },\n                            model: {\n                              value: _vm.attendanceForm.date_of_attendance,\n                              callback: function ($$v) {\n                                _vm.$set(\n                                  _vm.attendanceForm,\n                                  \"date_of_attendance\",\n                                  $$v\n                                )\n                              },\n                              expression: \"attendanceForm.date_of_attendance\",\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.attendanceForm,\n                              \"prop-name\": \"date_of_attendance\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"text-right\" }, [\n                !_vm.disable_filter\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info waves-effect waves-light\",\n                        attrs: { type: \"button\" },\n                        on: { click: _vm.getStudent },\n                      },\n                      [_vm._v(_vm._s(_vm.trans(\"general.proceed\")))]\n                    )\n                  : _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-danger m-r-10\",\n                        attrs: { type: \"button\" },\n                        on: { click: _vm.resetFilter },\n                      },\n                      [_vm._v(_vm._s(_vm.trans(\"general.reset\")))]\n                    ),\n              ]),\n              _vm._v(\" \"),\n              _vm.student_data.length\n                ? _c(\"div\", { staticClass: \"row\" }, [\n                    _c(\"div\", { staticClass: \"col-12\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"table-responsive font-90pc p-2\" },\n                        [\n                          _c(\n                            \"table\",\n                            {\n                              staticClass:\n                                \"table table-sm table-bordered attendance-table\",\n                            },\n                            [\n                              _c(\"thead\", [\n                                _c(\n                                  \"tr\",\n                                  [\n                                    _c(\"th\", [_vm._v(\"#\")]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", [\n                                      _vm._v(_vm._s(_vm.trans(\"student.name\"))),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _vm._l(_vm.header, function (header_date) {\n                                      return _c(\n                                        \"th\",\n                                        { class: [\"date-cell\"] },\n                                        [_vm._v(_vm._s(header_date))]\n                                      )\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"th\"),\n                                  ],\n                                  2\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"tbody\",\n                                _vm._l(_vm.student_data, function (student) {\n                                  return student.sno\n                                    ? _c(\n                                        \"tr\",\n                                        [\n                                          _c(\"td\", [\n                                            _vm._v(_vm._s(student.sno)),\n                                          ]),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"td\",\n                                            {\n                                              staticStyle: {\n                                                \"font-size\": \"120%\",\n                                              },\n                                            },\n                                            [_vm._v(_vm._s(student.name))]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _vm._l(\n                                            student.attendances,\n                                            function (\n                                              attendance_record,\n                                              index\n                                            ) {\n                                              return _c(\n                                                \"td\",\n                                                {\n                                                  class: [\n                                                    attendance_record.label ==\n                                                      \"holiday\" ||\n                                                    attendance_record.label ==\n                                                      \"unavailable\"\n                                                      ? \"disabled\"\n                                                      : \"\",\n                                                  ],\n                                                },\n                                                [\n                                                  _c(\n                                                    \"span\",\n                                                    {\n                                                      staticClass:\n                                                        \"marking-cell\",\n                                                    },\n                                                    [\n                                                      attendance_record.label ==\n                                                      \"unavailable\"\n                                                        ? _c(\"span\")\n                                                        : attendance_record.label ==\n                                                          \"holiday\"\n                                                        ? _c(\n                                                            \"span\",\n                                                            {\n                                                              directives: [\n                                                                {\n                                                                  name: \"tooltip\",\n                                                                  rawName:\n                                                                    \"v-tooltip\",\n                                                                  value:\n                                                                    attendance_record.description,\n                                                                  expression:\n                                                                    \"attendance_record.description\",\n                                                                },\n                                                              ],\n                                                            },\n                                                            [\n                                                              _c(\"i\", {\n                                                                staticClass:\n                                                                  \"fas fa-hospital-symbol\",\n                                                              }),\n                                                            ]\n                                                          )\n                                                        : _vm.currentDate(index)\n                                                        ? _c(\n                                                            \"span\",\n                                                            {\n                                                              class: [\n                                                                \"marking-cell\",\n                                                                _vm.isEditable\n                                                                  ? \"pointer\"\n                                                                  : \"\",\n                                                              ],\n                                                              on: {\n                                                                click:\n                                                                  function (\n                                                                    $event\n                                                                  ) {\n                                                                    return _vm.toggleAttendance(\n                                                                      student,\n                                                                      index\n                                                                    )\n                                                                  },\n                                                              },\n                                                            },\n                                                            [\n                                                              attendance_record.label ==\n                                                              \"present\"\n                                                                ? _c(\"i\", {\n                                                                    staticClass:\n                                                                      \"fas fa-check text-success\",\n                                                                  })\n                                                                : _vm._e(),\n                                                              _vm._v(\" \"),\n                                                              attendance_record.label ==\n                                                              \"late\"\n                                                                ? _c(\"i\", {\n                                                                    staticClass:\n                                                                      \"fas fa-history text-info\",\n                                                                  })\n                                                                : _vm._e(),\n                                                              _vm._v(\" \"),\n                                                              attendance_record.label ==\n                                                              \"half_day\"\n                                                                ? _c(\"i\", {\n                                                                    staticClass:\n                                                                      \"fas fa-coffee text-warning\",\n                                                                  })\n                                                                : _vm._e(),\n                                                              _vm._v(\" \"),\n                                                              attendance_record.label ==\n                                                                \"unmarked\" ||\n                                                              attendance_record.label ==\n                                                                \"absent\"\n                                                                ? _c(\"i\", {\n                                                                    staticClass:\n                                                                      \"fas fa-times text-danger\",\n                                                                  })\n                                                                : _vm._e(),\n                                                            ]\n                                                          )\n                                                        : _c(\n                                                            \"span\",\n                                                            {\n                                                              staticClass:\n                                                                \"marking-cell\",\n                                                            },\n                                                            [\n                                                              attendance_record.label ==\n                                                              \"present\"\n                                                                ? _c(\"i\", {\n                                                                    staticClass:\n                                                                      \"fas fa-check text-success\",\n                                                                  })\n                                                                : _vm._e(),\n                                                              _vm._v(\" \"),\n                                                              attendance_record.label ==\n                                                              \"late\"\n                                                                ? _c(\"i\", {\n                                                                    staticClass:\n                                                                      \"fas fa-history text-info\",\n                                                                  })\n                                                                : _vm._e(),\n                                                              _vm._v(\" \"),\n                                                              attendance_record.label ==\n                                                              \"half_day\"\n                                                                ? _c(\"i\", {\n                                                                    staticClass:\n                                                                      \"fas fa-coffee text-warning\",\n                                                                  })\n                                                                : _vm._e(),\n                                                              _vm._v(\" \"),\n                                                              attendance_record.label ==\n                                                              \"absent\"\n                                                                ? _c(\"i\", {\n                                                                    staticClass:\n                                                                      \"fas fa-times text-danger\",\n                                                                  })\n                                                                : _vm._e(),\n                                                            ]\n                                                          ),\n                                                    ]\n                                                  ),\n                                                ]\n                                              )\n                                            }\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\"td\", [\n                                            _vm._v(\n                                              _vm._s(student.monthly_count)\n                                            ),\n                                          ]),\n                                        ],\n                                        2\n                                      )\n                                    : _c(\n                                        \"tr\",\n                                        [\n                                          _c(\"th\"),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"th\",\n                                            {\n                                              staticStyle: {\n                                                \"font-size\": \"120%\",\n                                              },\n                                            },\n                                            [_vm._v(_vm._s(student.name))]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _vm._l(\n                                            student.attendances,\n                                            function (attendance_record) {\n                                              return _c(\n                                                \"th\",\n                                                { class: [\"date-cell\"] },\n                                                [\n                                                  _vm._v(\n                                                    _vm._s(\n                                                      attendance_record.count\n                                                    )\n                                                  ),\n                                                ]\n                                              )\n                                            }\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\"th\"),\n                                        ],\n                                        2\n                                      )\n                                }),\n                                0\n                              ),\n                            ]\n                          ),\n                        ]\n                      ),\n                    ]),\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              !_vm.student_data.length && _vm.disable_filter\n                ? _c(\"div\", { staticClass: \"row mt-2\" }, [\n                    _c(\"div\", { staticClass: \"col-12\" }, [\n                      _c(\"p\", { staticClass: \"alert alert-danger\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"general.no_data_found\", {\n                              data: _vm.trans(\"student.student\"),\n                            })\n                          )\n                        ),\n                      ]),\n                    ]),\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.student_data.length && _vm.isEditable\n                ? _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-success pull-right\",\n                        attrs: { type: \"submit\" },\n                      },\n                      [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                    ),\n                    _vm._v(\" \"),\n                    _vm.isEditable &&\n                    _vm.attendance &&\n                    !_vm.attendance.is_default\n                      ? _c(\n                          \"button\",\n                          {\n                            directives: [\n                              {\n                                name: \"tooltip\",\n                                rawName: \"v-tooltip\",\n                                value: _vm.trans(\n                                  \"student.attendance_default_description\"\n                                ),\n                                expression:\n                                  \"trans('student.attendance_default_description')\",\n                              },\n                              {\n                                name: \"confirm\",\n                                rawName: \"v-confirm\",\n                                value: { ok: _vm.confirmDefault() },\n                                expression: \"{ok: confirmDefault()}\",\n                              },\n                            ],\n                            key: \"make-attendance-default\",\n                            staticClass: \"btn btn-info pull-right m-r-10\",\n                            attrs: { type: \"button\" },\n                          },\n                          [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"student.attendance_default\"))\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.isEditable && _vm.isDeletable\n                      ? _c(\n                          \"button\",\n                          {\n                            directives: [\n                              {\n                                name: \"confirm\",\n                                rawName: \"v-confirm\",\n                                value: { ok: _vm.confirmDelete() },\n                                expression: \"{ok: confirmDelete()}\",\n                              },\n                            ],\n                            key: \"delete-attendance\",\n                            staticClass: \"btn btn-danger pull-right m-r-10\",\n                            attrs: { type: \"button\" },\n                          },\n                          [_vm._v(_vm._s(_vm.trans(\"general.delete\")))]\n                        )\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        attrs: { type: \"button\" },\n                        on: { click: _vm.markAllPresent },\n                      },\n                      [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"student.attendance_mark_all_present\")\n                          )\n                        ),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        attrs: { type: \"button\" },\n                        on: { click: _vm.markAllAbsent },\n                      },\n                      [\n                        _vm._v(\n                          _vm._s(\n                            _vm.trans(\"student.attendance_mark_all_absent\")\n                          )\n                        ),\n                      ]\n                    ),\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              _vm.student_data.length\n                ? _c(\"div\", { staticClass: \"row mt-2\" }, [\n                    _c(\"div\", { staticClass: \"col-12\" }, [\n                      _c(\"span\", { staticClass: \"mr-2\" }, [\n                        _c(\"i\", { staticClass: \"fas fa-check text-success\" }),\n                        _vm._v(\n                          \" \" + _vm._s(_vm.trans(\"student.attendance_present\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"mr-2\" }, [\n                        _c(\"i\", { staticClass: \"fas fa-history text-info\" }),\n                        _vm._v(\n                          \" \" + _vm._s(_vm.trans(\"student.attendance_late\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"mr-2\" }, [\n                        _c(\"i\", { staticClass: \"fas fa-coffee text-warning\" }),\n                        _vm._v(\n                          \" \" + _vm._s(_vm.trans(\"student.attendance_half_day\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"span\", {}, [\n                        _c(\"i\", { staticClass: \"fas fa-times text-danger\" }),\n                        _vm._v(\n                          \" \" + _vm._s(_vm.trans(\"student.attendance_absent\"))\n                        ),\n                      ]),\n                    ]),\n                  ])\n                : _vm._e(),\n            ]\n          ),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.disabled{\\n\\tbackground-color:#f1f2f3;\\n}\\n.current {\\n\\tfont-weight: 500;\\n\\tfont-size: 120%;\\n}\\n.attendance-table tr th.date-cell{\\n\\ttext-align: center;\\n\\tmin-width: 20px;\\n\\tmax-width: 20px;\\n}\\n.attendance-table tr td span.marking-cell {\\n\\tdisplay: block;\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\ttext-align: center;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/student/attendance/index.vue\"],\"names\":[],\"mappings\":\";AAkcA;CACA,wBAAA;AACA;AACA;CACA,gBAAA;CACA,eAAA;AACA;AACA;CACA,kBAAA;CACA,eAAA;CACA,eAAA;AACA;AACA;CACA,cAAA;CACA,WAAA;CACA,YAAA;CACA,kBAAA;AACA\",\"sourcesContent\":[\"<template>\\r\\n    <div>\\r\\n        <div class=\\\"page-titles\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12 col-sm-6\\\">\\r\\n            \\t\\t<h3 class=\\\"text-themecolor\\\">{{trans('student.attendance')}}</h3>\\r\\n            \\t</div>\\r\\n                <div class=\\\"col-12 col-sm-6\\\">\\r\\n                    <div class=\\\"action-buttons pull-right\\\">\\r\\n                        <button class=\\\"btn btn-info btn-sm\\\" v-if=\\\"attendanceForm.date_of_attendance\\\" @click=\\\"$router.push('/student/attendance/absentee')\\\" v-tooltip=\\\"trans('student.absentee')\\\"><i class=\\\"fas fa-user-minus\\\"></i> <span class=\\\"d-none d-sm-inline\\\">{{trans('student.absentee')}}</span></button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n        \\t<div class=\\\"card\\\">\\r\\n        \\t\\t<div class=\\\"card-body p-4\\\">\\r\\n\\t\\t\\t\\t    <form @submit.prevent=\\\"submit\\\" @keydown=\\\"attendanceForm.errors.clear($event.target.name)\\\">\\r\\n\\t\\t\\t\\t        <div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t            <div class=\\\"col-12 col-sm-3\\\">\\r\\n\\t\\t\\t\\t                <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t                    <label for=\\\"\\\">{{trans('academic.batch')}}</label>\\r\\n\\t\\t\\t\\t                    <v-select :disabled=\\\"disable_filter\\\" label=\\\"name\\\" v-model=\\\"selected_batch\\\" group-values=\\\"batches\\\" group-label=\\\"course_group\\\" :group-select=\\\"false\\\" name=\\\"batch_id\\\" id=\\\"batch_id\\\" :options=\\\"batches\\\" :placeholder=\\\"trans('academic.select_batch')\\\" @select=\\\"onBatchSelect\\\" @close=\\\"attendanceForm.errors.clear('batch_id')\\\" @remove=\\\"onBatchRemove\\\">\\r\\n\\t\\t\\t\\t                        <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!batches.length\\\">\\r\\n\\t\\t\\t\\t                            {{trans('general.no_option_found')}}\\r\\n\\t\\t\\t\\t                        </div>\\r\\n\\t\\t\\t\\t                    </v-select>\\r\\n\\t\\t\\t\\t                    <show-error :form-name=\\\"attendanceForm\\\" prop-name=\\\"batch_id\\\"></show-error>\\r\\n\\t\\t\\t\\t                </div>\\r\\n\\t\\t\\t\\t            </div>\\r\\n\\t                        <div class=\\\"col-12 col-sm-3\\\">\\r\\n\\t                            <div class=\\\"form-group\\\">\\r\\n\\t                                <label for=\\\"\\\">{{trans('student.attendance_method')}}</label>\\r\\n\\t                                <select :disabled=\\\"disable_filter\\\" v-model=\\\"attendanceForm.attendance_method\\\" class=\\\"custom-select col-12\\\" name=\\\"attendance_method\\\">\\r\\n\\t                                  <option value=\\\"\\\" selected>{{trans('general.select_one')}}</option>\\r\\n\\t                                  <option v-for=\\\"option in attendance_methods\\\" v-bind:value=\\\"option.value\\\">\\r\\n\\t                                    {{ option.text }}\\r\\n\\t                                  </option>\\r\\n\\t                                </select>\\r\\n\\t                                <show-error :form-name=\\\"attendanceForm\\\" prop-name=\\\"attendance_method\\\"></show-error>\\r\\n\\t                            </div>\\r\\n\\t                        </div>\\r\\n\\t                        <div class=\\\"col-12 col-sm-3\\\" v-if=\\\"attendanceForm.attendance_method == 'more_than_once'\\\">\\r\\n\\t                            <div class=\\\"form-group\\\">\\r\\n\\t                                <label for=\\\"\\\">{{trans('student.attendance_session')}}</label>\\r\\n\\t                                <select :disabled=\\\"disable_filter\\\" v-model=\\\"attendanceForm.session\\\" class=\\\"custom-select col-12\\\" name=\\\"session\\\">\\r\\n\\t                                  <option value=\\\"\\\" selected>{{trans('general.select_one')}}</option>\\r\\n\\t                                  <option v-for=\\\"option in attendance_method_more_than_once_types\\\" v-bind:value=\\\"option.value\\\">\\r\\n\\t                                    {{ option.text }}\\r\\n\\t                                  </option>\\r\\n\\t                                </select>\\r\\n\\t                                <show-error :form-name=\\\"attendanceForm\\\" prop-name=\\\"session\\\"></show-error>\\r\\n\\t                            </div>\\r\\n\\t                        </div>\\r\\n\\t\\t\\t                <div class=\\\"col-12 col-sm-3\\\" v-if=\\\"attendanceForm.attendance_method == 'subject_wise'\\\">\\r\\n\\t\\t\\t                    <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t                        <label for=\\\"\\\">{{trans('academic.subject')}} </label>\\r\\n\\t                                <select :disabled=\\\"disable_filter\\\" v-model=\\\"attendanceForm.subject_id\\\" class=\\\"custom-select col-12\\\" name=\\\"subject_id\\\">\\r\\n\\t                                  <option value=\\\"\\\" selected>{{trans('general.select_one')}}</option>\\r\\n\\t                                  <option v-for=\\\"option in subjects\\\" v-bind:value=\\\"option.id\\\">\\r\\n\\t                                    {{ option.name }}\\r\\n\\t                                  </option>\\r\\n\\t                                </select>\\r\\n\\t\\t\\t                        <show-error :form-name=\\\"attendanceForm\\\" prop-name=\\\"subject_id\\\"></show-error>\\r\\n\\t\\t\\t                    </div>\\r\\n\\t\\t\\t                </div>\\r\\n\\t\\t\\t\\t            <div class=\\\"col-12 col-sm-3\\\" v-if=\\\"attendanceForm.batch_id\\\">\\r\\n\\t\\t\\t\\t                <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t                    <label for=\\\"\\\">{{trans('student.date_of_attendance')}}</label>\\r\\n\\t\\t\\t\\t                    <datepicker :disabled=\\\"disable_filter\\\" v-model=\\\"attendanceForm.date_of_attendance\\\" :bootstrapStyling=\\\"true\\\" @selected=\\\"dateSelected\\\" :disabledDates=\\\"disabled\\\" :placeholder=\\\"trans('student.date_of_attendance')\\\"></datepicker>\\r\\n\\t\\t\\t\\t                    <show-error :form-name=\\\"attendanceForm\\\" prop-name=\\\"date_of_attendance\\\"></show-error>\\r\\n\\t\\t\\t\\t                </div>\\r\\n\\t\\t\\t\\t            </div>\\r\\n\\t\\t\\t\\t        </div>\\r\\n\\t\\t\\t            <div class=\\\"text-right\\\">\\r\\n\\t\\t\\t                <button type=\\\"button\\\" v-if=\\\"! disable_filter\\\" @click=\\\"getStudent\\\" class=\\\"btn btn-info waves-effect waves-light\\\">{{trans('general.proceed')}}</button>\\r\\n                            <button type=\\\"button\\\" v-else @click=\\\"resetFilter\\\" class=\\\"btn btn-danger m-r-10\\\">{{trans('general.reset')}}</button>\\r\\n\\t\\t\\t            </div>\\r\\n\\r\\n\\t\\t\\t\\t        <div class=\\\"row\\\" v-if=\\\"student_data.length\\\">\\r\\n\\t\\t\\t\\t            <div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t            \\t<div class=\\\"table-responsive font-90pc p-2\\\">\\r\\n\\t\\t\\t\\t            \\t\\t<table class=\\\"table table-sm table-bordered attendance-table\\\">\\r\\n\\t\\t\\t\\t            \\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t<th>#</th>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t<th>{{trans('student.name')}}</th>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t<th :class=\\\"['date-cell']\\\" v-for=\\\"header_date in header\\\">{{header_date}}</th>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t<th></th>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t</tr>\\t\\r\\n\\t\\t\\t\\t            \\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t            \\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t<tr v-for=\\\"student in student_data\\\" v-if=\\\"student.sno\\\">\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t<td>{{student.sno}}</td>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t<td style=\\\"font-size:120%;\\\">{{student.name}}</td>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t<td :class=\\\"[(attendance_record.label == 'holiday' || attendance_record.label == 'unavailable') ? 'disabled' : '']\\\" v-for=\\\"(attendance_record,index) in student.attendances\\\">\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t<span class=\\\"marking-cell\\\">\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t\\t<span v-if=\\\"attendance_record.label == 'unavailable'\\\"></span>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t\\t<span v-else-if=\\\"attendance_record.label == 'holiday'\\\" v-tooltip=\\\"attendance_record.description\\\">\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-hospital-symbol\\\"></i>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t<span :class=\\\"['marking-cell', isEditable ? 'pointer' : '']\\\" v-else-if=\\\"currentDate(index)\\\" @click=\\\"toggleAttendance(student, index)\\\">\\r\\n\\t\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-check text-success\\\" v-if=\\\"attendance_record.label == 'present'\\\"></i>\\r\\n\\t\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-history text-info\\\" v-if=\\\"attendance_record.label == 'late'\\\"></i>\\r\\n\\t\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-coffee text-warning\\\" v-if=\\\"attendance_record.label == 'half_day'\\\"></i>\\r\\n\\t\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-times text-danger\\\" v-if=\\\"attendance_record.label == 'unmarked' || attendance_record.label == 'absent'\\\"></i>\\r\\n\\t\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t<span class=\\\"marking-cell\\\" v-else>\\r\\n\\t\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-check text-success\\\" v-if=\\\"attendance_record.label == 'present'\\\"></i>\\r\\n\\t\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-history text-info\\\" v-if=\\\"attendance_record.label == 'late'\\\"></i>\\r\\n\\t\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-coffee text-warning\\\" v-if=\\\"attendance_record.label == 'half_day'\\\"></i>\\r\\n\\t\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t\\t<i class=\\\"fas fa-times text-danger\\\" v-if=\\\"attendance_record.label == 'absent'\\\"></i>\\r\\n\\t\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t\\t</span>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t</td>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t\\t<td>{{student.monthly_count}}</td>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t<tr v-else>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th style=\\\"font-size:120%;\\\">{{student.name}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th :class=\\\"['date-cell']\\\" v-for=\\\"attendance_record in student.attendances\\\">{{attendance_record.count}}</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th></th>\\r\\n\\t\\t\\t\\t            \\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t            \\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t            \\t\\t</table>\\r\\n\\t\\t\\t\\t            \\t</div>\\r\\n\\t\\t\\t\\t            </div>\\r\\n\\t\\t\\t\\t        </div>\\r\\n\\r\\n\\t\\t\\t\\t        <div class=\\\"row mt-2\\\" v-if=\\\"!student_data.length && disable_filter\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p class=\\\"alert alert-danger\\\">{{trans('general.no_data_found', {data: trans('student.student')})}}</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t        </div>\\r\\n\\t\\t\\t\\t        <div class=\\\"form-group\\\" v-if=\\\"student_data.length && isEditable\\\">\\r\\n\\t\\t\\t\\t        \\t<button type=\\\"submit\\\" class=\\\"btn btn-success pull-right\\\">{{trans('general.save')}}</button>\\r\\n\\t\\t\\t\\t        \\t<button type=\\\"button\\\" class=\\\"btn btn-info pull-right m-r-10\\\" v-if=\\\"isEditable && attendance && ! attendance.is_default\\\" key=\\\"make-attendance-default\\\" v-tooltip=\\\"trans('student.attendance_default_description')\\\" v-confirm=\\\"{ok: confirmDefault()}\\\">{{trans('student.attendance_default')}}</button>\\r\\n\\t\\t\\t\\t        \\t<button type=\\\"button\\\" class=\\\"btn btn-danger pull-right m-r-10\\\" v-if=\\\"isEditable && isDeletable\\\" key=\\\"delete-attendance\\\" v-confirm=\\\"{ok: confirmDelete()}\\\">{{trans('general.delete')}}</button>\\r\\n\\t\\t\\t\\t        \\t<button type=\\\"button\\\" @click=\\\"markAllPresent\\\" class=\\\"btn btn-info btn-sm\\\">{{trans('student.attendance_mark_all_present')}}</button>\\r\\n\\t\\t\\t\\t        \\t<button type=\\\"button\\\" @click=\\\"markAllAbsent\\\" class=\\\"btn btn-info btn-sm\\\">{{trans('student.attendance_mark_all_absent')}}</button>\\r\\n\\t\\t\\t\\t        </div>\\r\\n\\r\\n\\t\\t\\t\\t        <div class=\\\"row mt-2\\\" v-if=\\\"student_data.length\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"mr-2\\\"><i class=\\\"fas fa-check text-success\\\"></i> {{trans('student.attendance_present')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"mr-2\\\"><i class=\\\"fas fa-history text-info\\\"></i> {{trans('student.attendance_late')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"mr-2\\\"><i class=\\\"fas fa-coffee text-warning\\\"></i> {{trans('student.attendance_half_day')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"\\\"><i class=\\\"fas fa-times text-danger\\\"></i> {{trans('student.attendance_absent')}}</span>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t        </div>\\r\\n\\t\\t\\t\\t    </form>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n\\texport default {\\r\\n\\t\\tcomponents: {},\\r\\n\\t\\tdata(){\\r\\n\\t\\t\\treturn {\\r\\n\\t\\t\\t\\tattendanceForm: new Form({\\r\\n\\t\\t\\t\\t\\tbatch_id: '',\\r\\n\\t\\t\\t\\t\\tattendance_method: '',\\r\\n\\t\\t\\t\\t\\tsubject_id: '',\\r\\n\\t\\t\\t\\t\\tsession: '',\\r\\n\\t\\t\\t\\t\\tdate_of_attendance: '',\\r\\n\\t\\t\\t\\t\\tstudents: []\\r\\n\\t\\t\\t\\t},false),\\r\\n                disable_filter: false,\\r\\n\\t\\t\\t\\tprevious_date: '',\\r\\n\\t\\t\\t\\tholidays: [],\\r\\n\\t\\t\\t\\tall_holidays: [],\\r\\n\\t\\t\\t\\tattendance: {},\\r\\n\\t\\t\\t\\tattendances: [],\\r\\n\\t\\t\\t\\tdisabled: {\\r\\n\\t\\t\\t\\t\\tdates:[]\\r\\n\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\tall_disabled: {\\r\\n\\t\\t\\t\\t\\tdates:[]\\r\\n\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\theader: [],\\r\\n\\t\\t\\t\\tstudent_data: [],\\r\\n\\t\\t\\t\\tdays: 0,\\r\\n\\t\\t\\t\\tsubjects: [],\\r\\n\\t\\t\\t\\tbatches: [],\\r\\n\\t\\t\\t\\tselected_batch: null,\\r\\n\\t\\t\\t\\tselected_batch_detail: {},\\r\\n\\t\\t\\t\\tstudent_records: [],\\r\\n\\t\\t\\t\\tbatch_with_subjects: [],\\r\\n\\t\\t\\t\\tattendance_methods: [],\\r\\n\\t\\t\\t\\tattendance_method_more_than_once_types: [],\\r\\n\\t\\t\\t\\tisEditable: false,\\r\\n\\t\\t\\t\\tisDeletable: false\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\tmounted(){\\r\\n\\t\\t\\tif(!helper.hasPermission('list-student-attendance')){\\r\\n                helper.notAccessibleMsg();\\r\\n                this.$router.push('/dashboard');\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.attendanceForm.date_of_attendance = helper.getConfig('current_date');\\r\\n\\t\\t\\tthis.previous_date = this.attendanceForm.date_of_attendance;\\r\\n\\t\\t\\tthis.getPreRequisite();\\r\\n\\t\\t},\\r\\n\\t\\tmethods: {\\r\\n\\t\\t\\thasPermission(permission){\\r\\n\\t\\t\\t\\treturn helper.hasPermission(permission);\\r\\n\\t\\t\\t},\\r\\n            resetFilter(){\\r\\n            \\tthis.student_data = [];\\r\\n                this.disable_filter = false;\\r\\n            },\\r\\n\\t\\t\\tgetPreRequisite(){\\r\\n\\t\\t\\t\\tlet loader = this.$loading.show();\\r\\n\\t\\t\\t\\taxios.get('/api/student/attendance/pre-requisite')\\r\\n\\t\\t\\t\\t\\t.then(response => {\\r\\n\\t\\t\\t\\t\\t\\tthis.attendance_methods = response.attendance_methods;\\r\\n\\t\\t\\t\\t\\t\\tthis.attendance_method_more_than_once_types = response.attendance_method_more_than_once_types;\\r\\n\\t\\t\\t\\t\\t\\tthis.batches = response.batches;\\r\\n\\t\\t\\t\\t\\t\\tthis.batch_with_subjects = response.batch_with_subjects;\\r\\n\\t\\t\\t\\t\\t\\tthis.holidays = response.holidays;\\r\\n\\t\\t\\t\\t\\t\\tthis.all_holidays = response.holidays;\\r\\n\\t\\t                response.holidays.forEach(holiday => {\\r\\n\\t\\t                    this.disabled.dates.push(new Date(holiday.date));\\r\\n\\t\\t                    this.all_disabled.dates.push(new Date(holiday.date));\\r\\n\\t\\t                });\\r\\n\\t\\t\\t\\t\\t\\tloader.hide();\\r\\n\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t.catch(error => {\\r\\n\\t\\t\\t\\t\\t\\tloader.hide();\\r\\n\\t\\t\\t\\t\\t\\thelper.showErrorMsg(error);\\r\\n\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tdateSelected(){\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tgetStudent(){\\r\\n\\t\\t\\t\\tthis.disable_filter = true;\\r\\n\\t\\t\\t\\tlet loader = this.$loading.show();\\r\\n\\t\\t\\t\\taxios.post('/api/student/attendance/fetch', {\\r\\n\\t\\t\\t\\t\\tbatch_id: this.attendanceForm.batch_id, \\r\\n\\t\\t\\t\\t\\tdate_of_attendance: this.attendanceForm.date_of_attendance,\\r\\n\\t\\t\\t\\t\\tsubject_id: this.attendanceForm.subject_id,\\r\\n\\t\\t\\t\\t\\tsession: this.attendanceForm.session,\\r\\n\\t\\t\\t\\t\\tattendance_method: this.attendanceForm.attendance_method\\r\\n\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t.then(response => {\\r\\n\\t\\t\\t\\t\\t\\tthis.student_records = response.student_records;\\r\\n\\t\\t\\t\\t\\t\\tthis.selected_batch_detail = response.batch;\\r\\n\\t\\t\\t\\t\\t\\tthis.attendance = response.attendance;\\r\\n\\t\\t\\t\\t\\t\\tthis.attendances = response.attendances;\\r\\n\\t\\t\\t\\t\\t\\tthis.header = response.header;\\r\\n\\t\\t\\t\\t\\t\\tthis.student_data = response.student_data;\\r\\n\\t\\t\\t\\t\\t\\tthis.isEditable = response.is_editable;\\r\\n\\t\\t\\t\\t\\t\\tthis.isDeletable = response.is_deletable;\\r\\n\\t\\t\\t\\t\\t\\tthis.attendanceForm.students = response.current_date_attendance;\\r\\n\\t\\t\\t\\t\\t\\tloader.hide();\\r\\n\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t.catch(error => {\\r\\n\\t\\t\\t\\t\\t\\tthis.disable_filter = false;\\r\\n\\t\\t\\t\\t\\t\\tloader.hide();\\r\\n\\t\\t\\t\\t\\t\\thelper.showErrorMsg(error);\\r\\n\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tonBatchSelect(selectedOption){\\r\\n\\t\\t\\t\\tlet loader = this.$loading.show();\\r\\n\\t\\t\\t\\tthis.attendanceForm.batch_id = selectedOption.id;\\r\\n                let batch = this.batch_with_subjects.find(o => o.id == this.attendanceForm.batch_id);\\r\\n\\r\\n                if (typeof batch == 'undefined') {\\r\\n                \\treturn;\\r\\n                }\\r\\n\\r\\n                this.holidays = this.all_holidays;\\r\\n                this.disabled.dates = this.all_disabled.dates;\\r\\n                let holidays_except = batch.holidays_except && Array.isArray(batch.holidays_except) ? batch.holidays_except : [];\\r\\n\\r\\n                holidays_except.forEach(holiday_except => {\\r\\n\\t                this.disabled.dates = this.disabled.dates.filter(o => helper.toDate(o) != helper.toDate(holiday_except));\\r\\n\\t                this.holidays = this.holidays.filter(o => helper.toDate(o.date) != helper.toDate(holiday_except));\\r\\n                })\\r\\n\\r\\n\\t\\t\\t\\tthis.attendanceForm.attendance_method = batch.options && batch.options.default_attendance_method ? batch.options.default_attendance_method : 'once';\\r\\n\\r\\n\\t\\t\\t\\tthis.attendanceForm.subject_id = '';\\r\\n                this.subjects = [];\\r\\n\\r\\n                batch.subjects.forEach(subject => {\\r\\n                \\tthis.subjects.push({\\r\\n                \\t\\tid: subject.id,\\r\\n                \\t\\tname: subject.name+' ('+subject.code+')'\\r\\n                \\t});\\r\\n                });\\r\\n\\r\\n\\t\\t\\t\\tloader.hide();\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tonBatchRemove(removedOption){\\r\\n\\t\\t\\t\\tthis.attendanceForm.batch_id = '';\\r\\n\\t\\t\\t\\tthis.student_data = [];\\r\\n\\t\\t\\t\\tthis.student_records = [];\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tcurrentDate(date){\\r\\n\\t\\t\\t\\tif (date == moment(this.attendanceForm.date_of_attendance).format('D'))\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\r\\n\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\ttoggleAttendance(student, day){\\r\\n\\t\\t\\t\\tif (! this.isEditable) {\\r\\n\\t\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t\\tlet options = ['late'];\\r\\n\\t\\t\\t\\tif (this.attendanceForm.attendance_method == 'once') {\\r\\n\\t\\t\\t\\t\\toptions.push('half_day');\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\toptions.push('present');\\r\\n\\t\\t\\t\\toptions.push('absent');\\r\\n\\t\\t\\t\\tlet record_detail = this.student_data.find(o => o.id == student.id);\\r\\n\\t\\t\\t\\tlet record = record_detail.attendances[day];\\r\\n\\t\\t\\t\\tlet index = options.indexOf(record.label);\\r\\n\\t\\t\\t\\tindex = ++index%options.length; \\r\\n\\t\\t\\t\\trecord.label = options[index];\\r\\n\\r\\n\\t\\t\\t\\tlet data = this.attendanceForm.students.find(o => o.id == student.id);\\r\\n\\t\\t\\t\\tdata.attendance = options[index];\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tmarkAllPresent(){\\r\\n\\t\\t\\t\\tlet day = moment(this.attendanceForm.date_of_attendance).format('D');\\r\\n\\t\\t\\t\\tthis.student_data.forEach(student => {\\r\\n\\t\\t\\t\\t\\tif (student.sno) {\\r\\n\\t\\t\\t\\t\\t\\tlet record = student.attendances[day];\\r\\n\\t\\t\\t\\t\\t\\tif (record.label != 'unavailable') {\\r\\n\\t\\t\\t\\t\\t\\t\\trecord.label = 'present';\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tlet data = this.attendanceForm.students.find(o => o.id == student.id);\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.attendance = 'present';\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t})\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tmarkAllAbsent(){\\r\\n\\t\\t\\t\\tlet day = moment(this.attendanceForm.date_of_attendance).format('D');\\r\\n\\t\\t\\t\\tthis.student_data.forEach(student => {\\r\\n\\t\\t\\t\\t\\tif (student.sno) {\\r\\n\\t\\t\\t\\t\\t\\tlet record = student.attendances[day];\\r\\n\\t\\t\\t\\t\\t\\tif (record.label != 'unavailable') {\\r\\n\\t\\t\\t\\t\\t\\t\\trecord.label = 'absent';\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\tlet data = this.attendanceForm.students.find(o => o.id == student.id);\\r\\n\\t\\t\\t\\t\\t\\t\\tdata.attendance = 'absent';\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t})\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tsubmit(){\\r\\n\\t\\t\\t\\tlet loader = this.$loading.show();\\r\\n\\t\\t\\t\\tthis.attendanceForm.post('/api/student/attendance')\\r\\n\\t\\t\\t\\t\\t.then(response => {\\r\\n\\t\\t\\t\\t\\t\\tthis.getStudent();\\r\\n\\t\\t\\t\\t\\t\\ttoastr.success(response.message);\\r\\n\\t\\t\\t\\t\\t\\tloader.hide();\\r\\n\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t\\t\\t.catch(error => {\\r\\n\\t\\t\\t\\t\\t\\tloader.hide();\\r\\n\\t\\t\\t\\t\\t\\thelper.showErrorMsg(error);\\r\\n\\t\\t\\t\\t\\t})\\r\\n\\t\\t\\t},\\r\\n            confirmDelete(){\\r\\n                return dialog => this.deleteAttendance();\\r\\n            },\\r\\n            deleteAttendance(){\\r\\n                let loader = this.$loading.show();\\r\\n                axios.post('/api/student/attendance/delete', {\\r\\n                \\t\\tbatch_id: this.attendanceForm.batch_id,\\r\\n                \\t\\tdate_of_attendance: this.attendanceForm.date_of_attendance,\\r\\n                \\t\\tsubject_id: this.attendanceForm.subject_id,\\r\\n                \\t\\tsession: this.attendanceForm.session\\r\\n                \\t})\\r\\n                    .then(response => {\\r\\n                        toastr.success(response.message);\\r\\n                        this.getStudent();\\r\\n                        loader.hide();\\r\\n                    }).catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    });\\r\\n            },\\r\\n            confirmDefault(){\\r\\n                return dialog => this.defaultAttendance();\\r\\n            },\\r\\n            defaultAttendance(){\\r\\n                let loader = this.$loading.show();\\r\\n                axios.post('/api/student/attendance/default', {\\r\\n                \\t\\tbatch_id: this.attendanceForm.batch_id,\\r\\n                \\t\\tdate_of_attendance: this.attendanceForm.date_of_attendance,\\r\\n                \\t\\tsubject_id: this.attendanceForm.subject_id,\\r\\n                \\t\\tsession: this.attendanceForm.session\\r\\n                \\t})\\r\\n                    .then(response => {\\r\\n                        toastr.success(response.message);\\r\\n                        this.getStudent();\\r\\n                        loader.hide();\\r\\n                    }).catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    });\\r\\n            }\\r\\n\\t\\t},\\r\\n\\t\\tcomputed: {\\r\\n\\t\\t},\\r\\n        filters: {\\r\\n          moment(date) {\\r\\n            return helper.formatDate(date);\\r\\n          },\\r\\n          momentDateTime(date) {\\r\\n            return helper.formatDateTime(date);\\r\\n          }\\r\\n        },\\r\\n        watch: {\\r\\n        \\t'attendanceForm.date_of_attendance': function(val){\\r\\n\\t\\t\\t\\tthis.days = moment(val, \\\"YYYY-MM\\\").daysInMonth();\\r\\n\\t\\t\\t\\tthis.previous_date = helper.toDate(val);\\r\\n        \\t}\\r\\n        }\\r\\n\\t}\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n\\t.disabled{\\r\\n\\t\\tbackground-color:#f1f2f3;\\r\\n\\t}\\r\\n\\t.current {\\r\\n\\t\\tfont-weight: 500;\\r\\n\\t\\tfont-size: 120%;\\r\\n\\t}\\r\\n\\t.attendance-table tr th.date-cell{\\r\\n\\t\\ttext-align: center;\\r\\n\\t\\tmin-width: 20px;\\r\\n\\t\\tmax-width: 20px;\\r\\n\\t}\\r\\n\\t.attendance-table tr td span.marking-cell {\\r\\n\\t\\tdisplay: block;\\r\\n\\t\\twidth: 100%;\\r\\n\\t\\theight: 100%;\\r\\n\\t\\ttext-align: center;\\r\\n\\t}\\r\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=77c1c502&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=77c1c502&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=77c1c502&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('77c1c502')) {\n      api.createRecord('77c1c502', component.options)\n    } else {\n      api.reload('77c1c502', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=77c1c502&\", function () {\n      api.rerender('77c1c502', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/attendance/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=77c1c502&\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=77c1c502&lang=css&\""],"names":[],"sourceRoot":""}