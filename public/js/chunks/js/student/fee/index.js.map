{"version":3,"file":"js/chunks/js/student/fee/index.js?id=245191330a342017","mappings":";;;;;;;;;;;;;AAoFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACotltOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClHA;AACA;AACA;AACA;AAIA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AA0PA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AAOA;AAEA;AAUA;AAAA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAKA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAEA;AAAA;AAAA;AACA;AAeA;AACA;AACA;;;;;;;;;;;;;;;;ACxZA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAeA;AAAA;AAGA;AAAA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAEA;AAAA;AAMA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAOA;AAMA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AAWA;AACA;AACA;AACA;AAOA;AACA;AACA;AAEA;AAAA;AAWA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAQA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAgBA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAOA;AAAA;AAKA;AAAA;AAEA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AA4BA;AACA;AACA;AACA;AACA;AACA;AA+EA;AA2BA;AAEA;AAOA;AAGA;AAgBA;AAQA;AACA;AAEA;AACA;AAwBA;AA4FA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAIA;AACA;AACA;AAmBA;AAEA;AAgBA;AAEA;AASA;AAEA;AAuBA;AAEA;AACA;AAIA;AAIA;AACA;AACA;AAmBA;AAEA;AAQA;AAEA;AACA;AAIA;AACA;AAGA;AACA;AACA;AAGA;AAEA;AAqBA;AAGA;AACA;AAEA;AAEA;AAGA;AACA;AAEA;AAEA;AACA;AAEA;AAGA;AAEA;AA8CA;AAMA;AAAA;AAAA;AAAA;AASA;AAYA;AAkFA;AAGA;AAAA;AACA;AAAA;AAsCA;AAAA;AAEA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AAGA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAKA;AAYA;AACA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;AC7kCA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AAGA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AASA;AAAA;AAQA;AAAA;AAIA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAEA;AAAA;AASA;AACA;AACA;AAGA;AACA;AAEA;AAWA;AAAA;AAAA;AAAA;AAEA;AAAA;AAeA;AAAA;AAWA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAcA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAUA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAUA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAUA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAgBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAeA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAeA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAgBA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAaqBA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;ACnkBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AAGA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AASA;AAAA;AAQA;AAAA;AAIA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAIA;AAAA;AAKA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAgBA;AACA;AACA;AAGA;AACA;AAEA;AAeA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAMA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAkBA;AAAA;AAAA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAMA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAYA;AAAA;AAAA;AAAA;AAEA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAIA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAYA;AAAA;AAMA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAkBA;AACA;AACA;AACA;AACA;AASA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAkBA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AAKA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAYA;AAEA;AAAA;AAAA;AACA;AAOA;AAAA;AAEA;AAQA;AACA;AACA;;;;;;;;;;;;;;;;ACviCA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AAIA;AAAA;AAYA;AAAA;AAcA;AAAA;AAgBA;AAAA;AAiBA;AAAA;AAQA;AAAA;AAoBA;AAAA;AACA;AAAA;AAGA;AAAA;AAIA;AAAA;AAgBA;AAAA;AAgBA;AAAA;AAUA;AAAA;AA0EA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5OA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/student/fee/fee-detail.vue","webpack://InstiKit/resources/js/views/student/fee/index.vue","webpack://InstiKit/resources/js/views/student/fee/payment-parent.vue","webpack://InstiKit/resources/js/views/student/fee/payment.vue","webpack://InstiKit/resources/js/views/student/summary.vue","webpack://InstiKit/./resources/js/views/student/fee/fee-detail.vue","webpack://InstiKit/./resources/js/views/student/fee/index.vue","webpack://InstiKit/./resources/js/views/student/fee/payment-parent.vue","webpack://InstiKit/./resources/js/views/student/fee/payment.vue","webpack://InstiKit/./resources/js/views/student/summary.vue","webpack://InstiKit/./resources/js/views/student/fee/index.vue?ad01","webpack://InstiKit/./resources/js/views/student/fee/payment-parent.vue?bf56","webpack://InstiKit/./resources/js/views/student/fee/index.vue?4800","webpack://InstiKit/./resources/js/views/student/fee/payment-parent.vue?b0da","webpack://InstiKit/./resources/js/views/student/fee/fee-detail.vue?37ee","webpack://InstiKit/./resources/js/views/student/fee/index.vue?c339","webpack://InstiKit/./resources/js/views/student/fee/payment-parent.vue?6c52","webpack://InstiKit/./resources/js/views/student/fee/payment.vue?1c4c","webpack://InstiKit/./resources/js/views/student/summary.vue?20b6","webpack://InstiKit/./resources/js/views/student/fee/fee-detail.vue?b9ce","webpack://InstiKit/./resources/js/views/student/fee/index.vue?480c","webpack://InstiKit/./resources/js/views/student/fee/payment-parent.vue?3ea0","webpack://InstiKit/./resources/js/views/student/fee/payment.vue?391e","webpack://InstiKit/./resources/js/views/student/summary.vue?8744","webpack://InstiKit/./resources/js/views/student/fee/fee-detail.vue?d9f3","webpack://InstiKit/./resources/js/views/student/fee/index.vue?aa54","webpack://InstiKit/./resources/js/views/student/fee/payment-parent.vue?1133","webpack://InstiKit/./resources/js/views/student/fee/payment.vue?d282","webpack://InstiKit/./resources/js/views/student/summary.vue?1cde","webpack://InstiKit/./resources/js/views/student/fee/index.vue?bd22","webpack://InstiKit/./resources/js/views/student/fee/payment-parent.vue?c51c"],"sourcesContent":["<template>\r\n\t<div>\r\n        <template v-for=\"txn in transactions\">\r\n            <button class=\"btn btn-info m-r-10\" @click=\"transaction = txn\" type=\"button\">{{(txn.prefix || '')+''+txn.number}}</button>\r\n        </template>\r\n        <button type=\"button\" class=\"btn btn-info btn-sm pull-right\" v-tooltip=\"trans('finance.print_receipt')\" @click=\"printReceipt\"><i class=\"fas fa-print\"></i></button>\r\n        <template v-if=\"transaction.id\">\r\n            <div class=\"table-responsive m-t-20\">\r\n                <table class=\"table table-bordered\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>{{trans('finance.receipt_no')}}</td>\r\n                            <td>{{(transaction.prefix || '')+''+transaction.number}}\r\n                                <span v-if=\"transactionGroup.length > 1\">({{transactionGroup.toString()}})</span>\r\n                            </td>\r\n                            <template v-if=\"!transaction.is_online_payment\">\r\n                                <td>{{trans('finance.account')}}</td>\r\n                                <td>{{transaction.account ? transaction.account.name : ''}}</td>\r\n                            </template>\r\n                            <template v-else>\r\n                                <td>{{trans('finance.payment_method')}}</td>\r\n                                <td>{{trans('finance.online_payment')}}</td>\r\n                            </template>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>{{trans('finance.amount')}}</td>\r\n                            <td>{{formatCurrency(transaction.amount)}}</td>\r\n                            <td>{{trans('finance.date')}}</td>\r\n                            <td>{{transaction.date | moment}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <template v-if=\"!transaction.is_online_payment\">\r\n                                <td>{{trans('finance.payment_method')}}</td>\r\n                                <td>\r\n                                    {{transaction.payment_method.name}}\r\n                                    <span v-if=\"transaction.instrument_number\"><br />{{trans('finance.instrument_number')}}: {{transaction.instrument_number}}</span>\r\n                                    <span v-if=\"transaction.instrument_date\"><br />{{trans('finance.instrument_date')}}: <span>{{transaction.instrument_date | moment}}</span></span>\r\n                                    <span v-if=\"transaction.instrument_clearing_date\"><br />{{trans('finance.instrument_clearing_date')}}: <span>{{transaction.instrument_clearing_date | moment}}</span></span>\r\n                                    <span v-if=\"transaction.instrument_bank_detail\"><br />{{trans('finance.instrument_bank_detail')}}: {{transaction.instrument_bank_detail}}</span>\r\n                                    <span v-if=\"transaction.reference_number\"><br />{{trans('finance.reference_number')}}: {{transaction.reference_number}}</span>\r\n                                </td>\r\n                            </template>\r\n                            <template v-else>\r\n                                <td>{{trans('finance.reference_number')}}</td>\r\n                                <td>{{transaction.reference_number}}</td>\r\n                            </template>\r\n                            <td>{{trans('finance.date_of_entry')}}</td>\r\n                            <td>{{transaction.created_at | momentDateTime}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <template v-if=\"!transaction.is_online_payment\">\r\n                                <td>{{trans('finance.remarks')}}</td>\r\n                                <td>{{transaction.remarks}}</td>\r\n                                <td>{{trans('finance.entry_by')}}</td>\r\n                                <td>\r\n                                    {{getEmployeeName(transaction.user.employee)}}\r\n                                </td>\r\n                            </template>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-block btn-danger\" v-if=\"transaction.is_deletable && hasPermission('cancel-fee-payment')\" @click=\"cancel_fee_payment = true\">{{trans('student.cancel_fee_payment')}}</button>\r\n            <template v-if=\"cancel_fee_payment\">\r\n                <form @submit.prevent=\"cancelPayment\" class=\"m-t-20\" @keydown=\"cancelPaymentForm.errors.clear($event.target.name)\" v-if=\"transaction.is_deletable\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <div class=\"form-group\" v-if=\"transactionGroup.length > 1\">\r\n                                <div>{{trans('finance.cancel_all_group_fee_payment',{numbers: transactionGroup.toString()})}}</div>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <autosize-textarea v-model=\"cancelPaymentForm.cancellation_remarks\" rows=\"2\" name=\"cancellation_remarks\" :placeholder=\"trans('student.cancellation_remarks')\"></autosize-textarea>\r\n                                <show-error :form-name=\"cancelPaymentForm\" prop-name=\"cancellation_remarks\"></show-error>\r\n                            </div>\r\n                            <button type=\"submit\" class=\"btn btn-danger waves-effect waves-light\">{{trans('general.save')}}</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </template>\r\n        </template>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n        components: {},\r\n\t\tprops: ['id','uuid','rid'],\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\ttransactions: [],\r\n                transaction: {},\r\n                cancel_fee_payment: false,\r\n                cancelPaymentForm: new Form({\r\n                    cancellation_remarks: ''\r\n                })\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted(){\r\n            this.getDetail(this.id);\r\n\t\t},\r\n\t\tmethods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n\t\t\tformatCurrency(amount){\r\n\t\t\t\treturn helper.formatCurrency(amount);\r\n\t\t\t},\r\n\t\t\tgetDetail(id) {\r\n                let loader = this.$loading.show();\r\n\t\t\t\taxios.get('/api/student/'+this.uuid+'/fee/'+this.rid+'/'+id)\r\n\t\t\t\t\t.then(response => {\r\n\t\t\t\t\t\tthis.transactions = response.transactions;\r\n                        this.transaction = response.transactions[0];\r\n                        loader.hide();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch(error => {\r\n                        loader.hide();\r\n\t\t\t\t\t\thelper.showErrorMsg(error);\r\n\t\t\t\t\t});\r\n\t\t\t},\r\n            getEmployeeName(employee){\r\n                return helper.getEmployeeName(employee);\r\n            },\r\n            cancelPayment(){\r\n                let loader = this.$loading.show();\r\n                this.cancelPaymentForm.post('/api/student/'+this.uuid+'/fee/'+this.rid+'/'+this.id+'/'+this.transaction.id+'/cancel')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            printReceipt(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/student/'+this.uuid+'/fee/'+this.rid+'/'+this.id+'/'+this.transaction.id+'/print')\r\n                    .then(response => {\r\n                        let print = window.open(\"/print\");\r\n                        loader.hide();\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            }\r\n\t\t},\r\n        computed: {\r\n            transactionGroup(){\r\n                let group = [];\r\n                this.transaction.groups.forEach(txn => {\r\n                    group.push((txn.prefix || '')+''+txn.number);\r\n                });\r\n                group.sort();\r\n\r\n                return group;\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        },\r\n\t\twatch: {\r\n\t\t\tid(val) {\r\n\t\t\t\tif (val) {\r\n\t\t\t\t\tthis.getDetail(val);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>","<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('finance.fee_detail')}} <small v-if=\"student_record.student\">{{getStudentName(student_record.student)}}  ({{student_record.academic_session.name}})</small>\r\n                    </h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <router-link to=\"/student/list\" class=\"btn btn-info btn-sm\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('student.student')}}</span></router-link>\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\r\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\r\n                            </button>\r\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"$router.push('/student/'+student_record.student.uuid)\"><i class=\"fas fa-arrow-circle-right\"></i> {{trans('student.view_detail')}}</button>\r\n                                <button class=\"dropdown-item custom-dropdown\" v-if=\"hasPermission('set-fee')\" @click=\"$router.push('/student/'+student_record.student.uuid+'/fee/'+student_record.id+'/set')\"><i class=\"fas fa-file\"></i> {{trans('student.set_fee')}}</button>\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"card\">\r\n                        <div class=\"card-body py-4\">\r\n                            <student-summary :student-record=\"student_record\" class=\"border-bottom\"></student-summary>\r\n                        </div>\r\n                        <div class=\"card-body\">\r\n                            <div class=\"row justify-content-end px-4\" v-if=\"hasPermission('customize-fee-date')\">\r\n                                <div class=\"col-12 col-sm-3\">\r\n                                    <div class=\"form-group\">\r\n                                        <datepicker v-model=\"feePayment.date\" :bootstrapStyling=\"true\" :placeholder=\"trans('student.date_of_payment')\"></datepicker>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <template v-for=\"fee_allocation_group in student_record.fee_allocation.fee_allocation_groups\">\r\n                                <h4 class=\"card-title m-l-20\">{{fee_allocation_group.fee_group.name}}</h4>\r\n                                <div class=\"table-responsive p-3\">\r\n                                    <table class=\"table table-sm\">\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>{{trans('finance.fee_installment_title')}}</th>\r\n                                                <th>{{trans('finance.fee_installment_due_date')}}</th>\r\n                                                <th v-for=\"fee_head in fee_allocation_group.fee_group.fee_heads\" v-text=\"fee_head.name\"></th>\r\n                                                <th>\r\n                                                    <span v-if=\"fee_allocation_group.fee_group.options.has_transport\">{{trans('transport.circle')}}</span>\r\n                                                </th>\r\n                                                <th>\r\n                                                    <span v-if=\"fee_allocation_group.fee_group.options.has_transport\">{{trans('transport.fee')}}</span>\r\n                                                </th>\r\n                                                <th>{{trans('finance.late_fee')}}</th>\r\n                                                <th>{{trans('finance.installment_total')}}</th>\r\n                                                <th>{{trans('finance.other')}}</th>\r\n                                                <th>{{trans('finance.paid')}}</th>\r\n                                                <th>{{trans('finance.balance')}}</th>\r\n                                                <th v-if=\"hasPermission('make-fee-payment')\">{{trans('finance.pay_fee')}}</th>\r\n                                                <th v-else>{{trans('finance.fee_status')}}</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            <tr v-for=\"fee_installment in fee_allocation_group.fee_installments\">\r\n                                                <td>{{fee_installment.title}}</td>\r\n                                                <td>{{getInstallmentDueDate(fee_installment)}}\r\n                                                    <template v-if=\"isInstallmentOverdue(fee_installment)\">\r\n                                                        <br />\r\n                                                        <span class=\"label label-danger\">{{trans('finance.fee_overdue_day', {day: isInstallmentOverdue(fee_installment)})}}</span>\r\n                                                    </template>\r\n                                                </td>\r\n                                                <td v-for=\"fee_head in fee_allocation_group.fee_group.fee_heads\">\r\n                                                    <span v-if=\"checkInstallmentConcession(fee_installment, fee_head.id)\" style=\"text-decoration: line-through;\">{{getInstallmentFeeAmountWithoutConcession(fee_installment, fee_head.id)}}</span>\r\n                                                    {{getInstallmentFeeAmount(fee_installment, fee_head.id)}}\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span v-if=\"fee_allocation_group.fee_group.options.has_transport\">{{getTransportCircleName(fee_installment)}}</span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span v-if=\"fee_allocation_group.fee_group.options.has_transport\">{{getTransportFeeAmount(fee_installment)}}</span>\r\n                                                </td>\r\n                                                <td>{{getLateFeeAmount(fee_installment)}}</td>\r\n                                                <td>{{getInstallmentTotalAmount(fee_installment)}}</td>\r\n                                                <td>{{getInstallmentOtherAmount(fee_installment)}}</td>\r\n                                                <td>{{getInstallmentPaidAmount(fee_installment)}}</td>\r\n                                                <td>{{getInstallmentBalanceAmount(fee_installment)}}</td>\r\n                                                <td v-if=\"hasPermission('make-fee-payment')\">\r\n                                                    <span v-if=\"getInstallmentStatus(fee_installment) == 'unpaid'\">\r\n                                                        <button type=\"button\" class=\"btn btn-info btn-sm\" @click=\"showInstallmentDetail(fee_allocation_group,fee_installment)\">{{trans('finance.pay_fee')}}</button>\r\n                                                    </span>\r\n                                                    <span v-else-if=\"getInstallmentStatus(fee_installment) == 'cancelled'\">\r\n                                                        <span class=\"label label-danger\">{{trans('finance.fee_status_cancelled')}}</span>\r\n                                                    </span>\r\n                                                    <span v-else>\r\n                                                        <div class=\"btn-group\">\r\n                                                            <template v-if=\"getInstallmentStatus(fee_installment) == 'paid'\">\r\n                                                                <button class=\"btn btn-sm btn-success\">{{trans('student.fee_status_paid')}}</button>\r\n                                                                <button type=\"button\" class=\"btn btn-sm btn-success dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                    <span class=\"sr-only\">Toggle Dropdown</span>\r\n                                                                </button>\r\n                                                            </template>\r\n                                                            <template v-if=\"getInstallmentStatus(fee_installment) == 'partially_paid'\">\r\n                                                                <button class=\"btn btn-sm btn-warning\" @click=\"showInstallmentDetail(fee_allocation_group,fee_installment)\">{{trans('student.fee_status_partially_paid')}}</button>\r\n                                                                <button type=\"button\" class=\"btn btn-sm btn-warning dropdown-toggle dropdown-toggle-split\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                                                    <span class=\"sr-only\">Toggle Dropdown</span>\r\n                                                                </button>\r\n                                                            </template>\r\n\r\n                                                            <div class=\"dropdown-menu\">\r\n                                                                <button class=\"dropdown-item custom-dropdown-menu\" @click.prevent=\"setTransaction(fee_installment)\" v-if=\"getInstallmentPaid(fee_installment)\">\r\n                                                                    <i class=\"fas fa-arrow-circle-right\"></i> {{trans('finance.receipt_detail')}}\r\n                                                                </button>\r\n                                                                <button class=\"dropdown-item custom-dropdown-menu\" :key=\"fee_installment.id\" v-confirm=\"{ok: confirmEmptyReceiptDelete(fee_installment)}\" v-else-if=\"!getInstallmentPaid(fee_installment) && hasPermission('cancel-fee-payment')\">\r\n                                                                    <i class=\"fas fa-arrow-circle-right\"></i> {{trans('student.cancel_fee_payment')}}\r\n                                                                </button>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </span>\r\n                                                </td>\r\n                                                <td v-else>\r\n                                                    <span v-if=\"getInstallmentStatus(fee_installment) == 'unpaid'\">{{trans('student.fee_status_unpaid')}}</span>\r\n                                                    <span v-else>{{trans('student.fee_status_paid')}}</span>\r\n                                                </td>\r\n                                            </tr>\r\n\r\n                                            <tr>\r\n                                                <th colspan=\"2\">{{trans('general.total')}}</th>\r\n                                                <th v-for=\"fee_head in fee_allocation_group.fee_group.fee_heads\">\r\n                                                    {{getTotalFee(fee_allocation_group, fee_head.id)}}\r\n                                                </th>\r\n                                                <th></th>\r\n                                                <th>\r\n                                                    <span v-if=\"fee_allocation_group.fee_group.options.has_transport\">{{getTransportFeeTotal(fee_allocation_group)}}</span>\r\n                                                </th>\r\n                                                <th>{{getLateFeeTotal(fee_allocation_group)}}</th>\r\n                                                <th>{{getInstallmentGrandTotal(fee_allocation_group)}}</th>\r\n                                                <th>{{getInstallmentGrandOther(fee_allocation_group)}}</th>\r\n                                                <th>{{getInstallmentPaidGrandTotal(fee_allocation_group)}}</th>\r\n                                                <th>{{getInstallmentBalanceGrandTotal(fee_allocation_group)}}</th>\r\n                                                <th v-if=\"hasPermission('make-fee-payment')\"></th>\r\n                                                <th v-else></th>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    </table>\r\n                                </div>\r\n                            </template>\r\n\r\n\r\n                            <div class=\"table-responsive p-3\">\r\n                                <table class=\"table table\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>{{trans('finance.installment_total')}}</th>\r\n                                            <th>{{trans('finance.other')}}</th>\r\n                                            <th>{{trans('finance.paid')}}</th>\r\n                                            <th>{{trans('finance.balance')}}</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>{{finalTotal}}</td>\r\n                                            <td>{{finalOther}}</td>\r\n                                            <td>{{finalPaid}}</td>\r\n                                            <td>{{finalBalance}}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n\r\n                            <div class=\"row justify-content-md-center\" v-if=\"resetFeeOption && hasPermission('set-fee')\">\r\n                                <div class=\"col-4\">\r\n                                    <button class=\"btn btn-danger btn-block\" :key=\"student_record.id\" v-confirm=\"{ok: confirmResetFee(student_record)}\" v-tooltip=\"trans('student.reset_fee')\">{{trans('student.reset_fee')}}</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <fee-payment-form v-if=\"feePaymentForm && hasNotAnyRole(['parent','student']) && hasPermission('make-fee-payment')\" :uuid=\"uuid\" :id=\"record_id\" :fee-payment=\"feePayment\" @completed=\"paymentMade\" @closeFeePaymentForm=\"feePaymentForm = false\"></fee-payment-form>\r\n        <fee-payment-parent-form v-if=\"feePaymentForm && hasAnyRole(['parent','student']) && hasPermission('make-fee-payment')\" :uuid=\"uuid\" :id=\"record_id\" :fee-payment=\"feePayment\" @completed=\"paymentMade\" @closeFeePaymentForm=\"feePaymentForm = false\"></fee-payment-parent-form>\r\n\r\n        <transition name=\"modal\" v-if=\"feePaymentShow\">\r\n            <div class=\"modal-mask\">\r\n                <div class=\"modal-wrapper\">\r\n                    <div class=\"modal-container modal-lg\">\r\n                        <div class=\"modal-header\">\r\n                            <slot name=\"header\">\r\n                                {{trans('finance.fee_payment')}}\r\n                                <span class=\"float-right pointer\" @click=\"feePaymentShow = false\">x</span>\r\n                            </slot>\r\n                        </div>\r\n                        <div class=\"modal-body\">\r\n                            <slot name=\"body\">\r\n                                <div style=\"max-height:600px;\">\r\n                                    <fee-detail :uuid=\"uuid\" :rid=\"record_id\" :id=\"student_fee_record_id\" @completed=\"getRecord\"></fee-detail>\r\n                                    <div class=\"clearfix\"></div>\r\n                                </div>\r\n                            </slot>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </transition>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import studentSummary from './../summary'\r\n    import feePaymentForm from './payment'\r\n    import feePaymentParentForm from './payment-parent'\r\n    import feeDetail from './fee-detail'\r\n\r\n    export default {\r\n        components : {studentSummary,feePaymentForm,feePaymentParentForm,feeDetail},\r\n        data() {\r\n            return {\r\n                uuid:this.$route.params.uuid,\r\n                record_id:this.$route.params.record_id,\r\n                student_record: {\r\n                    fee_allocation: {\r\n                        fee_allocation_groups: []\r\n                    }\r\n                },\r\n                feePayment: {\r\n                    fee_group_name: '',\r\n                    fee_payment_installment_id: '',\r\n                    student_fee_record_id: '',\r\n                    date: helper.today(),\r\n                    installments: [],\r\n                    amount: 0\r\n                },\r\n                fee: {\r\n                    groups: []\r\n                },\r\n                feePaymentForm: false,\r\n                feePaymentShow: false\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('list-student-fee')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.getRecord();\r\n            helper.showDemoNotification(['student']);\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            hasAnyRole(roles){\r\n                return helper.hasAnyRole(roles);\r\n            },\r\n            hasNotAnyRole(roles){\r\n                return helper.hasNotAnyRole(roles);\r\n            },\r\n            getConfig(config){\r\n                return helper.getConfig(config);\r\n            },\r\n            getStudentName(student){\r\n                return helper.getStudentName(student);\r\n            },\r\n            getRecord(){\r\n                let loader = this.$loading.show();\r\n                this.feePaymentForm = false;\r\n                this.feePaymentShow = false;\r\n                axios.get('/api/student/'+this.uuid+'/fee/'+this.record_id)\r\n                    .then(response => {\r\n                        this.student_record = response.student_record;\r\n\r\n                        if (! this.student_record.student_fee_records.length) {\r\n                            this.$router.push('/student/'+this.uuid); \r\n                        }\r\n\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        if (this.hasAnyRole(['student','parent'])) {\r\n                            this.$router.push('/student/list')\r\n                        } else {\r\n                           this.$router.push('/student/'+this.uuid+'/fee/'+this.record_id+'/create'); \r\n                        }\r\n                    });\r\n            },\r\n            calculate(){\r\n                this.fee = {\r\n                    groups: []\r\n                };\r\n                this.student_record.fee_allocation.fee_allocation_groups.forEach(fee_allocation_group => {\r\n                    let installments = [];\r\n                    let heads = [];\r\n                    let foots = [];\r\n                    heads.push(i18n.finance.fee_installment_title);\r\n                    heads.push(i18n.finance.fee_installment_due_date);\r\n\r\n                    fee_allocation_group.fee_group.fee_heads.forEach(fee_head => {\r\n                        heads.push(fee_head.name);\r\n                    });\r\n\r\n                    if (fee_allocation_group.fee_group.options.has_transport) {\r\n                        heads.push(i18n.transport.circle);\r\n                        heads.push(i18n.transport.fee);\r\n                    }\r\n\r\n                    foots.push(i18n.finance.total);\r\n                    foots.push('');\r\n\r\n                    heads.push(i18n.finance.late_fee);\r\n                    heads.push(i18n.finance.installment_total);\r\n                    heads.push(i18n.finance.other);\r\n                    heads.push(i18n.finance.paid);\r\n                    heads.push(i18n.finance.balance);\r\n                    heads.push(i18n.finance.fee_status);\r\n\r\n                    fee_allocation_group.fee_installments.forEach(fee_installment => {\r\n                        let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n                        \r\n                        let installment_data = [];\r\n                        installment_data.push({\r\n                            text: fee_installment.title\r\n                        });\r\n                        installment_data.push({\r\n                            text: this.showDate(student_fee_record.due_date || fee_installment.due_date)\r\n                        });\r\n\r\n                        fee_allocation_group.fee_group.fee_heads.forEach(fee_head => {\r\n                            installment_data.push({\r\n                                text: this.getInstallmentFeeAmount(fee_installment, fee_head.id),\r\n                                actual: this.getInstallmentFeeAmountWithoutConcession(fee_installment, fee_head.id),\r\n                                is_concession: this.checkInstallmentConcession(fee_installment, fee_head.id) ? true : false\r\n                            });\r\n                        });\r\n\r\n                        if (fee_allocation_group.fee_group.options.has_transport) {\r\n                            installment_data.push({\r\n                                text: this.getTransportCircleName(fee_installment)\r\n                            });\r\n                            installment_data.push({\r\n                                text: this.getTransportFeeAmount(fee_installment)\r\n                            });\r\n                        }\r\n\r\n                        installment_data.push({\r\n                            text: this.getLateFeeAmount(fee_installment)\r\n                        });\r\n\r\n                        installment_data.push({\r\n                            text: this.getInstallmentTotalAmount(fee_installment)\r\n                        })\r\n\r\n                        installment_data.push({\r\n                            text: this.getInstallmentOtherAmount(fee_installment)\r\n                        })\r\n\r\n                        installment_data.push({\r\n                            text: this.getInstallmentPaidAmount(fee_installment)\r\n                        })\r\n\r\n                        installment_data.push({\r\n                            text: this.getInstallmentBalanceAmount(fee_installment)\r\n                        })\r\n\r\n                        installment_data.push({\r\n                            text: this.getInstallmentPrintStatus(fee_installment)\r\n                        })\r\n\r\n                        installments.push({\r\n                            data: installment_data\r\n                        });\r\n                    });\r\n\r\n                    fee_allocation_group.fee_group.fee_heads.forEach(fee_head => {\r\n                        foots.push(this.getTotalFee(fee_allocation_group, fee_head.id));\r\n                    });\r\n                    \r\n                    if (fee_allocation_group.fee_group.options.has_transport) {\r\n                        foots.push('');\r\n                        foots.push(this.getTransportFeeTotal(fee_allocation_group));\r\n                    }\r\n                    \r\n                    foots.push(this.getLateFeeTotal(fee_allocation_group));\r\n                    foots.push(this.getInstallmentGrandTotal(fee_allocation_group));\r\n                    foots.push(this.getInstallmentGrandOther(fee_allocation_group));\r\n                    foots.push(this.getInstallmentPaidGrandTotal(fee_allocation_group));\r\n                    foots.push(this.getInstallmentBalanceGrandTotal(fee_allocation_group));\r\n                    foots.push('');\r\n\r\n                    let group = {\r\n                        name: fee_allocation_group.fee_group.name,\r\n                        heads: heads,\r\n                        installments: installments,\r\n                        foots: foots,\r\n                    }\r\n                    this.fee.groups.push(group);\r\n                });\r\n            },\r\n            formatCurrency(amount){\r\n                return helper.formatCurrency(amount);\r\n            },\r\n            isInstallmentOverdue(fee_installment){\r\n                let installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n\r\n                if (helper.today() > (installment.due_date || fee_installment.due_date) && installment.status != 'paid') {\r\n                    return helper.getDateDiff(installment.due_date || fee_installment.due_date);\r\n                }\r\n\r\n                return 0;\r\n            },\r\n            getStatus(fee_installment) {\r\n                let installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n                if (installment.status == 'paid') {\r\n                    return '<span class=\"label label-success\">'+i18n.student.fee_status_paid+'</span>';\r\n                } else if(installment.status == 'partially_paid') {\r\n                    return '<span class=\"label label-warning\">'+i18n.student.fee_status_partially_paid+'</span>';\r\n                } else if(installment.status == 'cancelled') {\r\n                    return '<span class=\"label label-danger\">'+i18n.student.fee_status_cancelled+'</span>';\r\n                } else {\r\n                    return '<span class=\"label label-danger\">'+i18n.student.fee_status_unpaid+'</span>';\r\n                }\r\n            },\r\n            getInstallmentDueDate(fee_installment){\r\n                let installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n\r\n                return helper.formatDate(installment.due_date || fee_installment.due_date);\r\n            },\r\n            getInstallmentStatus(fee_installment){\r\n                let installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n\r\n                return installment.status;\r\n            },\r\n            getInstallmentFee(fee_installment, fee_head_id){\r\n                let amount = this.getInstallmentFeeWithoutConcession(fee_installment, fee_head_id);\r\n                return this.getInstallmentFeeWithConcession(amount, fee_installment, fee_head_id);\r\n            },\r\n            getInstallmentFeeWithoutConcession(fee_installment, fee_head_id){\r\n                let installment_detail = fee_installment.fee_installment_details.find(o => o.fee_head_id == fee_head_id);\r\n\r\n                if (typeof installment_detail == 'undefined')\r\n                    return 0;\r\n\r\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n                let student_optional_fee_record = student_fee_record.student_optional_fee_records.findIndex(o => o.fee_head_id == fee_head_id);\r\n\r\n                return (student_optional_fee_record < 0) ? installment_detail.amount : 0;\r\n            },\r\n            checkInstallmentConcession(fee_installment, fee_head_id){\r\n                let installment_detail = fee_installment.fee_installment_details.find(o => o.fee_head_id == fee_head_id);\r\n\r\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n\r\n                let fee_concession_index = (student_fee_record.fee_concession) ? student_fee_record.fee_concession.fee_concession_details.findIndex(o => o.fee_head_id == fee_head_id) : -1;\r\n\r\n                return (fee_concession_index >= 0) ? true : false;\r\n            },\r\n            getInstallmentFeeWithConcession(amount, fee_installment, fee_head_id){\r\n                let installment_detail = fee_installment.fee_installment_details.find(o => o.fee_head_id == fee_head_id);\r\n\r\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n\r\n                let fee_concession_index = (student_fee_record.fee_concession) ? student_fee_record.fee_concession.fee_concession_details.findIndex(o => o.fee_head_id == fee_head_id) : -1;\r\n\r\n                if (fee_concession_index >= 0) {\r\n                    let fee_concession = student_fee_record.fee_concession.fee_concession_details[fee_concession_index];\r\n\r\n                    let fee_concession_amount = fee_concession.type == 'percent' ? (amount * (fee_concession.amount/100)) : fee_concession.amount;\r\n\r\n                    return ((amount - fee_concession_amount) >= 0) ? Math.ceil(amount - fee_concession_amount) : 0;\r\n                }\r\n\r\n                return Math.ceil(amount);\r\n            },\r\n            getInstallmentFeeAmountWithoutConcession(fee_installment, fee_head_id){\r\n                let amount = this.getInstallmentFeeWithoutConcession(fee_installment, fee_head_id);\r\n\r\n                return helper.formatCurrency(amount);\r\n            },\r\n            getInstallmentFeeAmount(fee_installment, fee_head_id){\r\n                let amount = this.getInstallmentFee(fee_installment, fee_head_id);\r\n                return helper.formatCurrency(amount);\r\n            },\r\n            getInstallmentTotalWithoutLateFee(fee_installment){\r\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id)\r\n\r\n                let total = 0;\r\n                fee_installment.fee_installment_details.forEach(installment_detail => {\r\n                    total += this.getInstallmentFee(fee_installment, installment_detail.fee_head_id);\r\n                });\r\n\r\n                let transport_fee = this.getTransportFee(fee_installment);\r\n\r\n                total += ((Number.isInteger(transport_fee)) ? transport_fee : 0);\r\n\r\n                return total;\r\n            },\r\n            getInstallmentTotal(fee_installment){\r\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id)\r\n                \r\n                let total = this.getInstallmentTotalWithoutLateFee(fee_installment);\r\n\r\n                if (total || student_fee_record.status != 'unpaid') {\r\n                    let late_fee = this.getLateFee(fee_installment);\r\n                    total += ((Number.isInteger(late_fee)) ? late_fee : 0);\r\n                }\r\n\r\n                return total;\r\n            },\r\n            getInstallmentTotalAmount(fee_installment){\r\n                let amount = this.getInstallmentTotal(fee_installment);\r\n                return helper.formatCurrency(amount);\r\n            },\r\n            getInstallmentOther(fee_installment){\r\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n\r\n                let other = 0;\r\n                student_fee_record.transactions.forEach(transaction => {\r\n                    if (! transaction.is_cancelled) {\r\n                        if (transaction.options.additional_fee_charge && transaction.options.additional_fee_charge.amount) {\r\n                            other += transaction.options.additional_fee_charge.amount;\r\n                        }\r\n                        if (transaction.options.additional_fee_discount && transaction.options.additional_fee_discount.amount) {\r\n                            other -= transaction.options.additional_fee_discount.amount;\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return other;\r\n            },\r\n            getInstallmentOtherAmount(fee_installment){\r\n                let amount = this.getInstallmentOther(fee_installment);\r\n                return helper.formatCurrency(amount);\r\n            },\r\n            getInstallmentPaid(fee_installment){\r\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n\r\n                let paid = 0;\r\n                student_fee_record.transactions.forEach(transaction => {\r\n                    if (! transaction.is_cancelled)\r\n                        paid += transaction.amount;\r\n                });\r\n\r\n                return paid;\r\n            },\r\n            getInstallmentPaidAmount(fee_installment){\r\n                let amount = this.getInstallmentPaid(fee_installment);\r\n                return helper.formatCurrency(amount);\r\n            },\r\n            getInstallmentBalance(fee_installment){\r\n                let total = this.getInstallmentTotal(fee_installment);\r\n                let other = this.getInstallmentOther(fee_installment);\r\n                let paid = this.getInstallmentPaid(fee_installment);\r\n                return total + other - paid;\r\n            },\r\n            getInstallmentBalanceAmount(fee_installment){\r\n                let amount = this.getInstallmentBalance(fee_installment);\r\n                return helper.formatCurrency(amount);\r\n            },\r\n            getTransportCircleName(fee_installment){\r\n                let installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n                return installment.transport_circle ? installment.transport_circle.name : '-';\r\n            },\r\n            getTransportFee(fee_installment){\r\n                let installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n\r\n                if (! installment.transport_circle_id || ! fee_installment.transport_fee_id)\r\n                    return '-';\r\n\r\n                let transport_fee = fee_installment.transport_fee.transport_fee_details.find(o => o.transport_circle_id == installment.transport_circle_id);\r\n                return transport_fee.amount;\r\n            },\r\n            getTransportFeeAmount(fee_installment){\r\n                let amount = this.getTransportFee(fee_installment);\r\n                return (Number.isInteger(amount)) ? helper.formatCurrency(amount) : '-';\r\n            },\r\n            getLateFeeAmount(fee_installment){\r\n                let amount = this.getLateFee(fee_installment);\r\n                return (Number.isInteger(amount)) ? helper.formatCurrency(amount) : '-';\r\n            },\r\n            getLateFee(fee_installment){\r\n                let installment_total = this.getInstallmentTotalWithoutLateFee(fee_installment);\r\n\r\n                if (! installment_total)\r\n                    return '-';\r\n\r\n                let date = helper.toDate(this.feePayment.date);\r\n\r\n                let installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n\r\n                if (installment.status == 'paid') {\r\n                    return installment.late_fee_charged;\r\n                }\r\n\r\n                if ((installment.late_fee_applicable == null && !fee_installment.late_fee_applicable) || installment.late_fee_applicable == 0)\r\n                    return '-';\r\n\r\n                if (date <= (installment.due_date || fee_installment.due_date))\r\n                    return '-';\r\n\r\n                let late_day = helper.getDateDiff((installment.due_date || fee_installment.due_date), date);\r\n\r\n                let per_period = Math.floor(late_day / (installment.late_fee_frequency || fee_installment.late_fee_frequency));\r\n                return (installment.late_fee || fee_installment.late_fee) * per_period;\r\n            },\r\n            showInstallmentDetail(fee_allocation_group, fee_installment){\r\n                this.feePayment.installments = [];\r\n                this.feePayment.fee_group_name = fee_allocation_group.fee_group.name;\r\n                let installments = fee_allocation_group.fee_installments.filter(o => o.due_date <= fee_installment.due_date);\r\n\r\n                let total = 0;\r\n                installments.forEach(installment => {\r\n                    let student_installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == installment.id);\r\n                    if (student_installment.status == 'unpaid' || student_installment.status == 'partially_paid') {\r\n\r\n                        let installment_fee = this.getInstallmentTotalWithoutLateFee(installment);\r\n                        let other = this.getInstallmentOther(installment);\r\n                        let late_fee = this.getLateFee(installment);\r\n                        let paid = this.getInstallmentPaid(installment);\r\n                        installment_fee += other;\r\n\r\n                        let installment_balance = (installment_fee > paid) ? (installment_fee - paid) : 0\r\n                        if (installment_fee) {\r\n                            late_fee = ((Number.isInteger(late_fee)) ? late_fee : 0)\r\n                        }\r\n                        let late_fee_balance = (!installment_balance && late_fee) ? (late_fee - (paid - installment_fee)) : late_fee;\r\n\r\n                        let installment_total = installment_fee;\r\n                        if (installment_fee) {\r\n                            late_fee = ((Number.isInteger(late_fee)) ? late_fee : 0)\r\n                            installment_total += late_fee;\r\n                        }\r\n\r\n                        let balance = installment_total - paid;\r\n                        total += balance;\r\n\r\n                        this.feePayment.installments.push({\r\n                            fee_installment_id:  student_installment.fee_installment_id,\r\n                            title: installment.title,\r\n                            installment_fee: installment_fee,\r\n                            installment_balance: installment_balance,\r\n                            late_fee_balance: (Number.isInteger(late_fee_balance)) ? late_fee_balance : 0,\r\n                            late_fee: late_fee,\r\n                            paid: paid,\r\n                            total: balance\r\n                        })\r\n                    }\r\n                });\r\n                this.feePayment.amount = total;\r\n                this.feePayment.fee_payment_installment_id = fee_installment.id;\r\n                this.feePaymentForm = true;\r\n            },\r\n            getTotalFee(fee_allocation_group, fee_head_id){\r\n                let total = 0;\r\n                fee_allocation_group.fee_installments.forEach(fee_installment => {\r\n                    total += this.getInstallmentFee(fee_installment, fee_head_id);\r\n                });\r\n                return helper.formatCurrency(total);\r\n            },\r\n            getTransportFeeTotal(fee_allocation_group){\r\n                let total = 0;\r\n                fee_allocation_group.fee_installments.forEach(fee_installment => {\r\n                    let fee = this.getTransportFee(fee_installment);\r\n                    total += ((Number.isInteger(fee)) ? fee : 0);\r\n                });\r\n                return total ? this.formatCurrency(total) : '-';\r\n            },\r\n            getLateFeeTotal(fee_allocation_group){\r\n                let total = 0;\r\n                fee_allocation_group.fee_installments.forEach(fee_installment => {\r\n                    let fee = this.getLateFee(fee_installment);\r\n                    total += ((Number.isInteger(fee)) ? fee : 0);\r\n                });\r\n                return total ? this.formatCurrency(total) : '-';\r\n            },\r\n            getInstallmentGrandTotal(fee_allocation_group){\r\n                let amount = this.getInstallmentGrandTotalAmount(fee_allocation_group);\r\n                return (Number.isInteger(amount)) ? helper.formatCurrency(amount) : '-';\r\n            },\r\n            getInstallmentGrandTotalAmount(fee_allocation_group){\r\n                let total = 0;\r\n                fee_allocation_group.fee_installments.forEach(fee_installment => {\r\n                    total += this.getInstallmentTotal(fee_installment);\r\n                });\r\n                return total;\r\n            },\r\n            getInstallmentGrandOther(fee_allocation_group){\r\n                let amount = this.getInstallmentGrandOtherAmount(fee_allocation_group);\r\n                return (Number.isInteger(amount)) ? helper.formatCurrency(amount) : '-';\r\n            },\r\n            getInstallmentGrandOtherAmount(fee_allocation_group){\r\n                let other = 0;\r\n                fee_allocation_group.fee_installments.forEach(fee_installment => {\r\n                    other += this.getInstallmentOther(fee_installment);\r\n                });\r\n                return other;\r\n            },\r\n            getInstallmentPaidGrandTotal(fee_allocation_group){\r\n                let amount = this.getInstallmentPaidGrandTotalAmount(fee_allocation_group);\r\n                return (Number.isInteger(amount)) ? helper.formatCurrency(amount) : '-';\r\n            },\r\n            getInstallmentPaidGrandTotalAmount(fee_allocation_group){\r\n                let total = 0;\r\n                fee_allocation_group.fee_installments.forEach(fee_installment => {\r\n                    total += this.getInstallmentPaid(fee_installment);\r\n                });\r\n                return total;\r\n            },\r\n            getInstallmentBalanceGrandTotal(fee_allocation_group){\r\n                let amount = this.getInstallmentBalanceGrandTotalAmount(fee_allocation_group);\r\n                return (Number.isInteger(amount)) ? helper.formatCurrency(amount) : '-';\r\n            },\r\n            getInstallmentBalanceGrandTotalAmount(fee_allocation_group){\r\n                let total = 0;\r\n                fee_allocation_group.fee_installments.forEach(fee_installment => {\r\n                    total += this.getInstallmentBalance(fee_installment);\r\n                });\r\n                return total;\r\n            },\r\n            paymentMade(){\r\n                this.getRecord();\r\n            },\r\n            showDate(date){\r\n                return helper.formatDate(date);\r\n            },\r\n            getInstallmentPrintStatus(fee_installment){\r\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n\r\n                if (student_fee_record.status == 'paid')\r\n                    return i18n.student.fee_status_paid;\r\n                else if(student_fee_record.status == 'partially_paid')\r\n                    return i18n.student.fee_status_partially_paid;\r\n                else if(student_fee_record.status == 'cancelled')\r\n                    return i18n.student.fee_status_cancelled;\r\n                else if(student_fee_record.status == 'unpaid')\r\n                    return i18n.student.fee_status_unpaid;\r\n            },\r\n            setTransaction(fee_installment) {\r\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n                this.student_fee_record_id = student_fee_record.id;\r\n                this.feePaymentShow = true;\r\n            },\r\n            print(){\r\n                let loader = this.$loading.show();\r\n                this.calculate();\r\n                axios.post('/api/student/'+this.uuid+'/fee/'+this.record_id+'/print',{fee: this.fee})\r\n                    .then(response => {\r\n                        let print = window.open(\"/print\");\r\n                        loader.hide();\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            pdf(){\r\n                let loader = this.$loading.show();\r\n                this.calculate();\r\n                axios.post('/api/student/'+this.uuid+'/fee/'+this.record_id+'/pdf',{fee: this.fee})\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        window.open('/download/report/'+response+'?token='+this.authToken);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            confirmEmptyReceiptDelete(fee_installment){\r\n                return dialog => this.deleteEmptyReceipt(fee_installment);\r\n            },\r\n            deleteEmptyReceipt(fee_installment){\r\n                let loader = this.$loading.show();\r\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\r\n                axios.post('/api/student/'+this.uuid+'/fee/'+this.record_id+'/'+student_fee_record.id+'/cancel')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getRecord();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            confirmResetFee(student_record){\r\n                return dialog => this.resetFee(student_record);\r\n            },\r\n            resetFee(student_record){\r\n                let loader = this.$loading.show();\r\n                axios.patch('/api/student/'+this.uuid+'/fee/'+this.record_id+'/reset')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getRecord();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        },\r\n        computed: {\r\n            authToken(){\r\n                return helper.getAuthToken();\r\n            },\r\n            resetFeeOption(){\r\n                if (! this.student_record.id)\r\n                    return false;\r\n\r\n                return this.student_record.student_fee_records.every(student_fee_record => {\r\n                    return student_fee_record.status == 'unpaid';\r\n                });\r\n            },\r\n            finalTotal() {\r\n                let total = 0;\r\n                this.student_record.fee_allocation.fee_allocation_groups.forEach(fee_allocation_group => {\r\n                    total += this.getInstallmentGrandTotalAmount(fee_allocation_group);\r\n                });\r\n                return helper.formatCurrency(total);\r\n            },\r\n            finalOther() {\r\n                let total = 0;\r\n                this.student_record.fee_allocation.fee_allocation_groups.forEach(fee_allocation_group => {\r\n                    total += this.getInstallmentGrandOtherAmount(fee_allocation_group);\r\n                });\r\n                return helper.formatCurrency(total);\r\n            },\r\n            finalPaid() {\r\n                let total = 0;\r\n                this.student_record.fee_allocation.fee_allocation_groups.forEach(fee_allocation_group => {\r\n                    total += this.getInstallmentPaidGrandTotalAmount(fee_allocation_group);\r\n                });\r\n                return helper.formatCurrency(total);\r\n            },\r\n            finalBalance() {\r\n                let total = 0;\r\n                this.student_record.fee_allocation.fee_allocation_groups.forEach(fee_allocation_group => {\r\n                    total += this.getInstallmentBalanceGrandTotalAmount(fee_allocation_group);\r\n                });\r\n                return helper.formatCurrency(total);\r\n            }\r\n        },\r\n        watch: {\r\n            '$route.params.uuid': function (uuid) {\r\n                this.uuid = uuid;\r\n                this.record_id = this.$route.params.record_id;\r\n                this.getRecord()\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n.loading-overlay.is-full-page{\r\n    z-index: 1060;\r\n}\r\n</style>","<template>\r\n    <transition name=\"modal\">\r\n        <div class=\"modal-mask\">\r\n            <div class=\"modal-wrapper\">\r\n                <div class=\"modal-container modal-lg\">\r\n                    <div class=\"modal-header\">\r\n                        <slot name=\"header\">\r\n                            {{trans('finance.fee_payment')}}\r\n                            <span class=\"float-right pointer\" @click=\"$emit('closeFeePaymentForm')\">x</span>\r\n                        </slot>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <slot name=\"body\">\r\n                            <h4>{{feePayment.fee_group_name}} <span class=\"pull-right\">{{feePayment.date | moment}}</span></h4>\r\n                            <div style=\"max-height:600px;\">\r\n                                <form @submit.prevent=\"submit\" @keydown=\"feePaymentForm.errors.clear($event.target.name)\">\r\n                                    <div class=\"table-responsive p-2\">\r\n                                        <table class=\"table table-bordered\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>{{trans('finance.fee_installment')}}</th>\r\n                                                    <th class=\"text-right\">{{trans('finance.installment_total')}}</th>\r\n                                                    <th class=\"text-right\">{{trans('finance.late_fee')}}</th>\r\n                                                    <th class=\"text-right\">{{trans('general.total')}}</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr v-for=\"installment in feePaymentForm.installments\">\r\n                                                    <td v-text=\"installment.title\"></td>\r\n                                                    <td class=\"text-right\" v-text=\"installment.installment_balance\"></td>\r\n                                                    <td class=\"text-right\">\r\n                                                        {{installment.late_fee_balance}}\r\n                                                    </td>\r\n                                                    <td class=\"text-right\" v-text=\"getInstallmentTotal(installment)\"></td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                            <tfoot>\r\n                                                <tr>\r\n                                                    <th>{{trans('general.total')}}</th>\r\n                                                    <th colspan=\"2\"></th>\r\n                                                    <th class=\"text-right\">{{formatCurrency(getGrandTotal)}}</th>\r\n                                                </tr>\r\n                                            </tfoot>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div>\r\n                                        <h4 class=\"card-title\">{{trans('finance.choose_payment_gateway')}}</h4>\r\n                                        <div class=\"radio radio-success\" v-if=\"getConfig('razorpay') && razorpay_loaded\">\r\n                                            <input type=\"radio\" name=\"payment_gateway\" id=\"razorpay\" value=\"razorpay\" @change=\"setPaymentGateway('razorpay')\">\r\n                                            <label for=\"razorpay\"> \r\n                                                Razorpay \r\n                                            </label>\r\n                                        </div>\r\n                                        <div class=\"radio radio-success\" v-if=\"getConfig('billdesk')\">\r\n                                            <input type=\"radio\" name=\"payment_gateway\" id=\"billdesk\" value=\"billdesk\" @change=\"setPaymentGateway('billdesk')\">\r\n                                            <label for=\"billdesk\"> Billdesk </label>\r\n                                        </div>\r\n                                        <div class=\"radio radio-success\" v-if=\"getConfig('stripe')\">\r\n                                            <input type=\"radio\" name=\"payment_gateway\" id=\"stripe\" value=\"stripe\" @change=\"setPaymentGateway('stripe')\">\r\n                                            <label for=\"stripe\"> Stripe </label>\r\n                                        </div>\r\n                                        <div class=\"radio radio-success\" v-if=\"getConfig('paystack')\">\r\n                                            <input type=\"radio\" name=\"payment_gateway\" id=\"paystack\" value=\"paystack\" @change=\"setPaymentGateway('paystack')\">\r\n                                            <label for=\"paystack\"> Paystack </label>\r\n                                        </div>\r\n                                        <div class=\"radio radio-success\" v-if=\"getConfig('paypal')\">\r\n                                            <input type=\"radio\" name=\"payment_gateway\" id=\"paypal\" value=\"paypal\" @change=\"setPaymentGateway('paypal')\">\r\n                                            <label for=\"paypal\"> Paypal </label>\r\n                                        </div>\r\n\r\n                                        <p>{{handlingFeeAmount}}</p>\r\n                                        <p>{{totalAmount}}</p>\r\n\r\n                                        <template v-if=\"payment_gateway == 'billdesk'\">\r\n                                            <button type=\"button\" class=\"btn btn-info\" @click=\"callBillDesk\">{{trans('general.proceed')}}</button>\r\n                                        </template>\r\n\r\n                                        <template v-if=\"payment_gateway == 'razorpay'\">\r\n                                            <button type=\"button\" class=\"btn btn-info\" @click=\"callRazorpay\">{{trans('general.proceed')}}</button>\r\n                                        </template>\r\n\r\n                                        <template v-if=\"payment_gateway == 'paystack'\">\r\n                                            <button type=\"button\" class=\"btn btn-info\" @click=\"payWithPaystack\">{{trans('general.proceed')}}</button>\r\n                                        </template>\r\n\r\n                                        <template v-if=\"payment_gateway == 'paypal'\">\r\n                                            <button type=\"button\" class=\"btn btn-info\" @click=\"callPaypal\" v-if=\"paypalButton\">{{trans('general.proceed')}}</button>\r\n                                        </template>\r\n\r\n                                        <template v-if=\"payment_gateway == 'stripe'\">\r\n                                            <div class=\"row m-t-40\">\r\n                                                <div class=\"col-12\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <input class=\"form-control\" type=\"number\" maxlength=\"16\" value=\"\" v-model=\"stripe.card_number\" :placeholder=\"trans('finance.card_number')\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-3\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <input class=\"form-control\" type=\"number\" value=\"\" v-model=\"stripe.month\" :placeholder=\"trans('finance.card_expiry_month')\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-4\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <input class=\"form-control\" type=\"number\" value=\"\" v-model=\"stripe.year\" :placeholder=\"trans('finance.card_expiry_year')\">\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"col-1\">\r\n                                                </div>\r\n                                                <div class=\"col-4\">\r\n                                                    <div class=\"form-group\">\r\n                                                        <input class=\"form-control\" type=\"number\" value=\"\" v-model=\"stripe.cvc\" :placeholder=\"trans('finance.card_cvc')\">\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <button type=\"button\" @click=\"stripeCheckout\" class=\"btn btn-info waves-effect waves-light pull-right\" v-if=\"stripeButton\"><span>{{trans('general.proceed')}}</span></button>\r\n                                        </template>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </slot>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        components: {},\r\n        props: ['id','uuid','feePayment'],\r\n        data() {\r\n            return {\r\n                default_currency: helper.getConfig('default_currency'),\r\n                payment_gateway: '',\r\n                razorpay_loaded: 0,\r\n                stripe_loaded: 0,\r\n                total: 0,\r\n                stripe: {\r\n                    card_number: '',\r\n                    month: '',\r\n                    year: '',\r\n                    cvc: ''\r\n                },\r\n                stripeButton: true,\r\n                paypalButton: true,\r\n                feePaymentForm: new Form({\r\n                    amount: 0,\r\n                    installment_id: '',\r\n                    date: '',\r\n                    installments: []\r\n                })\r\n            }\r\n        },\r\n        mounted(){\r\n            this.loadFeePayment(this.feePayment);\r\n\r\n            if ((this.default_currency.name == 'INR' || !helper.getConfig('mode')) && this.getConfig('razorpay')) {\r\n                this.injectRazorpay();\r\n            }\r\n        },\r\n        methods: {\r\n            getConfig(config){\r\n                return helper.getConfig(config);\r\n            },\r\n            loadFeePayment(feePayment){\r\n                this.feePaymentForm.amount = feePayment.amount;\r\n                this.feePaymentForm.installment_id = feePayment.fee_payment_installment_id;\r\n                this.feePaymentForm.date = feePayment.date;\r\n                this.feePaymentForm.installments = [];\r\n                this.total = 0;\r\n                feePayment.installments.forEach(installment => {\r\n                    this.feePaymentForm.installments.push({\r\n                        fee_installment_id: installment.fee_installment_id,\r\n                        title: installment.title,\r\n                        installment_balance: installment.installment_balance,\r\n                        late_fee_balance: installment.late_fee_balance\r\n                    });\r\n                })\r\n            },\r\n            getInstallmentTotal(installment){\r\n                return (installment.installment_balance + parseInt(installment.late_fee_balance));\r\n            },\r\n            formatCurrency(amount){\r\n                return helper.formatCurrency(amount);\r\n            },\r\n            setPaymentGateway(gateway){\r\n                this.payment_gateway = gateway;\r\n            },\r\n            stripeCheckout(){\r\n                let loader = this.$loading.show();\r\n                this.stripeButton = false;\r\n                Stripe.setPublishableKey(this.getConfig('stripe_publishable_key'));\r\n                Stripe.card.createToken({\r\n                    number: this.stripe.card_number,\r\n                    cvc: this.stripe.cvc,\r\n                    exp_month: this.stripe.month,\r\n                    exp_year: this.stripe.year\r\n                }, this.stripeResponseHandler);\r\n                loader.hide();\r\n            },\r\n            stripeResponseHandler(status, response) {\r\n                if(status == 200){\r\n                    let loader = this.$loading.show();\r\n                    axios.post('/api/student/'+this.uuid+'/payment/'+this.id+'/stripe',{\r\n                            stripeToken: response.id,\r\n                            amount: this.total * 100,\r\n                            fee: this.feePaymentForm.amount,\r\n                            handling_fee: this.handlingFee,\r\n                            fee_installment_id: this.feePaymentForm.installment_id,\r\n                            installments: this.feePaymentForm.installments\r\n                        })\r\n                        .then(response => {\r\n                            loader.hide();\r\n                            toastr.success(response.message);\r\n                            this.$emit('completed');\r\n                            this.stripeButton = true;\r\n                        })\r\n                        .catch(error => {\r\n                            loader.hide();\r\n                            helper.showErrorMsg(error);\r\n                            this.stripeButton = true;\r\n                        })\r\n                } else {\r\n                    toastr.error(response.error.message);\r\n                    this.stripeButton = true;\r\n                }\r\n            },\r\n            injectRazorpay() {\r\n                let vm = this;\r\n                var result = $.Deferred(),\r\n                script = document.createElement(\"script\");\r\n\r\n                script.async = \"async\";\r\n                script.type = \"text/javascript\";\r\n                script.src = 'https://checkout.razorpay.com/v1/checkout.js';\r\n                script.onload = script.onreadystatechange = function(_, isAbort) {\r\n                    if (!script.readyState || /loaded|complete/.test(script.readyState)) {\r\n                        if (isAbort)\r\n                            result.reject();\r\n                        else \r\n                            result.resolve();\r\n                    }\r\n                    vm.razorpay_loaded = 1;\r\n                };\r\n\r\n                script.onerror = function() {\r\n                    result.reject();\r\n                };\r\n\r\n                document.head.appendChild(script);\r\n\r\n                return result.promise();\r\n            },\r\n            callRazorpay(){\r\n                let vm = this;\r\n                var options = {\r\n                    key: this.getConfig('razorpay_key'),\r\n                    protocol: 'https',\r\n                    hostname: 'api.razorpay.com',\r\n                    amount: this.total * 100,\r\n                    name: helper.getConfig('institute_name'),\r\n                    description: i18n.finance.fee_payment,\r\n                    image: this.getLogo,\r\n                    prefill: {\r\n                        email: \"\",\r\n                        contact: \"\",\r\n                        name: \"\"\r\n                    },\r\n                    notes:{\r\n                        student_record_id: this.id,\r\n                        fee: this.feePaymentForm.amount,\r\n                        handling_fee: this.handlingFee\r\n                    },\r\n                    handler: function (transaction, response){\r\n                        vm.completeRazorpay(transaction.razorpay_payment_id)\r\n                    }\r\n                };\r\n\r\n                window.rzpay = new Razorpay(options);\r\n                rzpay.open();\r\n            },\r\n            completeRazorpay(transaction_id){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/student/'+this.uuid+'/payment/'+this.id+'/rzp',{\r\n                        transaction_id: transaction_id,\r\n                        installments: this.feePaymentForm.installments,\r\n                        fee_installment_id: this.feePaymentForm.installment_id\r\n                    })\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        toastr.success(response.message);\r\n                        this.$emit('completed');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            callBillDesk() {\r\n                let loader = this.$loading.show();\r\n\r\n                axios.post('student/'+this.uuid+'/payment/'+this.id+'/billdesk', {\r\n                    amount: this.feePaymentForm.amount,\r\n                    installment_id: this.feePaymentForm.installment_id,\r\n                    installments: this.feePaymentForm.installments\r\n                })\r\n                .then(response => {\r\n                    loader.hide();\r\n\r\n                    bdPayment.initialize({\r\n                        msg : response.msg,\r\n                        callbackUrl: response.url,\r\n                        options : {\r\n                            enableChildWindowPosting : true,\r\n                            enablePaymentRetry : true,\r\n                            retry_attempt_count: 3\r\n                        }\r\n                    }); \r\n                })\r\n                .catch(error => {\r\n                    loader.hide();\r\n                    helper.showErrorMsg(error);\r\n                })\r\n            },\r\n            callPaypal(){\r\n                this.paypalButton = false;\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/student/'+this.uuid+'/payment/'+this.id+'/paypal',{\r\n                        amount: this.total,\r\n                        fee: this.feePaymentForm.amount,\r\n                        handling_fee: this.handlingFee,\r\n                        fee_installment_id: this.feePaymentForm.installment_id,\r\n                        installments: this.feePaymentForm.installments\r\n                    })\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        window.location = response;\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        this.paypalButton = true\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n                ;\r\n            },\r\n            payWithPaystack(){\r\n                if (helper.getConfig('default_currency').name != 'NGN' && helper.getConfig('default_currency').name != 'GHS') {\r\n                    toastr.error(i18n.configuration.currency_not_supported);\r\n                    return;\r\n                }\r\n\r\n                let vm = this;\r\n                var handler = PaystackPop.setup({\r\n                    key: this.getConfig('paystack_public_key'),\r\n                    email: helper.getAuthUser('email'),\r\n                    amount: this.total * 100,\r\n                    currency: helper.getConfig('default_currency').name,\r\n                    ref: ''+Math.floor((Math.random() * 1000000000) + 1),\r\n                    metadata: {\r\n                        custom_fields: [\r\n                            {\r\n                                display_name: 'Student ID',\r\n                                variable_name: \"student_record_id\",\r\n                                value: this.id\r\n                            },\r\n                            {\r\n                                display_name: 'Amount',\r\n                                variable_name: \"fee\",\r\n                                value: this.feePaymentForm.amount\r\n                            },\r\n                            {\r\n                                display_name: 'Handling Fee',\r\n                                variable_name: \"handling_fee\",\r\n                                value: this.handlingFee\r\n                            }\r\n                        ]\r\n                    },\r\n                    callback: function(response){\r\n                        vm.completePaystack(response.reference)\r\n                    },\r\n                    onClose: function(){\r\n                        \r\n                    }\r\n                });\r\n                handler.openIframe();\r\n            },\r\n            completePaystack(transaction_id){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/student/'+this.uuid+'/payment/'+this.id+'/paystack',{\r\n                        transaction_id: transaction_id,\r\n                        installments: this.feePaymentForm.installments,\r\n                        fee_installment_id: this.feePaymentForm.installment_id\r\n                    })\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        toastr.success(response.message);\r\n                        this.$emit('completed');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            }\r\n        },\r\n        computed: {\r\n            getLogo(){\r\n                return helper.getLogo();\r\n            },\r\n            handlingFee(){\r\n                let handling_fee = 0;\r\n\r\n                if (!this.payment_gateway)\r\n                    return handling_fee;\r\n\r\n                if (! helper.getConfig(this.payment_gateway+'_charge_handling_fee'))\r\n                    return handling_fee;\r\n\r\n                if(helper.getConfig(this.payment_gateway+'_fixed_handling_fee'))\r\n                    handling_fee = helper.getConfig(this.payment_gateway+'_handling_fee');\r\n                else {\r\n                    let percentage = helper.getConfig(this.payment_gateway+'_handling_fee');\r\n                    handling_fee = this.feePaymentForm.amount * (percentage / 100);\r\n                }\r\n\r\n                return helper.formatNumber(handling_fee);\r\n            },\r\n            handlingFeeAmount(){\r\n                if (! helper.getConfig(this.payment_gateway+'_charge_handling_fee'))\r\n                    return;\r\n\r\n                return i18n.finance.handling_fee+' '+helper.formatCurrency(this.handlingFee);\r\n            },\r\n            totalAmount(){\r\n                return i18n.finance.payable_amount+' '+helper.formatCurrency(this.total);\r\n            },\r\n            getGrandTotal(){\r\n                let total = 0;\r\n                total = total;\r\n\r\n                if(!Array.isArray(this.feePaymentForm.installments))\r\n                    return total;\r\n\r\n                this.feePaymentForm.installments.forEach(installment => {\r\n                    total += (installment.installment_balance + parseInt(installment.late_fee_balance));\r\n                })  \r\n                total = (total) ? (total + this.handlingFee) : total;\r\n                this.total = total; \r\n                return total;\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n.loading-overlay.is-full-page{\r\n    z-index: 1060;\r\n}\r\n</style>","<template>\r\n    <transition name=\"modal\">\r\n        <div class=\"modal-mask\">\r\n            <div class=\"modal-wrapper\">\r\n                <div class=\"modal-container modal-lg\">\r\n                    <div class=\"modal-header\">\r\n                        <slot name=\"header\">\r\n                            {{trans('finance.fee_payment')}}\r\n                            <span class=\"float-right pointer\" @click=\"$emit('closeFeePaymentForm')\">x</span>\r\n                        </slot>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <slot name=\"body\">\r\n                            <h4>{{feePayment.fee_group_name}} <span class=\"pull-right\">{{feePayment.date | moment}}</span></h4>\r\n                            <div style=\"max-height:600px;\">\r\n                                <form @submit.prevent=\"submit\" @keydown=\"feePaymentForm.errors.clear($event.target.name)\">\r\n                                    <div class=\"table-responsive p-2\">\r\n                                        <table class=\"table table-bordered\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>{{trans('finance.fee_installment')}}</th>\r\n                                                    <th class=\"text-right\">{{trans('finance.installment_total')}}</th>\r\n                                                    <th class=\"text-right\">{{trans('finance.late_fee')}}</th>\r\n                                                    <th class=\"text-right\">{{trans('general.total')}}</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                <tr v-for=\"installment in feePaymentForm.installments\">\r\n                                                    <td v-text=\"installment.title\"></td>\r\n                                                    <td class=\"text-right\" v-text=\"installment.installment_balance\"></td>\r\n                                                    <td class=\"text-right\">\r\n                                                        <template v-if=\"hasPermission('customize-late-fee')\">\r\n                                                            <input type=\"text\" class=\"invoice-input\" v-model=\"installment.late_fee_balance\">\r\n                                                        </template>\r\n                                                        <template v-else>\r\n                                                            {{installment.late_fee_balance}}\r\n                                                        </template>\r\n                                                    </td>\r\n                                                    <td class=\"text-right\" v-text=\"getInstallmentTotal(installment)\"></td>\r\n                                                </tr>\r\n                                            </tbody>\r\n                                            <tfoot>\r\n                                                <tr>\r\n                                                    <td>{{trans('student.additional_fee_charge')}}</td>\r\n                                                    <td colspan=\"2\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <input class=\"invoice-input-left\" type=\"text\" v-model=\"feePaymentForm.additional_fee_charge_label\" name=\"additional_fee_charge_label\" :placeholder=\"trans('student.fee_label')\">\r\n                                                            <show-error :form-name=\"feePaymentForm\" prop-name=\"additional_fee_charge_label\"></show-error>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td class=\"text-right\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <input class=\"invoice-input\" type=\"text\" v-model=\"feePaymentForm.additional_fee_charge\" name=\"additional_fee_charge\" :placeholder=\"trans('student.additional_fee_charge')\">\r\n                                                            <show-error :form-name=\"feePaymentForm\" prop-name=\"additional_fee_charge\"></show-error>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <td>{{trans('student.additional_fee_discount')}}</td>\r\n                                                    <td colspan=\"2\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <input class=\"invoice-input-left\" type=\"text\" v-model=\"feePaymentForm.additional_fee_discount_label\" name=\"additional_fee_discount_label\" :placeholder=\"trans('student.fee_label')\">\r\n                                                            <show-error :form-name=\"feePaymentForm\" prop-name=\"additional_fee_discount_label\"></show-error>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                    <td class=\"text-right\">\r\n                                                        <div class=\"form-group\">\r\n                                                            <input class=\"invoice-input\" type=\"text\" v-model=\"feePaymentForm.additional_fee_discount\" name=\"additional_fee_discount\" :placeholder=\"trans('student.additional_fee_discount')\">\r\n                                                            <show-error :form-name=\"feePaymentForm\" prop-name=\"additional_fee_discount\"></show-error>\r\n                                                        </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                                <tr>\r\n                                                    <th>{{trans('general.total')}}</th>\r\n                                                    <th colspan=\"2\"></th>\r\n                                                    <th class=\"text-right\">{{formatCurrency(getGrandTotal)}}</th>\r\n                                                </tr>\r\n                                                <tr v-if=\"hasPermission('make-partial-fee-payment')\">\r\n                                                    <th>{{trans('finance.amount')}}</th>\r\n                                                    <th colspan=\"2\"></th>\r\n                                                    <th class=\"text-right\">\r\n                                                        <input class=\"invoice-input\" type=\"text\" v-model=\"feePaymentForm.amount\" name=\"amount\" :placeholder=\"trans('finance.amount')\">\r\n                                                        <show-error :form-name=\"feePaymentForm\" prop-name=\"amount\"></show-error>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </tfoot>\r\n                                        </table>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <template v-if=\"feePaymentForm.amount\">\r\n                                            <div class=\"col-12 col-sm-6\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label for=\"\">{{trans('finance.account')}}</label>\r\n                                                    <v-select label=\"name\" v-model=\"selected_account\" name=\"account_id\" id=\"account_id\" :options=\"accounts\" :placeholder=\"trans('account.select_account')\" @select=\"onAccountSelect\" @close=\"feePaymentForm.errors.clear('account_id')\" @remove=\"feePaymentForm.account_id = ''\">\r\n                                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!accounts.length\">\r\n                                                            {{trans('general.no_option_found')}}\r\n                                                        </div>\r\n                                                    </v-select>\r\n                                                    <show-error :form-name=\"feePaymentForm\" prop-name=\"account_id\"></show-error>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"col-12 col-sm-6\">\r\n                                                <div class=\"form-group\">\r\n                                                    <label for=\"\">{{trans('finance.payment_method')}}</label>\r\n                                                    <v-select label=\"name\" v-model=\"selected_payment_method\" name=\"payment_method_id\" id=\"payment_method_id\" :options=\"payment_methods\" :placeholder=\"trans('payment_method.select_payment_method')\" @select=\"onPaymentMethodSelect\" @close=\"feePaymentForm.errors.clear('payment_method_id')\" @remove=\"onPaymentMethodRemove\">\r\n                                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!payment_methods.length\">\r\n                                                            {{trans('general.no_option_found')}}\r\n                                                        </div>\r\n                                                    </v-select>\r\n                                                    <show-error :form-name=\"feePaymentForm\" prop-name=\"payment_method_id\"></show-error>\r\n                                                </div>\r\n                                            </div>\r\n                                        </template>\r\n                                        <div class=\"col-12 col-sm-6\" v-if=\"getPaymentMethodDetail('instrument_number')\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"\">{{trans('finance.instrument_number')}}</label>\r\n                                                <input class=\"form-control\" type=\"text\" v-model=\"feePaymentForm.instrument_number\" name=\"instrument_number\" :placeholder=\"trans('finance.instrument_number')\">\r\n                                                <show-error :form-name=\"feePaymentForm\" prop-name=\"instrument_number\"></show-error>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-sm-6\" v-if=\"getPaymentMethodDetail('instrument_date')\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"\">{{trans('finance.instrument_date')}}</label>\r\n                                                <datepicker v-model=\"feePaymentForm.instrument_date\" :bootstrapStyling=\"true\" @selected=\"feePaymentForm.errors.clear('instrument_date')\" :placeholder=\"trans('finance.instrument_date')\"></datepicker>\r\n                                                <show-error :form-name=\"feePaymentForm\" prop-name=\"instrument_date\"></show-error>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-sm-6\" v-if=\"getPaymentMethodDetail('instrument_bank_detail')\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"\">{{trans('finance.instrument_bank_detail')}}</label>\r\n                                                <input class=\"form-control\" type=\"text\" v-model=\"feePaymentForm.instrument_bank_detail\" name=\"instrument_bank_detail\" :placeholder=\"trans('finance.instrument_bank_detail')\">\r\n                                                <show-error :form-name=\"feePaymentForm\" prop-name=\"instrument_bank_detail\"></show-error>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-sm-6\" v-if=\"getPaymentMethodDetail('instrument_clearing_date')\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"\">{{trans('finance.instrument_clearing_date')}}</label>\r\n                                                <datepicker v-model=\"feePaymentForm.instrument_clearing_date\" :bootstrapStyling=\"true\" @selected=\"feePaymentForm.errors.clear('instrument_clearing_date')\" :placeholder=\"trans('finance.instrument_clearing_date')\"></datepicker>\r\n                                                <show-error :form-name=\"feePaymentForm\" prop-name=\"instrument_clearing_date\"></show-error>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-sm-6\" v-if=\"getPaymentMethodDetail('reference_number')\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"\">{{trans('finance.reference_number')}}</label>\r\n                                                <input class=\"form-control\" type=\"text\" v-model=\"feePaymentForm.reference_number\" name=\"reference_number\" :placeholder=\"trans('finance.reference_number')\">\r\n                                                <show-error :form-name=\"feePaymentForm\" prop-name=\"reference_number\"></show-error>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-12 col-sm-12\">\r\n                                            <div class=\"form-group\">\r\n                                                <label for=\"\">{{trans('finance.fee_payment_remarks')}}</label>\r\n                                                <autosize-textarea v-model=\"feePaymentForm.remarks\" rows=\"2\" name=\"remarks\" :placeholder=\"trans('finance.fee_payment_remarks')\"></autosize-textarea>\r\n                                                <show-error :form-name=\"feePaymentForm\" prop-name=\"remarks\"></show-error>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <button type=\"submit\" class=\"btn btn-info waves-effect waves-light pull-right\">{{trans('general.save')}}</button>\r\n                                </form>\r\n                            </div>\r\n                            <div class=\"clearfix\"></div>\r\n                        </slot>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </transition>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        components: {},\r\n        props: ['id','uuid','feePayment'],\r\n        data() {\r\n            return {\r\n                feePaymentForm: new Form({\r\n                    amount: 0,\r\n                    additional_fee_discount: 0,\r\n                    additional_fee_charge: 0,\r\n                    additional_fee_charge_label: '',\r\n                    additional_fee_discount_label: '',\r\n                    installments: [],\r\n                    installment_id: '',\r\n                    account_id: '',\r\n                    payment_method_id: '',\r\n                    date: '',\r\n                    instrument_date: '',\r\n                    instrument_number: '',\r\n                    instrument_clearing_date: '',\r\n                    instrument_bank_detail: '',\r\n                    reference_number: '',\r\n                    remarks: ''\r\n                }),\r\n                total: 0,\r\n                selected_account: null,\r\n                accounts: [],\r\n                payment_methods: [],\r\n                selected_payment_method: null,\r\n                payment_method_details: [],\r\n                payment_method_detail: {}\r\n            }\r\n        },\r\n        mounted() {\r\n            this.loadFeePayment(this.feePayment);\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            loadFeePayment(feePayment){\r\n                this.feePaymentForm.date = feePayment.date;\r\n                this.feePaymentForm.installment_id = feePayment.fee_payment_installment_id;\r\n                this.feePaymentForm.amount = feePayment.amount;\r\n                this.total = 0;\r\n                this.feePaymentForm.installments = [];\r\n                feePayment.installments.forEach(installment => {\r\n                    this.feePaymentForm.installments.push({\r\n                        fee_installment_id: installment.fee_installment_id,\r\n                        title: installment.title,\r\n                        installment_balance: installment.installment_balance,\r\n                        late_fee_balance: installment.late_fee_balance\r\n                    });\r\n                })\r\n            },\r\n            getInstallmentTotal(installment){\r\n                return (installment.installment_balance + parseInt(installment.late_fee_balance));\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/student/fee/pre-requisite')\r\n                    .then(response => {\r\n                        this.accounts = response.accounts;\r\n                        this.payment_methods = response.payment_methods;\r\n                        this.payment_method_details = response.payment_method_details;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getPaymentMethodDetail(field){\r\n                return helper.getPaymentMethodDetail(this.payment_method_detail, field);\r\n            },\r\n            onAccountSelect(selectedOption){\r\n                this.feePaymentForm.account_id = selectedOption.id;\r\n            },\r\n            onPaymentMethodSelect(selectedOption){\r\n                this.feePaymentForm.payment_method_id = selectedOption.id;\r\n                this.payment_method_detail = this.payment_method_details.find(o => o.id == selectedOption.id);\r\n            },\r\n            onPaymentMethodRemove(removedOption){\r\n                this.feePaymentForm.payment_method_id = '';\r\n                this.payment_method_detail = null;\r\n            },\r\n            formatCurrency(amount){\r\n                return helper.formatCurrency(amount);\r\n            },\r\n            submit(){\r\n                let loader = this.$loading.show();\r\n                this.feePaymentForm.post('/api/student/'+this.uuid+'/payment/'+this.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.$emit('completed');\r\n                        this.selected_account = null;\r\n                        this.selected_payment_method = null;\r\n                        this.feePaymentForm.installments = [];\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            }\r\n        },\r\n        computed: {\r\n            getGrandTotal(){\r\n                let total = 0;\r\n\r\n                if(!Array.isArray(this.feePaymentForm.installments))\r\n                    return total;\r\n\r\n                this.feePaymentForm.installments.forEach(installment => {\r\n                    total += (installment.installment_balance + parseInt(installment.late_fee_balance));\r\n                })   \r\n                return total + +this.feePaymentForm.additional_fee_charge - +this.feePaymentForm.additional_fee_discount;\r\n            }\r\n        },\r\n        watch: {\r\n            feePayment(val){\r\n                this.loadFeePayment(val);\r\n            },\r\n            getGrandTotal(val){\r\n                this.feePaymentForm.amount = val;\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        }\r\n    }\r\n</script>","<template>\r\n\t<div class=\"row\" v-if=\"student_record.student\">\r\n\t\t<div class=\"col-12 col-sm-3\">\r\n\t\t\t<div class=\"form-group text-center\">\r\n\t            <img :src=\"getImage\" class=\"img-fluid\" style=\"max-width:200px;\">\r\n\t        </div>\r\n\t\t</div>\r\n\t\t<div class=\"col-12 col-sm-4\">\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-borderless custom-show-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td class=\"font-weight-bold\">{{trans('student.name')}}</td>\r\n                            <td>{{getStudentName(student_record.student)}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td class=\"font-weight-bold\">{{trans('student.admission_number')}}</td>\r\n                            <td>{{getAdmissionNumber(student_record.admission)}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td class=\"font-weight-bold\">{{trans('student.date_of_admission')}}</td>\r\n                            <td>{{student_record.admission.date_of_admission | moment}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td class=\"font-weight-bold\">{{trans('academic.course')}}</td>\r\n                            <td>{{student_record.batch.course.name+' ('+student_record.batch.course.course_group.name+')'}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td class=\"font-weight-bold\">{{trans('academic.batch')}}</td>\r\n                            <td>{{student_record.batch.name}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td class=\"font-weight-bold\">{{trans('student.date_of_birth')}}</td>\r\n                            <td>{{student_record.student.date_of_birth | moment}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\t\t</div>\r\n\t\t<div class=\"col-12 col-sm-4\">\r\n            <div class=\"table-responsive\">\r\n                <table class=\"table table-borderless custom-show-table\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <td class=\"font-weight-bold\">{{trans('student.father_name')}}</td>\r\n                            <td>{{student_record.student.parent ? student_record.student.parent.father_name : ''}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td class=\"font-weight-bold\">{{trans('student.mother_name')}}</td>\r\n                            <td>{{student_record.student.parent ? student_record.student.parent.mother_name : ''}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td class=\"font-weight-bold\">{{trans('student.contact_number')}}</td>\r\n                            <td>{{student_record.student.contact_number}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td class=\"font-weight-bold\">{{trans('student.present_address')}}</td>\r\n                            <td>\r\n\t                            {{student_record.student.present_address_line_1}}\r\n\t                            <span v-if=\"student_record.student.present_address_line_2\">, {{student_record.student.present_address_line_2}}</span>\r\n\t                            <span v-if=\"student_record.student.present_city\"><br /> {{student_record.student.present_city}}</span>\r\n\t                            <span v-if=\"student_record.student.present_state\">, {{student_record.student.present_state}}</span>\r\n\t                            <span v-if=\"student_record.student.present_zipcode\">, {{student_record.student.present_zipcode}}</span>\r\n\t                            <span v-if=\"student_record.student.present_country\"><br /> {{student_record.student.present_country}}</span>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tprops: ['studentRecord'],\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tstudent_record: {}\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted() {\r\n\r\n\t\t},\r\n\t\tmethods: {\r\n        \tgetStudentName(student){\r\n                return helper.getStudentName(student);\r\n        \t},\r\n            getAdmissionNumber(admission){\r\n                return helper.getAdmissionNumber(admission);\r\n            }\r\n\t\t},\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        },\r\n\t\tcomputed: {\r\n\t\t\tgetImage(){\r\n\t\t\t\tif (!this.student_record.student.student_photo) {\r\n\t\t\t\t\treturn this.student_record.student.gender == 'female' ? '/images/female.png' : '/images/male.png';\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn '/'+this.student_record.student.student_photo;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\tstudentRecord(val) {\r\n\t\t\t\tthis.student_record = val;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _vm._l(_vm.transactions, function (txn) {\n        return [\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info m-r-10\",\n              attrs: { type: \"button\" },\n              on: {\n                click: function ($event) {\n                  _vm.transaction = txn\n                },\n              },\n            },\n            [_vm._v(_vm._s((txn.prefix || \"\") + \"\" + txn.number))]\n          ),\n        ]\n      }),\n      _vm._v(\" \"),\n      _c(\n        \"button\",\n        {\n          directives: [\n            {\n              name: \"tooltip\",\n              rawName: \"v-tooltip\",\n              value: _vm.trans(\"finance.print_receipt\"),\n              expression: \"trans('finance.print_receipt')\",\n            },\n          ],\n          staticClass: \"btn btn-info btn-sm pull-right\",\n          attrs: { type: \"button\" },\n          on: { click: _vm.printReceipt },\n        },\n        [_c(\"i\", { staticClass: \"fas fa-print\" })]\n      ),\n      _vm._v(\" \"),\n      _vm.transaction.id\n        ? [\n            _c(\"div\", { staticClass: \"table-responsive m-t-20\" }, [\n              _c(\"table\", { staticClass: \"table table-bordered\" }, [\n                _c(\"tbody\", [\n                  _c(\n                    \"tr\",\n                    [\n                      _c(\"td\", [\n                        _vm._v(_vm._s(_vm.trans(\"finance.receipt_no\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [\n                        _vm._v(\n                          _vm._s(\n                            (_vm.transaction.prefix || \"\") +\n                              \"\" +\n                              _vm.transaction.number\n                          ) + \"\\n                                \"\n                        ),\n                        _vm.transactionGroup.length > 1\n                          ? _c(\"span\", [\n                              _vm._v(\n                                \"(\" +\n                                  _vm._s(_vm.transactionGroup.toString()) +\n                                  \")\"\n                              ),\n                            ])\n                          : _vm._e(),\n                      ]),\n                      _vm._v(\" \"),\n                      !_vm.transaction.is_online_payment\n                        ? [\n                            _c(\"td\", [\n                              _vm._v(_vm._s(_vm.trans(\"finance.account\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"td\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.transaction.account\n                                    ? _vm.transaction.account.name\n                                    : \"\"\n                                )\n                              ),\n                            ]),\n                          ]\n                        : [\n                            _c(\"td\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"finance.payment_method\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"td\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"finance.online_payment\"))\n                              ),\n                            ]),\n                          ],\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"tr\", [\n                    _c(\"td\", [_vm._v(_vm._s(_vm.trans(\"finance.amount\")))]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(\n                        _vm._s(_vm.formatCurrency(_vm.transaction.amount))\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [_vm._v(_vm._s(_vm.trans(\"finance.date\")))]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(_vm._s(_vm._f(\"moment\")(_vm.transaction.date))),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"tr\",\n                    [\n                      !_vm.transaction.is_online_payment\n                        ? [\n                            _c(\"td\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"finance.payment_method\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"td\", [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(_vm.transaction.payment_method.name) +\n                                  \"\\n                                    \"\n                              ),\n                              _vm.transaction.instrument_number\n                                ? _c(\"span\", [\n                                    _c(\"br\"),\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\"finance.instrument_number\")\n                                      ) +\n                                        \": \" +\n                                        _vm._s(\n                                          _vm.transaction.instrument_number\n                                        )\n                                    ),\n                                  ])\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.transaction.instrument_date\n                                ? _c(\"span\", [\n                                    _c(\"br\"),\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\"finance.instrument_date\")\n                                      ) + \": \"\n                                    ),\n                                    _c(\"span\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm._f(\"moment\")(\n                                            _vm.transaction.instrument_date\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                  ])\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.transaction.instrument_clearing_date\n                                ? _c(\"span\", [\n                                    _c(\"br\"),\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\n                                          \"finance.instrument_clearing_date\"\n                                        )\n                                      ) + \": \"\n                                    ),\n                                    _c(\"span\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm._f(\"moment\")(\n                                            _vm.transaction\n                                              .instrument_clearing_date\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                  ])\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.transaction.instrument_bank_detail\n                                ? _c(\"span\", [\n                                    _c(\"br\"),\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\n                                          \"finance.instrument_bank_detail\"\n                                        )\n                                      ) +\n                                        \": \" +\n                                        _vm._s(\n                                          _vm.transaction.instrument_bank_detail\n                                        )\n                                    ),\n                                  ])\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.transaction.reference_number\n                                ? _c(\"span\", [\n                                    _c(\"br\"),\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\"finance.reference_number\")\n                                      ) +\n                                        \": \" +\n                                        _vm._s(_vm.transaction.reference_number)\n                                    ),\n                                  ])\n                                : _vm._e(),\n                            ]),\n                          ]\n                        : [\n                            _c(\"td\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"finance.reference_number\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"td\", [\n                              _vm._v(_vm._s(_vm.transaction.reference_number)),\n                            ]),\n                          ],\n                      _vm._v(\" \"),\n                      _c(\"td\", [\n                        _vm._v(_vm._s(_vm.trans(\"finance.date_of_entry\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"td\", [\n                        _vm._v(\n                          _vm._s(\n                            _vm._f(\"momentDateTime\")(_vm.transaction.created_at)\n                          )\n                        ),\n                      ]),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"tr\",\n                    [\n                      !_vm.transaction.is_online_payment\n                        ? [\n                            _c(\"td\", [\n                              _vm._v(_vm._s(_vm.trans(\"finance.remarks\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"td\", [_vm._v(_vm._s(_vm.transaction.remarks))]),\n                            _vm._v(\" \"),\n                            _c(\"td\", [\n                              _vm._v(_vm._s(_vm.trans(\"finance.entry_by\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"td\", [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(\n                                    _vm.getEmployeeName(\n                                      _vm.transaction.user.employee\n                                    )\n                                  ) +\n                                  \"\\n                                \"\n                              ),\n                            ]),\n                          ]\n                        : _vm._e(),\n                    ],\n                    2\n                  ),\n                ]),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _vm.transaction.is_deletable &&\n            _vm.hasPermission(\"cancel-fee-payment\")\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-block btn-danger\",\n                    attrs: { type: \"button\" },\n                    on: {\n                      click: function ($event) {\n                        _vm.cancel_fee_payment = true\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"student.cancel_fee_payment\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.cancel_fee_payment\n              ? [\n                  _vm.transaction.is_deletable\n                    ? _c(\n                        \"form\",\n                        {\n                          staticClass: \"m-t-20\",\n                          on: {\n                            submit: function ($event) {\n                              $event.preventDefault()\n                              return _vm.cancelPayment.apply(null, arguments)\n                            },\n                            keydown: function ($event) {\n                              return _vm.cancelPaymentForm.errors.clear(\n                                $event.target.name\n                              )\n                            },\n                          },\n                        },\n                        [\n                          _c(\"div\", { staticClass: \"row\" }, [\n                            _c(\"div\", { staticClass: \"col-12\" }, [\n                              _vm.transactionGroup.length > 1\n                                ? _c(\"div\", { staticClass: \"form-group\" }, [\n                                    _c(\"div\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.trans(\n                                            \"finance.cancel_all_group_fee_payment\",\n                                            {\n                                              numbers:\n                                                _vm.transactionGroup.toString(),\n                                            }\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                  ])\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"autosize-textarea\", {\n                                    attrs: {\n                                      rows: \"2\",\n                                      name: \"cancellation_remarks\",\n                                      placeholder: _vm.trans(\n                                        \"student.cancellation_remarks\"\n                                      ),\n                                    },\n                                    model: {\n                                      value:\n                                        _vm.cancelPaymentForm\n                                          .cancellation_remarks,\n                                      callback: function ($$v) {\n                                        _vm.$set(\n                                          _vm.cancelPaymentForm,\n                                          \"cancellation_remarks\",\n                                          $$v\n                                        )\n                                      },\n                                      expression:\n                                        \"cancelPaymentForm.cancellation_remarks\",\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.cancelPaymentForm,\n                                      \"prop-name\": \"cancellation_remarks\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                              _vm._v(\" \"),\n                              _c(\n                                \"button\",\n                                {\n                                  staticClass:\n                                    \"btn btn-danger waves-effect waves-light\",\n                                  attrs: { type: \"submit\" },\n                                },\n                                [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                              ),\n                            ]),\n                          ]),\n                        ]\n                      )\n                    : _vm._e(),\n                ]\n              : _vm._e(),\n          ]\n        : _vm._e(),\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(_vm._s(_vm.trans(\"finance.fee_detail\")) + \" \"),\n              _vm.student_record.student\n                ? _c(\"small\", [\n                    _vm._v(\n                      _vm._s(_vm.getStudentName(_vm.student_record.student)) +\n                        \"  (\" +\n                        _vm._s(_vm.student_record.academic_session.name) +\n                        \")\"\n                    ),\n                  ])\n                : _vm._e(),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _c(\n                  \"router-link\",\n                  {\n                    staticClass: \"btn btn-info btn-sm\",\n                    attrs: { to: \"/student/list\" },\n                  },\n                  [\n                    _c(\"i\", { staticClass: \"fas fa-list\" }),\n                    _vm._v(\" \"),\n                    _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"student.student\"))),\n                    ]),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: {\n                            click: function ($event) {\n                              return _vm.$router.push(\n                                \"/student/\" + _vm.student_record.student.uuid\n                              )\n                            },\n                          },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-arrow-circle-right\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"student.view_detail\"))\n                          ),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _vm.hasPermission(\"set-fee\")\n                        ? _c(\n                            \"button\",\n                            {\n                              staticClass: \"dropdown-item custom-dropdown\",\n                              on: {\n                                click: function ($event) {\n                                  return _vm.$router.push(\n                                    \"/student/\" +\n                                      _vm.student_record.student.uuid +\n                                      \"/fee/\" +\n                                      _vm.student_record.id +\n                                      \"/set\"\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _c(\"i\", { staticClass: \"fas fa-file\" }),\n                              _vm._v(\n                                \" \" + _vm._s(_vm.trans(\"student.set_fee\"))\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"container-fluid\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\"div\", { staticClass: \"card\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"card-body py-4\" },\n                [\n                  _c(\"student-summary\", {\n                    staticClass: \"border-bottom\",\n                    attrs: { \"student-record\": _vm.student_record },\n                  }),\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"card-body\" },\n                [\n                  _vm.hasPermission(\"customize-fee-date\")\n                    ? _c(\n                        \"div\",\n                        { staticClass: \"row justify-content-end px-4\" },\n                        [\n                          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"datepicker\", {\n                                  attrs: {\n                                    bootstrapStyling: true,\n                                    placeholder: _vm.trans(\n                                      \"student.date_of_payment\"\n                                    ),\n                                  },\n                                  model: {\n                                    value: _vm.feePayment.date,\n                                    callback: function ($$v) {\n                                      _vm.$set(_vm.feePayment, \"date\", $$v)\n                                    },\n                                    expression: \"feePayment.date\",\n                                  },\n                                }),\n                              ],\n                              1\n                            ),\n                          ]),\n                        ]\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _vm._l(\n                    _vm.student_record.fee_allocation.fee_allocation_groups,\n                    function (fee_allocation_group) {\n                      return [\n                        _c(\"h4\", { staticClass: \"card-title m-l-20\" }, [\n                          _vm._v(_vm._s(fee_allocation_group.fee_group.name)),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"table-responsive p-3\" }, [\n                          _c(\"table\", { staticClass: \"table table-sm\" }, [\n                            _c(\"thead\", [\n                              _c(\n                                \"tr\",\n                                [\n                                  _c(\"th\", [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\n                                          \"finance.fee_installment_title\"\n                                        )\n                                      )\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\n                                          \"finance.fee_installment_due_date\"\n                                        )\n                                      )\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _vm._l(\n                                    fee_allocation_group.fee_group.fee_heads,\n                                    function (fee_head) {\n                                      return _c(\"th\", {\n                                        domProps: {\n                                          textContent: _vm._s(fee_head.name),\n                                        },\n                                      })\n                                    }\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", [\n                                    fee_allocation_group.fee_group.options\n                                      .has_transport\n                                      ? _c(\"span\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.trans(\"transport.circle\")\n                                            )\n                                          ),\n                                        ])\n                                      : _vm._e(),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", [\n                                    fee_allocation_group.fee_group.options\n                                      .has_transport\n                                      ? _c(\"span\", [\n                                          _vm._v(\n                                            _vm._s(_vm.trans(\"transport.fee\"))\n                                          ),\n                                        ])\n                                      : _vm._e(),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"finance.late_fee\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\"finance.installment_total\")\n                                      )\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", [\n                                    _vm._v(_vm._s(_vm.trans(\"finance.other\"))),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", [\n                                    _vm._v(_vm._s(_vm.trans(\"finance.paid\"))),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"th\", [\n                                    _vm._v(\n                                      _vm._s(_vm.trans(\"finance.balance\"))\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _vm.hasPermission(\"make-fee-payment\")\n                                    ? _c(\"th\", [\n                                        _vm._v(\n                                          _vm._s(_vm.trans(\"finance.pay_fee\"))\n                                        ),\n                                      ])\n                                    : _c(\"th\", [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\"finance.fee_status\")\n                                          )\n                                        ),\n                                      ]),\n                                ],\n                                2\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"tbody\",\n                              [\n                                _vm._l(\n                                  fee_allocation_group.fee_installments,\n                                  function (fee_installment) {\n                                    return _c(\n                                      \"tr\",\n                                      [\n                                        _c(\"td\", [\n                                          _vm._v(_vm._s(fee_installment.title)),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\n                                          \"td\",\n                                          [\n                                            _vm._v(\n                                              _vm._s(\n                                                _vm.getInstallmentDueDate(\n                                                  fee_installment\n                                                )\n                                              ) +\n                                                \"\\n                                                \"\n                                            ),\n                                            _vm.isInstallmentOverdue(\n                                              fee_installment\n                                            )\n                                              ? [\n                                                  _c(\"br\"),\n                                                  _vm._v(\" \"),\n                                                  _c(\n                                                    \"span\",\n                                                    {\n                                                      staticClass:\n                                                        \"label label-danger\",\n                                                    },\n                                                    [\n                                                      _vm._v(\n                                                        _vm._s(\n                                                          _vm.trans(\n                                                            \"finance.fee_overdue_day\",\n                                                            {\n                                                              day: _vm.isInstallmentOverdue(\n                                                                fee_installment\n                                                              ),\n                                                            }\n                                                          )\n                                                        )\n                                                      ),\n                                                    ]\n                                                  ),\n                                                ]\n                                              : _vm._e(),\n                                          ],\n                                          2\n                                        ),\n                                        _vm._v(\" \"),\n                                        _vm._l(\n                                          fee_allocation_group.fee_group\n                                            .fee_heads,\n                                          function (fee_head) {\n                                            return _c(\"td\", [\n                                              _vm.checkInstallmentConcession(\n                                                fee_installment,\n                                                fee_head.id\n                                              )\n                                                ? _c(\n                                                    \"span\",\n                                                    {\n                                                      staticStyle: {\n                                                        \"text-decoration\":\n                                                          \"line-through\",\n                                                      },\n                                                    },\n                                                    [\n                                                      _vm._v(\n                                                        _vm._s(\n                                                          _vm.getInstallmentFeeAmountWithoutConcession(\n                                                            fee_installment,\n                                                            fee_head.id\n                                                          )\n                                                        )\n                                                      ),\n                                                    ]\n                                                  )\n                                                : _vm._e(),\n                                              _vm._v(\n                                                \"\\n                                                \" +\n                                                  _vm._s(\n                                                    _vm.getInstallmentFeeAmount(\n                                                      fee_installment,\n                                                      fee_head.id\n                                                    )\n                                                  ) +\n                                                  \"\\n                                            \"\n                                              ),\n                                            ])\n                                          }\n                                        ),\n                                        _vm._v(\" \"),\n                                        _c(\"td\", [\n                                          fee_allocation_group.fee_group.options\n                                            .has_transport\n                                            ? _c(\"span\", [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.getTransportCircleName(\n                                                      fee_installment\n                                                    )\n                                                  )\n                                                ),\n                                              ])\n                                            : _vm._e(),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"td\", [\n                                          fee_allocation_group.fee_group.options\n                                            .has_transport\n                                            ? _c(\"span\", [\n                                                _vm._v(\n                                                  _vm._s(\n                                                    _vm.getTransportFeeAmount(\n                                                      fee_installment\n                                                    )\n                                                  )\n                                                ),\n                                              ])\n                                            : _vm._e(),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"td\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.getLateFeeAmount(\n                                                fee_installment\n                                              )\n                                            )\n                                          ),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"td\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.getInstallmentTotalAmount(\n                                                fee_installment\n                                              )\n                                            )\n                                          ),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"td\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.getInstallmentOtherAmount(\n                                                fee_installment\n                                              )\n                                            )\n                                          ),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"td\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.getInstallmentPaidAmount(\n                                                fee_installment\n                                              )\n                                            )\n                                          ),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _c(\"td\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm.getInstallmentBalanceAmount(\n                                                fee_installment\n                                              )\n                                            )\n                                          ),\n                                        ]),\n                                        _vm._v(\" \"),\n                                        _vm.hasPermission(\"make-fee-payment\")\n                                          ? _c(\"td\", [\n                                              _vm.getInstallmentStatus(\n                                                fee_installment\n                                              ) == \"unpaid\"\n                                                ? _c(\"span\", [\n                                                    _c(\n                                                      \"button\",\n                                                      {\n                                                        staticClass:\n                                                          \"btn btn-info btn-sm\",\n                                                        attrs: {\n                                                          type: \"button\",\n                                                        },\n                                                        on: {\n                                                          click: function (\n                                                            $event\n                                                          ) {\n                                                            return _vm.showInstallmentDetail(\n                                                              fee_allocation_group,\n                                                              fee_installment\n                                                            )\n                                                          },\n                                                        },\n                                                      },\n                                                      [\n                                                        _vm._v(\n                                                          _vm._s(\n                                                            _vm.trans(\n                                                              \"finance.pay_fee\"\n                                                            )\n                                                          )\n                                                        ),\n                                                      ]\n                                                    ),\n                                                  ])\n                                                : _vm.getInstallmentStatus(\n                                                    fee_installment\n                                                  ) == \"cancelled\"\n                                                ? _c(\"span\", [\n                                                    _c(\n                                                      \"span\",\n                                                      {\n                                                        staticClass:\n                                                          \"label label-danger\",\n                                                      },\n                                                      [\n                                                        _vm._v(\n                                                          _vm._s(\n                                                            _vm.trans(\n                                                              \"finance.fee_status_cancelled\"\n                                                            )\n                                                          )\n                                                        ),\n                                                      ]\n                                                    ),\n                                                  ])\n                                                : _c(\"span\", [\n                                                    _c(\n                                                      \"div\",\n                                                      {\n                                                        staticClass:\n                                                          \"btn-group\",\n                                                      },\n                                                      [\n                                                        _vm.getInstallmentStatus(\n                                                          fee_installment\n                                                        ) == \"paid\"\n                                                          ? [\n                                                              _c(\n                                                                \"button\",\n                                                                {\n                                                                  staticClass:\n                                                                    \"btn btn-sm btn-success\",\n                                                                },\n                                                                [\n                                                                  _vm._v(\n                                                                    _vm._s(\n                                                                      _vm.trans(\n                                                                        \"student.fee_status_paid\"\n                                                                      )\n                                                                    )\n                                                                  ),\n                                                                ]\n                                                              ),\n                                                              _vm._v(\" \"),\n                                                              _vm._m(0, true),\n                                                            ]\n                                                          : _vm._e(),\n                                                        _vm._v(\" \"),\n                                                        _vm.getInstallmentStatus(\n                                                          fee_installment\n                                                        ) == \"partially_paid\"\n                                                          ? [\n                                                              _c(\n                                                                \"button\",\n                                                                {\n                                                                  staticClass:\n                                                                    \"btn btn-sm btn-warning\",\n                                                                  on: {\n                                                                    click:\n                                                                      function (\n                                                                        $event\n                                                                      ) {\n                                                                        return _vm.showInstallmentDetail(\n                                                                          fee_allocation_group,\n                                                                          fee_installment\n                                                                        )\n                                                                      },\n                                                                  },\n                                                                },\n                                                                [\n                                                                  _vm._v(\n                                                                    _vm._s(\n                                                                      _vm.trans(\n                                                                        \"student.fee_status_partially_paid\"\n                                                                      )\n                                                                    )\n                                                                  ),\n                                                                ]\n                                                              ),\n                                                              _vm._v(\" \"),\n                                                              _vm._m(1, true),\n                                                            ]\n                                                          : _vm._e(),\n                                                        _vm._v(\" \"),\n                                                        _c(\n                                                          \"div\",\n                                                          {\n                                                            staticClass:\n                                                              \"dropdown-menu\",\n                                                          },\n                                                          [\n                                                            _vm.getInstallmentPaid(\n                                                              fee_installment\n                                                            )\n                                                              ? _c(\n                                                                  \"button\",\n                                                                  {\n                                                                    staticClass:\n                                                                      \"dropdown-item custom-dropdown-menu\",\n                                                                    on: {\n                                                                      click:\n                                                                        function (\n                                                                          $event\n                                                                        ) {\n                                                                          $event.preventDefault()\n                                                                          return _vm.setTransaction(\n                                                                            fee_installment\n                                                                          )\n                                                                        },\n                                                                    },\n                                                                  },\n                                                                  [\n                                                                    _c(\"i\", {\n                                                                      staticClass:\n                                                                        \"fas fa-arrow-circle-right\",\n                                                                    }),\n                                                                    _vm._v(\n                                                                      \" \" +\n                                                                        _vm._s(\n                                                                          _vm.trans(\n                                                                            \"finance.receipt_detail\"\n                                                                          )\n                                                                        ) +\n                                                                        \"\\n                                                            \"\n                                                                    ),\n                                                                  ]\n                                                                )\n                                                              : !_vm.getInstallmentPaid(\n                                                                  fee_installment\n                                                                ) &&\n                                                                _vm.hasPermission(\n                                                                  \"cancel-fee-payment\"\n                                                                )\n                                                              ? _c(\n                                                                  \"button\",\n                                                                  {\n                                                                    directives:\n                                                                      [\n                                                                        {\n                                                                          name: \"confirm\",\n                                                                          rawName:\n                                                                            \"v-confirm\",\n                                                                          value:\n                                                                            {\n                                                                              ok: _vm.confirmEmptyReceiptDelete(\n                                                                                fee_installment\n                                                                              ),\n                                                                            },\n                                                                          expression:\n                                                                            \"{ok: confirmEmptyReceiptDelete(fee_installment)}\",\n                                                                        },\n                                                                      ],\n                                                                    key: fee_installment.id,\n                                                                    staticClass:\n                                                                      \"dropdown-item custom-dropdown-menu\",\n                                                                  },\n                                                                  [\n                                                                    _c(\"i\", {\n                                                                      staticClass:\n                                                                        \"fas fa-arrow-circle-right\",\n                                                                    }),\n                                                                    _vm._v(\n                                                                      \" \" +\n                                                                        _vm._s(\n                                                                          _vm.trans(\n                                                                            \"student.cancel_fee_payment\"\n                                                                          )\n                                                                        ) +\n                                                                        \"\\n                                                            \"\n                                                                    ),\n                                                                  ]\n                                                                )\n                                                              : _vm._e(),\n                                                          ]\n                                                        ),\n                                                      ],\n                                                      2\n                                                    ),\n                                                  ]),\n                                            ])\n                                          : _c(\"td\", [\n                                              _vm.getInstallmentStatus(\n                                                fee_installment\n                                              ) == \"unpaid\"\n                                                ? _c(\"span\", [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        _vm.trans(\n                                                          \"student.fee_status_unpaid\"\n                                                        )\n                                                      )\n                                                    ),\n                                                  ])\n                                                : _c(\"span\", [\n                                                    _vm._v(\n                                                      _vm._s(\n                                                        _vm.trans(\n                                                          \"student.fee_status_paid\"\n                                                        )\n                                                      )\n                                                    ),\n                                                  ]),\n                                            ]),\n                                      ],\n                                      2\n                                    )\n                                  }\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"tr\",\n                                  [\n                                    _c(\"th\", { attrs: { colspan: \"2\" } }, [\n                                      _vm._v(\n                                        _vm._s(_vm.trans(\"general.total\"))\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _vm._l(\n                                      fee_allocation_group.fee_group.fee_heads,\n                                      function (fee_head) {\n                                        return _c(\"th\", [\n                                          _vm._v(\n                                            \"\\n                                                \" +\n                                              _vm._s(\n                                                _vm.getTotalFee(\n                                                  fee_allocation_group,\n                                                  fee_head.id\n                                                )\n                                              ) +\n                                              \"\\n                                            \"\n                                          ),\n                                        ])\n                                      }\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\"th\"),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", [\n                                      fee_allocation_group.fee_group.options\n                                        .has_transport\n                                        ? _c(\"span\", [\n                                            _vm._v(\n                                              _vm._s(\n                                                _vm.getTransportFeeTotal(\n                                                  fee_allocation_group\n                                                )\n                                              )\n                                            ),\n                                          ])\n                                        : _vm._e(),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.getLateFeeTotal(\n                                            fee_allocation_group\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.getInstallmentGrandTotal(\n                                            fee_allocation_group\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.getInstallmentGrandOther(\n                                            fee_allocation_group\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.getInstallmentPaidGrandTotal(\n                                            fee_allocation_group\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.getInstallmentBalanceGrandTotal(\n                                            fee_allocation_group\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _vm.hasPermission(\"make-fee-payment\")\n                                      ? _c(\"th\")\n                                      : _c(\"th\"),\n                                  ],\n                                  2\n                                ),\n                              ],\n                              2\n                            ),\n                          ]),\n                        ]),\n                      ]\n                    }\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"table-responsive p-3\" }, [\n                    _c(\"table\", { staticClass: \"table table\" }, [\n                      _c(\"thead\", [\n                        _c(\"tr\", [\n                          _c(\"th\", [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"finance.installment_total\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"th\", [\n                            _vm._v(_vm._s(_vm.trans(\"finance.other\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"th\", [_vm._v(_vm._s(_vm.trans(\"finance.paid\")))]),\n                          _vm._v(\" \"),\n                          _c(\"th\", [\n                            _vm._v(_vm._s(_vm.trans(\"finance.balance\"))),\n                          ]),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"tbody\", [\n                        _c(\"tr\", [\n                          _c(\"td\", [_vm._v(_vm._s(_vm.finalTotal))]),\n                          _vm._v(\" \"),\n                          _c(\"td\", [_vm._v(_vm._s(_vm.finalOther))]),\n                          _vm._v(\" \"),\n                          _c(\"td\", [_vm._v(_vm._s(_vm.finalPaid))]),\n                          _vm._v(\" \"),\n                          _c(\"td\", [_vm._v(_vm._s(_vm.finalBalance))]),\n                        ]),\n                      ]),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _vm.resetFeeOption && _vm.hasPermission(\"set-fee\")\n                    ? _c(\n                        \"div\",\n                        { staticClass: \"row justify-content-md-center\" },\n                        [\n                          _c(\"div\", { staticClass: \"col-4\" }, [\n                            _c(\n                              \"button\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"confirm\",\n                                    rawName: \"v-confirm\",\n                                    value: {\n                                      ok: _vm.confirmResetFee(\n                                        _vm.student_record\n                                      ),\n                                    },\n                                    expression:\n                                      \"{ok: confirmResetFee(student_record)}\",\n                                  },\n                                  {\n                                    name: \"tooltip\",\n                                    rawName: \"v-tooltip\",\n                                    value: _vm.trans(\"student.reset_fee\"),\n                                    expression: \"trans('student.reset_fee')\",\n                                  },\n                                ],\n                                key: _vm.student_record.id,\n                                staticClass: \"btn btn-danger btn-block\",\n                              },\n                              [_vm._v(_vm._s(_vm.trans(\"student.reset_fee\")))]\n                            ),\n                          ]),\n                        ]\n                      )\n                    : _vm._e(),\n                ],\n                2\n              ),\n            ]),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _vm.feePaymentForm &&\n      _vm.hasNotAnyRole([\"parent\", \"student\"]) &&\n      _vm.hasPermission(\"make-fee-payment\")\n        ? _c(\"fee-payment-form\", {\n            attrs: {\n              uuid: _vm.uuid,\n              id: _vm.record_id,\n              \"fee-payment\": _vm.feePayment,\n            },\n            on: {\n              completed: _vm.paymentMade,\n              closeFeePaymentForm: function ($event) {\n                _vm.feePaymentForm = false\n              },\n            },\n          })\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.feePaymentForm &&\n      _vm.hasAnyRole([\"parent\", \"student\"]) &&\n      _vm.hasPermission(\"make-fee-payment\")\n        ? _c(\"fee-payment-parent-form\", {\n            attrs: {\n              uuid: _vm.uuid,\n              id: _vm.record_id,\n              \"fee-payment\": _vm.feePayment,\n            },\n            on: {\n              completed: _vm.paymentMade,\n              closeFeePaymentForm: function ($event) {\n                _vm.feePaymentForm = false\n              },\n            },\n          })\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.feePaymentShow\n        ? _c(\"transition\", { attrs: { name: \"modal\" } }, [\n            _c(\"div\", { staticClass: \"modal-mask\" }, [\n              _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n                _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-header\" },\n                    [\n                      _vm._t(\"header\", function () {\n                        return [\n                          _vm._v(\n                            \"\\n                            \" +\n                              _vm._s(_vm.trans(\"finance.fee_payment\")) +\n                              \"\\n                            \"\n                          ),\n                          _c(\n                            \"span\",\n                            {\n                              staticClass: \"float-right pointer\",\n                              on: {\n                                click: function ($event) {\n                                  _vm.feePaymentShow = false\n                                },\n                              },\n                            },\n                            [_vm._v(\"x\")]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-body\" },\n                    [\n                      _vm._t(\"body\", function () {\n                        return [\n                          _c(\n                            \"div\",\n                            { staticStyle: { \"max-height\": \"600px\" } },\n                            [\n                              _c(\"fee-detail\", {\n                                attrs: {\n                                  uuid: _vm.uuid,\n                                  rid: _vm.record_id,\n                                  id: _vm.student_fee_record_id,\n                                },\n                                on: { completed: _vm.getRecord },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"div\", { staticClass: \"clearfix\" }),\n                            ],\n                            1\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                ]),\n              ]),\n            ]),\n          ])\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\n      \"button\",\n      {\n        staticClass:\n          \"btn btn-sm btn-success dropdown-toggle dropdown-toggle-split\",\n        attrs: {\n          type: \"button\",\n          \"data-toggle\": \"dropdown\",\n          \"aria-haspopup\": \"true\",\n          \"aria-expanded\": \"false\",\n        },\n      },\n      [_c(\"span\", { staticClass: \"sr-only\" }, [_vm._v(\"Toggle Dropdown\")])]\n    )\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\n      \"button\",\n      {\n        staticClass:\n          \"btn btn-sm btn-warning dropdown-toggle dropdown-toggle-split\",\n        attrs: {\n          type: \"button\",\n          \"data-toggle\": \"dropdown\",\n          \"aria-haspopup\": \"true\",\n          \"aria-expanded\": \"false\",\n        },\n      },\n      [_c(\"span\", { staticClass: \"sr-only\" }, [_vm._v(\"Toggle Dropdown\")])]\n    )\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"transition\", { attrs: { name: \"modal\" } }, [\n    _c(\"div\", { staticClass: \"modal-mask\" }, [\n      _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n        _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"modal-header\" },\n            [\n              _vm._t(\"header\", function () {\n                return [\n                  _vm._v(\n                    \"\\n                        \" +\n                      _vm._s(_vm.trans(\"finance.fee_payment\")) +\n                      \"\\n                        \"\n                  ),\n                  _c(\n                    \"span\",\n                    {\n                      staticClass: \"float-right pointer\",\n                      on: {\n                        click: function ($event) {\n                          return _vm.$emit(\"closeFeePaymentForm\")\n                        },\n                      },\n                    },\n                    [_vm._v(\"x\")]\n                  ),\n                ]\n              }),\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"modal-body\" },\n            [\n              _vm._t(\"body\", function () {\n                return [\n                  _c(\"h4\", [\n                    _vm._v(_vm._s(_vm.feePayment.fee_group_name) + \" \"),\n                    _c(\"span\", { staticClass: \"pull-right\" }, [\n                      _vm._v(_vm._s(_vm._f(\"moment\")(_vm.feePayment.date))),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticStyle: { \"max-height\": \"600px\" } }, [\n                    _c(\n                      \"form\",\n                      {\n                        on: {\n                          submit: function ($event) {\n                            $event.preventDefault()\n                            return _vm.submit.apply(null, arguments)\n                          },\n                          keydown: function ($event) {\n                            return _vm.feePaymentForm.errors.clear(\n                              $event.target.name\n                            )\n                          },\n                        },\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"table-responsive p-2\" }, [\n                          _c(\"table\", { staticClass: \"table table-bordered\" }, [\n                            _c(\"thead\", [\n                              _c(\"tr\", [\n                                _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"finance.fee_installment\"))\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", { staticClass: \"text-right\" }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"finance.installment_total\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", { staticClass: \"text-right\" }, [\n                                  _vm._v(_vm._s(_vm.trans(\"finance.late_fee\"))),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", { staticClass: \"text-right\" }, [\n                                  _vm._v(_vm._s(_vm.trans(\"general.total\"))),\n                                ]),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"tbody\",\n                              _vm._l(\n                                _vm.feePaymentForm.installments,\n                                function (installment) {\n                                  return _c(\"tr\", [\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(installment.title),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      staticClass: \"text-right\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          installment.installment_balance\n                                        ),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", { staticClass: \"text-right\" }, [\n                                      _vm._v(\n                                        \"\\n                                                    \" +\n                                          _vm._s(installment.late_fee_balance) +\n                                          \"\\n                                                \"\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      staticClass: \"text-right\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.getInstallmentTotal(installment)\n                                        ),\n                                      },\n                                    }),\n                                  ])\n                                }\n                              ),\n                              0\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"tfoot\", [\n                              _c(\"tr\", [\n                                _c(\"th\", [\n                                  _vm._v(_vm._s(_vm.trans(\"general.total\"))),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", { attrs: { colspan: \"2\" } }),\n                                _vm._v(\" \"),\n                                _c(\"th\", { staticClass: \"text-right\" }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.formatCurrency(_vm.getGrandTotal)\n                                    )\n                                  ),\n                                ]),\n                              ]),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          [\n                            _c(\"h4\", { staticClass: \"card-title\" }, [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"finance.choose_payment_gateway\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _vm.getConfig(\"razorpay\") && _vm.razorpay_loaded\n                              ? _c(\n                                  \"div\",\n                                  { staticClass: \"radio radio-success\" },\n                                  [\n                                    _c(\"input\", {\n                                      attrs: {\n                                        type: \"radio\",\n                                        name: \"payment_gateway\",\n                                        id: \"razorpay\",\n                                        value: \"razorpay\",\n                                      },\n                                      on: {\n                                        change: function ($event) {\n                                          return _vm.setPaymentGateway(\n                                            \"razorpay\"\n                                          )\n                                        },\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"label\",\n                                      { attrs: { for: \"razorpay\" } },\n                                      [\n                                        _vm._v(\n                                          \" \\n                                            Razorpay \\n                                        \"\n                                        ),\n                                      ]\n                                    ),\n                                  ]\n                                )\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.getConfig(\"billdesk\")\n                              ? _c(\n                                  \"div\",\n                                  { staticClass: \"radio radio-success\" },\n                                  [\n                                    _c(\"input\", {\n                                      attrs: {\n                                        type: \"radio\",\n                                        name: \"payment_gateway\",\n                                        id: \"billdesk\",\n                                        value: \"billdesk\",\n                                      },\n                                      on: {\n                                        change: function ($event) {\n                                          return _vm.setPaymentGateway(\n                                            \"billdesk\"\n                                          )\n                                        },\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"label\",\n                                      { attrs: { for: \"billdesk\" } },\n                                      [_vm._v(\" Billdesk \")]\n                                    ),\n                                  ]\n                                )\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.getConfig(\"stripe\")\n                              ? _c(\n                                  \"div\",\n                                  { staticClass: \"radio radio-success\" },\n                                  [\n                                    _c(\"input\", {\n                                      attrs: {\n                                        type: \"radio\",\n                                        name: \"payment_gateway\",\n                                        id: \"stripe\",\n                                        value: \"stripe\",\n                                      },\n                                      on: {\n                                        change: function ($event) {\n                                          return _vm.setPaymentGateway(\"stripe\")\n                                        },\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"label\", { attrs: { for: \"stripe\" } }, [\n                                      _vm._v(\" Stripe \"),\n                                    ]),\n                                  ]\n                                )\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.getConfig(\"paystack\")\n                              ? _c(\n                                  \"div\",\n                                  { staticClass: \"radio radio-success\" },\n                                  [\n                                    _c(\"input\", {\n                                      attrs: {\n                                        type: \"radio\",\n                                        name: \"payment_gateway\",\n                                        id: \"paystack\",\n                                        value: \"paystack\",\n                                      },\n                                      on: {\n                                        change: function ($event) {\n                                          return _vm.setPaymentGateway(\n                                            \"paystack\"\n                                          )\n                                        },\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"label\",\n                                      { attrs: { for: \"paystack\" } },\n                                      [_vm._v(\" Paystack \")]\n                                    ),\n                                  ]\n                                )\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.getConfig(\"paypal\")\n                              ? _c(\n                                  \"div\",\n                                  { staticClass: \"radio radio-success\" },\n                                  [\n                                    _c(\"input\", {\n                                      attrs: {\n                                        type: \"radio\",\n                                        name: \"payment_gateway\",\n                                        id: \"paypal\",\n                                        value: \"paypal\",\n                                      },\n                                      on: {\n                                        change: function ($event) {\n                                          return _vm.setPaymentGateway(\"paypal\")\n                                        },\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"label\", { attrs: { for: \"paypal\" } }, [\n                                      _vm._v(\" Paypal \"),\n                                    ]),\n                                  ]\n                                )\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _c(\"p\", [_vm._v(_vm._s(_vm.handlingFeeAmount))]),\n                            _vm._v(\" \"),\n                            _c(\"p\", [_vm._v(_vm._s(_vm.totalAmount))]),\n                            _vm._v(\" \"),\n                            _vm.payment_gateway == \"billdesk\"\n                              ? [\n                                  _c(\n                                    \"button\",\n                                    {\n                                      staticClass: \"btn btn-info\",\n                                      attrs: { type: \"button\" },\n                                      on: { click: _vm.callBillDesk },\n                                    },\n                                    [\n                                      _vm._v(\n                                        _vm._s(_vm.trans(\"general.proceed\"))\n                                      ),\n                                    ]\n                                  ),\n                                ]\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.payment_gateway == \"razorpay\"\n                              ? [\n                                  _c(\n                                    \"button\",\n                                    {\n                                      staticClass: \"btn btn-info\",\n                                      attrs: { type: \"button\" },\n                                      on: { click: _vm.callRazorpay },\n                                    },\n                                    [\n                                      _vm._v(\n                                        _vm._s(_vm.trans(\"general.proceed\"))\n                                      ),\n                                    ]\n                                  ),\n                                ]\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.payment_gateway == \"paystack\"\n                              ? [\n                                  _c(\n                                    \"button\",\n                                    {\n                                      staticClass: \"btn btn-info\",\n                                      attrs: { type: \"button\" },\n                                      on: { click: _vm.payWithPaystack },\n                                    },\n                                    [\n                                      _vm._v(\n                                        _vm._s(_vm.trans(\"general.proceed\"))\n                                      ),\n                                    ]\n                                  ),\n                                ]\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.payment_gateway == \"paypal\"\n                              ? [\n                                  _vm.paypalButton\n                                    ? _c(\n                                        \"button\",\n                                        {\n                                          staticClass: \"btn btn-info\",\n                                          attrs: { type: \"button\" },\n                                          on: { click: _vm.callPaypal },\n                                        },\n                                        [\n                                          _vm._v(\n                                            _vm._s(_vm.trans(\"general.proceed\"))\n                                          ),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                ]\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.payment_gateway == \"stripe\"\n                              ? [\n                                  _c(\"div\", { staticClass: \"row m-t-40\" }, [\n                                    _c(\"div\", { staticClass: \"col-12\" }, [\n                                      _c(\"div\", { staticClass: \"form-group\" }, [\n                                        _c(\"input\", {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.stripe.card_number,\n                                              expression: \"stripe.card_number\",\n                                            },\n                                          ],\n                                          staticClass: \"form-control\",\n                                          attrs: {\n                                            type: \"number\",\n                                            maxlength: \"16\",\n                                            value: \"\",\n                                            placeholder: _vm.trans(\n                                              \"finance.card_number\"\n                                            ),\n                                          },\n                                          domProps: {\n                                            value: _vm.stripe.card_number,\n                                          },\n                                          on: {\n                                            input: function ($event) {\n                                              if ($event.target.composing)\n                                                return\n                                              _vm.$set(\n                                                _vm.stripe,\n                                                \"card_number\",\n                                                $event.target.value\n                                              )\n                                            },\n                                          },\n                                        }),\n                                      ]),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"div\", { staticClass: \"col-3\" }, [\n                                      _c(\"div\", { staticClass: \"form-group\" }, [\n                                        _c(\"input\", {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.stripe.month,\n                                              expression: \"stripe.month\",\n                                            },\n                                          ],\n                                          staticClass: \"form-control\",\n                                          attrs: {\n                                            type: \"number\",\n                                            value: \"\",\n                                            placeholder: _vm.trans(\n                                              \"finance.card_expiry_month\"\n                                            ),\n                                          },\n                                          domProps: { value: _vm.stripe.month },\n                                          on: {\n                                            input: function ($event) {\n                                              if ($event.target.composing)\n                                                return\n                                              _vm.$set(\n                                                _vm.stripe,\n                                                \"month\",\n                                                $event.target.value\n                                              )\n                                            },\n                                          },\n                                        }),\n                                      ]),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"div\", { staticClass: \"col-4\" }, [\n                                      _c(\"div\", { staticClass: \"form-group\" }, [\n                                        _c(\"input\", {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.stripe.year,\n                                              expression: \"stripe.year\",\n                                            },\n                                          ],\n                                          staticClass: \"form-control\",\n                                          attrs: {\n                                            type: \"number\",\n                                            value: \"\",\n                                            placeholder: _vm.trans(\n                                              \"finance.card_expiry_year\"\n                                            ),\n                                          },\n                                          domProps: { value: _vm.stripe.year },\n                                          on: {\n                                            input: function ($event) {\n                                              if ($event.target.composing)\n                                                return\n                                              _vm.$set(\n                                                _vm.stripe,\n                                                \"year\",\n                                                $event.target.value\n                                              )\n                                            },\n                                          },\n                                        }),\n                                      ]),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"div\", { staticClass: \"col-1\" }),\n                                    _vm._v(\" \"),\n                                    _c(\"div\", { staticClass: \"col-4\" }, [\n                                      _c(\"div\", { staticClass: \"form-group\" }, [\n                                        _c(\"input\", {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.stripe.cvc,\n                                              expression: \"stripe.cvc\",\n                                            },\n                                          ],\n                                          staticClass: \"form-control\",\n                                          attrs: {\n                                            type: \"number\",\n                                            value: \"\",\n                                            placeholder:\n                                              _vm.trans(\"finance.card_cvc\"),\n                                          },\n                                          domProps: { value: _vm.stripe.cvc },\n                                          on: {\n                                            input: function ($event) {\n                                              if ($event.target.composing)\n                                                return\n                                              _vm.$set(\n                                                _vm.stripe,\n                                                \"cvc\",\n                                                $event.target.value\n                                              )\n                                            },\n                                          },\n                                        }),\n                                      ]),\n                                    ]),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _vm.stripeButton\n                                    ? _c(\n                                        \"button\",\n                                        {\n                                          staticClass:\n                                            \"btn btn-info waves-effect waves-light pull-right\",\n                                          attrs: { type: \"button\" },\n                                          on: { click: _vm.stripeCheckout },\n                                        },\n                                        [\n                                          _c(\"span\", [\n                                            _vm._v(\n                                              _vm._s(\n                                                _vm.trans(\"general.proceed\")\n                                              )\n                                            ),\n                                          ]),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                ]\n                              : _vm._e(),\n                          ],\n                          2\n                        ),\n                      ]\n                    ),\n                  ]),\n                ]\n              }),\n            ],\n            2\n          ),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"transition\", { attrs: { name: \"modal\" } }, [\n    _c(\"div\", { staticClass: \"modal-mask\" }, [\n      _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n        _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"modal-header\" },\n            [\n              _vm._t(\"header\", function () {\n                return [\n                  _vm._v(\n                    \"\\n                        \" +\n                      _vm._s(_vm.trans(\"finance.fee_payment\")) +\n                      \"\\n                        \"\n                  ),\n                  _c(\n                    \"span\",\n                    {\n                      staticClass: \"float-right pointer\",\n                      on: {\n                        click: function ($event) {\n                          return _vm.$emit(\"closeFeePaymentForm\")\n                        },\n                      },\n                    },\n                    [_vm._v(\"x\")]\n                  ),\n                ]\n              }),\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"modal-body\" },\n            [\n              _vm._t(\"body\", function () {\n                return [\n                  _c(\"h4\", [\n                    _vm._v(_vm._s(_vm.feePayment.fee_group_name) + \" \"),\n                    _c(\"span\", { staticClass: \"pull-right\" }, [\n                      _vm._v(_vm._s(_vm._f(\"moment\")(_vm.feePayment.date))),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticStyle: { \"max-height\": \"600px\" } }, [\n                    _c(\n                      \"form\",\n                      {\n                        on: {\n                          submit: function ($event) {\n                            $event.preventDefault()\n                            return _vm.submit.apply(null, arguments)\n                          },\n                          keydown: function ($event) {\n                            return _vm.feePaymentForm.errors.clear(\n                              $event.target.name\n                            )\n                          },\n                        },\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"table-responsive p-2\" }, [\n                          _c(\"table\", { staticClass: \"table table-bordered\" }, [\n                            _c(\"thead\", [\n                              _c(\"tr\", [\n                                _c(\"th\", [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"finance.fee_installment\"))\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", { staticClass: \"text-right\" }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"finance.installment_total\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", { staticClass: \"text-right\" }, [\n                                  _vm._v(_vm._s(_vm.trans(\"finance.late_fee\"))),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", { staticClass: \"text-right\" }, [\n                                  _vm._v(_vm._s(_vm.trans(\"general.total\"))),\n                                ]),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"tbody\",\n                              _vm._l(\n                                _vm.feePaymentForm.installments,\n                                function (installment) {\n                                  return _c(\"tr\", [\n                                    _c(\"td\", {\n                                      domProps: {\n                                        textContent: _vm._s(installment.title),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      staticClass: \"text-right\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          installment.installment_balance\n                                        ),\n                                      },\n                                    }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"td\",\n                                      { staticClass: \"text-right\" },\n                                      [\n                                        _vm.hasPermission(\"customize-late-fee\")\n                                          ? [\n                                              _c(\"input\", {\n                                                directives: [\n                                                  {\n                                                    name: \"model\",\n                                                    rawName: \"v-model\",\n                                                    value:\n                                                      installment.late_fee_balance,\n                                                    expression:\n                                                      \"installment.late_fee_balance\",\n                                                  },\n                                                ],\n                                                staticClass: \"invoice-input\",\n                                                attrs: { type: \"text\" },\n                                                domProps: {\n                                                  value:\n                                                    installment.late_fee_balance,\n                                                },\n                                                on: {\n                                                  input: function ($event) {\n                                                    if ($event.target.composing)\n                                                      return\n                                                    _vm.$set(\n                                                      installment,\n                                                      \"late_fee_balance\",\n                                                      $event.target.value\n                                                    )\n                                                  },\n                                                },\n                                              }),\n                                            ]\n                                          : [\n                                              _vm._v(\n                                                \"\\n                                                        \" +\n                                                  _vm._s(\n                                                    installment.late_fee_balance\n                                                  ) +\n                                                  \"\\n                                                    \"\n                                              ),\n                                            ],\n                                      ],\n                                      2\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\"td\", {\n                                      staticClass: \"text-right\",\n                                      domProps: {\n                                        textContent: _vm._s(\n                                          _vm.getInstallmentTotal(installment)\n                                        ),\n                                      },\n                                    }),\n                                  ])\n                                }\n                              ),\n                              0\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"tfoot\", [\n                              _c(\"tr\", [\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"student.additional_fee_charge\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", { attrs: { colspan: \"2\" } }, [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"form-group\" },\n                                    [\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value:\n                                              _vm.feePaymentForm\n                                                .additional_fee_charge_label,\n                                            expression:\n                                              \"feePaymentForm.additional_fee_charge_label\",\n                                          },\n                                        ],\n                                        staticClass: \"invoice-input-left\",\n                                        attrs: {\n                                          type: \"text\",\n                                          name: \"additional_fee_charge_label\",\n                                          placeholder:\n                                            _vm.trans(\"student.fee_label\"),\n                                        },\n                                        domProps: {\n                                          value:\n                                            _vm.feePaymentForm\n                                              .additional_fee_charge_label,\n                                        },\n                                        on: {\n                                          input: function ($event) {\n                                            if ($event.target.composing) return\n                                            _vm.$set(\n                                              _vm.feePaymentForm,\n                                              \"additional_fee_charge_label\",\n                                              $event.target.value\n                                            )\n                                          },\n                                        },\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"show-error\", {\n                                        attrs: {\n                                          \"form-name\": _vm.feePaymentForm,\n                                          \"prop-name\":\n                                            \"additional_fee_charge_label\",\n                                        },\n                                      }),\n                                    ],\n                                    1\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", { staticClass: \"text-right\" }, [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"form-group\" },\n                                    [\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value:\n                                              _vm.feePaymentForm\n                                                .additional_fee_charge,\n                                            expression:\n                                              \"feePaymentForm.additional_fee_charge\",\n                                          },\n                                        ],\n                                        staticClass: \"invoice-input\",\n                                        attrs: {\n                                          type: \"text\",\n                                          name: \"additional_fee_charge\",\n                                          placeholder: _vm.trans(\n                                            \"student.additional_fee_charge\"\n                                          ),\n                                        },\n                                        domProps: {\n                                          value:\n                                            _vm.feePaymentForm\n                                              .additional_fee_charge,\n                                        },\n                                        on: {\n                                          input: function ($event) {\n                                            if ($event.target.composing) return\n                                            _vm.$set(\n                                              _vm.feePaymentForm,\n                                              \"additional_fee_charge\",\n                                              $event.target.value\n                                            )\n                                          },\n                                        },\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"show-error\", {\n                                        attrs: {\n                                          \"form-name\": _vm.feePaymentForm,\n                                          \"prop-name\": \"additional_fee_charge\",\n                                        },\n                                      }),\n                                    ],\n                                    1\n                                  ),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"tr\", [\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\n                                        \"student.additional_fee_discount\"\n                                      )\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", { attrs: { colspan: \"2\" } }, [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"form-group\" },\n                                    [\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value:\n                                              _vm.feePaymentForm\n                                                .additional_fee_discount_label,\n                                            expression:\n                                              \"feePaymentForm.additional_fee_discount_label\",\n                                          },\n                                        ],\n                                        staticClass: \"invoice-input-left\",\n                                        attrs: {\n                                          type: \"text\",\n                                          name: \"additional_fee_discount_label\",\n                                          placeholder:\n                                            _vm.trans(\"student.fee_label\"),\n                                        },\n                                        domProps: {\n                                          value:\n                                            _vm.feePaymentForm\n                                              .additional_fee_discount_label,\n                                        },\n                                        on: {\n                                          input: function ($event) {\n                                            if ($event.target.composing) return\n                                            _vm.$set(\n                                              _vm.feePaymentForm,\n                                              \"additional_fee_discount_label\",\n                                              $event.target.value\n                                            )\n                                          },\n                                        },\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"show-error\", {\n                                        attrs: {\n                                          \"form-name\": _vm.feePaymentForm,\n                                          \"prop-name\":\n                                            \"additional_fee_discount_label\",\n                                        },\n                                      }),\n                                    ],\n                                    1\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", { staticClass: \"text-right\" }, [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"form-group\" },\n                                    [\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value:\n                                              _vm.feePaymentForm\n                                                .additional_fee_discount,\n                                            expression:\n                                              \"feePaymentForm.additional_fee_discount\",\n                                          },\n                                        ],\n                                        staticClass: \"invoice-input\",\n                                        attrs: {\n                                          type: \"text\",\n                                          name: \"additional_fee_discount\",\n                                          placeholder: _vm.trans(\n                                            \"student.additional_fee_discount\"\n                                          ),\n                                        },\n                                        domProps: {\n                                          value:\n                                            _vm.feePaymentForm\n                                              .additional_fee_discount,\n                                        },\n                                        on: {\n                                          input: function ($event) {\n                                            if ($event.target.composing) return\n                                            _vm.$set(\n                                              _vm.feePaymentForm,\n                                              \"additional_fee_discount\",\n                                              $event.target.value\n                                            )\n                                          },\n                                        },\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"show-error\", {\n                                        attrs: {\n                                          \"form-name\": _vm.feePaymentForm,\n                                          \"prop-name\":\n                                            \"additional_fee_discount\",\n                                        },\n                                      }),\n                                    ],\n                                    1\n                                  ),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"tr\", [\n                                _c(\"th\", [\n                                  _vm._v(_vm._s(_vm.trans(\"general.total\"))),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"th\", { attrs: { colspan: \"2\" } }),\n                                _vm._v(\" \"),\n                                _c(\"th\", { staticClass: \"text-right\" }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.formatCurrency(_vm.getGrandTotal)\n                                    )\n                                  ),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _vm.hasPermission(\"make-partial-fee-payment\")\n                                ? _c(\"tr\", [\n                                    _c(\"th\", [\n                                      _vm._v(\n                                        _vm._s(_vm.trans(\"finance.amount\"))\n                                      ),\n                                    ]),\n                                    _vm._v(\" \"),\n                                    _c(\"th\", { attrs: { colspan: \"2\" } }),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"th\",\n                                      { staticClass: \"text-right\" },\n                                      [\n                                        _c(\"input\", {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.feePaymentForm.amount,\n                                              expression:\n                                                \"feePaymentForm.amount\",\n                                            },\n                                          ],\n                                          staticClass: \"invoice-input\",\n                                          attrs: {\n                                            type: \"text\",\n                                            name: \"amount\",\n                                            placeholder:\n                                              _vm.trans(\"finance.amount\"),\n                                          },\n                                          domProps: {\n                                            value: _vm.feePaymentForm.amount,\n                                          },\n                                          on: {\n                                            input: function ($event) {\n                                              if ($event.target.composing)\n                                                return\n                                              _vm.$set(\n                                                _vm.feePaymentForm,\n                                                \"amount\",\n                                                $event.target.value\n                                              )\n                                            },\n                                          },\n                                        }),\n                                        _vm._v(\" \"),\n                                        _c(\"show-error\", {\n                                          attrs: {\n                                            \"form-name\": _vm.feePaymentForm,\n                                            \"prop-name\": \"amount\",\n                                          },\n                                        }),\n                                      ],\n                                      1\n                                    ),\n                                  ])\n                                : _vm._e(),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"div\",\n                          { staticClass: \"row\" },\n                          [\n                            _vm.feePaymentForm.amount\n                              ? [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"col-12 col-sm-6\" },\n                                    [\n                                      _c(\n                                        \"div\",\n                                        { staticClass: \"form-group\" },\n                                        [\n                                          _c(\"label\", { attrs: { for: \"\" } }, [\n                                            _vm._v(\n                                              _vm._s(\n                                                _vm.trans(\"finance.account\")\n                                              )\n                                            ),\n                                          ]),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"v-select\",\n                                            {\n                                              attrs: {\n                                                label: \"name\",\n                                                name: \"account_id\",\n                                                id: \"account_id\",\n                                                options: _vm.accounts,\n                                                placeholder: _vm.trans(\n                                                  \"account.select_account\"\n                                                ),\n                                              },\n                                              on: {\n                                                select: _vm.onAccountSelect,\n                                                close: function ($event) {\n                                                  return _vm.feePaymentForm.errors.clear(\n                                                    \"account_id\"\n                                                  )\n                                                },\n                                                remove: function ($event) {\n                                                  _vm.feePaymentForm.account_id =\n                                                    \"\"\n                                                },\n                                              },\n                                              model: {\n                                                value: _vm.selected_account,\n                                                callback: function ($$v) {\n                                                  _vm.selected_account = $$v\n                                                },\n                                                expression: \"selected_account\",\n                                              },\n                                            },\n                                            [\n                                              !_vm.accounts.length\n                                                ? _c(\n                                                    \"div\",\n                                                    {\n                                                      staticClass:\n                                                        \"multiselect__option\",\n                                                      attrs: {\n                                                        slot: \"afterList\",\n                                                      },\n                                                      slot: \"afterList\",\n                                                    },\n                                                    [\n                                                      _vm._v(\n                                                        \"\\n                                                        \" +\n                                                          _vm._s(\n                                                            _vm.trans(\n                                                              \"general.no_option_found\"\n                                                            )\n                                                          ) +\n                                                          \"\\n                                                    \"\n                                                      ),\n                                                    ]\n                                                  )\n                                                : _vm._e(),\n                                            ]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\"show-error\", {\n                                            attrs: {\n                                              \"form-name\": _vm.feePaymentForm,\n                                              \"prop-name\": \"account_id\",\n                                            },\n                                          }),\n                                        ],\n                                        1\n                                      ),\n                                    ]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"col-12 col-sm-6\" },\n                                    [\n                                      _c(\n                                        \"div\",\n                                        { staticClass: \"form-group\" },\n                                        [\n                                          _c(\"label\", { attrs: { for: \"\" } }, [\n                                            _vm._v(\n                                              _vm._s(\n                                                _vm.trans(\n                                                  \"finance.payment_method\"\n                                                )\n                                              )\n                                            ),\n                                          ]),\n                                          _vm._v(\" \"),\n                                          _c(\n                                            \"v-select\",\n                                            {\n                                              attrs: {\n                                                label: \"name\",\n                                                name: \"payment_method_id\",\n                                                id: \"payment_method_id\",\n                                                options: _vm.payment_methods,\n                                                placeholder: _vm.trans(\n                                                  \"payment_method.select_payment_method\"\n                                                ),\n                                              },\n                                              on: {\n                                                select:\n                                                  _vm.onPaymentMethodSelect,\n                                                close: function ($event) {\n                                                  return _vm.feePaymentForm.errors.clear(\n                                                    \"payment_method_id\"\n                                                  )\n                                                },\n                                                remove:\n                                                  _vm.onPaymentMethodRemove,\n                                              },\n                                              model: {\n                                                value:\n                                                  _vm.selected_payment_method,\n                                                callback: function ($$v) {\n                                                  _vm.selected_payment_method =\n                                                    $$v\n                                                },\n                                                expression:\n                                                  \"selected_payment_method\",\n                                              },\n                                            },\n                                            [\n                                              !_vm.payment_methods.length\n                                                ? _c(\n                                                    \"div\",\n                                                    {\n                                                      staticClass:\n                                                        \"multiselect__option\",\n                                                      attrs: {\n                                                        slot: \"afterList\",\n                                                      },\n                                                      slot: \"afterList\",\n                                                    },\n                                                    [\n                                                      _vm._v(\n                                                        \"\\n                                                        \" +\n                                                          _vm._s(\n                                                            _vm.trans(\n                                                              \"general.no_option_found\"\n                                                            )\n                                                          ) +\n                                                          \"\\n                                                    \"\n                                                      ),\n                                                    ]\n                                                  )\n                                                : _vm._e(),\n                                            ]\n                                          ),\n                                          _vm._v(\" \"),\n                                          _c(\"show-error\", {\n                                            attrs: {\n                                              \"form-name\": _vm.feePaymentForm,\n                                              \"prop-name\": \"payment_method_id\",\n                                            },\n                                          }),\n                                        ],\n                                        1\n                                      ),\n                                    ]\n                                  ),\n                                ]\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.getPaymentMethodDetail(\"instrument_number\")\n                              ? _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"form-group\" },\n                                    [\n                                      _c(\"label\", { attrs: { for: \"\" } }, [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\n                                              \"finance.instrument_number\"\n                                            )\n                                          )\n                                        ),\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value:\n                                              _vm.feePaymentForm\n                                                .instrument_number,\n                                            expression:\n                                              \"feePaymentForm.instrument_number\",\n                                          },\n                                        ],\n                                        staticClass: \"form-control\",\n                                        attrs: {\n                                          type: \"text\",\n                                          name: \"instrument_number\",\n                                          placeholder: _vm.trans(\n                                            \"finance.instrument_number\"\n                                          ),\n                                        },\n                                        domProps: {\n                                          value:\n                                            _vm.feePaymentForm\n                                              .instrument_number,\n                                        },\n                                        on: {\n                                          input: function ($event) {\n                                            if ($event.target.composing) return\n                                            _vm.$set(\n                                              _vm.feePaymentForm,\n                                              \"instrument_number\",\n                                              $event.target.value\n                                            )\n                                          },\n                                        },\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"show-error\", {\n                                        attrs: {\n                                          \"form-name\": _vm.feePaymentForm,\n                                          \"prop-name\": \"instrument_number\",\n                                        },\n                                      }),\n                                    ],\n                                    1\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.getPaymentMethodDetail(\"instrument_date\")\n                              ? _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"form-group\" },\n                                    [\n                                      _c(\"label\", { attrs: { for: \"\" } }, [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\"finance.instrument_date\")\n                                          )\n                                        ),\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"datepicker\", {\n                                        attrs: {\n                                          bootstrapStyling: true,\n                                          placeholder: _vm.trans(\n                                            \"finance.instrument_date\"\n                                          ),\n                                        },\n                                        on: {\n                                          selected: function ($event) {\n                                            return _vm.feePaymentForm.errors.clear(\n                                              \"instrument_date\"\n                                            )\n                                          },\n                                        },\n                                        model: {\n                                          value:\n                                            _vm.feePaymentForm.instrument_date,\n                                          callback: function ($$v) {\n                                            _vm.$set(\n                                              _vm.feePaymentForm,\n                                              \"instrument_date\",\n                                              $$v\n                                            )\n                                          },\n                                          expression:\n                                            \"feePaymentForm.instrument_date\",\n                                        },\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"show-error\", {\n                                        attrs: {\n                                          \"form-name\": _vm.feePaymentForm,\n                                          \"prop-name\": \"instrument_date\",\n                                        },\n                                      }),\n                                    ],\n                                    1\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.getPaymentMethodDetail(\"instrument_bank_detail\")\n                              ? _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"form-group\" },\n                                    [\n                                      _c(\"label\", { attrs: { for: \"\" } }, [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\n                                              \"finance.instrument_bank_detail\"\n                                            )\n                                          )\n                                        ),\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value:\n                                              _vm.feePaymentForm\n                                                .instrument_bank_detail,\n                                            expression:\n                                              \"feePaymentForm.instrument_bank_detail\",\n                                          },\n                                        ],\n                                        staticClass: \"form-control\",\n                                        attrs: {\n                                          type: \"text\",\n                                          name: \"instrument_bank_detail\",\n                                          placeholder: _vm.trans(\n                                            \"finance.instrument_bank_detail\"\n                                          ),\n                                        },\n                                        domProps: {\n                                          value:\n                                            _vm.feePaymentForm\n                                              .instrument_bank_detail,\n                                        },\n                                        on: {\n                                          input: function ($event) {\n                                            if ($event.target.composing) return\n                                            _vm.$set(\n                                              _vm.feePaymentForm,\n                                              \"instrument_bank_detail\",\n                                              $event.target.value\n                                            )\n                                          },\n                                        },\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"show-error\", {\n                                        attrs: {\n                                          \"form-name\": _vm.feePaymentForm,\n                                          \"prop-name\": \"instrument_bank_detail\",\n                                        },\n                                      }),\n                                    ],\n                                    1\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.getPaymentMethodDetail(\n                              \"instrument_clearing_date\"\n                            )\n                              ? _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"form-group\" },\n                                    [\n                                      _c(\"label\", { attrs: { for: \"\" } }, [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\n                                              \"finance.instrument_clearing_date\"\n                                            )\n                                          )\n                                        ),\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"datepicker\", {\n                                        attrs: {\n                                          bootstrapStyling: true,\n                                          placeholder: _vm.trans(\n                                            \"finance.instrument_clearing_date\"\n                                          ),\n                                        },\n                                        on: {\n                                          selected: function ($event) {\n                                            return _vm.feePaymentForm.errors.clear(\n                                              \"instrument_clearing_date\"\n                                            )\n                                          },\n                                        },\n                                        model: {\n                                          value:\n                                            _vm.feePaymentForm\n                                              .instrument_clearing_date,\n                                          callback: function ($$v) {\n                                            _vm.$set(\n                                              _vm.feePaymentForm,\n                                              \"instrument_clearing_date\",\n                                              $$v\n                                            )\n                                          },\n                                          expression:\n                                            \"feePaymentForm.instrument_clearing_date\",\n                                        },\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"show-error\", {\n                                        attrs: {\n                                          \"form-name\": _vm.feePaymentForm,\n                                          \"prop-name\":\n                                            \"instrument_clearing_date\",\n                                        },\n                                      }),\n                                    ],\n                                    1\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _vm.getPaymentMethodDetail(\"reference_number\")\n                              ? _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"form-group\" },\n                                    [\n                                      _c(\"label\", { attrs: { for: \"\" } }, [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\n                                              \"finance.reference_number\"\n                                            )\n                                          )\n                                        ),\n                                      ]),\n                                      _vm._v(\" \"),\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value:\n                                              _vm.feePaymentForm\n                                                .reference_number,\n                                            expression:\n                                              \"feePaymentForm.reference_number\",\n                                          },\n                                        ],\n                                        staticClass: \"form-control\",\n                                        attrs: {\n                                          type: \"text\",\n                                          name: \"reference_number\",\n                                          placeholder: _vm.trans(\n                                            \"finance.reference_number\"\n                                          ),\n                                        },\n                                        domProps: {\n                                          value:\n                                            _vm.feePaymentForm.reference_number,\n                                        },\n                                        on: {\n                                          input: function ($event) {\n                                            if ($event.target.composing) return\n                                            _vm.$set(\n                                              _vm.feePaymentForm,\n                                              \"reference_number\",\n                                              $event.target.value\n                                            )\n                                          },\n                                        },\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"show-error\", {\n                                        attrs: {\n                                          \"form-name\": _vm.feePaymentForm,\n                                          \"prop-name\": \"reference_number\",\n                                        },\n                                      }),\n                                    ],\n                                    1\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _c(\"div\", { staticClass: \"col-12 col-sm-12\" }, [\n                              _c(\n                                \"div\",\n                                { staticClass: \"form-group\" },\n                                [\n                                  _c(\"label\", { attrs: { for: \"\" } }, [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.trans(\"finance.fee_payment_remarks\")\n                                      )\n                                    ),\n                                  ]),\n                                  _vm._v(\" \"),\n                                  _c(\"autosize-textarea\", {\n                                    attrs: {\n                                      rows: \"2\",\n                                      name: \"remarks\",\n                                      placeholder: _vm.trans(\n                                        \"finance.fee_payment_remarks\"\n                                      ),\n                                    },\n                                    model: {\n                                      value: _vm.feePaymentForm.remarks,\n                                      callback: function ($$v) {\n                                        _vm.$set(\n                                          _vm.feePaymentForm,\n                                          \"remarks\",\n                                          $$v\n                                        )\n                                      },\n                                      expression: \"feePaymentForm.remarks\",\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  _c(\"show-error\", {\n                                    attrs: {\n                                      \"form-name\": _vm.feePaymentForm,\n                                      \"prop-name\": \"remarks\",\n                                    },\n                                  }),\n                                ],\n                                1\n                              ),\n                            ]),\n                          ],\n                          2\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"button\",\n                          {\n                            staticClass:\n                              \"btn btn-info waves-effect waves-light pull-right\",\n                            attrs: { type: \"submit\" },\n                          },\n                          [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                        ),\n                      ]\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"clearfix\" }),\n                ]\n              }),\n            ],\n            2\n          ),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _vm.student_record.student\n    ? _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\"div\", { staticClass: \"form-group text-center\" }, [\n            _c(\"img\", {\n              staticClass: \"img-fluid\",\n              staticStyle: { \"max-width\": \"200px\" },\n              attrs: { src: _vm.getImage },\n            }),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n          _c(\"div\", { staticClass: \"table-responsive\" }, [\n            _c(\n              \"table\",\n              { staticClass: \"table table-borderless custom-show-table\" },\n              [\n                _c(\"tbody\", [\n                  _c(\"tr\", [\n                    _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"student.name\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(\n                        _vm._s(_vm.getStudentName(_vm.student_record.student))\n                      ),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"tr\", [\n                    _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"student.admission_number\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(\n                        _vm._s(\n                          _vm.getAdmissionNumber(_vm.student_record.admission)\n                        )\n                      ),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"tr\", [\n                    _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"student.date_of_admission\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(\n                        _vm._s(\n                          _vm._f(\"moment\")(\n                            _vm.student_record.admission.date_of_admission\n                          )\n                        )\n                      ),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"tr\", [\n                    _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"academic.course\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(\n                        _vm._s(\n                          _vm.student_record.batch.course.name +\n                            \" (\" +\n                            _vm.student_record.batch.course.course_group.name +\n                            \")\"\n                        )\n                      ),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"tr\", [\n                    _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"academic.batch\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [_vm._v(_vm._s(_vm.student_record.batch.name))]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"tr\", [\n                    _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"student.date_of_birth\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(\n                        _vm._s(\n                          _vm._f(\"moment\")(\n                            _vm.student_record.student.date_of_birth\n                          )\n                        )\n                      ),\n                    ]),\n                  ]),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n          _c(\"div\", { staticClass: \"table-responsive\" }, [\n            _c(\n              \"table\",\n              { staticClass: \"table table-borderless custom-show-table\" },\n              [\n                _c(\"tbody\", [\n                  _c(\"tr\", [\n                    _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"student.father_name\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(\n                        _vm._s(\n                          _vm.student_record.student.parent\n                            ? _vm.student_record.student.parent.father_name\n                            : \"\"\n                        )\n                      ),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"tr\", [\n                    _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"student.mother_name\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(\n                        _vm._s(\n                          _vm.student_record.student.parent\n                            ? _vm.student_record.student.parent.mother_name\n                            : \"\"\n                        )\n                      ),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"tr\", [\n                    _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"student.contact_number\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(_vm._s(_vm.student_record.student.contact_number)),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"tr\", [\n                    _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"student.present_address\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"td\", [\n                      _vm._v(\n                        \"\\n\\t                            \" +\n                          _vm._s(\n                            _vm.student_record.student.present_address_line_1\n                          ) +\n                          \"\\n\\t                            \"\n                      ),\n                      _vm.student_record.student.present_address_line_2\n                        ? _c(\"span\", [\n                            _vm._v(\n                              \", \" +\n                                _vm._s(\n                                  _vm.student_record.student\n                                    .present_address_line_2\n                                )\n                            ),\n                          ])\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _vm.student_record.student.present_city\n                        ? _c(\"span\", [\n                            _c(\"br\"),\n                            _vm._v(\n                              \" \" +\n                                _vm._s(_vm.student_record.student.present_city)\n                            ),\n                          ])\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _vm.student_record.student.present_state\n                        ? _c(\"span\", [\n                            _vm._v(\n                              \", \" +\n                                _vm._s(_vm.student_record.student.present_state)\n                            ),\n                          ])\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _vm.student_record.student.present_zipcode\n                        ? _c(\"span\", [\n                            _vm._v(\n                              \", \" +\n                                _vm._s(\n                                  _vm.student_record.student.present_zipcode\n                                )\n                            ),\n                          ])\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _vm.student_record.student.present_country\n                        ? _c(\"span\", [\n                            _c(\"br\"),\n                            _vm._v(\n                              \" \" +\n                                _vm._s(\n                                  _vm.student_record.student.present_country\n                                )\n                            ),\n                          ])\n                        : _vm._e(),\n                    ]),\n                  ]),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ])\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.loading-overlay.is-full-page{\\r\\n    z-index: 1060;\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/student/fee/index.vue\"],\"names\":[],\"mappings\":\";AAk2BA;IACA,aAAA;AACA\",\"sourcesContent\":[\"<template>\\r\\n    <div>\\r\\n        <div class=\\\"page-titles\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12 col-sm-6\\\">\\r\\n                    <h3 class=\\\"text-themecolor\\\">{{trans('finance.fee_detail')}} <small v-if=\\\"student_record.student\\\">{{getStudentName(student_record.student)}}  ({{student_record.academic_session.name}})</small>\\r\\n                    </h3>\\r\\n                </div>\\r\\n                <div class=\\\"col-12 col-sm-6\\\">\\r\\n                    <div class=\\\"action-buttons pull-right\\\">\\r\\n                        <router-link to=\\\"/student/list\\\" class=\\\"btn btn-info btn-sm\\\"><i class=\\\"fas fa-list\\\"></i> <span class=\\\"d-none d-sm-inline\\\">{{trans('student.student')}}</span></router-link>\\r\\n                        <div class=\\\"btn-group\\\">\\r\\n                            <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm dropdown-toggle no-caret \\\" role=\\\"menu\\\" id=\\\"moreOption\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\" v-tooltip=\\\"trans('general.more_option')\\\">\\r\\n                                <i class=\\\"fas fa-ellipsis-h\\\"></i> <span class=\\\"d-none d-sm-inline\\\"></span>\\r\\n                            </button>\\r\\n                            <div :class=\\\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\\\" aria-labelledby=\\\"moreOption\\\">\\r\\n                                <button class=\\\"dropdown-item custom-dropdown\\\" @click=\\\"$router.push('/student/'+student_record.student.uuid)\\\"><i class=\\\"fas fa-arrow-circle-right\\\"></i> {{trans('student.view_detail')}}</button>\\r\\n                                <button class=\\\"dropdown-item custom-dropdown\\\" v-if=\\\"hasPermission('set-fee')\\\" @click=\\\"$router.push('/student/'+student_record.student.uuid+'/fee/'+student_record.id+'/set')\\\"><i class=\\\"fas fa-file\\\"></i> {{trans('student.set_fee')}}</button>\\r\\n                                <button class=\\\"dropdown-item custom-dropdown\\\" @click=\\\"print\\\"><i class=\\\"fas fa-print\\\"></i> {{trans('general.print')}}</button>\\r\\n                                <button class=\\\"dropdown-item custom-dropdown\\\" @click=\\\"pdf\\\"><i class=\\\"fas fa-file-pdf\\\"></i> {{trans('general.generate_pdf')}}</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-12\\\">\\r\\n                    <div class=\\\"card\\\">\\r\\n                        <div class=\\\"card-body py-4\\\">\\r\\n                            <student-summary :student-record=\\\"student_record\\\" class=\\\"border-bottom\\\"></student-summary>\\r\\n                        </div>\\r\\n                        <div class=\\\"card-body\\\">\\r\\n                            <div class=\\\"row justify-content-end px-4\\\" v-if=\\\"hasPermission('customize-fee-date')\\\">\\r\\n                                <div class=\\\"col-12 col-sm-3\\\">\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <datepicker v-model=\\\"feePayment.date\\\" :bootstrapStyling=\\\"true\\\" :placeholder=\\\"trans('student.date_of_payment')\\\"></datepicker>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                            <template v-for=\\\"fee_allocation_group in student_record.fee_allocation.fee_allocation_groups\\\">\\r\\n                                <h4 class=\\\"card-title m-l-20\\\">{{fee_allocation_group.fee_group.name}}</h4>\\r\\n                                <div class=\\\"table-responsive p-3\\\">\\r\\n                                    <table class=\\\"table table-sm\\\">\\r\\n                                        <thead>\\r\\n                                            <tr>\\r\\n                                                <th>{{trans('finance.fee_installment_title')}}</th>\\r\\n                                                <th>{{trans('finance.fee_installment_due_date')}}</th>\\r\\n                                                <th v-for=\\\"fee_head in fee_allocation_group.fee_group.fee_heads\\\" v-text=\\\"fee_head.name\\\"></th>\\r\\n                                                <th>\\r\\n                                                    <span v-if=\\\"fee_allocation_group.fee_group.options.has_transport\\\">{{trans('transport.circle')}}</span>\\r\\n                                                </th>\\r\\n                                                <th>\\r\\n                                                    <span v-if=\\\"fee_allocation_group.fee_group.options.has_transport\\\">{{trans('transport.fee')}}</span>\\r\\n                                                </th>\\r\\n                                                <th>{{trans('finance.late_fee')}}</th>\\r\\n                                                <th>{{trans('finance.installment_total')}}</th>\\r\\n                                                <th>{{trans('finance.other')}}</th>\\r\\n                                                <th>{{trans('finance.paid')}}</th>\\r\\n                                                <th>{{trans('finance.balance')}}</th>\\r\\n                                                <th v-if=\\\"hasPermission('make-fee-payment')\\\">{{trans('finance.pay_fee')}}</th>\\r\\n                                                <th v-else>{{trans('finance.fee_status')}}</th>\\r\\n                                            </tr>\\r\\n                                        </thead>\\r\\n                                        <tbody>\\r\\n                                            <tr v-for=\\\"fee_installment in fee_allocation_group.fee_installments\\\">\\r\\n                                                <td>{{fee_installment.title}}</td>\\r\\n                                                <td>{{getInstallmentDueDate(fee_installment)}}\\r\\n                                                    <template v-if=\\\"isInstallmentOverdue(fee_installment)\\\">\\r\\n                                                        <br />\\r\\n                                                        <span class=\\\"label label-danger\\\">{{trans('finance.fee_overdue_day', {day: isInstallmentOverdue(fee_installment)})}}</span>\\r\\n                                                    </template>\\r\\n                                                </td>\\r\\n                                                <td v-for=\\\"fee_head in fee_allocation_group.fee_group.fee_heads\\\">\\r\\n                                                    <span v-if=\\\"checkInstallmentConcession(fee_installment, fee_head.id)\\\" style=\\\"text-decoration: line-through;\\\">{{getInstallmentFeeAmountWithoutConcession(fee_installment, fee_head.id)}}</span>\\r\\n                                                    {{getInstallmentFeeAmount(fee_installment, fee_head.id)}}\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span v-if=\\\"fee_allocation_group.fee_group.options.has_transport\\\">{{getTransportCircleName(fee_installment)}}</span>\\r\\n                                                </td>\\r\\n                                                <td>\\r\\n                                                    <span v-if=\\\"fee_allocation_group.fee_group.options.has_transport\\\">{{getTransportFeeAmount(fee_installment)}}</span>\\r\\n                                                </td>\\r\\n                                                <td>{{getLateFeeAmount(fee_installment)}}</td>\\r\\n                                                <td>{{getInstallmentTotalAmount(fee_installment)}}</td>\\r\\n                                                <td>{{getInstallmentOtherAmount(fee_installment)}}</td>\\r\\n                                                <td>{{getInstallmentPaidAmount(fee_installment)}}</td>\\r\\n                                                <td>{{getInstallmentBalanceAmount(fee_installment)}}</td>\\r\\n                                                <td v-if=\\\"hasPermission('make-fee-payment')\\\">\\r\\n                                                    <span v-if=\\\"getInstallmentStatus(fee_installment) == 'unpaid'\\\">\\r\\n                                                        <button type=\\\"button\\\" class=\\\"btn btn-info btn-sm\\\" @click=\\\"showInstallmentDetail(fee_allocation_group,fee_installment)\\\">{{trans('finance.pay_fee')}}</button>\\r\\n                                                    </span>\\r\\n                                                    <span v-else-if=\\\"getInstallmentStatus(fee_installment) == 'cancelled'\\\">\\r\\n                                                        <span class=\\\"label label-danger\\\">{{trans('finance.fee_status_cancelled')}}</span>\\r\\n                                                    </span>\\r\\n                                                    <span v-else>\\r\\n                                                        <div class=\\\"btn-group\\\">\\r\\n                                                            <template v-if=\\\"getInstallmentStatus(fee_installment) == 'paid'\\\">\\r\\n                                                                <button class=\\\"btn btn-sm btn-success\\\">{{trans('student.fee_status_paid')}}</button>\\r\\n                                                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success dropdown-toggle dropdown-toggle-split\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                                                    <span class=\\\"sr-only\\\">Toggle Dropdown</span>\\r\\n                                                                </button>\\r\\n                                                            </template>\\r\\n                                                            <template v-if=\\\"getInstallmentStatus(fee_installment) == 'partially_paid'\\\">\\r\\n                                                                <button class=\\\"btn btn-sm btn-warning\\\" @click=\\\"showInstallmentDetail(fee_allocation_group,fee_installment)\\\">{{trans('student.fee_status_partially_paid')}}</button>\\r\\n                                                                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-warning dropdown-toggle dropdown-toggle-split\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\r\\n                                                                    <span class=\\\"sr-only\\\">Toggle Dropdown</span>\\r\\n                                                                </button>\\r\\n                                                            </template>\\r\\n\\r\\n                                                            <div class=\\\"dropdown-menu\\\">\\r\\n                                                                <button class=\\\"dropdown-item custom-dropdown-menu\\\" @click.prevent=\\\"setTransaction(fee_installment)\\\" v-if=\\\"getInstallmentPaid(fee_installment)\\\">\\r\\n                                                                    <i class=\\\"fas fa-arrow-circle-right\\\"></i> {{trans('finance.receipt_detail')}}\\r\\n                                                                </button>\\r\\n                                                                <button class=\\\"dropdown-item custom-dropdown-menu\\\" :key=\\\"fee_installment.id\\\" v-confirm=\\\"{ok: confirmEmptyReceiptDelete(fee_installment)}\\\" v-else-if=\\\"!getInstallmentPaid(fee_installment) && hasPermission('cancel-fee-payment')\\\">\\r\\n                                                                    <i class=\\\"fas fa-arrow-circle-right\\\"></i> {{trans('student.cancel_fee_payment')}}\\r\\n                                                                </button>\\r\\n                                                            </div>\\r\\n                                                        </div>\\r\\n                                                    </span>\\r\\n                                                </td>\\r\\n                                                <td v-else>\\r\\n                                                    <span v-if=\\\"getInstallmentStatus(fee_installment) == 'unpaid'\\\">{{trans('student.fee_status_unpaid')}}</span>\\r\\n                                                    <span v-else>{{trans('student.fee_status_paid')}}</span>\\r\\n                                                </td>\\r\\n                                            </tr>\\r\\n\\r\\n                                            <tr>\\r\\n                                                <th colspan=\\\"2\\\">{{trans('general.total')}}</th>\\r\\n                                                <th v-for=\\\"fee_head in fee_allocation_group.fee_group.fee_heads\\\">\\r\\n                                                    {{getTotalFee(fee_allocation_group, fee_head.id)}}\\r\\n                                                </th>\\r\\n                                                <th></th>\\r\\n                                                <th>\\r\\n                                                    <span v-if=\\\"fee_allocation_group.fee_group.options.has_transport\\\">{{getTransportFeeTotal(fee_allocation_group)}}</span>\\r\\n                                                </th>\\r\\n                                                <th>{{getLateFeeTotal(fee_allocation_group)}}</th>\\r\\n                                                <th>{{getInstallmentGrandTotal(fee_allocation_group)}}</th>\\r\\n                                                <th>{{getInstallmentGrandOther(fee_allocation_group)}}</th>\\r\\n                                                <th>{{getInstallmentPaidGrandTotal(fee_allocation_group)}}</th>\\r\\n                                                <th>{{getInstallmentBalanceGrandTotal(fee_allocation_group)}}</th>\\r\\n                                                <th v-if=\\\"hasPermission('make-fee-payment')\\\"></th>\\r\\n                                                <th v-else></th>\\r\\n                                            </tr>\\r\\n                                        </tbody>\\r\\n                                    </table>\\r\\n                                </div>\\r\\n                            </template>\\r\\n\\r\\n\\r\\n                            <div class=\\\"table-responsive p-3\\\">\\r\\n                                <table class=\\\"table table\\\">\\r\\n                                    <thead>\\r\\n                                        <tr>\\r\\n                                            <th>{{trans('finance.installment_total')}}</th>\\r\\n                                            <th>{{trans('finance.other')}}</th>\\r\\n                                            <th>{{trans('finance.paid')}}</th>\\r\\n                                            <th>{{trans('finance.balance')}}</th>\\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                        <tr>\\r\\n                                            <td>{{finalTotal}}</td>\\r\\n                                            <td>{{finalOther}}</td>\\r\\n                                            <td>{{finalPaid}}</td>\\r\\n                                            <td>{{finalBalance}}</td>\\r\\n                                        </tr>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                            </div>\\r\\n\\r\\n                            <div class=\\\"row justify-content-md-center\\\" v-if=\\\"resetFeeOption && hasPermission('set-fee')\\\">\\r\\n                                <div class=\\\"col-4\\\">\\r\\n                                    <button class=\\\"btn btn-danger btn-block\\\" :key=\\\"student_record.id\\\" v-confirm=\\\"{ok: confirmResetFee(student_record)}\\\" v-tooltip=\\\"trans('student.reset_fee')\\\">{{trans('student.reset_fee')}}</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <fee-payment-form v-if=\\\"feePaymentForm && hasNotAnyRole(['parent','student']) && hasPermission('make-fee-payment')\\\" :uuid=\\\"uuid\\\" :id=\\\"record_id\\\" :fee-payment=\\\"feePayment\\\" @completed=\\\"paymentMade\\\" @closeFeePaymentForm=\\\"feePaymentForm = false\\\"></fee-payment-form>\\r\\n        <fee-payment-parent-form v-if=\\\"feePaymentForm && hasAnyRole(['parent','student']) && hasPermission('make-fee-payment')\\\" :uuid=\\\"uuid\\\" :id=\\\"record_id\\\" :fee-payment=\\\"feePayment\\\" @completed=\\\"paymentMade\\\" @closeFeePaymentForm=\\\"feePaymentForm = false\\\"></fee-payment-parent-form>\\r\\n\\r\\n        <transition name=\\\"modal\\\" v-if=\\\"feePaymentShow\\\">\\r\\n            <div class=\\\"modal-mask\\\">\\r\\n                <div class=\\\"modal-wrapper\\\">\\r\\n                    <div class=\\\"modal-container modal-lg\\\">\\r\\n                        <div class=\\\"modal-header\\\">\\r\\n                            <slot name=\\\"header\\\">\\r\\n                                {{trans('finance.fee_payment')}}\\r\\n                                <span class=\\\"float-right pointer\\\" @click=\\\"feePaymentShow = false\\\">x</span>\\r\\n                            </slot>\\r\\n                        </div>\\r\\n                        <div class=\\\"modal-body\\\">\\r\\n                            <slot name=\\\"body\\\">\\r\\n                                <div style=\\\"max-height:600px;\\\">\\r\\n                                    <fee-detail :uuid=\\\"uuid\\\" :rid=\\\"record_id\\\" :id=\\\"student_fee_record_id\\\" @completed=\\\"getRecord\\\"></fee-detail>\\r\\n                                    <div class=\\\"clearfix\\\"></div>\\r\\n                                </div>\\r\\n                            </slot>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </transition>\\r\\n    </div>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n    import studentSummary from './../summary'\\r\\n    import feePaymentForm from './payment'\\r\\n    import feePaymentParentForm from './payment-parent'\\r\\n    import feeDetail from './fee-detail'\\r\\n\\r\\n    export default {\\r\\n        components : {studentSummary,feePaymentForm,feePaymentParentForm,feeDetail},\\r\\n        data() {\\r\\n            return {\\r\\n                uuid:this.$route.params.uuid,\\r\\n                record_id:this.$route.params.record_id,\\r\\n                student_record: {\\r\\n                    fee_allocation: {\\r\\n                        fee_allocation_groups: []\\r\\n                    }\\r\\n                },\\r\\n                feePayment: {\\r\\n                    fee_group_name: '',\\r\\n                    fee_payment_installment_id: '',\\r\\n                    student_fee_record_id: '',\\r\\n                    date: helper.today(),\\r\\n                    installments: [],\\r\\n                    amount: 0\\r\\n                },\\r\\n                fee: {\\r\\n                    groups: []\\r\\n                },\\r\\n                feePaymentForm: false,\\r\\n                feePaymentShow: false\\r\\n            };\\r\\n        },\\r\\n        mounted(){\\r\\n            if(!helper.hasPermission('list-student-fee')){\\r\\n                helper.notAccessibleMsg();\\r\\n                this.$router.push('/dashboard');\\r\\n            }\\r\\n\\r\\n            this.getRecord();\\r\\n            helper.showDemoNotification(['student']);\\r\\n        },\\r\\n        methods: {\\r\\n            hasPermission(permission){\\r\\n                return helper.hasPermission(permission);\\r\\n            },\\r\\n            hasAnyRole(roles){\\r\\n                return helper.hasAnyRole(roles);\\r\\n            },\\r\\n            hasNotAnyRole(roles){\\r\\n                return helper.hasNotAnyRole(roles);\\r\\n            },\\r\\n            getConfig(config){\\r\\n                return helper.getConfig(config);\\r\\n            },\\r\\n            getStudentName(student){\\r\\n                return helper.getStudentName(student);\\r\\n            },\\r\\n            getRecord(){\\r\\n                let loader = this.$loading.show();\\r\\n                this.feePaymentForm = false;\\r\\n                this.feePaymentShow = false;\\r\\n                axios.get('/api/student/'+this.uuid+'/fee/'+this.record_id)\\r\\n                    .then(response => {\\r\\n                        this.student_record = response.student_record;\\r\\n\\r\\n                        if (! this.student_record.student_fee_records.length) {\\r\\n                            this.$router.push('/student/'+this.uuid); \\r\\n                        }\\r\\n\\r\\n                        loader.hide();\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                        if (this.hasAnyRole(['student','parent'])) {\\r\\n                            this.$router.push('/student/list')\\r\\n                        } else {\\r\\n                           this.$router.push('/student/'+this.uuid+'/fee/'+this.record_id+'/create'); \\r\\n                        }\\r\\n                    });\\r\\n            },\\r\\n            calculate(){\\r\\n                this.fee = {\\r\\n                    groups: []\\r\\n                };\\r\\n                this.student_record.fee_allocation.fee_allocation_groups.forEach(fee_allocation_group => {\\r\\n                    let installments = [];\\r\\n                    let heads = [];\\r\\n                    let foots = [];\\r\\n                    heads.push(i18n.finance.fee_installment_title);\\r\\n                    heads.push(i18n.finance.fee_installment_due_date);\\r\\n\\r\\n                    fee_allocation_group.fee_group.fee_heads.forEach(fee_head => {\\r\\n                        heads.push(fee_head.name);\\r\\n                    });\\r\\n\\r\\n                    if (fee_allocation_group.fee_group.options.has_transport) {\\r\\n                        heads.push(i18n.transport.circle);\\r\\n                        heads.push(i18n.transport.fee);\\r\\n                    }\\r\\n\\r\\n                    foots.push(i18n.finance.total);\\r\\n                    foots.push('');\\r\\n\\r\\n                    heads.push(i18n.finance.late_fee);\\r\\n                    heads.push(i18n.finance.installment_total);\\r\\n                    heads.push(i18n.finance.other);\\r\\n                    heads.push(i18n.finance.paid);\\r\\n                    heads.push(i18n.finance.balance);\\r\\n                    heads.push(i18n.finance.fee_status);\\r\\n\\r\\n                    fee_allocation_group.fee_installments.forEach(fee_installment => {\\r\\n                        let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n                        \\r\\n                        let installment_data = [];\\r\\n                        installment_data.push({\\r\\n                            text: fee_installment.title\\r\\n                        });\\r\\n                        installment_data.push({\\r\\n                            text: this.showDate(student_fee_record.due_date || fee_installment.due_date)\\r\\n                        });\\r\\n\\r\\n                        fee_allocation_group.fee_group.fee_heads.forEach(fee_head => {\\r\\n                            installment_data.push({\\r\\n                                text: this.getInstallmentFeeAmount(fee_installment, fee_head.id),\\r\\n                                actual: this.getInstallmentFeeAmountWithoutConcession(fee_installment, fee_head.id),\\r\\n                                is_concession: this.checkInstallmentConcession(fee_installment, fee_head.id) ? true : false\\r\\n                            });\\r\\n                        });\\r\\n\\r\\n                        if (fee_allocation_group.fee_group.options.has_transport) {\\r\\n                            installment_data.push({\\r\\n                                text: this.getTransportCircleName(fee_installment)\\r\\n                            });\\r\\n                            installment_data.push({\\r\\n                                text: this.getTransportFeeAmount(fee_installment)\\r\\n                            });\\r\\n                        }\\r\\n\\r\\n                        installment_data.push({\\r\\n                            text: this.getLateFeeAmount(fee_installment)\\r\\n                        });\\r\\n\\r\\n                        installment_data.push({\\r\\n                            text: this.getInstallmentTotalAmount(fee_installment)\\r\\n                        })\\r\\n\\r\\n                        installment_data.push({\\r\\n                            text: this.getInstallmentOtherAmount(fee_installment)\\r\\n                        })\\r\\n\\r\\n                        installment_data.push({\\r\\n                            text: this.getInstallmentPaidAmount(fee_installment)\\r\\n                        })\\r\\n\\r\\n                        installment_data.push({\\r\\n                            text: this.getInstallmentBalanceAmount(fee_installment)\\r\\n                        })\\r\\n\\r\\n                        installment_data.push({\\r\\n                            text: this.getInstallmentPrintStatus(fee_installment)\\r\\n                        })\\r\\n\\r\\n                        installments.push({\\r\\n                            data: installment_data\\r\\n                        });\\r\\n                    });\\r\\n\\r\\n                    fee_allocation_group.fee_group.fee_heads.forEach(fee_head => {\\r\\n                        foots.push(this.getTotalFee(fee_allocation_group, fee_head.id));\\r\\n                    });\\r\\n                    \\r\\n                    if (fee_allocation_group.fee_group.options.has_transport) {\\r\\n                        foots.push('');\\r\\n                        foots.push(this.getTransportFeeTotal(fee_allocation_group));\\r\\n                    }\\r\\n                    \\r\\n                    foots.push(this.getLateFeeTotal(fee_allocation_group));\\r\\n                    foots.push(this.getInstallmentGrandTotal(fee_allocation_group));\\r\\n                    foots.push(this.getInstallmentGrandOther(fee_allocation_group));\\r\\n                    foots.push(this.getInstallmentPaidGrandTotal(fee_allocation_group));\\r\\n                    foots.push(this.getInstallmentBalanceGrandTotal(fee_allocation_group));\\r\\n                    foots.push('');\\r\\n\\r\\n                    let group = {\\r\\n                        name: fee_allocation_group.fee_group.name,\\r\\n                        heads: heads,\\r\\n                        installments: installments,\\r\\n                        foots: foots,\\r\\n                    }\\r\\n                    this.fee.groups.push(group);\\r\\n                });\\r\\n            },\\r\\n            formatCurrency(amount){\\r\\n                return helper.formatCurrency(amount);\\r\\n            },\\r\\n            isInstallmentOverdue(fee_installment){\\r\\n                let installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n\\r\\n                if (helper.today() > (installment.due_date || fee_installment.due_date) && installment.status != 'paid') {\\r\\n                    return helper.getDateDiff(installment.due_date || fee_installment.due_date);\\r\\n                }\\r\\n\\r\\n                return 0;\\r\\n            },\\r\\n            getStatus(fee_installment) {\\r\\n                let installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n                if (installment.status == 'paid') {\\r\\n                    return '<span class=\\\"label label-success\\\">'+i18n.student.fee_status_paid+'</span>';\\r\\n                } else if(installment.status == 'partially_paid') {\\r\\n                    return '<span class=\\\"label label-warning\\\">'+i18n.student.fee_status_partially_paid+'</span>';\\r\\n                } else if(installment.status == 'cancelled') {\\r\\n                    return '<span class=\\\"label label-danger\\\">'+i18n.student.fee_status_cancelled+'</span>';\\r\\n                } else {\\r\\n                    return '<span class=\\\"label label-danger\\\">'+i18n.student.fee_status_unpaid+'</span>';\\r\\n                }\\r\\n            },\\r\\n            getInstallmentDueDate(fee_installment){\\r\\n                let installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n\\r\\n                return helper.formatDate(installment.due_date || fee_installment.due_date);\\r\\n            },\\r\\n            getInstallmentStatus(fee_installment){\\r\\n                let installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n\\r\\n                return installment.status;\\r\\n            },\\r\\n            getInstallmentFee(fee_installment, fee_head_id){\\r\\n                let amount = this.getInstallmentFeeWithoutConcession(fee_installment, fee_head_id);\\r\\n                return this.getInstallmentFeeWithConcession(amount, fee_installment, fee_head_id);\\r\\n            },\\r\\n            getInstallmentFeeWithoutConcession(fee_installment, fee_head_id){\\r\\n                let installment_detail = fee_installment.fee_installment_details.find(o => o.fee_head_id == fee_head_id);\\r\\n\\r\\n                if (typeof installment_detail == 'undefined')\\r\\n                    return 0;\\r\\n\\r\\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n                let student_optional_fee_record = student_fee_record.student_optional_fee_records.findIndex(o => o.fee_head_id == fee_head_id);\\r\\n\\r\\n                return (student_optional_fee_record < 0) ? installment_detail.amount : 0;\\r\\n            },\\r\\n            checkInstallmentConcession(fee_installment, fee_head_id){\\r\\n                let installment_detail = fee_installment.fee_installment_details.find(o => o.fee_head_id == fee_head_id);\\r\\n\\r\\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n\\r\\n                let fee_concession_index = (student_fee_record.fee_concession) ? student_fee_record.fee_concession.fee_concession_details.findIndex(o => o.fee_head_id == fee_head_id) : -1;\\r\\n\\r\\n                return (fee_concession_index >= 0) ? true : false;\\r\\n            },\\r\\n            getInstallmentFeeWithConcession(amount, fee_installment, fee_head_id){\\r\\n                let installment_detail = fee_installment.fee_installment_details.find(o => o.fee_head_id == fee_head_id);\\r\\n\\r\\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n\\r\\n                let fee_concession_index = (student_fee_record.fee_concession) ? student_fee_record.fee_concession.fee_concession_details.findIndex(o => o.fee_head_id == fee_head_id) : -1;\\r\\n\\r\\n                if (fee_concession_index >= 0) {\\r\\n                    let fee_concession = student_fee_record.fee_concession.fee_concession_details[fee_concession_index];\\r\\n\\r\\n                    let fee_concession_amount = fee_concession.type == 'percent' ? (amount * (fee_concession.amount/100)) : fee_concession.amount;\\r\\n\\r\\n                    return ((amount - fee_concession_amount) >= 0) ? Math.ceil(amount - fee_concession_amount) : 0;\\r\\n                }\\r\\n\\r\\n                return Math.ceil(amount);\\r\\n            },\\r\\n            getInstallmentFeeAmountWithoutConcession(fee_installment, fee_head_id){\\r\\n                let amount = this.getInstallmentFeeWithoutConcession(fee_installment, fee_head_id);\\r\\n\\r\\n                return helper.formatCurrency(amount);\\r\\n            },\\r\\n            getInstallmentFeeAmount(fee_installment, fee_head_id){\\r\\n                let amount = this.getInstallmentFee(fee_installment, fee_head_id);\\r\\n                return helper.formatCurrency(amount);\\r\\n            },\\r\\n            getInstallmentTotalWithoutLateFee(fee_installment){\\r\\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id)\\r\\n\\r\\n                let total = 0;\\r\\n                fee_installment.fee_installment_details.forEach(installment_detail => {\\r\\n                    total += this.getInstallmentFee(fee_installment, installment_detail.fee_head_id);\\r\\n                });\\r\\n\\r\\n                let transport_fee = this.getTransportFee(fee_installment);\\r\\n\\r\\n                total += ((Number.isInteger(transport_fee)) ? transport_fee : 0);\\r\\n\\r\\n                return total;\\r\\n            },\\r\\n            getInstallmentTotal(fee_installment){\\r\\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id)\\r\\n                \\r\\n                let total = this.getInstallmentTotalWithoutLateFee(fee_installment);\\r\\n\\r\\n                if (total || student_fee_record.status != 'unpaid') {\\r\\n                    let late_fee = this.getLateFee(fee_installment);\\r\\n                    total += ((Number.isInteger(late_fee)) ? late_fee : 0);\\r\\n                }\\r\\n\\r\\n                return total;\\r\\n            },\\r\\n            getInstallmentTotalAmount(fee_installment){\\r\\n                let amount = this.getInstallmentTotal(fee_installment);\\r\\n                return helper.formatCurrency(amount);\\r\\n            },\\r\\n            getInstallmentOther(fee_installment){\\r\\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n\\r\\n                let other = 0;\\r\\n                student_fee_record.transactions.forEach(transaction => {\\r\\n                    if (! transaction.is_cancelled) {\\r\\n                        if (transaction.options.additional_fee_charge && transaction.options.additional_fee_charge.amount) {\\r\\n                            other += transaction.options.additional_fee_charge.amount;\\r\\n                        }\\r\\n                        if (transaction.options.additional_fee_discount && transaction.options.additional_fee_discount.amount) {\\r\\n                            other -= transaction.options.additional_fee_discount.amount;\\r\\n                        }\\r\\n                    }\\r\\n                });\\r\\n\\r\\n                return other;\\r\\n            },\\r\\n            getInstallmentOtherAmount(fee_installment){\\r\\n                let amount = this.getInstallmentOther(fee_installment);\\r\\n                return helper.formatCurrency(amount);\\r\\n            },\\r\\n            getInstallmentPaid(fee_installment){\\r\\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n\\r\\n                let paid = 0;\\r\\n                student_fee_record.transactions.forEach(transaction => {\\r\\n                    if (! transaction.is_cancelled)\\r\\n                        paid += transaction.amount;\\r\\n                });\\r\\n\\r\\n                return paid;\\r\\n            },\\r\\n            getInstallmentPaidAmount(fee_installment){\\r\\n                let amount = this.getInstallmentPaid(fee_installment);\\r\\n                return helper.formatCurrency(amount);\\r\\n            },\\r\\n            getInstallmentBalance(fee_installment){\\r\\n                let total = this.getInstallmentTotal(fee_installment);\\r\\n                let other = this.getInstallmentOther(fee_installment);\\r\\n                let paid = this.getInstallmentPaid(fee_installment);\\r\\n                return total + other - paid;\\r\\n            },\\r\\n            getInstallmentBalanceAmount(fee_installment){\\r\\n                let amount = this.getInstallmentBalance(fee_installment);\\r\\n                return helper.formatCurrency(amount);\\r\\n            },\\r\\n            getTransportCircleName(fee_installment){\\r\\n                let installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n                return installment.transport_circle ? installment.transport_circle.name : '-';\\r\\n            },\\r\\n            getTransportFee(fee_installment){\\r\\n                let installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n\\r\\n                if (! installment.transport_circle_id || ! fee_installment.transport_fee_id)\\r\\n                    return '-';\\r\\n\\r\\n                let transport_fee = fee_installment.transport_fee.transport_fee_details.find(o => o.transport_circle_id == installment.transport_circle_id);\\r\\n                return transport_fee.amount;\\r\\n            },\\r\\n            getTransportFeeAmount(fee_installment){\\r\\n                let amount = this.getTransportFee(fee_installment);\\r\\n                return (Number.isInteger(amount)) ? helper.formatCurrency(amount) : '-';\\r\\n            },\\r\\n            getLateFeeAmount(fee_installment){\\r\\n                let amount = this.getLateFee(fee_installment);\\r\\n                return (Number.isInteger(amount)) ? helper.formatCurrency(amount) : '-';\\r\\n            },\\r\\n            getLateFee(fee_installment){\\r\\n                let installment_total = this.getInstallmentTotalWithoutLateFee(fee_installment);\\r\\n\\r\\n                if (! installment_total)\\r\\n                    return '-';\\r\\n\\r\\n                let date = helper.toDate(this.feePayment.date);\\r\\n\\r\\n                let installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n\\r\\n                if (installment.status == 'paid') {\\r\\n                    return installment.late_fee_charged;\\r\\n                }\\r\\n\\r\\n                if ((installment.late_fee_applicable == null && !fee_installment.late_fee_applicable) || installment.late_fee_applicable == 0)\\r\\n                    return '-';\\r\\n\\r\\n                if (date <= (installment.due_date || fee_installment.due_date))\\r\\n                    return '-';\\r\\n\\r\\n                let late_day = helper.getDateDiff((installment.due_date || fee_installment.due_date), date);\\r\\n\\r\\n                let per_period = Math.floor(late_day / (installment.late_fee_frequency || fee_installment.late_fee_frequency));\\r\\n                return (installment.late_fee || fee_installment.late_fee) * per_period;\\r\\n            },\\r\\n            showInstallmentDetail(fee_allocation_group, fee_installment){\\r\\n                this.feePayment.installments = [];\\r\\n                this.feePayment.fee_group_name = fee_allocation_group.fee_group.name;\\r\\n                let installments = fee_allocation_group.fee_installments.filter(o => o.due_date <= fee_installment.due_date);\\r\\n\\r\\n                let total = 0;\\r\\n                installments.forEach(installment => {\\r\\n                    let student_installment = this.student_record.student_fee_records.find(o => o.fee_installment_id == installment.id);\\r\\n                    if (student_installment.status == 'unpaid' || student_installment.status == 'partially_paid') {\\r\\n\\r\\n                        let installment_fee = this.getInstallmentTotalWithoutLateFee(installment);\\r\\n                        let other = this.getInstallmentOther(installment);\\r\\n                        let late_fee = this.getLateFee(installment);\\r\\n                        let paid = this.getInstallmentPaid(installment);\\r\\n                        installment_fee += other;\\r\\n\\r\\n                        let installment_balance = (installment_fee > paid) ? (installment_fee - paid) : 0\\r\\n                        if (installment_fee) {\\r\\n                            late_fee = ((Number.isInteger(late_fee)) ? late_fee : 0)\\r\\n                        }\\r\\n                        let late_fee_balance = (!installment_balance && late_fee) ? (late_fee - (paid - installment_fee)) : late_fee;\\r\\n\\r\\n                        let installment_total = installment_fee;\\r\\n                        if (installment_fee) {\\r\\n                            late_fee = ((Number.isInteger(late_fee)) ? late_fee : 0)\\r\\n                            installment_total += late_fee;\\r\\n                        }\\r\\n\\r\\n                        let balance = installment_total - paid;\\r\\n                        total += balance;\\r\\n\\r\\n                        this.feePayment.installments.push({\\r\\n                            fee_installment_id:  student_installment.fee_installment_id,\\r\\n                            title: installment.title,\\r\\n                            installment_fee: installment_fee,\\r\\n                            installment_balance: installment_balance,\\r\\n                            late_fee_balance: (Number.isInteger(late_fee_balance)) ? late_fee_balance : 0,\\r\\n                            late_fee: late_fee,\\r\\n                            paid: paid,\\r\\n                            total: balance\\r\\n                        })\\r\\n                    }\\r\\n                });\\r\\n                this.feePayment.amount = total;\\r\\n                this.feePayment.fee_payment_installment_id = fee_installment.id;\\r\\n                this.feePaymentForm = true;\\r\\n            },\\r\\n            getTotalFee(fee_allocation_group, fee_head_id){\\r\\n                let total = 0;\\r\\n                fee_allocation_group.fee_installments.forEach(fee_installment => {\\r\\n                    total += this.getInstallmentFee(fee_installment, fee_head_id);\\r\\n                });\\r\\n                return helper.formatCurrency(total);\\r\\n            },\\r\\n            getTransportFeeTotal(fee_allocation_group){\\r\\n                let total = 0;\\r\\n                fee_allocation_group.fee_installments.forEach(fee_installment => {\\r\\n                    let fee = this.getTransportFee(fee_installment);\\r\\n                    total += ((Number.isInteger(fee)) ? fee : 0);\\r\\n                });\\r\\n                return total ? this.formatCurrency(total) : '-';\\r\\n            },\\r\\n            getLateFeeTotal(fee_allocation_group){\\r\\n                let total = 0;\\r\\n                fee_allocation_group.fee_installments.forEach(fee_installment => {\\r\\n                    let fee = this.getLateFee(fee_installment);\\r\\n                    total += ((Number.isInteger(fee)) ? fee : 0);\\r\\n                });\\r\\n                return total ? this.formatCurrency(total) : '-';\\r\\n            },\\r\\n            getInstallmentGrandTotal(fee_allocation_group){\\r\\n                let amount = this.getInstallmentGrandTotalAmount(fee_allocation_group);\\r\\n                return (Number.isInteger(amount)) ? helper.formatCurrency(amount) : '-';\\r\\n            },\\r\\n            getInstallmentGrandTotalAmount(fee_allocation_group){\\r\\n                let total = 0;\\r\\n                fee_allocation_group.fee_installments.forEach(fee_installment => {\\r\\n                    total += this.getInstallmentTotal(fee_installment);\\r\\n                });\\r\\n                return total;\\r\\n            },\\r\\n            getInstallmentGrandOther(fee_allocation_group){\\r\\n                let amount = this.getInstallmentGrandOtherAmount(fee_allocation_group);\\r\\n                return (Number.isInteger(amount)) ? helper.formatCurrency(amount) : '-';\\r\\n            },\\r\\n            getInstallmentGrandOtherAmount(fee_allocation_group){\\r\\n                let other = 0;\\r\\n                fee_allocation_group.fee_installments.forEach(fee_installment => {\\r\\n                    other += this.getInstallmentOther(fee_installment);\\r\\n                });\\r\\n                return other;\\r\\n            },\\r\\n            getInstallmentPaidGrandTotal(fee_allocation_group){\\r\\n                let amount = this.getInstallmentPaidGrandTotalAmount(fee_allocation_group);\\r\\n                return (Number.isInteger(amount)) ? helper.formatCurrency(amount) : '-';\\r\\n            },\\r\\n            getInstallmentPaidGrandTotalAmount(fee_allocation_group){\\r\\n                let total = 0;\\r\\n                fee_allocation_group.fee_installments.forEach(fee_installment => {\\r\\n                    total += this.getInstallmentPaid(fee_installment);\\r\\n                });\\r\\n                return total;\\r\\n            },\\r\\n            getInstallmentBalanceGrandTotal(fee_allocation_group){\\r\\n                let amount = this.getInstallmentBalanceGrandTotalAmount(fee_allocation_group);\\r\\n                return (Number.isInteger(amount)) ? helper.formatCurrency(amount) : '-';\\r\\n            },\\r\\n            getInstallmentBalanceGrandTotalAmount(fee_allocation_group){\\r\\n                let total = 0;\\r\\n                fee_allocation_group.fee_installments.forEach(fee_installment => {\\r\\n                    total += this.getInstallmentBalance(fee_installment);\\r\\n                });\\r\\n                return total;\\r\\n            },\\r\\n            paymentMade(){\\r\\n                this.getRecord();\\r\\n            },\\r\\n            showDate(date){\\r\\n                return helper.formatDate(date);\\r\\n            },\\r\\n            getInstallmentPrintStatus(fee_installment){\\r\\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n\\r\\n                if (student_fee_record.status == 'paid')\\r\\n                    return i18n.student.fee_status_paid;\\r\\n                else if(student_fee_record.status == 'partially_paid')\\r\\n                    return i18n.student.fee_status_partially_paid;\\r\\n                else if(student_fee_record.status == 'cancelled')\\r\\n                    return i18n.student.fee_status_cancelled;\\r\\n                else if(student_fee_record.status == 'unpaid')\\r\\n                    return i18n.student.fee_status_unpaid;\\r\\n            },\\r\\n            setTransaction(fee_installment) {\\r\\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n                this.student_fee_record_id = student_fee_record.id;\\r\\n                this.feePaymentShow = true;\\r\\n            },\\r\\n            print(){\\r\\n                let loader = this.$loading.show();\\r\\n                this.calculate();\\r\\n                axios.post('/api/student/'+this.uuid+'/fee/'+this.record_id+'/print',{fee: this.fee})\\r\\n                    .then(response => {\\r\\n                        let print = window.open(\\\"/print\\\");\\r\\n                        loader.hide();\\r\\n                        print.document.write(response);\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    });\\r\\n            },\\r\\n            pdf(){\\r\\n                let loader = this.$loading.show();\\r\\n                this.calculate();\\r\\n                axios.post('/api/student/'+this.uuid+'/fee/'+this.record_id+'/pdf',{fee: this.fee})\\r\\n                    .then(response => {\\r\\n                        loader.hide();\\r\\n                        window.open('/download/report/'+response+'?token='+this.authToken);\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    });\\r\\n            },\\r\\n            confirmEmptyReceiptDelete(fee_installment){\\r\\n                return dialog => this.deleteEmptyReceipt(fee_installment);\\r\\n            },\\r\\n            deleteEmptyReceipt(fee_installment){\\r\\n                let loader = this.$loading.show();\\r\\n                let student_fee_record = this.student_record.student_fee_records.find(o => o.fee_installment_id == fee_installment.id);\\r\\n                axios.post('/api/student/'+this.uuid+'/fee/'+this.record_id+'/'+student_fee_record.id+'/cancel')\\r\\n                    .then(response => {\\r\\n                        toastr.success(response.message);\\r\\n                        this.getRecord();\\r\\n                        loader.hide();\\r\\n                    }).catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    });\\r\\n            },\\r\\n            confirmResetFee(student_record){\\r\\n                return dialog => this.resetFee(student_record);\\r\\n            },\\r\\n            resetFee(student_record){\\r\\n                let loader = this.$loading.show();\\r\\n                axios.patch('/api/student/'+this.uuid+'/fee/'+this.record_id+'/reset')\\r\\n                    .then(response => {\\r\\n                        toastr.success(response.message);\\r\\n                        this.getRecord();\\r\\n                        loader.hide();\\r\\n                    }).catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    });\\r\\n            }\\r\\n        },\\r\\n        filters: {\\r\\n          moment(date) {\\r\\n            return helper.formatDate(date);\\r\\n          },\\r\\n          momentDateTime(date) {\\r\\n            return helper.formatDateTime(date);\\r\\n          }\\r\\n        },\\r\\n        computed: {\\r\\n            authToken(){\\r\\n                return helper.getAuthToken();\\r\\n            },\\r\\n            resetFeeOption(){\\r\\n                if (! this.student_record.id)\\r\\n                    return false;\\r\\n\\r\\n                return this.student_record.student_fee_records.every(student_fee_record => {\\r\\n                    return student_fee_record.status == 'unpaid';\\r\\n                });\\r\\n            },\\r\\n            finalTotal() {\\r\\n                let total = 0;\\r\\n                this.student_record.fee_allocation.fee_allocation_groups.forEach(fee_allocation_group => {\\r\\n                    total += this.getInstallmentGrandTotalAmount(fee_allocation_group);\\r\\n                });\\r\\n                return helper.formatCurrency(total);\\r\\n            },\\r\\n            finalOther() {\\r\\n                let total = 0;\\r\\n                this.student_record.fee_allocation.fee_allocation_groups.forEach(fee_allocation_group => {\\r\\n                    total += this.getInstallmentGrandOtherAmount(fee_allocation_group);\\r\\n                });\\r\\n                return helper.formatCurrency(total);\\r\\n            },\\r\\n            finalPaid() {\\r\\n                let total = 0;\\r\\n                this.student_record.fee_allocation.fee_allocation_groups.forEach(fee_allocation_group => {\\r\\n                    total += this.getInstallmentPaidGrandTotalAmount(fee_allocation_group);\\r\\n                });\\r\\n                return helper.formatCurrency(total);\\r\\n            },\\r\\n            finalBalance() {\\r\\n                let total = 0;\\r\\n                this.student_record.fee_allocation.fee_allocation_groups.forEach(fee_allocation_group => {\\r\\n                    total += this.getInstallmentBalanceGrandTotalAmount(fee_allocation_group);\\r\\n                });\\r\\n                return helper.formatCurrency(total);\\r\\n            }\\r\\n        },\\r\\n        watch: {\\r\\n            '$route.params.uuid': function (uuid) {\\r\\n                this.uuid = uuid;\\r\\n                this.record_id = this.$route.params.record_id;\\r\\n                this.getRecord()\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n</script>\\r\\n\\r\\n<style>\\r\\n.loading-overlay.is-full-page{\\r\\n    z-index: 1060;\\r\\n}\\r\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.loading-overlay.is-full-page{\\r\\n    z-index: 1060;\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/student/fee/payment-parent.vue\"],\"names\":[],\"mappings\":\";AA8cA;IACA,aAAA;AACA\",\"sourcesContent\":[\"<template>\\r\\n    <transition name=\\\"modal\\\">\\r\\n        <div class=\\\"modal-mask\\\">\\r\\n            <div class=\\\"modal-wrapper\\\">\\r\\n                <div class=\\\"modal-container modal-lg\\\">\\r\\n                    <div class=\\\"modal-header\\\">\\r\\n                        <slot name=\\\"header\\\">\\r\\n                            {{trans('finance.fee_payment')}}\\r\\n                            <span class=\\\"float-right pointer\\\" @click=\\\"$emit('closeFeePaymentForm')\\\">x</span>\\r\\n                        </slot>\\r\\n                    </div>\\r\\n                    <div class=\\\"modal-body\\\">\\r\\n                        <slot name=\\\"body\\\">\\r\\n                            <h4>{{feePayment.fee_group_name}} <span class=\\\"pull-right\\\">{{feePayment.date | moment}}</span></h4>\\r\\n                            <div style=\\\"max-height:600px;\\\">\\r\\n                                <form @submit.prevent=\\\"submit\\\" @keydown=\\\"feePaymentForm.errors.clear($event.target.name)\\\">\\r\\n                                    <div class=\\\"table-responsive p-2\\\">\\r\\n                                        <table class=\\\"table table-bordered\\\">\\r\\n                                            <thead>\\r\\n                                                <tr>\\r\\n                                                    <th>{{trans('finance.fee_installment')}}</th>\\r\\n                                                    <th class=\\\"text-right\\\">{{trans('finance.installment_total')}}</th>\\r\\n                                                    <th class=\\\"text-right\\\">{{trans('finance.late_fee')}}</th>\\r\\n                                                    <th class=\\\"text-right\\\">{{trans('general.total')}}</th>\\r\\n                                                </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody>\\r\\n                                                <tr v-for=\\\"installment in feePaymentForm.installments\\\">\\r\\n                                                    <td v-text=\\\"installment.title\\\"></td>\\r\\n                                                    <td class=\\\"text-right\\\" v-text=\\\"installment.installment_balance\\\"></td>\\r\\n                                                    <td class=\\\"text-right\\\">\\r\\n                                                        {{installment.late_fee_balance}}\\r\\n                                                    </td>\\r\\n                                                    <td class=\\\"text-right\\\" v-text=\\\"getInstallmentTotal(installment)\\\"></td>\\r\\n                                                </tr>\\r\\n                                            </tbody>\\r\\n                                            <tfoot>\\r\\n                                                <tr>\\r\\n                                                    <th>{{trans('general.total')}}</th>\\r\\n                                                    <th colspan=\\\"2\\\"></th>\\r\\n                                                    <th class=\\\"text-right\\\">{{formatCurrency(getGrandTotal)}}</th>\\r\\n                                                </tr>\\r\\n                                            </tfoot>\\r\\n                                        </table>\\r\\n                                    </div>\\r\\n                                    <div>\\r\\n                                        <h4 class=\\\"card-title\\\">{{trans('finance.choose_payment_gateway')}}</h4>\\r\\n                                        <div class=\\\"radio radio-success\\\" v-if=\\\"getConfig('razorpay') && razorpay_loaded\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"payment_gateway\\\" id=\\\"razorpay\\\" value=\\\"razorpay\\\" @change=\\\"setPaymentGateway('razorpay')\\\">\\r\\n                                            <label for=\\\"razorpay\\\"> \\r\\n                                                Razorpay \\r\\n                                            </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"radio radio-success\\\" v-if=\\\"getConfig('billdesk')\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"payment_gateway\\\" id=\\\"billdesk\\\" value=\\\"billdesk\\\" @change=\\\"setPaymentGateway('billdesk')\\\">\\r\\n                                            <label for=\\\"billdesk\\\"> Billdesk </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"radio radio-success\\\" v-if=\\\"getConfig('stripe')\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"payment_gateway\\\" id=\\\"stripe\\\" value=\\\"stripe\\\" @change=\\\"setPaymentGateway('stripe')\\\">\\r\\n                                            <label for=\\\"stripe\\\"> Stripe </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"radio radio-success\\\" v-if=\\\"getConfig('paystack')\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"payment_gateway\\\" id=\\\"paystack\\\" value=\\\"paystack\\\" @change=\\\"setPaymentGateway('paystack')\\\">\\r\\n                                            <label for=\\\"paystack\\\"> Paystack </label>\\r\\n                                        </div>\\r\\n                                        <div class=\\\"radio radio-success\\\" v-if=\\\"getConfig('paypal')\\\">\\r\\n                                            <input type=\\\"radio\\\" name=\\\"payment_gateway\\\" id=\\\"paypal\\\" value=\\\"paypal\\\" @change=\\\"setPaymentGateway('paypal')\\\">\\r\\n                                            <label for=\\\"paypal\\\"> Paypal </label>\\r\\n                                        </div>\\r\\n\\r\\n                                        <p>{{handlingFeeAmount}}</p>\\r\\n                                        <p>{{totalAmount}}</p>\\r\\n\\r\\n                                        <template v-if=\\\"payment_gateway == 'billdesk'\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" @click=\\\"callBillDesk\\\">{{trans('general.proceed')}}</button>\\r\\n                                        </template>\\r\\n\\r\\n                                        <template v-if=\\\"payment_gateway == 'razorpay'\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" @click=\\\"callRazorpay\\\">{{trans('general.proceed')}}</button>\\r\\n                                        </template>\\r\\n\\r\\n                                        <template v-if=\\\"payment_gateway == 'paystack'\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" @click=\\\"payWithPaystack\\\">{{trans('general.proceed')}}</button>\\r\\n                                        </template>\\r\\n\\r\\n                                        <template v-if=\\\"payment_gateway == 'paypal'\\\">\\r\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-info\\\" @click=\\\"callPaypal\\\" v-if=\\\"paypalButton\\\">{{trans('general.proceed')}}</button>\\r\\n                                        </template>\\r\\n\\r\\n                                        <template v-if=\\\"payment_gateway == 'stripe'\\\">\\r\\n                                            <div class=\\\"row m-t-40\\\">\\r\\n                                                <div class=\\\"col-12\\\">\\r\\n                                                    <div class=\\\"form-group\\\">\\r\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" maxlength=\\\"16\\\" value=\\\"\\\" v-model=\\\"stripe.card_number\\\" :placeholder=\\\"trans('finance.card_number')\\\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-3\\\">\\r\\n                                                    <div class=\\\"form-group\\\">\\r\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" value=\\\"\\\" v-model=\\\"stripe.month\\\" :placeholder=\\\"trans('finance.card_expiry_month')\\\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-4\\\">\\r\\n                                                    <div class=\\\"form-group\\\">\\r\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" value=\\\"\\\" v-model=\\\"stripe.year\\\" :placeholder=\\\"trans('finance.card_expiry_year')\\\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-1\\\">\\r\\n                                                </div>\\r\\n                                                <div class=\\\"col-4\\\">\\r\\n                                                    <div class=\\\"form-group\\\">\\r\\n                                                        <input class=\\\"form-control\\\" type=\\\"number\\\" value=\\\"\\\" v-model=\\\"stripe.cvc\\\" :placeholder=\\\"trans('finance.card_cvc')\\\">\\r\\n                                                    </div>\\r\\n                                                </div>\\r\\n                                            </div>\\r\\n                                            <button type=\\\"button\\\" @click=\\\"stripeCheckout\\\" class=\\\"btn btn-info waves-effect waves-light pull-right\\\" v-if=\\\"stripeButton\\\"><span>{{trans('general.proceed')}}</span></button>\\r\\n                                        </template>\\r\\n                                    </div>\\r\\n                                </form>\\r\\n                            </div>\\r\\n                        </slot>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </transition>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\n    export default {\\r\\n        components: {},\\r\\n        props: ['id','uuid','feePayment'],\\r\\n        data() {\\r\\n            return {\\r\\n                default_currency: helper.getConfig('default_currency'),\\r\\n                payment_gateway: '',\\r\\n                razorpay_loaded: 0,\\r\\n                stripe_loaded: 0,\\r\\n                total: 0,\\r\\n                stripe: {\\r\\n                    card_number: '',\\r\\n                    month: '',\\r\\n                    year: '',\\r\\n                    cvc: ''\\r\\n                },\\r\\n                stripeButton: true,\\r\\n                paypalButton: true,\\r\\n                feePaymentForm: new Form({\\r\\n                    amount: 0,\\r\\n                    installment_id: '',\\r\\n                    date: '',\\r\\n                    installments: []\\r\\n                })\\r\\n            }\\r\\n        },\\r\\n        mounted(){\\r\\n            this.loadFeePayment(this.feePayment);\\r\\n\\r\\n            if ((this.default_currency.name == 'INR' || !helper.getConfig('mode')) && this.getConfig('razorpay')) {\\r\\n                this.injectRazorpay();\\r\\n            }\\r\\n        },\\r\\n        methods: {\\r\\n            getConfig(config){\\r\\n                return helper.getConfig(config);\\r\\n            },\\r\\n            loadFeePayment(feePayment){\\r\\n                this.feePaymentForm.amount = feePayment.amount;\\r\\n                this.feePaymentForm.installment_id = feePayment.fee_payment_installment_id;\\r\\n                this.feePaymentForm.date = feePayment.date;\\r\\n                this.feePaymentForm.installments = [];\\r\\n                this.total = 0;\\r\\n                feePayment.installments.forEach(installment => {\\r\\n                    this.feePaymentForm.installments.push({\\r\\n                        fee_installment_id: installment.fee_installment_id,\\r\\n                        title: installment.title,\\r\\n                        installment_balance: installment.installment_balance,\\r\\n                        late_fee_balance: installment.late_fee_balance\\r\\n                    });\\r\\n                })\\r\\n            },\\r\\n            getInstallmentTotal(installment){\\r\\n                return (installment.installment_balance + parseInt(installment.late_fee_balance));\\r\\n            },\\r\\n            formatCurrency(amount){\\r\\n                return helper.formatCurrency(amount);\\r\\n            },\\r\\n            setPaymentGateway(gateway){\\r\\n                this.payment_gateway = gateway;\\r\\n            },\\r\\n            stripeCheckout(){\\r\\n                let loader = this.$loading.show();\\r\\n                this.stripeButton = false;\\r\\n                Stripe.setPublishableKey(this.getConfig('stripe_publishable_key'));\\r\\n                Stripe.card.createToken({\\r\\n                    number: this.stripe.card_number,\\r\\n                    cvc: this.stripe.cvc,\\r\\n                    exp_month: this.stripe.month,\\r\\n                    exp_year: this.stripe.year\\r\\n                }, this.stripeResponseHandler);\\r\\n                loader.hide();\\r\\n            },\\r\\n            stripeResponseHandler(status, response) {\\r\\n                if(status == 200){\\r\\n                    let loader = this.$loading.show();\\r\\n                    axios.post('/api/student/'+this.uuid+'/payment/'+this.id+'/stripe',{\\r\\n                            stripeToken: response.id,\\r\\n                            amount: this.total * 100,\\r\\n                            fee: this.feePaymentForm.amount,\\r\\n                            handling_fee: this.handlingFee,\\r\\n                            fee_installment_id: this.feePaymentForm.installment_id,\\r\\n                            installments: this.feePaymentForm.installments\\r\\n                        })\\r\\n                        .then(response => {\\r\\n                            loader.hide();\\r\\n                            toastr.success(response.message);\\r\\n                            this.$emit('completed');\\r\\n                            this.stripeButton = true;\\r\\n                        })\\r\\n                        .catch(error => {\\r\\n                            loader.hide();\\r\\n                            helper.showErrorMsg(error);\\r\\n                            this.stripeButton = true;\\r\\n                        })\\r\\n                } else {\\r\\n                    toastr.error(response.error.message);\\r\\n                    this.stripeButton = true;\\r\\n                }\\r\\n            },\\r\\n            injectRazorpay() {\\r\\n                let vm = this;\\r\\n                var result = $.Deferred(),\\r\\n                script = document.createElement(\\\"script\\\");\\r\\n\\r\\n                script.async = \\\"async\\\";\\r\\n                script.type = \\\"text/javascript\\\";\\r\\n                script.src = 'https://checkout.razorpay.com/v1/checkout.js';\\r\\n                script.onload = script.onreadystatechange = function(_, isAbort) {\\r\\n                    if (!script.readyState || /loaded|complete/.test(script.readyState)) {\\r\\n                        if (isAbort)\\r\\n                            result.reject();\\r\\n                        else \\r\\n                            result.resolve();\\r\\n                    }\\r\\n                    vm.razorpay_loaded = 1;\\r\\n                };\\r\\n\\r\\n                script.onerror = function() {\\r\\n                    result.reject();\\r\\n                };\\r\\n\\r\\n                document.head.appendChild(script);\\r\\n\\r\\n                return result.promise();\\r\\n            },\\r\\n            callRazorpay(){\\r\\n                let vm = this;\\r\\n                var options = {\\r\\n                    key: this.getConfig('razorpay_key'),\\r\\n                    protocol: 'https',\\r\\n                    hostname: 'api.razorpay.com',\\r\\n                    amount: this.total * 100,\\r\\n                    name: helper.getConfig('institute_name'),\\r\\n                    description: i18n.finance.fee_payment,\\r\\n                    image: this.getLogo,\\r\\n                    prefill: {\\r\\n                        email: \\\"\\\",\\r\\n                        contact: \\\"\\\",\\r\\n                        name: \\\"\\\"\\r\\n                    },\\r\\n                    notes:{\\r\\n                        student_record_id: this.id,\\r\\n                        fee: this.feePaymentForm.amount,\\r\\n                        handling_fee: this.handlingFee\\r\\n                    },\\r\\n                    handler: function (transaction, response){\\r\\n                        vm.completeRazorpay(transaction.razorpay_payment_id)\\r\\n                    }\\r\\n                };\\r\\n\\r\\n                window.rzpay = new Razorpay(options);\\r\\n                rzpay.open();\\r\\n            },\\r\\n            completeRazorpay(transaction_id){\\r\\n                let loader = this.$loading.show();\\r\\n                axios.post('/api/student/'+this.uuid+'/payment/'+this.id+'/rzp',{\\r\\n                        transaction_id: transaction_id,\\r\\n                        installments: this.feePaymentForm.installments,\\r\\n                        fee_installment_id: this.feePaymentForm.installment_id\\r\\n                    })\\r\\n                    .then(response => {\\r\\n                        loader.hide();\\r\\n                        toastr.success(response.message);\\r\\n                        this.$emit('completed');\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    })\\r\\n            },\\r\\n            callBillDesk() {\\r\\n                let loader = this.$loading.show();\\r\\n\\r\\n                axios.post('student/'+this.uuid+'/payment/'+this.id+'/billdesk', {\\r\\n                    amount: this.feePaymentForm.amount,\\r\\n                    installment_id: this.feePaymentForm.installment_id,\\r\\n                    installments: this.feePaymentForm.installments\\r\\n                })\\r\\n                .then(response => {\\r\\n                    loader.hide();\\r\\n\\r\\n                    bdPayment.initialize({\\r\\n                        msg : response.msg,\\r\\n                        callbackUrl: response.url,\\r\\n                        options : {\\r\\n                            enableChildWindowPosting : true,\\r\\n                            enablePaymentRetry : true,\\r\\n                            retry_attempt_count: 3\\r\\n                        }\\r\\n                    }); \\r\\n                })\\r\\n                .catch(error => {\\r\\n                    loader.hide();\\r\\n                    helper.showErrorMsg(error);\\r\\n                })\\r\\n            },\\r\\n            callPaypal(){\\r\\n                this.paypalButton = false;\\r\\n                let loader = this.$loading.show();\\r\\n                axios.post('/api/student/'+this.uuid+'/payment/'+this.id+'/paypal',{\\r\\n                        amount: this.total,\\r\\n                        fee: this.feePaymentForm.amount,\\r\\n                        handling_fee: this.handlingFee,\\r\\n                        fee_installment_id: this.feePaymentForm.installment_id,\\r\\n                        installments: this.feePaymentForm.installments\\r\\n                    })\\r\\n                    .then(response => {\\r\\n                        loader.hide();\\r\\n                        window.location = response;\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        this.paypalButton = true\\r\\n                        helper.showErrorMsg(error);\\r\\n                    })\\r\\n                ;\\r\\n            },\\r\\n            payWithPaystack(){\\r\\n                if (helper.getConfig('default_currency').name != 'NGN' && helper.getConfig('default_currency').name != 'GHS') {\\r\\n                    toastr.error(i18n.configuration.currency_not_supported);\\r\\n                    return;\\r\\n                }\\r\\n\\r\\n                let vm = this;\\r\\n                var handler = PaystackPop.setup({\\r\\n                    key: this.getConfig('paystack_public_key'),\\r\\n                    email: helper.getAuthUser('email'),\\r\\n                    amount: this.total * 100,\\r\\n                    currency: helper.getConfig('default_currency').name,\\r\\n                    ref: ''+Math.floor((Math.random() * 1000000000) + 1),\\r\\n                    metadata: {\\r\\n                        custom_fields: [\\r\\n                            {\\r\\n                                display_name: 'Student ID',\\r\\n                                variable_name: \\\"student_record_id\\\",\\r\\n                                value: this.id\\r\\n                            },\\r\\n                            {\\r\\n                                display_name: 'Amount',\\r\\n                                variable_name: \\\"fee\\\",\\r\\n                                value: this.feePaymentForm.amount\\r\\n                            },\\r\\n                            {\\r\\n                                display_name: 'Handling Fee',\\r\\n                                variable_name: \\\"handling_fee\\\",\\r\\n                                value: this.handlingFee\\r\\n                            }\\r\\n                        ]\\r\\n                    },\\r\\n                    callback: function(response){\\r\\n                        vm.completePaystack(response.reference)\\r\\n                    },\\r\\n                    onClose: function(){\\r\\n                        \\r\\n                    }\\r\\n                });\\r\\n                handler.openIframe();\\r\\n            },\\r\\n            completePaystack(transaction_id){\\r\\n                let loader = this.$loading.show();\\r\\n                axios.post('/api/student/'+this.uuid+'/payment/'+this.id+'/paystack',{\\r\\n                        transaction_id: transaction_id,\\r\\n                        installments: this.feePaymentForm.installments,\\r\\n                        fee_installment_id: this.feePaymentForm.installment_id\\r\\n                    })\\r\\n                    .then(response => {\\r\\n                        loader.hide();\\r\\n                        toastr.success(response.message);\\r\\n                        this.$emit('completed');\\r\\n                    })\\r\\n                    .catch(error => {\\r\\n                        loader.hide();\\r\\n                        helper.showErrorMsg(error);\\r\\n                    })\\r\\n            }\\r\\n        },\\r\\n        computed: {\\r\\n            getLogo(){\\r\\n                return helper.getLogo();\\r\\n            },\\r\\n            handlingFee(){\\r\\n                let handling_fee = 0;\\r\\n\\r\\n                if (!this.payment_gateway)\\r\\n                    return handling_fee;\\r\\n\\r\\n                if (! helper.getConfig(this.payment_gateway+'_charge_handling_fee'))\\r\\n                    return handling_fee;\\r\\n\\r\\n                if(helper.getConfig(this.payment_gateway+'_fixed_handling_fee'))\\r\\n                    handling_fee = helper.getConfig(this.payment_gateway+'_handling_fee');\\r\\n                else {\\r\\n                    let percentage = helper.getConfig(this.payment_gateway+'_handling_fee');\\r\\n                    handling_fee = this.feePaymentForm.amount * (percentage / 100);\\r\\n                }\\r\\n\\r\\n                return helper.formatNumber(handling_fee);\\r\\n            },\\r\\n            handlingFeeAmount(){\\r\\n                if (! helper.getConfig(this.payment_gateway+'_charge_handling_fee'))\\r\\n                    return;\\r\\n\\r\\n                return i18n.finance.handling_fee+' '+helper.formatCurrency(this.handlingFee);\\r\\n            },\\r\\n            totalAmount(){\\r\\n                return i18n.finance.payable_amount+' '+helper.formatCurrency(this.total);\\r\\n            },\\r\\n            getGrandTotal(){\\r\\n                let total = 0;\\r\\n                total = total;\\r\\n\\r\\n                if(!Array.isArray(this.feePaymentForm.installments))\\r\\n                    return total;\\r\\n\\r\\n                this.feePaymentForm.installments.forEach(installment => {\\r\\n                    total += (installment.installment_balance + parseInt(installment.late_fee_balance));\\r\\n                })  \\r\\n                total = (total) ? (total + this.handlingFee) : total;\\r\\n                this.total = total; \\r\\n                return total;\\r\\n            }\\r\\n        },\\r\\n        filters: {\\r\\n          moment(date) {\\r\\n            return helper.formatDate(date);\\r\\n          },\\r\\n          momentDateTime(date) {\\r\\n            return helper.formatDateTime(date);\\r\\n          }\\r\\n        }\\r\\n    }\\r\\n</script>\\r\\n<style>\\r\\n.loading-overlay.is-full-page{\\r\\n    z-index: 1060;\\r\\n}\\r\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=b9b42674&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./payment-parent.vue?vue&type=style&index=0&id=5e9364e6&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./fee-detail.vue?vue&type=template&id=39d1cb98&\"\nimport script from \"./fee-detail.vue?vue&type=script&lang=js&\"\nexport * from \"./fee-detail.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('39d1cb98')) {\n      api.createRecord('39d1cb98', component.options)\n    } else {\n      api.reload('39d1cb98', component.options)\n    }\n    module.hot.accept(\"./fee-detail.vue?vue&type=template&id=39d1cb98&\", function () {\n      api.rerender('39d1cb98', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/fee/fee-detail.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=b9b42674&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=b9b42674&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('b9b42674')) {\n      api.createRecord('b9b42674', component.options)\n    } else {\n      api.reload('b9b42674', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=b9b42674&\", function () {\n      api.rerender('b9b42674', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/fee/index.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./payment-parent.vue?vue&type=template&id=5e9364e6&\"\nimport script from \"./payment-parent.vue?vue&type=script&lang=js&\"\nexport * from \"./payment-parent.vue?vue&type=script&lang=js&\"\nimport style0 from \"./payment-parent.vue?vue&type=style&index=0&id=5e9364e6&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('5e9364e6')) {\n      api.createRecord('5e9364e6', component.options)\n    } else {\n      api.reload('5e9364e6', component.options)\n    }\n    module.hot.accept(\"./payment-parent.vue?vue&type=template&id=5e9364e6&\", function () {\n      api.rerender('5e9364e6', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/fee/payment-parent.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./payment.vue?vue&type=template&id=046e14fa&\"\nimport script from \"./payment.vue?vue&type=script&lang=js&\"\nexport * from \"./payment.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('046e14fa')) {\n      api.createRecord('046e14fa', component.options)\n    } else {\n      api.reload('046e14fa', component.options)\n    }\n    module.hot.accept(\"./payment.vue?vue&type=template&id=046e14fa&\", function () {\n      api.rerender('046e14fa', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/fee/payment.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./summary.vue?vue&type=template&id=67e4e623&\"\nimport script from \"./summary.vue?vue&type=script&lang=js&\"\nexport * from \"./summary.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('67e4e623')) {\n      api.createRecord('67e4e623', component.options)\n    } else {\n      api.reload('67e4e623', component.options)\n    }\n    module.hot.accept(\"./summary.vue?vue&type=template&id=67e4e623&\", function () {\n      api.rerender('67e4e623', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/student/summary.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./fee-detail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./fee-detail.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./payment-parent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./payment-parent.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./payment.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./payment.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./summary.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./summary.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./fee-detail.vue?vue&type=template&id=39d1cb98&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=b9b42674&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./payment-parent.vue?vue&type=template&id=5e9364e6&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./payment.vue?vue&type=template&id=046e14fa&\"","export * from \"-!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./summary.vue?vue&type=template&id=67e4e623&\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=b9b42674&lang=css&\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./payment-parent.vue?vue&type=style&index=0&id=5e9364e6&lang=css&\""],"names":[],"sourceRoot":""}