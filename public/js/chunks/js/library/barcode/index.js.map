{"version":3,"file":"js/chunks/js/library/barcode/index.js?id=f481cc823aa0a1f5","mappings":";;;;;;;;;;;;;AAkGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC5IA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAWA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;;ACpgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA","sources":["webpack://InstiKit/resources/js/views/library/barcode/index.vue","webpack://InstiKit/./resources/js/views/library/barcode/index.vue","webpack://InstiKit/./resources/js/views/library/barcode/index.vue?4ca7","webpack://InstiKit/./resources/js/views/library/barcode/index.vue?3d0f","webpack://InstiKit/./resources/js/views/library/barcode/index.vue?be25"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('library.generate_barcode')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n\t\t                <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/library/issue/list')\"><i class=\"fas fa-book\"></i> <span class=\"d-none d-sm-inline\">{{trans('library.issue_list')}}</span></button>\r\n\t\t                <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/library/book')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('library.book')}}</span></button>\r\n                        <help-button @clicked=\"help_topic = 'book-issue'\"></help-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n        \t<form @submit.prevent=\"submit\" @keydown=\"barcodeForm.errors.clear($event.target.name)\">\r\n\t            <div class=\"card card-form\">\r\n\t                <div class=\"card-body p-t-20\">\r\n\t\t\t\t        <div class=\"row\">\r\n\t\t\t\t            <div class=\"col-12 col-sm-6\">\r\n\t\t\t                    <div class=\"form-group\">\r\n\t\t\t                        <div class=\"radio radio-success\">\r\n\t\t\t                            <input type=\"radio\" value=\"range\" id=\"range\" v-model=\"barcodeForm.type\" :checked=\"barcodeForm.type\" name=\"type\" @click=\"barcodeForm.errors.clear('type')\">\r\n\t\t\t                            <label for=\"range\">{{trans('library.barcode_range')}}</label>\r\n\t\t\t                        </div>\r\n\t\t\t                        <div class=\"radio radio-success\">\r\n\t\t\t                            <input type=\"radio\" value=\"csv\" id=\"csv\" v-model=\"barcodeForm.type\" :checked=\"!barcodeForm.type\" name=\"type\" @click=\"barcodeForm.errors.clear('type')\">\r\n\t\t\t                            <label for=\"csv\">{{trans('library.barcode_csv')}}</label>\r\n\t\t\t                        </div>\r\n\t\t\t                        <show-error :form-name=\"barcodeForm\" prop-name=\"type\"></show-error>\r\n\t\t\t                    </div>\r\n\t\t\t                    <div class=\"row\" v-if=\"barcodeForm.type == 'range'\">\r\n\t\t\t\t            \t\t<div class=\"col-12 col-sm-6\">\r\n\t\t\t\t\t                    <div class=\"form-group\">\r\n\t\t\t                                <label for=\"\">{{trans('library.range_start')}}</label>\r\n\t\t\t                                <input class=\"form-control\" type=\"number\" v-model=\"barcodeForm.start\" name=\"start\" :placeholder=\"trans('library.barcode_range_start')\">\r\n\t\t\t                                <show-error :form-name=\"barcodeForm\" prop-name=\"start\"></show-error>\r\n\t\t\t\t\t                    </div>\r\n\t\t\t\t\t                </div>\r\n\t\t\t\t            \t\t<div class=\"col-12 col-sm-6\">\r\n\t\t\t\t\t                    <div class=\"form-group\">\r\n\t\t\t                                <label for=\"\">{{trans('library.range_end')}}</label>\r\n\t\t\t                                <input class=\"form-control\" type=\"number\" v-model=\"barcodeForm.end\" name=\"end\" :placeholder=\"trans('library.barcode_range_end')\">\r\n\t\t\t                                <show-error :form-name=\"barcodeForm\" prop-name=\"end\"></show-error>\r\n\t\t\t\t\t                    </div>\r\n\t\t\t\t\t                </div>\r\n\t\t\t\t\t            </div>\r\n\t\t\t\t                <div class=\"form-group\" v-if=\"barcodeForm.type == 'csv'\">\r\n\t\t\t\t                    <label for=\"\">{{trans('library.barcode_csv')}}</label>\r\n\t\t\t\t                    <autosize-textarea v-model=\"barcodeForm.csv\" rows=\"3\" name=\"csv\" :placeholder=\"trans('library.barcode_csv')\"></autosize-textarea>\r\n\t\t\t\t                    <show-error :form-name=\"barcodeForm\" prop-name=\"csv\"></show-error>\r\n\t\t\t\t                </div>\r\n\t\t\t                    <div class=\"row\">\r\n\t\t\t\t            \t\t<div class=\"col-12 col-sm-6\">\r\n\t\t\t\t\t                    <div class=\"form-group\">\r\n\t\t\t                                <label for=\"\">{{trans('library.barcode_width')}}</label>\r\n\t\t\t                                <div class=\"input-group\">\r\n\t\t\t                                    <input class=\"form-control\" type=\"number\" step=\".02\" v-model=\"barcodeForm.width\" name=\"width\" :placeholder=\"trans('library.barcode_width')\">\r\n\t\t\t                                    <div class=\"input-group-append\"><span class=\"input-group-text\">mm</span></div>\r\n\t\t\t                                </div>\r\n\t\t\t                                <show-error :form-name=\"barcodeForm\" prop-name=\"width\"></show-error>\r\n\t\t\t\t\t                    </div>\r\n\t\t\t\t\t                </div>\r\n\t\t\t\t            \t\t<div class=\"col-12 col-sm-6\">\r\n\t\t\t\t\t                    <div class=\"form-group\">\r\n\t\t\t                                <label for=\"\">{{trans('library.barcode_height')}}</label>\r\n\t\t\t                                <div class=\"input-group\">\r\n\t\t\t                                    <input class=\"form-control\" type=\"number\" step=\".02\" v-model=\"barcodeForm.height\" name=\"height\" :placeholder=\"trans('library.barcode_height')\">\r\n\t\t\t                                    <div class=\"input-group-append\"><span class=\"input-group-text\">mm</span></div>\r\n\t\t\t                                </div>\r\n\t\t\t                                <show-error :form-name=\"barcodeForm\" prop-name=\"height\"></show-error>\r\n\t\t\t\t\t                    </div>\r\n\t\t\t\t\t                </div>\r\n\t\t\t\t\t                <div class=\"col-12 col-sm-6\">\r\n\t\t\t                            <div class=\"form-group\">\r\n\t\t\t                                <label for=\"\">{{trans('library.barcode_per_page_limit')}}</label>\r\n\t\t\t                                <input class=\"form-control\" type=\"number\" v-model=\"barcodeForm.per_page_limit\" name=\"per_page_limit\" :placeholder=\"trans('library.barcode_per_page_limit')\">\r\n\t\t\t                                <show-error :form-name=\"barcodeForm\" prop-name=\"per_page_limit\"></show-error>\r\n\t\t\t                            </div>\r\n\t\t\t\t\t                </div>\r\n\t\t\t\t\t            </div>\r\n\t\t\t\t            </div>\r\n\t\t\t\t        </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t        <div class=\"card-footer text-right\">\r\n\t\t\t            <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n\t\t\t                <span>{{trans('library.generate_barcode')}}</span>\r\n\t\t\t            </button>\r\n\t\t\t        </div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\texport default {\r\n\t\tcomponents: {},\r\n\t\tdata(){\r\n\t\t\treturn {\r\n\t\t\t\tbarcodeForm: new Form({\r\n\t\t\t\t\ttype: '',\r\n\t\t\t\t\tstart: '',\r\n\t\t\t\t\tend: '',\r\n\t\t\t\t\tcsv: '',\r\n\t\t\t\t\theight: '',\r\n\t\t\t\t\twidth: '',\r\n\t\t\t\t\tper_page_limit: ''\r\n\t\t\t\t}, false)\r\n\t\t\t}\r\n\t\t},\r\n\t\tmounted(){\r\n\t\t},\r\n\t\tmethods: {\r\n            submit(){\r\n                let loader = this.$loading.show();\r\n                this.barcodeForm.post('/api/library/barcode')\r\n                    .then(response => {\r\n                        let print = window.open(\"/print\");\r\n                        loader.hide();\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            }\r\n\t\t},\r\n        watch: {\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        }\r\n\t}\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"library.generate_barcode\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"action-buttons pull-right\" },\n            [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-info btn-sm\",\n                  on: {\n                    click: function ($event) {\n                      return _vm.$router.push(\"/library/issue/list\")\n                    },\n                  },\n                },\n                [\n                  _c(\"i\", { staticClass: \"fas fa-book\" }),\n                  _vm._v(\" \"),\n                  _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                    _vm._v(_vm._s(_vm.trans(\"library.issue_list\"))),\n                  ]),\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-info btn-sm\",\n                  on: {\n                    click: function ($event) {\n                      return _vm.$router.push(\"/library/book\")\n                    },\n                  },\n                },\n                [\n                  _c(\"i\", { staticClass: \"fas fa-list\" }),\n                  _vm._v(\" \"),\n                  _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                    _vm._v(_vm._s(_vm.trans(\"library.book\"))),\n                  ]),\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"help-button\", {\n                on: {\n                  clicked: function ($event) {\n                    _vm.help_topic = \"book-issue\"\n                  },\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function ($event) {\n              $event.preventDefault()\n              return _vm.submit.apply(null, arguments)\n            },\n            keydown: function ($event) {\n              return _vm.barcodeForm.errors.clear($event.target.name)\n            },\n          },\n        },\n        [\n          _c(\"div\", { staticClass: \"card card-form\" }, [\n            _c(\"div\", { staticClass: \"card-body p-t-20\" }, [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"div\", { staticClass: \"radio radio-success\" }, [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.barcodeForm.type,\n                              expression: \"barcodeForm.type\",\n                            },\n                          ],\n                          attrs: {\n                            type: \"radio\",\n                            value: \"range\",\n                            id: \"range\",\n                            name: \"type\",\n                          },\n                          domProps: {\n                            checked: _vm.barcodeForm.type,\n                            checked: _vm._q(_vm.barcodeForm.type, \"range\"),\n                          },\n                          on: {\n                            click: function ($event) {\n                              return _vm.barcodeForm.errors.clear(\"type\")\n                            },\n                            change: function ($event) {\n                              return _vm.$set(_vm.barcodeForm, \"type\", \"range\")\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"label\", { attrs: { for: \"range\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"library.barcode_range\"))),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"radio radio-success\" }, [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.barcodeForm.type,\n                              expression: \"barcodeForm.type\",\n                            },\n                          ],\n                          attrs: {\n                            type: \"radio\",\n                            value: \"csv\",\n                            id: \"csv\",\n                            name: \"type\",\n                          },\n                          domProps: {\n                            checked: !_vm.barcodeForm.type,\n                            checked: _vm._q(_vm.barcodeForm.type, \"csv\"),\n                          },\n                          on: {\n                            click: function ($event) {\n                              return _vm.barcodeForm.errors.clear(\"type\")\n                            },\n                            change: function ($event) {\n                              return _vm.$set(_vm.barcodeForm, \"type\", \"csv\")\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"label\", { attrs: { for: \"csv\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"library.barcode_csv\"))),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.barcodeForm,\n                          \"prop-name\": \"type\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _vm.barcodeForm.type == \"range\"\n                    ? _c(\"div\", { staticClass: \"row\" }, [\n                        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"library.range_start\"))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.barcodeForm.start,\n                                    expression: \"barcodeForm.start\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"number\",\n                                  name: \"start\",\n                                  placeholder: _vm.trans(\n                                    \"library.barcode_range_start\"\n                                  ),\n                                },\n                                domProps: { value: _vm.barcodeForm.start },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.barcodeForm,\n                                      \"start\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.barcodeForm,\n                                  \"prop-name\": \"start\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(_vm._s(_vm.trans(\"library.range_end\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.barcodeForm.end,\n                                    expression: \"barcodeForm.end\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  type: \"number\",\n                                  name: \"end\",\n                                  placeholder: _vm.trans(\n                                    \"library.barcode_range_end\"\n                                  ),\n                                },\n                                domProps: { value: _vm.barcodeForm.end },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.barcodeForm,\n                                      \"end\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.barcodeForm,\n                                  \"prop-name\": \"end\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                      ])\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _vm.barcodeForm.type == \"csv\"\n                    ? _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"library.barcode_csv\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"autosize-textarea\", {\n                            attrs: {\n                              rows: \"3\",\n                              name: \"csv\",\n                              placeholder: _vm.trans(\"library.barcode_csv\"),\n                            },\n                            model: {\n                              value: _vm.barcodeForm.csv,\n                              callback: function ($$v) {\n                                _vm.$set(_vm.barcodeForm, \"csv\", $$v)\n                              },\n                              expression: \"barcodeForm.csv\",\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.barcodeForm,\n                              \"prop-name\": \"csv\",\n                            },\n                          }),\n                        ],\n                        1\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"row\" }, [\n                    _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"library.barcode_width\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"input-group\" }, [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.barcodeForm.width,\n                                  expression: \"barcodeForm.width\",\n                                },\n                              ],\n                              staticClass: \"form-control\",\n                              attrs: {\n                                type: \"number\",\n                                step: \".02\",\n                                name: \"width\",\n                                placeholder: _vm.trans(\"library.barcode_width\"),\n                              },\n                              domProps: { value: _vm.barcodeForm.width },\n                              on: {\n                                input: function ($event) {\n                                  if ($event.target.composing) return\n                                  _vm.$set(\n                                    _vm.barcodeForm,\n                                    \"width\",\n                                    $event.target.value\n                                  )\n                                },\n                              },\n                            }),\n                            _vm._v(\" \"),\n                            _vm._m(0),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.barcodeForm,\n                              \"prop-name\": \"width\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"library.barcode_height\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"input-group\" }, [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.barcodeForm.height,\n                                  expression: \"barcodeForm.height\",\n                                },\n                              ],\n                              staticClass: \"form-control\",\n                              attrs: {\n                                type: \"number\",\n                                step: \".02\",\n                                name: \"height\",\n                                placeholder: _vm.trans(\n                                  \"library.barcode_height\"\n                                ),\n                              },\n                              domProps: { value: _vm.barcodeForm.height },\n                              on: {\n                                input: function ($event) {\n                                  if ($event.target.composing) return\n                                  _vm.$set(\n                                    _vm.barcodeForm,\n                                    \"height\",\n                                    $event.target.value\n                                  )\n                                },\n                              },\n                            }),\n                            _vm._v(\" \"),\n                            _vm._m(1),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.barcodeForm,\n                              \"prop-name\": \"height\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(\n                                _vm.trans(\"library.barcode_per_page_limit\")\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.barcodeForm.per_page_limit,\n                                expression: \"barcodeForm.per_page_limit\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"number\",\n                              name: \"per_page_limit\",\n                              placeholder: _vm.trans(\n                                \"library.barcode_per_page_limit\"\n                              ),\n                            },\n                            domProps: { value: _vm.barcodeForm.per_page_limit },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.barcodeForm,\n                                  \"per_page_limit\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.barcodeForm,\n                              \"prop-name\": \"per_page_limit\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                  ]),\n                ]),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-info waves-effect waves-light\",\n                  attrs: { type: \"submit\" },\n                },\n                [\n                  _c(\"span\", [\n                    _vm._v(_vm._s(_vm.trans(\"library.generate_barcode\"))),\n                  ]),\n                ]\n              ),\n            ]),\n          ]),\n        ]\n      ),\n    ]),\n  ])\n}\nvar staticRenderFns = [\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"input-group-append\" }, [\n      _c(\"span\", { staticClass: \"input-group-text\" }, [_vm._v(\"mm\")]),\n    ])\n  },\n  function () {\n    var _vm = this,\n      _c = _vm._self._c\n    return _c(\"div\", { staticClass: \"input-group-append\" }, [\n      _c(\"span\", { staticClass: \"input-group-text\" }, [_vm._v(\"mm\")]),\n    ])\n  },\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=40b6fd80&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('40b6fd80')) {\n      api.createRecord('40b6fd80', component.options)\n    } else {\n      api.reload('40b6fd80', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=40b6fd80&\", function () {\n      api.rerender('40b6fd80', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/library/barcode/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=40b6fd80&\""],"names":[],"sourceRoot":""}