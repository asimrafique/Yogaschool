{"version":3,"file":"js/chunks/js/employee/attendance/index.js?id=0a54a708f86c0624","mappings":";;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC7MA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAiBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAiBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAiBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAKA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAEA;AAWA;AAAA;AAAA;AAGA;AAKA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AASA;AAUA;AAaA;AAAA;AAeA;AAGA;AACA;AAMA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAGA;AAEA;AAMA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAWA;AAMA;AAGA;AAEA;AAcA;AAKA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC3cA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACvCA","sources":["webpack://InstiKit/resources/js/views/employee/attendance/index.vue","webpack://InstiKit/./resources/js/views/employee/attendance/index.vue","webpack://InstiKit/./resources/js/views/employee/attendance/index.vue?6e18","webpack://InstiKit/./resources/js/views/employee/attendance/index.vue?a051","webpack://InstiKit/./resources/js/views/employee/attendance/index.vue?1710","webpack://InstiKit/./resources/js/views/employee/attendance/index.vue?a0bf","webpack://InstiKit/./resources/js/views/employee/attendance/index.vue?abcc","webpack://InstiKit/./resources/js/views/employee/attendance/index.vue?1355"],"sourcesContent":["<template>\n    <div>\n        <div class=\"page-titles\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('employee.list_attendance')}}</h3>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"action-buttons pull-right\">\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/employee/attendance/regular')\"><i class=\"fas fa-check\"></i> <span class=\"d-none d-sm-inline\">{{trans('employee.mark_attendance')}}</span></button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <div class=\"card\">\n                <div class=\"card-body p-4\">\n                    <div class=\"row\">\n                        <div class=\"col-12 col-sm-3\">\n                            <div class=\"form-group\">\n                                <label for=\"\">{{trans('employee.category')}}</label>\n                                <v-select label=\"name\" track-by=\"id\" v-model=\"selected_employee_categories\" name=\"employee_category_id\" id=\"employee_category_id\" :options=\"employee_categories\" :placeholder=\"trans('employee.select_employee_category')\" @select=\"onEmployeeCategorySelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onEmployeeCategoryRemove\" :selected=\"selected_employee_categories\">\n                                    <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employee_categories.length\">\n                                        {{trans('general.no_option_found')}}\n                                    </div>\n                                </v-select>\n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-3\">\n                            <div class=\"form-group\">\n                                <label for=\"\">{{trans('employee.designation')}}</label>\n                                <v-select label=\"name\" track-by=\"id\" v-model=\"selected_designations\" name=\"designation_id\" id=\"designation_id\" :options=\"designations\" :placeholder=\"trans('employee.select_designation')\" @select=\"onDesignationSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onDesignationRemove\" :selected=\"selected_designations\">\n                                    <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!designations.length\">\n                                        {{trans('general.no_option_found')}}\n                                    </div>\n                                </v-select>\n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-3\">\n                            <div class=\"form-group\">\n                                <label for=\"\">{{trans('employee.department')}}</label>\n                                <v-select label=\"name\" track-by=\"id\" v-model=\"selected_departments\" name=\"department_id\" id=\"department_id\" :options=\"departments\" :placeholder=\"trans('employee.select_department')\" @select=\"onDepartmentSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onDepartmentRemove\" :selected=\"selected_departments\">\n                                    <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!departments.length\">\n                                        {{trans('general.no_option_found')}}\n                                    </div>\n                                </v-select>\n                            </div>\n                        </div>\n                        <div class=\"col-12 col-sm-3\">\n                            <div class=\"form-group\">\n                                <label for=\"\">{{trans('employee.attendance_month')}}</label>\n                                <vue-monthly-picker v-model=\"filter.month\" name=\"month\" :placeHolder=\"trans('employee.attendance_month')\" dateFormat=\"YYYY-MM \"></vue-monthly-picker>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <button type=\"button\" class=\"btn btn-info pull-right\" @click=\"list\">{{trans('general.filter')}}</button>\n                    </div>\n                    <div class=\"clearfix\"></div>\n\n                    <div class=\"row m-t-20\" v-if=\"employees.length\">\n                        <div class=\"col-12\">\n                            <div class=\"table-responsive font-90pc p-2\">\n                                <table class=\"table table-sm table-bordered attendance-table\">\n                                    <thead>\n                                        <tr>\n                                            <th>{{trans('employee.employee')}}</th>\n                                            <th class=\"date-cell\" v-for=\"index in days\">{{index}}</th>\n                                            <th class=\"text-center font-weight-bold\" v-for=\"attendance in attendance_summary_with_name\" v-tooltip=\"attendance.name\">\n                                                {{attendance.symbol}}\n                                            </th>\n                                        </tr>   \n                                    </thead>\n                                    <tbody>\n                                        <tr v-for=\"employee in employees\">\n                                            <td>\n                                                {{getEmployeeNameWithCode(employee)}} <br /> \n                                                <span class=\"font-90pc\">{{getEmployeeDesignationOnDate(employee, date)}}</span>\n                                            </td>\n                                            <td :class=\"`text-center font-weight-bold text-${attendance.color}`\" v-for=\"attendance in employee.attendances\">\n                                                <span class=\"marking-cell\" v-tooltip=\"attendance.description\" v-if=\"attendance.symbol == 'H'\">\n                                                    <i class=\"fas fa-hospital-symbol\"></i>\n                                                </span>\n                                                <span class=\"marking-cell\" v-tooltip=\"attendance.description\" v-else>\n                                                    {{attendance.symbol}}\n                                                </span>\n                                            </td>\n                                            <td class=\"text-center font-weight-bold\" v-for=\"attendance in attendance_summary_with_name\">\n                                                {{getAttendanceSummary(employee, attendance.symbol)}}\n                                            </td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    export default {\n        components: {},\n        data(){\n            return {\n                filter: {\n                    department_id: [],\n                    designation_id: [],\n                    employee_category_id: [],\n                    month: ''\n                },\n                date: '',\n                days: 0,\n                employees: [],\n                departments: [],\n                designations: [],\n                employee_categories: [],\n                selected_designations: null,\n                selected_departments: null,\n                selected_employee_categories: null,\n                attendance_summary_with_name: []\n            }\n        },\n        mounted(){\n            this.filter.month = moment().format('YYYY-MM');\n            this.getPreRequisite();\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            getEmployeeNameWithCode(employee){\n                return helper.getEmployeeNameWithCode(employee);\n            },\n            getEmployeeDesignationOnDate(employee, date){\n                return helper.getEmployeeDesignationOnDate(employee, date);\n            },\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/employee/attendance/regular/pre-requisite')\n                    .then(response => {\n                        this.departments = response.departments;\n                        this.designations = response.designations;\n                        this.employee_categories = response.employee_categories;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            list(){\n                let loader = this.$loading.show();\n                this.filter.month = moment(this.filter.month).format('YYYY-MM');\n                axios.post('/api/employee/attendance/regular/list',{\n                        department_id: this.filter.department_id,\n                        designation_id: this.filter.designation_id,\n                        employee_category_id: this.filter.employee_category_id,\n                        month: this.filter.month,\n                    })\n                    .then(response => {\n                        this.employees = response.employees;\n                        this.attendance_summary_with_name = response.attendance_summary_with_name;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg();\n                    })\n            },\n            onDepartmentSelect(selectedOption){\n                this.filter.department_id.push(selectedOption.id);\n            },\n            onDepartmentRemove(removedOption){\n                this.filter.department_id.splice(this.filter.department_id.indexOf(removedOption.id), 1);\n            },\n            onDesignationSelect(selectedOption){\n                this.filter.designation_id.push(selectedOption.id);\n            },\n            onDesignationRemove(removedOption){\n                this.filter.designation_id.splice(this.filter.designation_id.indexOf(removedOption.id), 1);\n            },\n            onEmployeeCategorySelect(selectedOption){\n                this.filter.employee_category_id.push(selectedOption.id);\n            },\n            onEmployeeCategoryRemove(removedOption){\n                this.filter.employee_category_id.splice(this.filter.employee_category_id.indexOf(removedOption.id), 1);\n            },\n            getAttendanceSummary(employee, symbol){\n                let attendance = employee.summary.find(o => o.symbol == symbol);\n\n                if (typeof attendance == 'undefined')\n                    return 0;\n\n                return attendance.value;\n            }\n        },\n        watch: {\n            'filter.month': function(val){\n                this.date = moment(val, 'YYYY-MM')+'-01';\n                this.days = moment(val,'YYYY-MM').daysInMonth();\n            }\n        }\n    }\n</script>\n\n<style>\n    .attendance-table tr th.date-cell{\n        text-align: center;\n        min-width: 20px;\n        max-width: 20px;\n    }\n    .attendance-table tr td {\n        vertical-align: middle;\n    }\n    .attendance-table tr td span.marking-cell {\n        display: block;\n        width: 100%;\n        height: 100%;\n        text-align: center;\n    }\n</style>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"employee.list_attendance\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/employee/attendance/regular\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-check\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.mark_attendance\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card\" }, [\n        _c(\"div\", { staticClass: \"card-body p-4\" }, [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"employee.category\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        \"track-by\": \"id\",\n                        name: \"employee_category_id\",\n                        id: \"employee_category_id\",\n                        options: _vm.employee_categories,\n                        placeholder: _vm.trans(\n                          \"employee.select_employee_category\"\n                        ),\n                        multiple: true,\n                        \"close-on-select\": false,\n                        \"clear-on-select\": false,\n                        \"hide-selected\": true,\n                        selected: _vm.selected_employee_categories,\n                      },\n                      on: {\n                        select: _vm.onEmployeeCategorySelect,\n                        remove: _vm.onEmployeeCategoryRemove,\n                      },\n                      model: {\n                        value: _vm.selected_employee_categories,\n                        callback: function ($$v) {\n                          _vm.selected_employee_categories = $$v\n                        },\n                        expression: \"selected_employee_categories\",\n                      },\n                    },\n                    [\n                      !_vm.employee_categories.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                                \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"employee.designation\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        \"track-by\": \"id\",\n                        name: \"designation_id\",\n                        id: \"designation_id\",\n                        options: _vm.designations,\n                        placeholder: _vm.trans(\"employee.select_designation\"),\n                        multiple: true,\n                        \"close-on-select\": false,\n                        \"clear-on-select\": false,\n                        \"hide-selected\": true,\n                        selected: _vm.selected_designations,\n                      },\n                      on: {\n                        select: _vm.onDesignationSelect,\n                        remove: _vm.onDesignationRemove,\n                      },\n                      model: {\n                        value: _vm.selected_designations,\n                        callback: function ($$v) {\n                          _vm.selected_designations = $$v\n                        },\n                        expression: \"selected_designations\",\n                      },\n                    },\n                    [\n                      !_vm.designations.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                                \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"employee.department\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        \"track-by\": \"id\",\n                        name: \"department_id\",\n                        id: \"department_id\",\n                        options: _vm.departments,\n                        placeholder: _vm.trans(\"employee.select_department\"),\n                        multiple: true,\n                        \"close-on-select\": false,\n                        \"clear-on-select\": false,\n                        \"hide-selected\": true,\n                        selected: _vm.selected_departments,\n                      },\n                      on: {\n                        select: _vm.onDepartmentSelect,\n                        remove: _vm.onDepartmentRemove,\n                      },\n                      model: {\n                        value: _vm.selected_departments,\n                        callback: function ($$v) {\n                          _vm.selected_departments = $$v\n                        },\n                        expression: \"selected_departments\",\n                      },\n                    },\n                    [\n                      !_vm.departments.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                                \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"employee.attendance_month\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"vue-monthly-picker\", {\n                    attrs: {\n                      name: \"month\",\n                      placeHolder: _vm.trans(\"employee.attendance_month\"),\n                      dateFormat: \"YYYY-MM \",\n                    },\n                    model: {\n                      value: _vm.filter.month,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.filter, \"month\", $$v)\n                      },\n                      expression: \"filter.month\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info pull-right\",\n                attrs: { type: \"button\" },\n                on: { click: _vm.list },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"clearfix\" }),\n          _vm._v(\" \"),\n          _vm.employees.length\n            ? _c(\"div\", { staticClass: \"row m-t-20\" }, [\n                _c(\"div\", { staticClass: \"col-12\" }, [\n                  _c(\"div\", { staticClass: \"table-responsive font-90pc p-2\" }, [\n                    _c(\n                      \"table\",\n                      {\n                        staticClass:\n                          \"table table-sm table-bordered attendance-table\",\n                      },\n                      [\n                        _c(\"thead\", [\n                          _c(\n                            \"tr\",\n                            [\n                              _c(\"th\", [\n                                _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                              ]),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.days, function (index) {\n                                return _c(\"th\", { staticClass: \"date-cell\" }, [\n                                  _vm._v(_vm._s(index)),\n                                ])\n                              }),\n                              _vm._v(\" \"),\n                              _vm._l(\n                                _vm.attendance_summary_with_name,\n                                function (attendance) {\n                                  return _c(\n                                    \"th\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"tooltip\",\n                                          rawName: \"v-tooltip\",\n                                          value: attendance.name,\n                                          expression: \"attendance.name\",\n                                        },\n                                      ],\n                                      staticClass:\n                                        \"text-center font-weight-bold\",\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                                            \" +\n                                          _vm._s(attendance.symbol) +\n                                          \"\\n                                        \"\n                                      ),\n                                    ]\n                                  )\n                                }\n                              ),\n                            ],\n                            2\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(_vm.employees, function (employee) {\n                            return _c(\n                              \"tr\",\n                              [\n                                _c(\"td\", [\n                                  _vm._v(\n                                    \"\\n                                            \" +\n                                      _vm._s(\n                                        _vm.getEmployeeNameWithCode(employee)\n                                      ) +\n                                      \" \"\n                                  ),\n                                  _c(\"br\"),\n                                  _vm._v(\" \"),\n                                  _c(\"span\", { staticClass: \"font-90pc\" }, [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.getEmployeeDesignationOnDate(\n                                          employee,\n                                          _vm.date\n                                        )\n                                      )\n                                    ),\n                                  ]),\n                                ]),\n                                _vm._v(\" \"),\n                                _vm._l(\n                                  employee.attendances,\n                                  function (attendance) {\n                                    return _c(\n                                      \"td\",\n                                      {\n                                        class: `text-center font-weight-bold text-${attendance.color}`,\n                                      },\n                                      [\n                                        attendance.symbol == \"H\"\n                                          ? _c(\n                                              \"span\",\n                                              {\n                                                directives: [\n                                                  {\n                                                    name: \"tooltip\",\n                                                    rawName: \"v-tooltip\",\n                                                    value:\n                                                      attendance.description,\n                                                    expression:\n                                                      \"attendance.description\",\n                                                  },\n                                                ],\n                                                staticClass: \"marking-cell\",\n                                              },\n                                              [\n                                                _c(\"i\", {\n                                                  staticClass:\n                                                    \"fas fa-hospital-symbol\",\n                                                }),\n                                              ]\n                                            )\n                                          : _c(\n                                              \"span\",\n                                              {\n                                                directives: [\n                                                  {\n                                                    name: \"tooltip\",\n                                                    rawName: \"v-tooltip\",\n                                                    value:\n                                                      attendance.description,\n                                                    expression:\n                                                      \"attendance.description\",\n                                                  },\n                                                ],\n                                                staticClass: \"marking-cell\",\n                                              },\n                                              [\n                                                _vm._v(\n                                                  \"\\n                                                \" +\n                                                    _vm._s(attendance.symbol) +\n                                                    \"\\n                                            \"\n                                                ),\n                                              ]\n                                            ),\n                                      ]\n                                    )\n                                  }\n                                ),\n                                _vm._v(\" \"),\n                                _vm._l(\n                                  _vm.attendance_summary_with_name,\n                                  function (attendance) {\n                                    return _c(\n                                      \"td\",\n                                      {\n                                        staticClass:\n                                          \"text-center font-weight-bold\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                            \" +\n                                            _vm._s(\n                                              _vm.getAttendanceSummary(\n                                                employee,\n                                                attendance.symbol\n                                              )\n                                            ) +\n                                            \"\\n                                        \"\n                                        ),\n                                      ]\n                                    )\n                                  }\n                                ),\n                              ],\n                              2\n                            )\n                          }),\n                          0\n                        ),\n                      ]\n                    ),\n                  ]),\n                ]),\n              ])\n            : _vm._e(),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.attendance-table tr th.date-cell{\\n    text-align: center;\\n    min-width: 20px;\\n    max-width: 20px;\\n}\\n.attendance-table tr td {\\n    vertical-align: middle;\\n}\\n.attendance-table tr td span.marking-cell {\\n    display: block;\\n    width: 100%;\\n    height: 100%;\\n    text-align: center;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/employee/attendance/index.vue\"],\"names\":[],\"mappings\":\";AAgOA;IACA,kBAAA;IACA,eAAA;IACA,eAAA;AACA;AACA;IACA,sBAAA;AACA;AACA;IACA,cAAA;IACA,WAAA;IACA,YAAA;IACA,kBAAA;AACA\",\"sourcesContent\":[\"<template>\\n    <div>\\n        <div class=\\\"page-titles\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-12 col-sm-6\\\">\\n                    <h3 class=\\\"text-themecolor\\\">{{trans('employee.list_attendance')}}</h3>\\n                </div>\\n                <div class=\\\"col-12 col-sm-6\\\">\\n                    <div class=\\\"action-buttons pull-right\\\">\\n                        <button class=\\\"btn btn-info btn-sm\\\" @click=\\\"$router.push('/employee/attendance/regular')\\\"><i class=\\\"fas fa-check\\\"></i> <span class=\\\"d-none d-sm-inline\\\">{{trans('employee.mark_attendance')}}</span></button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"container-fluid\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body p-4\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-12 col-sm-3\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"\\\">{{trans('employee.category')}}</label>\\n                                <v-select label=\\\"name\\\" track-by=\\\"id\\\" v-model=\\\"selected_employee_categories\\\" name=\\\"employee_category_id\\\" id=\\\"employee_category_id\\\" :options=\\\"employee_categories\\\" :placeholder=\\\"trans('employee.select_employee_category')\\\" @select=\\\"onEmployeeCategorySelect\\\" :multiple=\\\"true\\\" :close-on-select=\\\"false\\\" :clear-on-select=\\\"false\\\" :hide-selected=\\\"true\\\" @remove=\\\"onEmployeeCategoryRemove\\\" :selected=\\\"selected_employee_categories\\\">\\n                                    <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!employee_categories.length\\\">\\n                                        {{trans('general.no_option_found')}}\\n                                    </div>\\n                                </v-select>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12 col-sm-3\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"\\\">{{trans('employee.designation')}}</label>\\n                                <v-select label=\\\"name\\\" track-by=\\\"id\\\" v-model=\\\"selected_designations\\\" name=\\\"designation_id\\\" id=\\\"designation_id\\\" :options=\\\"designations\\\" :placeholder=\\\"trans('employee.select_designation')\\\" @select=\\\"onDesignationSelect\\\" :multiple=\\\"true\\\" :close-on-select=\\\"false\\\" :clear-on-select=\\\"false\\\" :hide-selected=\\\"true\\\" @remove=\\\"onDesignationRemove\\\" :selected=\\\"selected_designations\\\">\\n                                    <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!designations.length\\\">\\n                                        {{trans('general.no_option_found')}}\\n                                    </div>\\n                                </v-select>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12 col-sm-3\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"\\\">{{trans('employee.department')}}</label>\\n                                <v-select label=\\\"name\\\" track-by=\\\"id\\\" v-model=\\\"selected_departments\\\" name=\\\"department_id\\\" id=\\\"department_id\\\" :options=\\\"departments\\\" :placeholder=\\\"trans('employee.select_department')\\\" @select=\\\"onDepartmentSelect\\\" :multiple=\\\"true\\\" :close-on-select=\\\"false\\\" :clear-on-select=\\\"false\\\" :hide-selected=\\\"true\\\" @remove=\\\"onDepartmentRemove\\\" :selected=\\\"selected_departments\\\">\\n                                    <div class=\\\"multiselect__option\\\" slot=\\\"afterList\\\" v-if=\\\"!departments.length\\\">\\n                                        {{trans('general.no_option_found')}}\\n                                    </div>\\n                                </v-select>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-12 col-sm-3\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <label for=\\\"\\\">{{trans('employee.attendance_month')}}</label>\\n                                <vue-monthly-picker v-model=\\\"filter.month\\\" name=\\\"month\\\" :placeHolder=\\\"trans('employee.attendance_month')\\\" dateFormat=\\\"YYYY-MM \\\"></vue-monthly-picker>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-info pull-right\\\" @click=\\\"list\\\">{{trans('general.filter')}}</button>\\n                    </div>\\n                    <div class=\\\"clearfix\\\"></div>\\n\\n                    <div class=\\\"row m-t-20\\\" v-if=\\\"employees.length\\\">\\n                        <div class=\\\"col-12\\\">\\n                            <div class=\\\"table-responsive font-90pc p-2\\\">\\n                                <table class=\\\"table table-sm table-bordered attendance-table\\\">\\n                                    <thead>\\n                                        <tr>\\n                                            <th>{{trans('employee.employee')}}</th>\\n                                            <th class=\\\"date-cell\\\" v-for=\\\"index in days\\\">{{index}}</th>\\n                                            <th class=\\\"text-center font-weight-bold\\\" v-for=\\\"attendance in attendance_summary_with_name\\\" v-tooltip=\\\"attendance.name\\\">\\n                                                {{attendance.symbol}}\\n                                            </th>\\n                                        </tr>   \\n                                    </thead>\\n                                    <tbody>\\n                                        <tr v-for=\\\"employee in employees\\\">\\n                                            <td>\\n                                                {{getEmployeeNameWithCode(employee)}} <br /> \\n                                                <span class=\\\"font-90pc\\\">{{getEmployeeDesignationOnDate(employee, date)}}</span>\\n                                            </td>\\n                                            <td :class=\\\"`text-center font-weight-bold text-${attendance.color}`\\\" v-for=\\\"attendance in employee.attendances\\\">\\n                                                <span class=\\\"marking-cell\\\" v-tooltip=\\\"attendance.description\\\" v-if=\\\"attendance.symbol == 'H'\\\">\\n                                                    <i class=\\\"fas fa-hospital-symbol\\\"></i>\\n                                                </span>\\n                                                <span class=\\\"marking-cell\\\" v-tooltip=\\\"attendance.description\\\" v-else>\\n                                                    {{attendance.symbol}}\\n                                                </span>\\n                                            </td>\\n                                            <td class=\\\"text-center font-weight-bold\\\" v-for=\\\"attendance in attendance_summary_with_name\\\">\\n                                                {{getAttendanceSummary(employee, attendance.symbol)}}\\n                                            </td>\\n                                        </tr>\\n                                    </tbody>\\n                                </table>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</template>\\n\\n<script>\\n    export default {\\n        components: {},\\n        data(){\\n            return {\\n                filter: {\\n                    department_id: [],\\n                    designation_id: [],\\n                    employee_category_id: [],\\n                    month: ''\\n                },\\n                date: '',\\n                days: 0,\\n                employees: [],\\n                departments: [],\\n                designations: [],\\n                employee_categories: [],\\n                selected_designations: null,\\n                selected_departments: null,\\n                selected_employee_categories: null,\\n                attendance_summary_with_name: []\\n            }\\n        },\\n        mounted(){\\n            this.filter.month = moment().format('YYYY-MM');\\n            this.getPreRequisite();\\n        },\\n        methods: {\\n            hasPermission(permission){\\n                return helper.hasPermission(permission);\\n            },\\n            getEmployeeNameWithCode(employee){\\n                return helper.getEmployeeNameWithCode(employee);\\n            },\\n            getEmployeeDesignationOnDate(employee, date){\\n                return helper.getEmployeeDesignationOnDate(employee, date);\\n            },\\n            getPreRequisite(){\\n                let loader = this.$loading.show();\\n                axios.get('/api/employee/attendance/regular/pre-requisite')\\n                    .then(response => {\\n                        this.departments = response.departments;\\n                        this.designations = response.designations;\\n                        this.employee_categories = response.employee_categories;\\n                        loader.hide();\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                    })\\n            },\\n            list(){\\n                let loader = this.$loading.show();\\n                this.filter.month = moment(this.filter.month).format('YYYY-MM');\\n                axios.post('/api/employee/attendance/regular/list',{\\n                        department_id: this.filter.department_id,\\n                        designation_id: this.filter.designation_id,\\n                        employee_category_id: this.filter.employee_category_id,\\n                        month: this.filter.month,\\n                    })\\n                    .then(response => {\\n                        this.employees = response.employees;\\n                        this.attendance_summary_with_name = response.attendance_summary_with_name;\\n                        loader.hide();\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg();\\n                    })\\n            },\\n            onDepartmentSelect(selectedOption){\\n                this.filter.department_id.push(selectedOption.id);\\n            },\\n            onDepartmentRemove(removedOption){\\n                this.filter.department_id.splice(this.filter.department_id.indexOf(removedOption.id), 1);\\n            },\\n            onDesignationSelect(selectedOption){\\n                this.filter.designation_id.push(selectedOption.id);\\n            },\\n            onDesignationRemove(removedOption){\\n                this.filter.designation_id.splice(this.filter.designation_id.indexOf(removedOption.id), 1);\\n            },\\n            onEmployeeCategorySelect(selectedOption){\\n                this.filter.employee_category_id.push(selectedOption.id);\\n            },\\n            onEmployeeCategoryRemove(removedOption){\\n                this.filter.employee_category_id.splice(this.filter.employee_category_id.indexOf(removedOption.id), 1);\\n            },\\n            getAttendanceSummary(employee, symbol){\\n                let attendance = employee.summary.find(o => o.symbol == symbol);\\n\\n                if (typeof attendance == 'undefined')\\n                    return 0;\\n\\n                return attendance.value;\\n            }\\n        },\\n        watch: {\\n            'filter.month': function(val){\\n                this.date = moment(val, 'YYYY-MM')+'-01';\\n                this.days = moment(val,'YYYY-MM').daysInMonth();\\n            }\\n        }\\n    }\\n</script>\\n\\n<style>\\n    .attendance-table tr th.date-cell{\\n        text-align: center;\\n        min-width: 20px;\\n        max-width: 20px;\\n    }\\n    .attendance-table tr td {\\n        vertical-align: middle;\\n    }\\n    .attendance-table tr td span.marking-cell {\\n        display: block;\\n        width: 100%;\\n        height: 100%;\\n        text-align: center;\\n    }\\n</style>\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=61c55cfe&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=61c55cfe&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=61c55cfe&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('61c55cfe')) {\n      api.createRecord('61c55cfe', component.options)\n    } else {\n      api.reload('61c55cfe', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=61c55cfe&\", function () {\n      api.rerender('61c55cfe', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/attendance/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=61c55cfe&\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=61c55cfe&lang=css&\""],"names":[],"sourceRoot":""}