{"version":3,"file":"js/chunks/js/employee/attendance/production.js?id=d8e529b44ab295e0","mappings":";;;;;;;;;;;;;AAyEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9KA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAkBA;AAAA;AAeA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AACA;AAAA;AAUA;AAAA;AAGA;AAAA;AAEA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAOA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAKA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA","sources":["webpack://InstiKit/resources/js/views/employee/attendance/production.vue","webpack://InstiKit/./resources/js/views/employee/attendance/production.vue","webpack://InstiKit/./resources/js/views/employee/attendance/production.vue?0027","webpack://InstiKit/./resources/js/views/employee/attendance/production.vue?cd57","webpack://InstiKit/./resources/js/views/employee/attendance/production.vue?80b9"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('employee.mark_production_attendance')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/employee/attendance')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('employee.list_attendance')}}</span></button>\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/employee/attendance/regular')\"><i class=\"fas fa-check\"></i> <span class=\"d-none d-sm-inline\">{{trans('employee.mark_regular_attendance')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body p-4\">\r\n                    <form @submit.prevent=\"submit\" @keydown=\"attendanceForm.errors.clear($event.target.name)\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('employee.employee')}}</label>\r\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_employee\" name=\"employee_id\" id=\"employee_id\" :options=\"employees\" :placeholder=\"trans('employee.select_employee')\" @select=\"onEmployeeSelect\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employees.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                    <span class=\"help-block text-danger font-80pc\" v-if=\"is_payroll_generated\">{{trans('employee.payroll_is_generated')}}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('employee.date_of_attendance')}}</label>\r\n                                    <datepicker v-model=\"attendanceForm.date_of_attendance\" :bootstrapStyling=\"true\" :disabledDates=\"disabled\" :placeholder=\"trans('employee.date_of_attendance')\"></datepicker>\r\n                                    <show-error :form-name=\"attendanceForm\" prop-name=\"date_of_attendance\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"row\" v-for=\"(attendance,index) in attendanceForm.attendances\">\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                {{attendance.name}} ({{attendance.alias}})\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <div class=\"input-group\">\r\n                                        <input class=\"form-control\" type=\"number\" v-model=\"attendance.value\" :name=\"getValueName(index)\" :placeholder=\"trans('employee.production_attendance_value')\" :disabled=\"is_payroll_generated ? true : false\">\r\n                                        <div class=\"input-group-append\">\r\n                                            <span class=\"input-group-text\">{{attendance.unit}}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <show-error :form-name=\"attendanceForm\" :prop-name=\"getValueName(index)\"></show-error>\r\n                                </div>                                \r\n                            </div>\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <autosize-textarea v-model=\"attendance.remarks\" rows=\"1\" name=\"\" :placeholder=\"trans('employee.attendance_remarks')\"></autosize-textarea>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"form-group\" v-if=\"attendanceForm.attendances.length && attendance_types.length\">\r\n                            <button type=\"submit\" class=\"btn btn-info pull-right\" :disabled=\"is_payroll_generated ? true : false\">{{trans('general.save')}}</button>\r\n                        </div>  \r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        components: {},\r\n        data(){\r\n            return {\r\n                attendanceForm: new Form({\r\n                    employee_id: '',\r\n                    date_of_attendance: '',\r\n                    attendances: [],\r\n                    category: 'production'\r\n                },false),\r\n                disabled: {\r\n                    dates:[]\r\n                },\r\n                is_payroll_generated: false,\r\n                attendance: {},\r\n                employees: [],\r\n                selected_employee: null,\r\n                attendance_types: []\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('mark-employee-attendance')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.attendanceForm.date_of_attendance = helper.today();\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            getValueName(index){\r\n                return 'value_'+index;\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/employee/attendance/production/pre-requisite')\r\n                    .then(response => {\r\n                        this.employees = response.employees;\r\n                        this.attendance_types = response.attendance_types;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            onEmployeeSelect(selectedOption){\r\n                this.attendanceForm.employee_id = selectedOption.id;\r\n                this.fetch();\r\n            },\r\n            fetch(){\r\n                if (! this.attendanceForm.employee_id)\r\n                    return;\r\n\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/employee/attendance/production/fetch', {\r\n                        employee_id: this.attendanceForm.employee_id,\r\n                        date: this.attendanceForm.date_of_attendance\r\n                    })\r\n                    .then(response => {\r\n                        this.attendance = response.attendance;\r\n                        this.attendanceForm.attendances = [];\r\n                        this.is_payroll_generated = response.is_payroll_generated;\r\n                        this.attendance_types.forEach(attendance_type => {\r\n\r\n                            let employee_attendance = this.attendance.attendance_details.find(o => o.employee_attendance_type_id == attendance_type.id);\r\n\r\n                            this.attendanceForm.attendances.push({\r\n                                id: attendance_type.id,\r\n                                name: attendance_type.name,\r\n                                alias: attendance_type.alias,\r\n                                unit: attendance_type.unit,\r\n                                value: (typeof employee_attendance != 'undefined') ? employee_attendance.value : 0,\r\n                                remarks: (typeof employee_attendance != 'undefined') ? employee_attendance.remarks : '',\r\n                            });\r\n                        });\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            submit(){\r\n                let loader = this.$loading.show();\r\n                this.attendanceForm.post('/api/employee/attendance/production')\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        toastr.success(response.message);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n        },\r\n        watch: {\r\n            'attendanceForm.date_of_attendance': function(val) {\r\n                this.fetch();\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"employee.mark_production_attendance\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/employee/attendance\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.list_attendance\"))),\n                ]),\n              ]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/employee/attendance/regular\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-check\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.mark_regular_attendance\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card\" }, [\n        _c(\"div\", { staticClass: \"card-body p-4\" }, [\n          _c(\n            \"form\",\n            {\n              on: {\n                submit: function ($event) {\n                  $event.preventDefault()\n                  return _vm.submit.apply(null, arguments)\n                },\n                keydown: function ($event) {\n                  return _vm.attendanceForm.errors.clear($event.target.name)\n                },\n              },\n            },\n            [\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-select\",\n                        {\n                          attrs: {\n                            label: \"name\",\n                            \"track-by\": \"id\",\n                            name: \"employee_id\",\n                            id: \"employee_id\",\n                            options: _vm.employees,\n                            placeholder: _vm.trans(\"employee.select_employee\"),\n                          },\n                          on: { select: _vm.onEmployeeSelect },\n                          model: {\n                            value: _vm.selected_employee,\n                            callback: function ($$v) {\n                              _vm.selected_employee = $$v\n                            },\n                            expression: \"selected_employee\",\n                          },\n                        },\n                        [\n                          !_vm.employees.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  attrs: { slot: \"afterList\" },\n                                  slot: \"afterList\",\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                                        \" +\n                                      _vm._s(\n                                        _vm.trans(\"general.no_option_found\")\n                                      ) +\n                                      \"\\n                                    \"\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _vm.is_payroll_generated\n                        ? _c(\n                            \"span\",\n                            { staticClass: \"help-block text-danger font-80pc\" },\n                            [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"employee.payroll_is_generated\")\n                                )\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"employee.date_of_attendance\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          bootstrapStyling: true,\n                          disabledDates: _vm.disabled,\n                          placeholder: _vm.trans(\"employee.date_of_attendance\"),\n                        },\n                        model: {\n                          value: _vm.attendanceForm.date_of_attendance,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.attendanceForm,\n                              \"date_of_attendance\",\n                              $$v\n                            )\n                          },\n                          expression: \"attendanceForm.date_of_attendance\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.attendanceForm,\n                          \"prop-name\": \"date_of_attendance\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _vm._l(\n                _vm.attendanceForm.attendances,\n                function (attendance, index) {\n                  return _c(\"div\", { staticClass: \"row\" }, [\n                    _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _vm._v(\n                        \"\\n                            \" +\n                          _vm._s(attendance.name) +\n                          \" (\" +\n                          _vm._s(attendance.alias) +\n                          \")\\n                        \"\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"div\", { staticClass: \"input-group\" }, [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: attendance.value,\n                                  expression: \"attendance.value\",\n                                },\n                              ],\n                              staticClass: \"form-control\",\n                              attrs: {\n                                type: \"number\",\n                                name: _vm.getValueName(index),\n                                placeholder: _vm.trans(\n                                  \"employee.production_attendance_value\"\n                                ),\n                                disabled: _vm.is_payroll_generated\n                                  ? true\n                                  : false,\n                              },\n                              domProps: { value: attendance.value },\n                              on: {\n                                input: function ($event) {\n                                  if ($event.target.composing) return\n                                  _vm.$set(\n                                    attendance,\n                                    \"value\",\n                                    $event.target.value\n                                  )\n                                },\n                              },\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"div\", { staticClass: \"input-group-append\" }, [\n                              _c(\"span\", { staticClass: \"input-group-text\" }, [\n                                _vm._v(_vm._s(attendance.unit)),\n                              ]),\n                            ]),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"show-error\", {\n                            attrs: {\n                              \"form-name\": _vm.attendanceForm,\n                              \"prop-name\": _vm.getValueName(index),\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group\" },\n                        [\n                          _c(\"autosize-textarea\", {\n                            attrs: {\n                              rows: \"1\",\n                              name: \"\",\n                              placeholder: _vm.trans(\n                                \"employee.attendance_remarks\"\n                              ),\n                            },\n                            model: {\n                              value: attendance.remarks,\n                              callback: function ($$v) {\n                                _vm.$set(attendance, \"remarks\", $$v)\n                              },\n                              expression: \"attendance.remarks\",\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                  ])\n                }\n              ),\n              _vm._v(\" \"),\n              _vm.attendanceForm.attendances.length &&\n              _vm.attendance_types.length\n                ? _c(\"div\", { staticClass: \"form-group\" }, [\n                    _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info pull-right\",\n                        attrs: {\n                          type: \"submit\",\n                          disabled: _vm.is_payroll_generated ? true : false,\n                        },\n                      },\n                      [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n                    ),\n                  ])\n                : _vm._e(),\n            ],\n            2\n          ),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./production.vue?vue&type=template&id=2d183e86&\"\nimport script from \"./production.vue?vue&type=script&lang=js&\"\nexport * from \"./production.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2d183e86')) {\n      api.createRecord('2d183e86', component.options)\n    } else {\n      api.reload('2d183e86', component.options)\n    }\n    module.hot.accept(\"./production.vue?vue&type=template&id=2d183e86&\", function () {\n      api.rerender('2d183e86', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/attendance/production.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./production.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./production.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./production.vue?vue&type=template&id=2d183e86&\""],"names":[],"sourceRoot":""}