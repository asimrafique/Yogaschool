{"version":3,"file":"js/chunks/js/employee/leave/allocation/index.js?id=0373c0ee5ed2f9c2","mappings":";;;;;;;;;;;;;AA+DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvnQA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AAAA;AAqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAIA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AASA;AACA;AACA;;;;;;;;;;;;;;;;AC5UA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAesBA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AASA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AA2BA;AAAA;AAWA;AAEA;AACA;AAUA;AACA;AAGA;AACA;AAMA;AACA;AAwBA;AACA;AACA;AACA;AACA;AACA;AAIA;AAYA;AAMA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAMA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAKA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;ACnlBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/employee/leave/allocation/form.vue","webpack://InstiKit/resources/js/views/employee/leave/allocation/index.vue","webpack://InstiKit/./resources/js/views/employee/leave/allocation/form.vue","webpack://InstiKit/./resources/js/views/employee/leave/allocation/index.vue","webpack://InstiKit/./resources/js/views/employee/leave/allocation/form.vue?fdbd","webpack://InstiKit/./resources/js/views/employee/leave/allocation/index.vue?badc","webpack://InstiKit/./resources/js/views/employee/leave/allocation/form.vue?b606","webpack://InstiKit/./resources/js/views/employee/leave/allocation/index.vue?d092","webpack://InstiKit/./resources/js/views/employee/leave/allocation/form.vue?3b0d","webpack://InstiKit/./resources/js/views/employee/leave/allocation/index.vue?6c59"],"sourcesContent":["<template>\n\t<div>\n\t    <form @submit.prevent=\"proceed\" @keydown=\"leaveAllocationForm.errors.clear($event.target.name)\">\n\t        <div class=\"row\">\n\t            <div class=\"col-12 col-sm-4\" v-if=\"!uuid\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('employee.employee')}}</label>\n                        <v-select label=\"name\" v-model=\"selected_employee\" name=\"employee_id\" id=\"employee_id\" :options=\"employees\" :placeholder=\"trans('employee.select_employee')\" @select=\"onEmployeeSelect\" @close=\"leaveAllocationForm.errors.clear('employee_id')\" @remove=\"leaveAllocationForm.employee_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employees.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n                        <show-error :form-name=\"leaveAllocationForm\" prop-name=\"employee_id\"></show-error>\n\t                </div>\n\t            </div>\n                <div class=\"col-12 col-sm-4\" v-else>\n                    <p class=\"m-t-20\">\n                        {{getEmployeeNameWithCode(employee)}} <br />\n                        {{getEmployeeDesignationOnDate(employee, leaveAllocationForm.end_date)}} <br />\n                    </p>\n                </div>\n                <div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('employee.leave_allocation_start_date')}}</label>\n                        <datepicker v-model=\"leaveAllocationForm.start_date\" :bootstrapStyling=\"true\" @selected=\"leaveAllocationForm.errors.clear('start_date')\" :placeholder=\"trans('employee.leave_allocation_start_date')\"></datepicker>\n                        <show-error :form-name=\"leaveAllocationForm\" prop-name=\"start_date\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-4\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('employee.leave_allocation_end_date')}}</label>\n                        <datepicker v-model=\"leaveAllocationForm.end_date\" :bootstrapStyling=\"true\" @selected=\"leaveAllocationForm.errors.clear('end_date')\" :placeholder=\"trans('employee.leave_allocation_end_date')\"></datepicker>\n                        <show-error :form-name=\"leaveAllocationForm\" prop-name=\"end_date\"></show-error>\n                    </div>\n                </div>\n\t        </div>\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-4\" v-for=\"(leave_type,index) in leaveAllocationForm.leave_types\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{leave_type.name}}</label>\n                        <input class=\"form-control\" type=\"text\" v-model=\"leave_type.allotted\" :name=\"getLeaveTypeName(index)\" :placeholder=\"trans('employee.leave_allotted')\">\n                        <show-error :form-name=\"leaveAllocationForm\" :prop-name=\"getLeaveTypeName(index)\"></show-error>\n                    </div>\n                </div>\n            </div>\n            <div class=\"row\">\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('employee.leave_allocation_description')}}</label>\n                        <autosize-textarea v-model=\"leaveAllocationForm.description\" rows=\"1\" name=\"description\" :placeholder=\"trans('employee.leave_allocation_description')\"></autosize-textarea>\n                        <show-error :form-name=\"leaveAllocationForm\" prop-name=\"description\"></show-error>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer text-right\">\n                <router-link to=\"/employee/leave/allocation\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"uuid\">{{trans('general.cancel')}}</router-link>\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.save')}}</button>\n            </div>\n\t    </form>\n\t</div>\n</template>\n\n<script>\n    export default {\n        components : {},\n        props:['uuid'],\n        data() {\n            return {\n            \tleaveAllocationForm: new Form({\n            \t\temployee_id: '',\n                    start_date: '',\n                    end_date: '',\n                    description: '',\n                    leave_types: []\n            \t}),\n            \temployees: [],\n                employee: {},\n            \tleave_types: [],\n            \tselected_employee: null\n            }\n        },\n        mounted(){\n            this.getPreRequisite();\n        },\n        methods: {\n            getEmployeeNameWithCode(employee){\n                return helper.getEmployeeNameWithCode(employee);\n            },\n            getEmployeeDesignationOnDate(employee, date){\n                return helper.getEmployeeDesignationOnDate(employee, date);\n            },\n            populateLeaveTypes(){\n                this.leaveAllocationForm.leave_types = [];\n                this.leave_types.forEach(leave_type => {\n                    this.leaveAllocationForm.leave_types.push({\n                        name: leave_type.name,\n                        id: leave_type.id,\n                        allotted: ''\n                    })\n                })\n            },\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                axios.get('/api/employee/leave/allocation/pre-requisite')\n                \t.then(response => {\n                        loader.hide();\n                \t\tthis.employees = response.employees;\n                \t\tthis.leave_types = response.leave_types;\n                        this.populateLeaveTypes();\n                        if(this.uuid)\n                            this.get();\n                \t})\n                \t.catch(error => {\n                        loader.hide();\n                \t\thelper.showErrorMsg(error);\n                \t})\n            },\n            getLeaveTypeName(index){\n                return index+'_leave_type';\n            },\n            proceed(){\n                if(this.uuid)\n                    this.update();\n                else\n                    this.store();\n            },\n            store(){\n                let loader = this.$loading.show();\n                this.leaveAllocationForm.post('/api/employee/leave/allocation')\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.selected_employee = null;\n                        this.populateLeaveTypes();\n                        this.$emit('completed');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/employee/leave/allocation/'+this.uuid)\n                    .then(response => {\n                        let leave_allocation = response.leave_allocation;\n                        this.leaveAllocationForm.employee_id = leave_allocation.employee_id;\n                        this.selected_employee = response.selected_employee;\n                        this.employee = leave_allocation.employee;\n                        this.leaveAllocationForm.description = leave_allocation.description;\n                        this.leaveAllocationForm.start_date = leave_allocation.start_date;\n                        this.leaveAllocationForm.end_date = leave_allocation.end_date;\n                        this.leaveAllocationForm.leave_types.forEach(leave_type => {\n                            let leave_allocation_detail = leave_allocation.leave_allocation_details.find(o => o.employee_leave_type_id == leave_type.id);\n                            leave_type.allotted = (typeof leave_allocation_detail != 'undefined') ? leave_allocation_detail.allotted : ''\n                        });\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        this.$router.push('/employee/leave/allocation');\n                    });\n            },\n            update(){\n                let loader = this.$loading.show();\n                this.leaveAllocationForm.patch('/api/employee/leave/allocation/'+this.uuid)\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/employee/leave/allocation');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n        \tonEmployeeSelect(selectedOption){\n        \t\tthis.leaveAllocationForm.employee_id = selectedOption.id;\n        \t}\n        }\n   \t}\n</script>","<template>\n    <div>\n        <div class=\"page-titles\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('employee.leave_allocation')}} \n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"leave_allocations.total\">{{trans('general.total_result_found',{count : leave_allocations.total, from: leave_allocations.from, to: leave_allocations.to})}}</span>\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\n                    </h3>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"action-buttons pull-right\">\n                        <button class=\"btn btn-info btn-sm\" v-if=\"leave_allocations.total && !showCreatePanel\" @click=\"showCreatePanel = !showCreatePanel\" v-tooltip=\"trans('general.add_new')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('employee.add_new_leave_allocation')}}</span></button>\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\n                        <div class=\"btn-group\">\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\n                            </button>\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\n                            </div>\n                        </div>\n                        <help-button @clicked=\"help_topic = 'employee.leave.allocation'\"></help-button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <transition name=\"fade\">\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{trans('general.filter')}}</h4>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('employee.employee')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_employees\" name=\"employee_id\" id=\"employee_id\" :options=\"employees\" :placeholder=\"trans('employee.select_employee')\" @select=\"onEmployeeSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onEmployeeRemove\" :selected=\"selected_employees\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employees.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"card-footer text-right\">\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getLeaveAllocations\">{{trans('general.filter')}}</button>\n                        </div>\n                    </div>\n                </div>\n            </transition>\n            <transition name=\"fade\">\n                <div class=\"card card-form\" v-if=\"showCreatePanel\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{trans('employee.add_new_leave_allocation')}}</h4>\n                        <leave-allocation-form @completed=\"getLeaveAllocations\" @cancel=\"showCreatePanel = !showCreatePanel\"></leave-allocation-form>\n                    </div>\n                </div>\n            </transition>\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <div class=\"table-responsive\" v-if=\"leave_allocations.total\">\n                        <table class=\"table table-sm\">\n                            <thead>\n                                <tr>\n                                    <th>{{trans('employee.name')}}</th>\n                                    <th>{{trans('employee.designation')}}</th>\n                                    <th>{{trans('employee.leave_allocation_period')}}</th>\n                                    <th>\n                                        {{trans('employee.leave_allotted')}}\n                                    </th>\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"leave_allocation in leave_allocations.data\">\n                                    <td v-text=\"getEmployeeName(leave_allocation.employee)+' ('+getEmployeeCode(leave_allocation.employee)+')'\"></td>\n                                    <td v-text=\"getEmployeeDesignationOnDate(leave_allocation.employee, leave_allocation.end_date)\"></td>\n                                    <td>{{leave_allocation.start_date | moment}} {{trans('general.to')}} {{leave_allocation.end_date | moment}}</td>\n                                    <td>\n                                        <ul style=\"list-style:none;padding:0;margin:0;\">\n                                            <li v-for=\"leave_allocation_detail in leave_allocation.leave_allocation_details\">{{leave_allocation_detail.leave_type.name+': '+leave_allocation_detail.used+'/'+leave_allocation_detail.allotted}}</li>\n                                        </ul>\n                                    </td>\n                                    <td class=\"table-option\">\n                                        <div class=\"btn-group\">\n                                            <button class=\"btn btn-info btn-sm\" v-tooltip=\"trans('employee.edit_leave_allocation')\" @click.prevent=\"editLeaveAllocation(leave_allocation)\"><i class=\"fas fa-edit\"></i></button>\n                                            <button class=\"btn btn-danger btn-sm\" :key=\"leave_allocation.id\" v-confirm=\"{ok: confirmDelete(leave_allocation)}\" v-tooltip=\"trans('employee.delete_leave_allocation')\"><i class=\"fas fa-trash\"></i></button>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <module-info v-if=\"!leave_allocations.total\" module=\"employee\" title=\"leave_allocation_module_title\" description=\"leave_allocation_module_description\" icon=\"list\">\n                        <div slot=\"btn\">\n                            <button class=\"btn btn-info btn-md\" v-if=\"!showCreatePanel\" @click=\"showCreatePanel = !showCreatePanel\"><i class=\"fas fa-plus\"></i> {{trans('general.add_new')}}</button>\n                        </div>\n                    </module-info>\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"leave_allocations\" @updateRecords=\"getLeaveAllocations\"></pagination-record>\n                </div>\n            </div>\n        </div>\n        <right-panel :topic=\"help_topic\"></right-panel>\n    </div>\n</template>\n\n<script>\n    import leaveAllocationForm from './form'\n\n    export default {\n        components : { leaveAllocationForm},\n        data() {\n            return {\n                leave_allocations: {\n                    total: 0,\n                    data: []\n                },\n                filter: {\n                    sort_by : 'start_date',\n                    order: 'desc',\n                    employee_id: [],\n                    page_length: helper.getConfig('page_length')\n                },\n                orderByOptions: [\n                    {\n                        value: 'start_date',\n                        translation: i18n.employee.leave_allocation_start_date\n                    },\n                    {\n                        value: 'end_date',\n                        translation: i18n.employee.leave_allocation_end_date\n                    }\n                ],\n                employees: [],\n                selected_employees: null,\n                showFilterPanel: false,\n                showCreatePanel: false,\n                help_topic: ''\n            };\n        },\n        mounted(){\n            if(!helper.hasPermission('manage-leave-allocation')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getLeaveAllocations();\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            getEmployeeName(employee){\n                return helper.getEmployeeName(employee);\n            },\n            getEmployeeCode(employee){\n                return helper.getEmployeeCode(employee);\n            },\n            getEmployeeDesignationOnDate(employee, date){\n                return helper.getEmployeeDesignationOnDate(employee, date);\n            },\n            getLeaveAllocations(page){\n                let loader = this.$loading.show();\n                if (typeof page !== 'number') {\n                    page = 1;\n                }\n                let url = helper.getFilterURL(this.filter);\n                axios.get('/api/employee/leave/allocation?page=' + page + url)\n                    .then(response => {\n                        this.leave_allocations = response.leave_allocations;\n                        this.employees = response.filters.employees;\n                        this.leave_types = response.filters.leave_types;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            editLeaveAllocation(leave_allocation){\n                this.$router.push('/employee/leave/allocation/'+leave_allocation.uuid+'/edit');\n            },\n            confirmDelete(leave_allocation){\n                return dialog => this.deleteLeaveAllocation(leave_allocation);\n            },\n            deleteLeaveAllocation(leave_allocation){\n                let loader = this.$loading.show();\n                axios.delete('/api/employee/leave/allocation/'+leave_allocation.uuid)\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.getLeaveAllocations();\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getConfig(config) {\n                return helper.getConfig(config)\n            },\n            print(){\n                let loader = this.$loading.show();\n                axios.post('/api/employee/leave/allocation/print',{filter: this.filter})\n                    .then(response => {\n                        let print = window.open(\"/print\");\n                        loader.hide();\n                        print.document.write(response);\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            pdf(){\n                let loader = this.$loading.show();\n                axios.post('/api/employee/leave/allocation/pdf',{filter: this.filter})\n                    .then(response => {\n                        loader.hide();\n                        window.open('/download/report/'+response+'?token='+this.authToken);\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            onEmployeeSelect(selectedOption){\n                this.filter.employee_id.push(selectedOption.id);\n            },\n            onEmployeeRemove(removedOption){\n                this.filter.employee_id.splice(this.filter.employee_id.indexOf(removedOption.id), 1);\n            }\n        },\n        filters: {\n          moment(date) {\n            return helper.formatDate(date);\n          },\n          momentDateTime(date) {\n            return helper.formatDateTime(date);\n          }\n        },\n        watch: {\n            'filter.sort_by': function(val){\n                this.getLeaveAllocations();\n            },\n            'filter.order': function(val){\n                this.getLeaveAllocations();\n            },\n            'filter.page_length': function(val){\n                this.getLeaveAllocations();\n            }\n        },\n        computed: {\n            authToken(){\n                return helper.getAuthToken();\n            }\n        }\n    }\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.leaveAllocationForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          !_vm.uuid\n            ? _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"v-select\",\n                      {\n                        attrs: {\n                          label: \"name\",\n                          name: \"employee_id\",\n                          id: \"employee_id\",\n                          options: _vm.employees,\n                          placeholder: _vm.trans(\"employee.select_employee\"),\n                        },\n                        on: {\n                          select: _vm.onEmployeeSelect,\n                          close: function ($event) {\n                            return _vm.leaveAllocationForm.errors.clear(\n                              \"employee_id\"\n                            )\n                          },\n                          remove: function ($event) {\n                            _vm.leaveAllocationForm.employee_id = \"\"\n                          },\n                        },\n                        model: {\n                          value: _vm.selected_employee,\n                          callback: function ($$v) {\n                            _vm.selected_employee = $$v\n                          },\n                          expression: \"selected_employee\",\n                        },\n                      },\n                      [\n                        !_vm.employees.length\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"multiselect__option\",\n                                attrs: { slot: \"afterList\" },\n                                slot: \"afterList\",\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                \" +\n                                    _vm._s(\n                                      _vm.trans(\"general.no_option_found\")\n                                    ) +\n                                    \"\\n                            \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.leaveAllocationForm,\n                        \"prop-name\": \"employee_id\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ])\n            : _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\"p\", { staticClass: \"m-t-20\" }, [\n                  _vm._v(\n                    \"\\n                        \" +\n                      _vm._s(_vm.getEmployeeNameWithCode(_vm.employee)) +\n                      \" \"\n                  ),\n                  _c(\"br\"),\n                  _vm._v(\n                    \"\\n                        \" +\n                      _vm._s(\n                        _vm.getEmployeeDesignationOnDate(\n                          _vm.employee,\n                          _vm.leaveAllocationForm.end_date\n                        )\n                      ) +\n                      \" \"\n                  ),\n                  _c(\"br\"),\n                ]),\n              ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"employee.leave_allocation_start_date\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\n                      \"employee.leave_allocation_start_date\"\n                    ),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.leaveAllocationForm.errors.clear(\"start_date\")\n                    },\n                  },\n                  model: {\n                    value: _vm.leaveAllocationForm.start_date,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.leaveAllocationForm, \"start_date\", $$v)\n                    },\n                    expression: \"leaveAllocationForm.start_date\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.leaveAllocationForm,\n                    \"prop-name\": \"start_date\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"employee.leave_allocation_end_date\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\n                      \"employee.leave_allocation_end_date\"\n                    ),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.leaveAllocationForm.errors.clear(\"end_date\")\n                    },\n                  },\n                  model: {\n                    value: _vm.leaveAllocationForm.end_date,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.leaveAllocationForm, \"end_date\", $$v)\n                    },\n                    expression: \"leaveAllocationForm.end_date\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.leaveAllocationForm,\n                    \"prop-name\": \"end_date\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"row\" },\n          _vm._l(\n            _vm.leaveAllocationForm.leave_types,\n            function (leave_type, index) {\n              return _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(leave_type.name)),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: leave_type.allotted,\n                          expression: \"leave_type.allotted\",\n                        },\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        name: _vm.getLeaveTypeName(index),\n                        placeholder: _vm.trans(\"employee.leave_allotted\"),\n                      },\n                      domProps: { value: leave_type.allotted },\n                      on: {\n                        input: function ($event) {\n                          if ($event.target.composing) return\n                          _vm.$set(leave_type, \"allotted\", $event.target.value)\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.leaveAllocationForm,\n                        \"prop-name\": _vm.getLeaveTypeName(index),\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ])\n            }\n          ),\n          0\n        ),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"employee.leave_allocation_description\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"autosize-textarea\", {\n                  attrs: {\n                    rows: \"1\",\n                    name: \"description\",\n                    placeholder: _vm.trans(\n                      \"employee.leave_allocation_description\"\n                    ),\n                  },\n                  model: {\n                    value: _vm.leaveAllocationForm.description,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.leaveAllocationForm, \"description\", $$v)\n                    },\n                    expression: \"leaveAllocationForm.description\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.leaveAllocationForm,\n                    \"prop-name\": \"description\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"card-footer text-right\" },\n          [\n            _c(\n              \"router-link\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.uuid,\n                    expression: \"uuid\",\n                  },\n                ],\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { to: \"/employee/leave/allocation\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n            ),\n          ],\n          1\n        ),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"employee.leave_allocation\")) +\n                  \" \\n                    \"\n              ),\n              _vm.leave_allocations.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.leave_allocations.total,\n                            from: _vm.leave_allocations.from,\n                            to: _vm.leave_allocations.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _vm.leave_allocations.total && !_vm.showCreatePanel\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"general.add_new\"),\n                            expression: \"trans('general.add_new')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showCreatePanel = !_vm.showCreatePanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"employee.add_new_leave_allocation\")\n                            )\n                          ),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"employee.leave.allocation\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"employee_id\",\n                                  id: \"employee_id\",\n                                  options: _vm.employees,\n                                  placeholder: _vm.trans(\n                                    \"employee.select_employee\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_employees,\n                                },\n                                on: {\n                                  select: _vm.onEmployeeSelect,\n                                  remove: _vm.onEmployeeRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_employees,\n                                  callback: function ($$v) {\n                                    _vm.selected_employees = $$v\n                                  },\n                                  expression: \"selected_employees\",\n                                },\n                              },\n                              [\n                                !_vm.employees.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getLeaveAllocations },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showCreatePanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"card-body\" },\n                    [\n                      _c(\"h4\", { staticClass: \"card-title\" }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"employee.add_new_leave_allocation\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"leave-allocation-form\", {\n                        on: {\n                          completed: _vm.getLeaveAllocations,\n                          cancel: function ($event) {\n                            _vm.showCreatePanel = !_vm.showCreatePanel\n                          },\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.leave_allocations.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"employee.name\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"employee.designation\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"employee.leave_allocation_period\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                \"\\n                                    \" +\n                                  _vm._s(_vm.trans(\"employee.leave_allotted\")) +\n                                  \"\\n                                \"\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", { staticClass: \"table-option\" }, [\n                              _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(\n                            _vm.leave_allocations.data,\n                            function (leave_allocation) {\n                              return _c(\"tr\", [\n                                _c(\"td\", {\n                                  domProps: {\n                                    textContent: _vm._s(\n                                      _vm.getEmployeeName(\n                                        leave_allocation.employee\n                                      ) +\n                                        \" (\" +\n                                        _vm.getEmployeeCode(\n                                          leave_allocation.employee\n                                        ) +\n                                        \")\"\n                                    ),\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"td\", {\n                                  domProps: {\n                                    textContent: _vm._s(\n                                      _vm.getEmployeeDesignationOnDate(\n                                        leave_allocation.employee,\n                                        leave_allocation.end_date\n                                      )\n                                    ),\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm._f(\"moment\")(\n                                        leave_allocation.start_date\n                                      )\n                                    ) +\n                                      \" \" +\n                                      _vm._s(_vm.trans(\"general.to\")) +\n                                      \" \" +\n                                      _vm._s(\n                                        _vm._f(\"moment\")(\n                                          leave_allocation.end_date\n                                        )\n                                      )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _c(\n                                    \"ul\",\n                                    {\n                                      staticStyle: {\n                                        \"list-style\": \"none\",\n                                        padding: \"0\",\n                                        margin: \"0\",\n                                      },\n                                    },\n                                    _vm._l(\n                                      leave_allocation.leave_allocation_details,\n                                      function (leave_allocation_detail) {\n                                        return _c(\"li\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              leave_allocation_detail.leave_type\n                                                .name +\n                                                \": \" +\n                                                leave_allocation_detail.used +\n                                                \"/\" +\n                                                leave_allocation_detail.allotted\n                                            )\n                                          ),\n                                        ])\n                                      }\n                                    ),\n                                    0\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", { staticClass: \"table-option\" }, [\n                                  _c(\"div\", { staticClass: \"btn-group\" }, [\n                                    _c(\n                                      \"button\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"tooltip\",\n                                            rawName: \"v-tooltip\",\n                                            value: _vm.trans(\n                                              \"employee.edit_leave_allocation\"\n                                            ),\n                                            expression:\n                                              \"trans('employee.edit_leave_allocation')\",\n                                          },\n                                        ],\n                                        staticClass: \"btn btn-info btn-sm\",\n                                        on: {\n                                          click: function ($event) {\n                                            $event.preventDefault()\n                                            return _vm.editLeaveAllocation(\n                                              leave_allocation\n                                            )\n                                          },\n                                        },\n                                      },\n                                      [_c(\"i\", { staticClass: \"fas fa-edit\" })]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"button\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"confirm\",\n                                            rawName: \"v-confirm\",\n                                            value: {\n                                              ok: _vm.confirmDelete(\n                                                leave_allocation\n                                              ),\n                                            },\n                                            expression:\n                                              \"{ok: confirmDelete(leave_allocation)}\",\n                                          },\n                                          {\n                                            name: \"tooltip\",\n                                            rawName: \"v-tooltip\",\n                                            value: _vm.trans(\n                                              \"employee.delete_leave_allocation\"\n                                            ),\n                                            expression:\n                                              \"trans('employee.delete_leave_allocation')\",\n                                          },\n                                        ],\n                                        key: leave_allocation.id,\n                                        staticClass: \"btn btn-danger btn-sm\",\n                                      },\n                                      [_c(\"i\", { staticClass: \"fas fa-trash\" })]\n                                    ),\n                                  ]),\n                                ]),\n                              ])\n                            }\n                          ),\n                          0\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.leave_allocations.total\n                  ? _c(\n                      \"module-info\",\n                      {\n                        attrs: {\n                          module: \"employee\",\n                          title: \"leave_allocation_module_title\",\n                          description: \"leave_allocation_module_description\",\n                          icon: \"list\",\n                        },\n                      },\n                      [\n                        _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                          !_vm.showCreatePanel\n                            ? _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-info btn-md\",\n                                  on: {\n                                    click: function ($event) {\n                                      _vm.showCreatePanel = !_vm.showCreatePanel\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                  _vm._v(\n                                    \" \" + _vm._s(_vm.trans(\"general.add_new\"))\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.leave_allocations,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getLeaveAllocations,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=4e70374e&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4e70374e')) {\n      api.createRecord('4e70374e', component.options)\n    } else {\n      api.reload('4e70374e', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=4e70374e&\", function () {\n      api.rerender('4e70374e', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/leave/allocation/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=b25649e6&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('b25649e6')) {\n      api.createRecord('b25649e6', component.options)\n    } else {\n      api.reload('b25649e6', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=b25649e6&\", function () {\n      api.rerender('b25649e6', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/leave/allocation/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=4e70374e&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=b25649e6&\""],"names":[],"sourceRoot":""}