{"version":3,"file":"js/chunks/js/employee/leave/allocation/edit.js?id=63cad38869038d44","mappings":";;;;;;;;;;;;;;AAyBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACrLA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAKA;AAAA;AACA;AAAA;AAqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAIA;AAAA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAKA;AAKA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5UA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/employee/leave/allocation/edit.vue","webpack://InstiKit/resources/js/views/employee/leave/allocation/form.vue","webpack://InstiKit/./resources/js/views/employee/leave/allocation/edit.vue","webpack://InstiKit/./resources/js/views/employee/leave/allocation/form.vue","webpack://InstiKit/./resources/js/views/employee/leave/allocation/edit.vue?367e","webpack://InstiKit/./resources/js/views/employee/leave/allocation/form.vue?fdbd","webpack://InstiKit/./resources/js/views/employee/leave/allocation/edit.vue?6a9c","webpack://InstiKit/./resources/js/views/employee/leave/allocation/form.vue?b606","webpack://InstiKit/./resources/js/views/employee/leave/allocation/edit.vue?3c97"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('employee.edit_leave_allocation')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/employee/leave/allocation')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('employee.leave_allocation')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card card-form\">\r\n                <div class=\"card-body p-t-20\">\r\n                    <leave-allocation-form :uuid=\"uuid\"></leave-allocation-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import leaveAllocationForm from './form';\r\n\r\n    export default {\r\n        components : { leaveAllocationForm },\r\n        data() {\r\n            return {\r\n                uuid:this.$route.params.uuid\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('manage-leave-allocation')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","<template>\r\n\t<div>\r\n\t    <form @submit.prevent=\"proceed\" @keydown=\"leaveAllocationForm.errors.clear($event.target.name)\">\r\n\t        <div class=\"row\">\r\n\t            <div class=\"col-12 col-sm-4\" v-if=\"!uuid\">\r\n\t                <div class=\"form-group\">\r\n\t                    <label for=\"\">{{trans('employee.employee')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_employee\" name=\"employee_id\" id=\"employee_id\" :options=\"employees\" :placeholder=\"trans('employee.select_employee')\" @select=\"onEmployeeSelect\" @close=\"leaveAllocationForm.errors.clear('employee_id')\" @remove=\"leaveAllocationForm.employee_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employees.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"leaveAllocationForm\" prop-name=\"employee_id\"></show-error>\r\n\t                </div>\r\n\t            </div>\r\n                <div class=\"col-12 col-sm-4\" v-else>\r\n                    <p class=\"m-t-20\">\r\n                        {{getEmployeeNameWithCode(employee)}} <br />\r\n                        {{getEmployeeDesignationOnDate(employee, leaveAllocationForm.end_date)}} <br />\r\n                    </p>\r\n                </div>\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('employee.leave_allocation_start_date')}}</label>\r\n                        <datepicker v-model=\"leaveAllocationForm.start_date\" :bootstrapStyling=\"true\" @selected=\"leaveAllocationForm.errors.clear('start_date')\" :placeholder=\"trans('employee.leave_allocation_start_date')\"></datepicker>\r\n                        <show-error :form-name=\"leaveAllocationForm\" prop-name=\"start_date\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('employee.leave_allocation_end_date')}}</label>\r\n                        <datepicker v-model=\"leaveAllocationForm.end_date\" :bootstrapStyling=\"true\" @selected=\"leaveAllocationForm.errors.clear('end_date')\" :placeholder=\"trans('employee.leave_allocation_end_date')\"></datepicker>\r\n                        <show-error :form-name=\"leaveAllocationForm\" prop-name=\"end_date\"></show-error>\r\n                    </div>\r\n                </div>\r\n\t        </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-4\" v-for=\"(leave_type,index) in leaveAllocationForm.leave_types\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{leave_type.name}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"leave_type.allotted\" :name=\"getLeaveTypeName(index)\" :placeholder=\"trans('employee.leave_allotted')\">\r\n                        <show-error :form-name=\"leaveAllocationForm\" :prop-name=\"getLeaveTypeName(index)\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('employee.leave_allocation_description')}}</label>\r\n                        <autosize-textarea v-model=\"leaveAllocationForm.description\" rows=\"1\" name=\"description\" :placeholder=\"trans('employee.leave_allocation_description')\"></autosize-textarea>\r\n                        <show-error :form-name=\"leaveAllocationForm\" prop-name=\"description\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer text-right\">\r\n                <router-link to=\"/employee/leave/allocation\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"uuid\">{{trans('general.cancel')}}</router-link>\r\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.save')}}</button>\r\n            </div>\r\n\t    </form>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        components : {},\r\n        props:['uuid'],\r\n        data() {\r\n            return {\r\n            \tleaveAllocationForm: new Form({\r\n            \t\temployee_id: '',\r\n                    start_date: '',\r\n                    end_date: '',\r\n                    description: '',\r\n                    leave_types: []\r\n            \t}),\r\n            \temployees: [],\r\n                employee: {},\r\n            \tleave_types: [],\r\n            \tselected_employee: null\r\n            }\r\n        },\r\n        mounted(){\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            getEmployeeNameWithCode(employee){\r\n                return helper.getEmployeeNameWithCode(employee);\r\n            },\r\n            getEmployeeDesignationOnDate(employee, date){\r\n                return helper.getEmployeeDesignationOnDate(employee, date);\r\n            },\r\n            populateLeaveTypes(){\r\n                this.leaveAllocationForm.leave_types = [];\r\n                this.leave_types.forEach(leave_type => {\r\n                    this.leaveAllocationForm.leave_types.push({\r\n                        name: leave_type.name,\r\n                        id: leave_type.id,\r\n                        allotted: ''\r\n                    })\r\n                })\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/employee/leave/allocation/pre-requisite')\r\n                \t.then(response => {\r\n                        loader.hide();\r\n                \t\tthis.employees = response.employees;\r\n                \t\tthis.leave_types = response.leave_types;\r\n                        this.populateLeaveTypes();\r\n                        if(this.uuid)\r\n                            this.get();\r\n                \t})\r\n                \t.catch(error => {\r\n                        loader.hide();\r\n                \t\thelper.showErrorMsg(error);\r\n                \t})\r\n            },\r\n            getLeaveTypeName(index){\r\n                return index+'_leave_type';\r\n            },\r\n            proceed(){\r\n                if(this.uuid)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.leaveAllocationForm.post('/api/employee/leave/allocation')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.selected_employee = null;\r\n                        this.populateLeaveTypes();\r\n                        this.$emit('completed');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/employee/leave/allocation/'+this.uuid)\r\n                    .then(response => {\r\n                        let leave_allocation = response.leave_allocation;\r\n                        this.leaveAllocationForm.employee_id = leave_allocation.employee_id;\r\n                        this.selected_employee = response.selected_employee;\r\n                        this.employee = leave_allocation.employee;\r\n                        this.leaveAllocationForm.description = leave_allocation.description;\r\n                        this.leaveAllocationForm.start_date = leave_allocation.start_date;\r\n                        this.leaveAllocationForm.end_date = leave_allocation.end_date;\r\n                        this.leaveAllocationForm.leave_types.forEach(leave_type => {\r\n                            let leave_allocation_detail = leave_allocation.leave_allocation_details.find(o => o.employee_leave_type_id == leave_type.id);\r\n                            leave_type.allotted = (typeof leave_allocation_detail != 'undefined') ? leave_allocation_detail.allotted : ''\r\n                        });\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/employee/leave/allocation');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.leaveAllocationForm.patch('/api/employee/leave/allocation/'+this.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/employee/leave/allocation');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n        \tonEmployeeSelect(selectedOption){\r\n        \t\tthis.leaveAllocationForm.employee_id = selectedOption.id;\r\n        \t}\r\n        }\r\n   \t}\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"employee.edit_leave_allocation\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/employee/leave/allocation\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.leave_allocation\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"card-body p-t-20\" },\n          [_c(\"leave-allocation-form\", { attrs: { uuid: _vm.uuid } })],\n          1\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.leaveAllocationForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          !_vm.uuid\n            ? _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"v-select\",\n                      {\n                        attrs: {\n                          label: \"name\",\n                          name: \"employee_id\",\n                          id: \"employee_id\",\n                          options: _vm.employees,\n                          placeholder: _vm.trans(\"employee.select_employee\"),\n                        },\n                        on: {\n                          select: _vm.onEmployeeSelect,\n                          close: function ($event) {\n                            return _vm.leaveAllocationForm.errors.clear(\n                              \"employee_id\"\n                            )\n                          },\n                          remove: function ($event) {\n                            _vm.leaveAllocationForm.employee_id = \"\"\n                          },\n                        },\n                        model: {\n                          value: _vm.selected_employee,\n                          callback: function ($$v) {\n                            _vm.selected_employee = $$v\n                          },\n                          expression: \"selected_employee\",\n                        },\n                      },\n                      [\n                        !_vm.employees.length\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"multiselect__option\",\n                                attrs: { slot: \"afterList\" },\n                                slot: \"afterList\",\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                                \" +\n                                    _vm._s(\n                                      _vm.trans(\"general.no_option_found\")\n                                    ) +\n                                    \"\\n                            \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.leaveAllocationForm,\n                        \"prop-name\": \"employee_id\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ])\n            : _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\"p\", { staticClass: \"m-t-20\" }, [\n                  _vm._v(\n                    \"\\n                        \" +\n                      _vm._s(_vm.getEmployeeNameWithCode(_vm.employee)) +\n                      \" \"\n                  ),\n                  _c(\"br\"),\n                  _vm._v(\n                    \"\\n                        \" +\n                      _vm._s(\n                        _vm.getEmployeeDesignationOnDate(\n                          _vm.employee,\n                          _vm.leaveAllocationForm.end_date\n                        )\n                      ) +\n                      \" \"\n                  ),\n                  _c(\"br\"),\n                ]),\n              ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"employee.leave_allocation_start_date\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\n                      \"employee.leave_allocation_start_date\"\n                    ),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.leaveAllocationForm.errors.clear(\"start_date\")\n                    },\n                  },\n                  model: {\n                    value: _vm.leaveAllocationForm.start_date,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.leaveAllocationForm, \"start_date\", $$v)\n                    },\n                    expression: \"leaveAllocationForm.start_date\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.leaveAllocationForm,\n                    \"prop-name\": \"start_date\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"employee.leave_allocation_end_date\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\n                      \"employee.leave_allocation_end_date\"\n                    ),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.leaveAllocationForm.errors.clear(\"end_date\")\n                    },\n                  },\n                  model: {\n                    value: _vm.leaveAllocationForm.end_date,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.leaveAllocationForm, \"end_date\", $$v)\n                    },\n                    expression: \"leaveAllocationForm.end_date\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.leaveAllocationForm,\n                    \"prop-name\": \"end_date\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"row\" },\n          _vm._l(\n            _vm.leaveAllocationForm.leave_types,\n            function (leave_type, index) {\n              return _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(leave_type.name)),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: leave_type.allotted,\n                          expression: \"leave_type.allotted\",\n                        },\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: {\n                        type: \"text\",\n                        name: _vm.getLeaveTypeName(index),\n                        placeholder: _vm.trans(\"employee.leave_allotted\"),\n                      },\n                      domProps: { value: leave_type.allotted },\n                      on: {\n                        input: function ($event) {\n                          if ($event.target.composing) return\n                          _vm.$set(leave_type, \"allotted\", $event.target.value)\n                        },\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.leaveAllocationForm,\n                        \"prop-name\": _vm.getLeaveTypeName(index),\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ])\n            }\n          ),\n          0\n        ),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"employee.leave_allocation_description\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"autosize-textarea\", {\n                  attrs: {\n                    rows: \"1\",\n                    name: \"description\",\n                    placeholder: _vm.trans(\n                      \"employee.leave_allocation_description\"\n                    ),\n                  },\n                  model: {\n                    value: _vm.leaveAllocationForm.description,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.leaveAllocationForm, \"description\", $$v)\n                    },\n                    expression: \"leaveAllocationForm.description\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.leaveAllocationForm,\n                    \"prop-name\": \"description\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"card-footer text-right\" },\n          [\n            _c(\n              \"router-link\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.uuid,\n                    expression: \"uuid\",\n                  },\n                ],\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { to: \"/employee/leave/allocation\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n            ),\n          ],\n          1\n        ),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=1c09329f&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1c09329f')) {\n      api.createRecord('1c09329f', component.options)\n    } else {\n      api.reload('1c09329f', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=1c09329f&\", function () {\n      api.rerender('1c09329f', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/leave/allocation/edit.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=4e70374e&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4e70374e')) {\n      api.createRecord('4e70374e', component.options)\n    } else {\n      api.reload('4e70374e', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=4e70374e&\", function () {\n      api.rerender('4e70374e', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/leave/allocation/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=1c09329f&\""],"names":[],"sourceRoot":""}