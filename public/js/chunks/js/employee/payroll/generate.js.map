{"version":3,"file":"js/chunks/js/employee/payroll/generate.js?id=b149cbd5d1e0dfc6","mappings":";;;;;;;;;;;;;AA8IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC3SA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAWA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAKA;AA+BA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAWA;AAAA;AAYA;AAAA;AAeA;AAAA;AAEA;AAAA;AAIA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAMA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAcA;AAMA;AAAA;AAAA;AAAA;AAGA;AAAA;AAEA;AAMA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AAcA;AAQA;AAAA;AAMA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AAQA;AAAA;AAAA;AAAA;AAaA;AAAA;AAOA;AACA;AAAA;AAAA;AACA;AAQA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AASA;AACA;AACA;;;;;;;;;;;;;;;;ACvhBA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/employee/payroll/form.vue","webpack://InstiKit/resources/js/views/employee/payroll/generate.vue","webpack://InstiKit/./resources/js/views/employee/payroll/form.vue","webpack://InstiKit/./resources/js/views/employee/payroll/generate.vue","webpack://InstiKit/./resources/js/views/employee/payroll/form.vue?85e8","webpack://InstiKit/./resources/js/views/employee/payroll/form.vue?6998","webpack://InstiKit/./resources/js/views/employee/payroll/form.vue?790b","webpack://InstiKit/./resources/js/views/employee/payroll/generate.vue?a51d","webpack://InstiKit/./resources/js/views/employee/payroll/form.vue?449e","webpack://InstiKit/./resources/js/views/employee/payroll/generate.vue?a749","webpack://InstiKit/./resources/js/views/employee/payroll/form.vue?1b2c","webpack://InstiKit/./resources/js/views/employee/payroll/generate.vue?71d7","webpack://InstiKit/./resources/js/views/employee/payroll/form.vue?2637"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"proceed\" @keydown=\"payrollForm.errors.clear($event.target.name)\">\r\n\r\n        <template v-if=\"!employee_salary.payroll_template\">\r\n            <div class=\"row p-4\">\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('employee.employee')}}</label>\r\n                        <v-select label=\"name\" track-by=\"id\" v-model=\"selected_employee\" name=\"employee_id\" id=\"employee_id\" :options=\"employees\" :placeholder=\"trans('employee.select_employee')\" @select=\"onEmployeeSelect\" @close=\"payrollForm.errors.clear('employee_id')\" @remove=\"payrollForm.employee_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employees.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"payrollForm\" prop-name=\"employee_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('employee.payroll_start_date')}}</label>\r\n                        <datepicker v-model=\"payrollForm.start_date\" :bootstrapStyling=\"true\" @selected=\"payrollForm.errors.clear('start_date')\" :placeholder=\"trans('employee.payroll_start_date')\"></datepicker>\r\n                        <show-error :form-name=\"payrollForm\" prop-name=\"start_date\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('employee.payroll_end_date')}}</label>\r\n                        <datepicker v-model=\"payrollForm.end_date\" :bootstrapStyling=\"true\" @selected=\"payrollForm.errors.clear('end_date')\" :placeholder=\"trans('employee.payroll_end_date')\"></datepicker>\r\n                        <show-error :form-name=\"payrollForm\" prop-name=\"end_date\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-info m-r-10 pull-right\" @click=\"fetch\" v-if=\"!employee_salary.payroll_template\">{{trans('general.submit')}}</button>\r\n        </template>\r\n\r\n        <div class=\"row\" v-if=\"employee_salary.payroll_template\">\r\n            <div class=\"col-12 col-sm-4\">\r\n                <div class=\"table-responsive\">\r\n                    <table class=\"table table-sm custom-show-table\">\r\n                        <tbody>\r\n                            <tr v-for=\"attendance in attendance_summary\">\r\n                                <td>{{attendance.name+' ('+attendance.alias+')'}}</td>\r\n                                <td>\r\n                                    {{attendance.count}}\r\n                                    <span v-if=\"(attendance.type == 'production_based_earning' || attendance.type == 'production_based_deduction') && attendance.count\">\r\n                                        ({{attendance.value+' '+attendance.unit}})\r\n                                    </span> \r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-8 border-left\">\r\n                <div class=\"card widget\">\r\n                    <div class=\"card-body\">\r\n                        <div class=\"row border-bottom\">\r\n                            <div class=\"col p-4 b-r\">\r\n                                {{getEmployeeNameWithCode(employee_salary.employee)}}<br />\r\n                                <span class=\"font-90pc\">{{getEmployeeDesignationOnDate(employee_salary.employee, employee_salary.start_date)}}</span>\r\n                            </div>\r\n                            <div class=\"col p-4 b-r\">\r\n                                {{payrollForm.start_date | moment}} {{trans('general.to')}} {{payrollForm.end_date | moment}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <table class=\"payroll-table\">\r\n                    <tr>\r\n                        <td class=\"font-weight-bold\">{{trans('employee.pay_head_type_earning')}}</td>\r\n                        <td class=\"font-weight-bold\">{{trans('employee.pay_head_type_deduction')}}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td valign=\"top\" class=\"border-right\">\r\n                            <table class=\"payroll-table\">\r\n                                <tr v-for=\"pay_head in payrollForm.pay_heads\" v-if=\"pay_head.type == 'earning'\">\r\n                                    <td>{{pay_head.name}}</td>\r\n                                    <td class=\"text-right\">\r\n                                        <template v-if=\"editPayrollAmount\">\r\n                                            <input class=\"borderless-input\" type=\"text\" v-model=\"pay_head.amount\" :placeholder=\"trans('employee.salary_structure_amount')\">\r\n                                        </template>\r\n                                        <template v-else>\r\n                                            {{pay_head.amount}}\r\n                                        </template>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n                        <td valign=\"top\">\r\n                            <table class=\"payroll-table\">\r\n                                <tr v-for=\"pay_head in payrollForm.pay_heads\" v-if=\"pay_head.type == 'deduction'\">\r\n                                    <td>{{pay_head.name}}</td>\r\n                                    <td class=\"text-right\">\r\n                                        <template v-if=\"editPayrollAmount\">\r\n                                            <input class=\"borderless-input\" type=\"text\" v-model=\"pay_head.amount\" :placeholder=\"trans('employee.salary_structure_amount')\">\r\n                                        </template>\r\n                                        <template v-else>\r\n                                            {{pay_head.amount}}\r\n                                        </template>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <table class=\"payroll-table\">\r\n                                <tr>\r\n                                    <td>{{trans('employee.earning_salary')}}</td>\r\n                                    <td align=\"right\">{{formatCurrency(getTotalEarningSalary)}}</td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n                        <td valign=\"top\">\r\n                            <table class=\"payroll-table\">\r\n                                <tr>\r\n                                    <td>{{trans('employee.deduction_salary')}}</td>\r\n                                    <td align=\"right\">{{formatCurrency(getTotalDeductionSalary)}}</td>\r\n                                </tr>\r\n                            </table>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td class=\"font-weight-bold\">{{trans('employee.net_salary')}}</td>\r\n                        <td align=\"right\" class=\"font-weight-bold\">{{formatCurrency(getNetSalary)}}</td>\r\n                    </tr>\r\n                </table>\r\n\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('employee.payroll_remarks')}}</label>\r\n                    <autosize-textarea v-model=\"payrollForm.remarks\" rows=\"2\" name=\"remarks\" :placeholder=\"trans('employee.payroll_remarks')\"></autosize-textarea>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"form-group\" v-if=\"employee_salary.payroll_template\">\r\n            <button type=\"submit\" class=\"btn btn-info pull-right\">{{trans('general.save')}}</button>\r\n            <button type=\"button\" class=\"btn btn-danger pull-right m-r-10\" @click=\"reset\" v-if=\"!uuid\">{{trans('employee.payroll_reset_query')}}</button>\r\n        </div>\r\n    </form>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        props: ['uuid'],\r\n        components: {},\r\n        data() {\r\n            return {\r\n                payrollForm: new Form({\r\n                    employee_id: '',\r\n                    start_date: '',\r\n                    end_date: '',\r\n                    pay_heads: [],\r\n                    remarks: ''\r\n                },false),\r\n                payroll: {},\r\n                employee_salary: {},\r\n                attendance_summary: {},\r\n                employees: [],\r\n                selected_employee: null,\r\n                editPayrollAmount: false\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasAnyPermission(['generate-payroll','edit-payroll'])){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.editPayrollAmount = helper.hasPermission('edit-payroll-amount') ? true : false;\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            getEmployeeNameWithCode(employee){\r\n                return helper.getEmployeeNameWithCode(employee);\r\n            },\r\n            getEmployeeDesignationOnDate(employee, date){\r\n                return helper.getEmployeeDesignationOnDate(employee, date);\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/employee/payroll/pre-requisite')\r\n                    .then(response => {\r\n                        this.employees = response.employees;\r\n\r\n                        if (this.uuid) \r\n                            this.get();\r\n\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            onEmployeeSelect(selectedOption){\r\n                this.payrollForm.employee_id = selectedOption.id;\r\n            },\r\n            reset(){\r\n                this.employee_salary = {};\r\n                this.payrollForm.pay_heads = [];\r\n            },\r\n            fetch(){\r\n                let loader = this.$loading.show();\r\n                this.payrollForm.post('/api/employee/payroll/fetch')\r\n                    .then(response => {\r\n                        this.employee_salary = response.salary;\r\n                        this.attendance_summary = response.attendance_types;\r\n                        this.payrollForm.pay_heads = [];\r\n                        response.salary.payroll_template.payroll_template_details.forEach(payroll_template_detail => {\r\n                            if (payroll_template_detail.category != 'not_applicable') {\r\n                                this.payrollForm.pay_heads.push({\r\n                                    payroll_template_detail_id: payroll_template_detail.id,\r\n                                    pay_head_id: payroll_template_detail.pay_head_id,\r\n                                    type: payroll_template_detail.pay_head.type,\r\n                                    name: payroll_template_detail.pay_head.name,\r\n                                    amount: payroll_template_detail.amount\r\n                                })\r\n                            }\r\n                        });\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/employee/payroll/'+this.uuid)\r\n                    .then(response => {\r\n                        this.payroll = response.payroll;\r\n\r\n                        this.payrollForm.start_date = this.payroll.start_date;\r\n                        this.payrollForm.end_date = this.payroll.end_date;\r\n                        this.payrollForm.employee_id = this.payroll.employee_id;\r\n                        this.payrollForm.remarks = this.payroll.remarks;\r\n                        this.employee_salary = response.salary;\r\n                        this.attendance_summary = response.attendance_types;\r\n                        this.payrollForm.pay_heads = [];\r\n                        response.salary.payroll_template.payroll_template_details.forEach(payroll_template_detail => {\r\n                            let amount = payroll_template_detail.amount;\r\n                            let payroll_detail = this.payroll.payroll_details.find(o => o.pay_head_id == payroll_template_detail.pay_head_id);\r\n                            amount = (typeof payroll_detail != 'undefined') ? payroll_detail.amount : amount;\r\n                            this.payrollForm.pay_heads.push({\r\n                                payroll_template_detail_id: payroll_template_detail.id,\r\n                                pay_head_id: payroll_template_detail.pay_head_id,\r\n                                type: payroll_template_detail.pay_head.type,\r\n                                name: payroll_template_detail.pay_head.name,\r\n                                amount: amount\r\n                            })\r\n                        });\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            formatCurrency(amount){\r\n                return helper.formatCurrency(amount);\r\n            },\r\n            proceed(){\r\n                if(this.uuid)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.payrollForm.post('/api/employee/payroll/generate')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/employee/payroll/list');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.payrollForm.patch('/api/employee/payroll/'+this.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/employee/payroll/list');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            }\r\n        },\r\n        computed: {\r\n            getTotalEarningSalary(){\r\n                let total = 0;\r\n                this.payrollForm.pay_heads.forEach(pay_head => {\r\n                    total += pay_head.type == 'earning' ? (pay_head.amount || 0) : 0;\r\n                });\r\n                return total;\r\n            },\r\n            getTotalDeductionSalary(){\r\n                let total = 0;\r\n                this.payrollForm.pay_heads.forEach(pay_head => {\r\n                    total += pay_head.type == 'deduction' ? (pay_head.amount || 0) : 0;\r\n                });\r\n                return total;\r\n            },\r\n            getNetSalary(){\r\n                return this.getTotalEarningSalary - this.getTotalDeductionSalary;\r\n            }\r\n        },\r\n        watch: {\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    .payroll-table {\r\n        width: 100%;\r\n        font-size:13px;\r\n\r\n        th, td {\r\n            width:50%;\r\n            padding:5px 10px;\r\n        }\r\n\r\n        tr + tr{\r\n            border-top: 1px solid #f3f1f1;\r\n        }\r\n\r\n        .borderless-input{\r\n            text-align:right;\r\n            border:0;\r\n            height: auto;\r\n            width:100%;\r\n            color: #54667a;\r\n        }\r\n    }\r\n</style>","<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('employee.generate_payroll')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/employee/payroll/list')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('employee.list_payroll')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <payroll-form></payroll-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import payrollForm from './form';\r\n\r\n    export default {\r\n        components : { payrollForm },\r\n        data() {\r\n            return {\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('generate-payroll')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.proceed.apply(null, arguments)\n        },\n        keydown: function ($event) {\n          return _vm.payrollForm.errors.clear($event.target.name)\n        },\n      },\n    },\n    [\n      !_vm.employee_salary.payroll_template\n        ? [\n            _c(\"div\", { staticClass: \"row p-4\" }, [\n              _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"v-select\",\n                      {\n                        attrs: {\n                          label: \"name\",\n                          \"track-by\": \"id\",\n                          name: \"employee_id\",\n                          id: \"employee_id\",\n                          options: _vm.employees,\n                          placeholder: _vm.trans(\"employee.select_employee\"),\n                        },\n                        on: {\n                          select: _vm.onEmployeeSelect,\n                          close: function ($event) {\n                            return _vm.payrollForm.errors.clear(\"employee_id\")\n                          },\n                          remove: function ($event) {\n                            _vm.payrollForm.employee_id = \"\"\n                          },\n                        },\n                        model: {\n                          value: _vm.selected_employee,\n                          callback: function ($$v) {\n                            _vm.selected_employee = $$v\n                          },\n                          expression: \"selected_employee\",\n                        },\n                      },\n                      [\n                        !_vm.employees.length\n                          ? _c(\n                              \"div\",\n                              {\n                                staticClass: \"multiselect__option\",\n                                attrs: { slot: \"afterList\" },\n                                slot: \"afterList\",\n                              },\n                              [\n                                _vm._v(\n                                  \"\\n                            \" +\n                                    _vm._s(\n                                      _vm.trans(\"general.no_option_found\")\n                                    ) +\n                                    \"\\n                        \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                      ]\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.payrollForm,\n                        \"prop-name\": \"employee_id\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"employee.payroll_start_date\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"datepicker\", {\n                      attrs: {\n                        bootstrapStyling: true,\n                        placeholder: _vm.trans(\"employee.payroll_start_date\"),\n                      },\n                      on: {\n                        selected: function ($event) {\n                          return _vm.payrollForm.errors.clear(\"start_date\")\n                        },\n                      },\n                      model: {\n                        value: _vm.payrollForm.start_date,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.payrollForm, \"start_date\", $$v)\n                        },\n                        expression: \"payrollForm.start_date\",\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.payrollForm,\n                        \"prop-name\": \"start_date\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"employee.payroll_end_date\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"datepicker\", {\n                      attrs: {\n                        bootstrapStyling: true,\n                        placeholder: _vm.trans(\"employee.payroll_end_date\"),\n                      },\n                      on: {\n                        selected: function ($event) {\n                          return _vm.payrollForm.errors.clear(\"end_date\")\n                        },\n                      },\n                      model: {\n                        value: _vm.payrollForm.end_date,\n                        callback: function ($$v) {\n                          _vm.$set(_vm.payrollForm, \"end_date\", $$v)\n                        },\n                        expression: \"payrollForm.end_date\",\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.payrollForm,\n                        \"prop-name\": \"end_date\",\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            !_vm.employee_salary.payroll_template\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-info m-r-10 pull-right\",\n                    attrs: { type: \"button\" },\n                    on: { click: _vm.fetch },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.submit\")))]\n                )\n              : _vm._e(),\n          ]\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.employee_salary.payroll_template\n        ? _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n              _c(\"div\", { staticClass: \"table-responsive\" }, [\n                _c(\n                  \"table\",\n                  { staticClass: \"table table-sm custom-show-table\" },\n                  [\n                    _c(\n                      \"tbody\",\n                      _vm._l(_vm.attendance_summary, function (attendance) {\n                        return _c(\"tr\", [\n                          _c(\"td\", [\n                            _vm._v(\n                              _vm._s(\n                                attendance.name + \" (\" + attendance.alias + \")\"\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"td\", [\n                            _vm._v(\n                              \"\\n                                \" +\n                                _vm._s(attendance.count) +\n                                \"\\n                                \"\n                            ),\n                            (attendance.type == \"production_based_earning\" ||\n                              attendance.type ==\n                                \"production_based_deduction\") &&\n                            attendance.count\n                              ? _c(\"span\", [\n                                  _vm._v(\n                                    \"\\n                                    (\" +\n                                      _vm._s(\n                                        attendance.value + \" \" + attendance.unit\n                                      ) +\n                                      \")\\n                                \"\n                                  ),\n                                ])\n                              : _vm._e(),\n                          ]),\n                        ])\n                      }),\n                      0\n                    ),\n                  ]\n                ),\n              ]),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-8 border-left\" }, [\n              _c(\"div\", { staticClass: \"card widget\" }, [\n                _c(\"div\", { staticClass: \"card-body\" }, [\n                  _c(\"div\", { staticClass: \"row border-bottom\" }, [\n                    _c(\"div\", { staticClass: \"col p-4 b-r\" }, [\n                      _vm._v(\n                        \"\\n                            \" +\n                          _vm._s(\n                            _vm.getEmployeeNameWithCode(\n                              _vm.employee_salary.employee\n                            )\n                          )\n                      ),\n                      _c(\"br\"),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"font-90pc\" }, [\n                        _vm._v(\n                          _vm._s(\n                            _vm.getEmployeeDesignationOnDate(\n                              _vm.employee_salary.employee,\n                              _vm.employee_salary.start_date\n                            )\n                          )\n                        ),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col p-4 b-r\" }, [\n                      _vm._v(\n                        \"\\n                            \" +\n                          _vm._s(_vm._f(\"moment\")(_vm.payrollForm.start_date)) +\n                          \" \" +\n                          _vm._s(_vm.trans(\"general.to\")) +\n                          \" \" +\n                          _vm._s(_vm._f(\"moment\")(_vm.payrollForm.end_date)) +\n                          \"\\n                        \"\n                      ),\n                    ]),\n                  ]),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"table\", { staticClass: \"payroll-table\" }, [\n                _c(\"tr\", [\n                  _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                    _vm._v(_vm._s(_vm.trans(\"employee.pay_head_type_earning\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"employee.pay_head_type_deduction\"))\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"tr\", [\n                  _c(\n                    \"td\",\n                    { staticClass: \"border-right\", attrs: { valign: \"top\" } },\n                    [\n                      _c(\n                        \"table\",\n                        { staticClass: \"payroll-table\" },\n                        _vm._l(_vm.payrollForm.pay_heads, function (pay_head) {\n                          return pay_head.type == \"earning\"\n                            ? _c(\"tr\", [\n                                _c(\"td\", [_vm._v(_vm._s(pay_head.name))]),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"td\",\n                                  { staticClass: \"text-right\" },\n                                  [\n                                    _vm.editPayrollAmount\n                                      ? [\n                                          _c(\"input\", {\n                                            directives: [\n                                              {\n                                                name: \"model\",\n                                                rawName: \"v-model\",\n                                                value: pay_head.amount,\n                                                expression: \"pay_head.amount\",\n                                              },\n                                            ],\n                                            staticClass: \"borderless-input\",\n                                            attrs: {\n                                              type: \"text\",\n                                              placeholder: _vm.trans(\n                                                \"employee.salary_structure_amount\"\n                                              ),\n                                            },\n                                            domProps: {\n                                              value: pay_head.amount,\n                                            },\n                                            on: {\n                                              input: function ($event) {\n                                                if ($event.target.composing)\n                                                  return\n                                                _vm.$set(\n                                                  pay_head,\n                                                  \"amount\",\n                                                  $event.target.value\n                                                )\n                                              },\n                                            },\n                                          }),\n                                        ]\n                                      : [\n                                          _vm._v(\n                                            \"\\n                                        \" +\n                                              _vm._s(pay_head.amount) +\n                                              \"\\n                                    \"\n                                          ),\n                                        ],\n                                  ],\n                                  2\n                                ),\n                              ])\n                            : _vm._e()\n                        }),\n                        0\n                      ),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"td\", { attrs: { valign: \"top\" } }, [\n                    _c(\n                      \"table\",\n                      { staticClass: \"payroll-table\" },\n                      _vm._l(_vm.payrollForm.pay_heads, function (pay_head) {\n                        return pay_head.type == \"deduction\"\n                          ? _c(\"tr\", [\n                              _c(\"td\", [_vm._v(_vm._s(pay_head.name))]),\n                              _vm._v(\" \"),\n                              _c(\n                                \"td\",\n                                { staticClass: \"text-right\" },\n                                [\n                                  _vm.editPayrollAmount\n                                    ? [\n                                        _c(\"input\", {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: pay_head.amount,\n                                              expression: \"pay_head.amount\",\n                                            },\n                                          ],\n                                          staticClass: \"borderless-input\",\n                                          attrs: {\n                                            type: \"text\",\n                                            placeholder: _vm.trans(\n                                              \"employee.salary_structure_amount\"\n                                            ),\n                                          },\n                                          domProps: { value: pay_head.amount },\n                                          on: {\n                                            input: function ($event) {\n                                              if ($event.target.composing)\n                                                return\n                                              _vm.$set(\n                                                pay_head,\n                                                \"amount\",\n                                                $event.target.value\n                                              )\n                                            },\n                                          },\n                                        }),\n                                      ]\n                                    : [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(pay_head.amount) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ],\n                                ],\n                                2\n                              ),\n                            ])\n                          : _vm._e()\n                      }),\n                      0\n                    ),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"tr\", [\n                  _c(\"td\", [\n                    _c(\"table\", { staticClass: \"payroll-table\" }, [\n                      _c(\"tr\", [\n                        _c(\"td\", [\n                          _vm._v(_vm._s(_vm.trans(\"employee.earning_salary\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", { attrs: { align: \"right\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.formatCurrency(_vm.getTotalEarningSalary)\n                            )\n                          ),\n                        ]),\n                      ]),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"td\", { attrs: { valign: \"top\" } }, [\n                    _c(\"table\", { staticClass: \"payroll-table\" }, [\n                      _c(\"tr\", [\n                        _c(\"td\", [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"employee.deduction_salary\"))\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"td\", { attrs: { align: \"right\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.formatCurrency(_vm.getTotalDeductionSalary)\n                            )\n                          ),\n                        ]),\n                      ]),\n                    ]),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"tr\", [\n                  _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                    _vm._v(_vm._s(_vm.trans(\"employee.net_salary\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"td\",\n                    {\n                      staticClass: \"font-weight-bold\",\n                      attrs: { align: \"right\" },\n                    },\n                    [_vm._v(_vm._s(_vm.formatCurrency(_vm.getNetSalary)))]\n                  ),\n                ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"employee.payroll_remarks\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"autosize-textarea\", {\n                    attrs: {\n                      rows: \"2\",\n                      name: \"remarks\",\n                      placeholder: _vm.trans(\"employee.payroll_remarks\"),\n                    },\n                    model: {\n                      value: _vm.payrollForm.remarks,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.payrollForm, \"remarks\", $$v)\n                      },\n                      expression: \"payrollForm.remarks\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.employee_salary.payroll_template\n        ? _c(\"div\", { staticClass: \"form-group\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info pull-right\",\n                attrs: { type: \"submit\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n            ),\n            _vm._v(\" \"),\n            !_vm.uuid\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-danger pull-right m-r-10\",\n                    attrs: { type: \"button\" },\n                    on: { click: _vm.reset },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"employee.payroll_reset_query\")))]\n                )\n              : _vm._e(),\n          ])\n        : _vm._e(),\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"employee.generate_payroll\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/employee/payroll/list\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.list_payroll\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card\" }, [\n        _c(\"div\", { staticClass: \"card-body\" }, [_c(\"payroll-form\")], 1),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".payroll-table {\\n  width: 100%;\\n  font-size: 13px;\\n}\\n.payroll-table th, .payroll-table td {\\n  width: 50%;\\n  padding: 5px 10px;\\n}\\n.payroll-table tr + tr {\\n  border-top: 1px solid #f3f1f1;\\n}\\n.payroll-table .borderless-input {\\n  text-align: right;\\n  border: 0;\\n  height: auto;\\n  width: 100%;\\n  color: #54667a;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/employee/payroll/form.vue\"],\"names\":[],\"mappings\":\"AACA;EACI,WAAA;EACA,eAAA;AAAJ;AAEI;EACI,UAAA;EACA,iBAAA;AAAR;AAGI;EACI,6BAAA;AADR;AAII;EACI,iBAAA;EACA,SAAA;EACA,YAAA;EACA,WAAA;EACA,cAAA;AAFR\",\"sourcesContent\":[\"\\n.payroll-table {\\n    width: 100%;\\n    font-size:13px;\\n\\n    th, td {\\n        width:50%;\\n        padding:5px 10px;\\n    }\\n\\n    tr + tr{\\n        border-top: 1px solid #f3f1f1;\\n    }\\n\\n    .borderless-input{\\n        text-align:right;\\n        border:0;\\n        height: auto;\\n        width:100%;\\n        color: #54667a;\\n    }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19.use[2]!../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19.use[3]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&id=09390a40&lang=scss&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=09390a40&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\nimport style0 from \"./form.vue?vue&type=style&index=0&id=09390a40&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('09390a40')) {\n      api.createRecord('09390a40', component.options)\n    } else {\n      api.reload('09390a40', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=09390a40&\", function () {\n      api.rerender('09390a40', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/payroll/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./generate.vue?vue&type=template&id=57f24071&\"\nimport script from \"./generate.vue?vue&type=script&lang=js&\"\nexport * from \"./generate.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('57f24071')) {\n      api.createRecord('57f24071', component.options)\n    } else {\n      api.reload('57f24071', component.options)\n    }\n    module.hot.accept(\"./generate.vue?vue&type=template&id=57f24071&\", function () {\n      api.rerender('57f24071', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/payroll/generate.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./generate.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./generate.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=09390a40&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./generate.vue?vue&type=template&id=57f24071&\"","export * from \"-!../../../../../node_modules/style-loader/dist/cjs.js!../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-19.use[1]!../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-19.use[2]!../../../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-19.use[3]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&id=09390a40&lang=scss&\""],"names":[],"sourceRoot":""}