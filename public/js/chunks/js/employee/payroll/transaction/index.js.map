{"version":3,"file":"js/chunks/js/employee/payroll/transaction/index.js?id=c7f2acbd562bb328","mappings":";;;;;;;;;;;;;AAsJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACrzSA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAIA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AAGA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgBA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAKA;AAAA;AAOA;AACA;AAGA;AAEA;AAMA;AAAA;AAiBA;AAAA;AAQA;AAGA;AAcA;AAAA;AACA;AAAA;AACA;AAAA;AAeA;AAAA;AACA;AAAA;AAEA;AAAA;AA4BA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;ACr4BA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAesBA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAiDA;AAAA;AAWA;AAEA;AACA;AAGA;AACA;AAqDA;AACA;AAGA;AACA;AAIA;AACA;AAGA;AACA;AAqKA;AAAA;AACA;AAAA;AAOA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AAWA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AAOA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;ACtyBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/employee/payroll/transaction/form.vue","webpack://InstiKit/resources/js/views/employee/payroll/transaction/index.vue","webpack://InstiKit/./resources/js/views/employee/payroll/transaction/form.vue","webpack://InstiKit/./resources/js/views/employee/payroll/transaction/index.vue","webpack://InstiKit/./resources/js/views/employee/payroll/transaction/form.vue?08a7","webpack://InstiKit/./resources/js/views/employee/payroll/transaction/index.vue?83b7","webpack://InstiKit/./resources/js/views/employee/payroll/transaction/form.vue?286f","webpack://InstiKit/./resources/js/views/employee/payroll/transaction/index.vue?7f26","webpack://InstiKit/./resources/js/views/employee/payroll/transaction/form.vue?b364","webpack://InstiKit/./resources/js/views/employee/payroll/transaction/index.vue?bf8b"],"sourcesContent":["<template>\r\n    <div class=\"m-t-10\">\r\n        <form @submit.prevent=\"proceed\" @keydown=\"payrollTransactionForm.errors.clear($event.target.name)\">\r\n            <div class=\"row\">\r\n                <template v-if=\"!uuid\">\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('employee.payroll_transaction_head')}}</label>\r\n                            <select v-model=\"payrollTransactionForm.head\" class=\"custom-select col-12\" name=\"head\" @change=\"onPayrollTransactionHeadChange\">\r\n                              <option v-for=\"option in payroll_transaction_heads\" v-bind:value=\"option.value\">\r\n                                {{ option.text }}\r\n                              </option>\r\n                            </select>\r\n                            <show-error :form-name=\"payrollTransactionForm\" prop-name=\"head\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"\">{{trans('employee.employee')}}</label>\r\n                            <v-select label=\"name\" v-model=\"selected_employee\" name=\"employee_id\" id=\"employee_id\" :options=\"employees\" :placeholder=\"trans('employee.select_employee')\" @select=\"onEmployeeSelect\" @close=\"payrollTransactionForm.errors.clear('employee_id')\" @remove=\"payrollTransactionForm.employee_id = ''\">\r\n                                <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employees.length\">\r\n                                    {{trans('general.no_option_found')}}\r\n                                </div>\r\n                            </v-select>\r\n                            <show-error :form-name=\"payrollTransactionForm\" prop-name=\"employee_id\"></show-error>\r\n                            <span class=\"help-block font-80pc\" v-if=\"payrollTransactionForm.head == 'salary' && payrollTransactionForm.employee_id\">\r\n                                <span v-if=\"payroll.id\" class=\"text-success\">{{trans('employee.payroll_transaction_unpaid_payroll_info', {number: payroll.number, balance: formatCurrency(payroll.balance), period: getUnpaidPayrollPeriod})}}</span>\r\n                                <span v-else class=\"text-danger\">{{trans('employee.payroll_transaction_no_unpaid_payroll')}}</span>\r\n                            </span>\r\n                            <span class=\"help-block font-80pc\" v-if=\"payrollTransactionForm.head == 'advance_return' && payrollTransactionForm.employee_id\">\r\n                                {{trans('employee.payroll_transaction_advance_returnable', {balance: formatCurrency(advance_balance)})}}\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n                <template v-else>\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <p class=\"m-t-20\">\r\n                                {{trans('employee.payroll_transaction_'+payroll_transaction.head)}}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <p class=\"m-t-20\" v-if=\"payroll_transaction.id\">\r\n                                {{getEmployeeNameWithCode(payroll_transaction.employee)}} <br />\r\n                                {{getEmployeeDesignationOnDate(payroll_transaction.employee, payroll_transaction.date_of_transaction)}} <br />\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('finance.account')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_account\" name=\"account_id\" id=\"account_id\" :options=\"accounts\" :placeholder=\"trans('finance.select_account')\" @select=\"onAccountSelect\" @close=\"payrollTransactionForm.errors.clear('account_id')\" @remove=\"payrollTransactionForm.account_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!accounts.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"payrollTransactionForm\" prop-name=\"account_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('finance.amount')}}</label>\r\n                        <currency-input :position=\"default_currency.position\" :symbol=\"default_currency.symbol\" name=\"amount\" :placeholder=\"trans('finance.amount')\" v-model=\"payrollTransactionForm.amount\" @input.native=\"payrollTransactionForm.errors.clear('amount')\"></currency-input>\r\n                        <show-error :form-name=\"payrollTransactionForm\" prop-name=\"amount\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('finance.date_of_transaction')}}</label>\r\n                        <datepicker v-model=\"payrollTransactionForm.date_of_transaction\" :bootstrapStyling=\"true\" @selected=\"payrollTransactionForm.errors.clear('date_of_transaction')\" :placeholder=\"trans('finance.date_of_transaction')\"></datepicker>\r\n                        <show-error :form-name=\"payrollTransactionForm\" prop-name=\"date_of_transaction\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('finance.payment_method')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_payment_method\" name=\"payment_method_id\" id=\"payment_method_id\" :options=\"payment_methods\" :placeholder=\"trans('finance.select_payment_method')\" @select=\"onPaymentMethodSelect\" @close=\"payrollTransactionForm.errors.clear('payment_method_id')\" @remove=\"payrollTransactionForm.payment_method_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!payment_methods.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"payrollTransactionForm\" prop-name=\"payment_method_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('instrument_number')\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('finance.instrument_number')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"payrollTransactionForm.instrument_number\" name=\"instrument_number\" :placeholder=\"trans('finance.instrument_number')\">\r\n                        <show-error :form-name=\"payrollTransactionForm\" prop-name=\"instrument_number\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('instrument_date')\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('finance.instrument_date')}}</label>\r\n                        <datepicker v-model=\"payrollTransactionForm.instrument_date\" :bootstrapStyling=\"true\" @selected=\"payrollTransactionForm.errors.clear('instrument_date')\" :placeholder=\"trans('finance.instrument_date')\"></datepicker>\r\n                        <show-error :form-name=\"payrollTransactionForm\" prop-name=\"instrument_date\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('instrument_bank_detail')\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('finance.instrument_bank_detail')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"payrollTransactionForm.instrument_bank_detail\" name=\"instrument_bank_detail\" :placeholder=\"trans('finance.instrument_bank_detail')\">\r\n                        <show-error :form-name=\"payrollTransactionForm\" prop-name=\"instrument_bank_detail\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('instrument_clearing_date')\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('finance.instrument_clearing_date')}}</label>\r\n                        <datepicker v-model=\"payrollTransactionForm.instrument_clearing_date\" :bootstrapStyling=\"true\" @selected=\"payrollTransactionForm.errors.clear('instrument_clearing_date')\" :placeholder=\"trans('finance.instrument_clearing_date')\"></datepicker>\r\n                        <show-error :form-name=\"payrollTransactionForm\" prop-name=\"instrument_clearing_date\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('reference_number')\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('finance.reference_number')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"payrollTransactionForm.reference_number\" name=\"reference_number\" :placeholder=\"trans('finance.reference_number')\">\r\n                        <show-error :form-name=\"payrollTransactionForm\" prop-name=\"reference_number\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('employee.payroll_transaction_remarks')}}</label>\r\n                        <autosize-textarea v-model=\"payrollTransactionForm.remarks\" rows=\"1\" name=\"remarks\" :placeholder=\"trans('employee.payroll_transaction_remarks')\"></autosize-textarea>\r\n                        <show-error :form-name=\"payrollTransactionForm\" prop-name=\"remarks\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <file-upload-input :button-text=\"trans('general.upload_document')\" :token=\"payrollTransactionForm.upload_token\" module=\"transaction\" :clear-file=\"clearAttachment\" :module-id=\"module_id\"></file-upload-input>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer text-right\">\r\n                <router-link to=\"/employee/payroll/transaction\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"uuid\">{{trans('general.cancel')}}</router-link>\r\n                <button v-if=\"!uuid\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n                    <span v-if=\"uuid\">{{trans('general.update')}}</span>\r\n                    <span v-else>{{trans('general.save')}}</span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    export default {\r\n        components : {},\r\n        props:['uuid'],\r\n        data() {\r\n            return {\r\n                payrollTransactionForm: new Form({\r\n                    employee_id: '',\r\n                    head: 'salary',\r\n                    account_id: '',\r\n                    amount: '',\r\n                    date_of_transaction: '',\r\n                    payment_method_id: '',\r\n                    instrument_number: '',\r\n                    instrument_date: '',\r\n                    instrument_clearing_date: '',\r\n                    instrument_bank_detail: '',\r\n                    reference_number: '',\r\n                    remarks: '',\r\n                    upload_token: ''\r\n                }),\r\n                payroll_transaction: {},\r\n                advance_balance: 0,\r\n                payroll: {},\r\n                employees: [],\r\n                selected_employee: null,\r\n                accounts: [],\r\n                selected_account: null,\r\n                payment_methods: [],\r\n                selected_payment_method: null,\r\n                payment_method_details: [],\r\n                payment_method_detail: {},\r\n                module_id: '',\r\n                clearAttachment: true,\r\n                default_currency: helper.getConfig('default_currency'),\r\n                payroll_transaction_heads: [\r\n                    {\r\n                        text: i18n.employee.payroll_transaction_salary,\r\n                        value: 'salary'\r\n                    },\r\n                    {\r\n                        text: i18n.employee.payroll_transaction_advance,\r\n                        value: 'advance'\r\n                    },\r\n                    {\r\n                        text: i18n.employee.payroll_transaction_advance_return,\r\n                        value: 'advance_return'\r\n                    },\r\n                    {\r\n                        text: i18n.employee.payroll_transaction_other_payment,\r\n                        value: 'other_payment'\r\n                    },\r\n                    {\r\n                        text: i18n.employee.payroll_transaction_other_receipt,\r\n                        value: 'other_receipt'\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('create-payroll-transaction') && !helper.hasPermission('edit-payroll-transaction')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            if(this.uuid)\r\n                this.get();\r\n            else\r\n                this.payrollTransactionForm.upload_token = this.$uuid.v4();\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            getEmployeeNameWithCode(employee){\r\n                return helper.getEmployeeNameWithCode(employee);\r\n            },\r\n            getEmployeeDesignationOnDate(employee, date){\r\n                return helper.getEmployeeDesignationOnDate(employee, date);\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/employee/payroll/transaction/pre-requisite')\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        this.employees = response.employees;\r\n                        this.accounts = response.accounts;\r\n                        this.payment_methods = response.payment_methods;\r\n                        this.payment_method_details = response.payment_method_details;\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            fetchUnpaidPayroll(){\r\n                if (this.payrollTransactionForm.head != 'salary' || ! this.payrollTransactionForm.employee_id)\r\n                    return;\r\n\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/employee/payroll/unpaid', {\r\n                        employee_id: this.payrollTransactionForm.employee_id\r\n                    })\r\n                    .then(response => {\r\n                        this.payroll = response.payroll || {};\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            fetchAdvanceBalance(){\r\n                if (this.payrollTransactionForm.head != 'advance_return' || ! this.payrollTransactionForm.employee_id)\r\n                    return;\r\n\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/employee/payroll/transaction/advance/balance', {\r\n                        employee_id: this.payrollTransactionForm.employee_id\r\n                    })\r\n                    .then(response => {\r\n                        this.advance_balance = response.balance || 0;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            onPayrollTransactionHeadChange(){\r\n                this.payrollTransactionForm.errors.clear('head');\r\n                this.fetchUnpaidPayroll();\r\n                this.fetchAdvanceBalance();\r\n            },\r\n            onEmployeeSelect(selectedOption){\r\n                this.payrollTransactionForm.employee_id = selectedOption.id;\r\n                this.fetchUnpaidPayroll();\r\n                this.fetchAdvanceBalance();\r\n            },\r\n            onAccountSelect(selectedOption){\r\n                this.payrollTransactionForm.account_id = selectedOption.id;\r\n            },\r\n            onPaymentMethodSelect(selectedOption){\r\n                this.payrollTransactionForm.payment_method_id = selectedOption.id;\r\n                this.payment_method_detail = this.payment_method_details.find(o => o.id == selectedOption.id);\r\n            },\r\n            formatCurrency(price){\r\n                return helper.formatCurrency(price);\r\n            },\r\n            formatNumber(number){\r\n                return helper.formatNumber(number, this.default_currency.decimal_place)\r\n            },\r\n            getPaymentMethodDetail(field){\r\n                return helper.getPaymentMethodDetail(this.payment_method_detail, field);\r\n            },\r\n            proceed(){\r\n                if(this.uuid)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.payrollTransactionForm.post('/api/employee/payroll/transaction')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.clearAttachment = !this.clearAttachment;\r\n                        this.payrollTransactionForm.upload_token = this.$uuid.v4();\r\n                        this.selected_employee = null;\r\n                        this.selected_transaction_category = null;\r\n                        this.selected_account = null;\r\n                        this.selected_payment_method = null;\r\n                        this.payment_method_detail = null;\r\n                        this.payrollTransactionForm.head = 'salary';\r\n                        this.$emit('completed');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/employee/payroll/transaction/'+this.uuid)\r\n                    .then(response => {\r\n                        this.payroll_transaction = response.payroll_transaction;\r\n                        this.payrollTransactionForm.head = response.payroll_transaction.head;\r\n                        this.payrollTransactionForm.employee_id = response.payroll_transaction.employee_id;\r\n                        this.selected_employee = response.selected_employee;\r\n                        this.payrollTransactionForm.account_id = response.payroll_transaction.account_id;\r\n                        this.selected_account = response.payroll_transaction.account_id ? {id: response.payroll_transaction.account_id, name: response.payroll_transaction.account.name} : null;\r\n                        this.payrollTransactionForm.amount = this.formatNumber(response.payroll_transaction.amount);\r\n                        this.payrollTransactionForm.date_of_transaction = response.payroll_transaction.date;\r\n                        this.payrollTransactionForm.payment_method_id = response.payroll_transaction.payment_method_id;\r\n                        this.selected_payment_method = response.payroll_transaction.payment_method_id ? {id: response.payroll_transaction.payment_method_id, name: response.payroll_transaction.payment_method.name} : null;\r\n                        this.payrollTransactionForm.instrument_number = response.payroll_transaction.instrument_number;\r\n                        this.payrollTransactionForm.instrument_date = response.payroll_transaction.instrument_date;\r\n                        this.payrollTransactionForm.instrument_clearing_date = response.payroll_transaction.instrument_clearing_date;\r\n                        this.payrollTransactionForm.instrument_bank_detail = response.payroll_transaction.instrument_bank_detail;\r\n                        this.payrollTransactionForm.reference_number = response.payroll_transaction.reference_number;\r\n                        this.payrollTransactionForm.remarks = response.payroll_transaction.remarks;\r\n                        this.payrollTransactionForm.upload_token = response.payroll_transaction.upload_token;\r\n                        this.module_id = response.payroll_transaction.id;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/employee/payroll/transaction');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.payrollTransactionForm.patch('/api/employee/payroll/transaction/'+this.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/employee/payroll/transaction');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            }\r\n        },\r\n        computed: {\r\n            getUnpaidPayrollPeriod(){\r\n                return helper.formatDate(this.payroll.start_date)+' '+i18n.general.to+' '+helper.formatDate(this.payroll.end_date);\r\n            }\r\n        }\r\n    }\r\n</script>","<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('employee.payroll_transaction')}} \r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"payroll_transactions.total\">{{trans('general.total_result_found',{count : payroll_transactions.total, from: payroll_transactions.from, to: payroll_transactions.to})}}</span>\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\r\n                    </h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"payroll_transactions.total && !showCreatePanel && hasPermission('create-payroll-transaction')\" @click=\"showCreatePanel = !showCreatePanel\" v-tooltip=\"trans('general.add_new')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('employee.add_new_payroll_transaction')}}</span></button>\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\r\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\r\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\r\n                            </button>\r\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\r\n                            </div>\r\n                        </div>\r\n                        <help-button @clicked=\"help_topic = 'employee.payroll.transaction'\"></help-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <transition name=\"fade\">\r\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('general.filter')}}</h4>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('employee.employee')}}</label>\r\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_employees\" name=\"employee_id\" id=\"employee_id\" :options=\"employees\" :placeholder=\"trans('employee.select_employee')\" @select=\"onEmployeeSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onEmployeeRemove\" :selected=\"selected_employees\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employees.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-footer text-right\">\r\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\r\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getPayrollTransactions\">{{trans('general.filter')}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <transition name=\"fade\" v-if=\"hasPermission('create-payroll-transaction')\">\r\n                <div class=\"card card-form\" v-if=\"showCreatePanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('employee.add_new_payroll_transaction')}}</h4>\r\n                        <payroll-transaction-form @completed=\"getPayrollTransactions\" @cancel=\"showCreatePanel = !showCreatePanel\"></payroll-transaction-form>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\" v-if=\"payroll_transactions.total\">\r\n                        <table class=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{{trans('finance.voucher_number')}}</th>\r\n                                    <th>{{trans('employee.employee')}}</th>\r\n                                    <th>{{trans('employee.payroll_transaction_head')}}</th>\r\n                                    <th>{{trans('finance.account')}}</th>\r\n                                    <th>{{trans('finance.payment_method')}}</th>\r\n                                    <th>{{trans('finance.amount')}}</th>\r\n                                    <th>{{trans('finance.date_of_transaction')}}</th>\r\n                                    <th>{{trans('general.created_by')}}</th>\r\n                                    <th>{{trans('general.created_at')}}</th>\r\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"payroll_transaction in payroll_transactions.data\">\r\n                                    <td v-text=\"getVoucherNumber(payroll_transaction)\"></td>\r\n                                    <td>\r\n                                        {{getEmployeeNameWithCode(payroll_transaction.employee)}} <br > {{getEmployeeDesignationOnDate(payroll_transaction.employee, payroll_transaction.date)}}\r\n                                    </td>\r\n                                    <td>\r\n                                        {{trans('employee.payroll_transaction_'+payroll_transaction.head)}}\r\n                                        <span v-if=\"payroll_transaction.head == 'salary'\">({{'#'+getPayrollNumber(payroll_transaction.payroll)}})</span>\r\n                                    </td>\r\n                                    <td v-text=\"payroll_transaction.account.name\"></td>\r\n                                    <td>\r\n                                        <span v-text=\"payroll_transaction.payment_method.name\"></span>\r\n                                        <span v-if=\"payroll_transaction.instrument_number\">\r\n                                            <br /> {{trans('finance.instrument_number')}} <u>{{payroll_transaction.instrument_number}} </u>\r\n                                        </span>\r\n                                        <span v-if=\"payroll_transaction.instrument_date\">\r\n                                            <br /> {{trans('finance.instrument_date')}} <u>{{payroll_transaction.instrument_date | moment}} </u>\r\n                                        </span>\r\n                                        <span v-if=\"payroll_transaction.instrument_bank_detail\">\r\n                                            <br /> {{trans('finance.instrument_bank_detail')}} <u>{{payroll_transaction.instrument_bank_detail}} </u>\r\n                                        </span>\r\n                                        <span v-if=\"payroll_transaction.instrument_clearing_date\">\r\n                                            <br /> {{trans('finance.instrument_clearing_date')}} <u>{{payroll_transaction.instrument_clearing_date | moment}} </u>\r\n                                        </span>\r\n                                        <span v-if=\"payroll_transaction.reference_number\">\r\n                                            <br /> {{trans('finance.reference_number')}} <u>{{payroll_transaction.reference_number}}</u>\r\n                                        </span>\r\n                                    </td>\r\n                                    <td>{{formatCurrency(payroll_transaction.amount)}}</td>\r\n                                    <td>{{payroll_transaction.date | moment}}</td>\r\n                                    <td>{{getEmployeeNameWithCode(payroll_transaction.user.employee)}} <br > {{getEmployeeDesignationOnDate(payroll_transaction.user.employee, payroll_transaction.date)}}</td>\r\n                                    <td>{{payroll_transaction.created_at | momentDateTime}}</td>\r\n\r\n                                    <td class=\"table-option\">\r\n                                        <div class=\"btn-group\">\r\n                                            <button class=\"btn btn-info btn-sm\" v-if=\"hasPermission('edit-payroll-transaction')\" v-tooltip=\"trans('employee.edit_payroll_transaction')\" @click.prevent=\"editPayrollTransaction(payroll_transaction)\"><i class=\"fas fa-edit\"></i></button>\r\n                                            <button class=\"btn btn-danger btn-sm\" v-if=\"hasPermission('cancel-payroll-transaction')\" :key=\"payroll_transaction.id\" v-confirm=\"{ok: confirmDelete(payroll_transaction)}\" v-tooltip=\"trans('employee.delete_payroll_transaction')\"><i class=\"fas fa-times\"></i></button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <module-info v-if=\"!payroll_transactions.total\" module=\"employee\" title=\"payroll_transaction_module_title\" description=\"payroll_transaction_module_description\" icon=\"list\">\r\n                        <div slot=\"btn\">\r\n                            <button class=\"btn btn-info btn-md\" v-if=\"!showCreatePanel && hasPermission('create-payroll-transaction')\" @click=\"showCreatePanel = !showCreatePanel\"><i class=\"fas fa-plus\"></i> {{trans('general.add_new')}}</button>\r\n                        </div>\r\n                    </module-info>\r\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"payroll_transactions\" @updateRecords=\"getPayrollTransactions\"></pagination-record>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <right-panel :topic=\"help_topic\"></right-panel>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import payrollTransactionForm from './form'\r\n\r\n    export default {\r\n        components : {payrollTransactionForm},\r\n        data() {\r\n            return {\r\n                payroll_transactions: {\r\n                    total: 0,\r\n                    data: []\r\n                },\r\n                filter: {\r\n                    sort_by : 'created_at',\r\n                    order: 'desc',\r\n                    employee_id: [],\r\n                    page_length: helper.getConfig('page_length')\r\n                },\r\n                orderByOptions: [\r\n                    {\r\n                        value: 'date',\r\n                        translation: i18n.finance.date_of_transaction\r\n                    },\r\n                    {\r\n                        value: 'created_at',\r\n                        translation: i18n.general.created_at\r\n                    }\r\n                ],\r\n                employees: [],\r\n                selected_employees: null,\r\n                showCreatePanel: false,\r\n                showFilterPanel: false,\r\n                showUuid: '',\r\n                help_topic: '',\r\n                showModal: false\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('list-payroll-transaction')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.getPayrollTransactions();\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            getEmployeeNameWithCode(employee){\r\n                return helper.getEmployeeNameWithCode(employee);\r\n            },\r\n            getEmployeeDesignationOnDate(employee, date){\r\n                return helper.getEmployeeDesignationOnDate(employee, date);\r\n            },\r\n            getVoucherNumber(transaction){\r\n                return helper.getVoucherNumber(transaction);\r\n            },\r\n            formatCurrency(amount){\r\n                return helper.formatCurrency(amount);\r\n            },\r\n            getPayrollNumber(payroll){\r\n                return helper.getPayrollNumber(payroll);\r\n            },\r\n            showAction(payroll_transaction){\r\n                this.showUuid = payroll_transaction.uuid;\r\n                this.showModal = true;\r\n            },\r\n            getPayrollTransactions(page){\r\n                let loader = this.$loading.show();\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                let url = helper.getFilterURL(this.filter);\r\n                axios.get('/api/employee/payroll/transaction?page=' + page + url)\r\n                    .then(response => {\r\n                        this.payroll_transactions = response.payroll_transactions;\r\n                        this.employees = response.filters.employees;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            editPayrollTransaction(payroll_transaction){\r\n                this.$router.push('/employee/payroll/transaction/'+payroll_transaction.uuid+'/edit');\r\n            },\r\n            confirmDelete(payroll_transaction){\r\n                return dialog => this.deletePayrollTransaction(payroll_transaction);\r\n            },\r\n            deletePayrollTransaction(payroll_transaction){\r\n                let loader = this.$loading.show();\r\n                axios.delete('/api/employee/payroll/transaction/'+payroll_transaction.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getPayrollTransactions();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getConfig(config) {\r\n                return helper.getConfig(config)\r\n            },\r\n            print(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/employee/payroll/transaction/print',{filter: this.filter})\r\n                    .then(response => {\r\n                        let print = window.open(\"/print\");\r\n                        loader.hide();\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            pdf(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/employee/payroll/transaction/pdf',{filter: this.filter})\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        window.open('/download/report/'+response+'?token='+this.authToken);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onEmployeeSelect(selectedOption){\r\n                this.filter.employee_id.push(selectedOption.id);\r\n            },\r\n            onEmployeeRemove(removedOption){\r\n                this.filter.employee_id.splice(this.filter.employee_id.indexOf(removedOption.id), 1);\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        },\r\n        watch: {\r\n            'filter.sort_by': function(val){\r\n                this.getPayrollTransactions();\r\n            },\r\n            'filter.order': function(val){\r\n                this.getPayrollTransactions();\r\n            },\r\n            'filter.page_length': function(val){\r\n                this.getPayrollTransactions();\r\n            }\r\n        },\r\n        computed: {\r\n            authToken(){\r\n                return helper.getAuthToken();\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"m-t-10\" }, [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.payrollTransactionForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\n          \"div\",\n          { staticClass: \"row\" },\n          [\n            !_vm.uuid\n              ? [\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"employee.payroll_transaction_head\")\n                            )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"select\",\n                          {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.payrollTransactionForm.head,\n                                expression: \"payrollTransactionForm.head\",\n                              },\n                            ],\n                            staticClass: \"custom-select col-12\",\n                            attrs: { name: \"head\" },\n                            on: {\n                              change: [\n                                function ($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function (o) {\n                                      return o.selected\n                                    })\n                                    .map(function (o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.payrollTransactionForm,\n                                    \"head\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                },\n                                _vm.onPayrollTransactionHeadChange,\n                              ],\n                            },\n                          },\n                          _vm._l(\n                            _vm.payroll_transaction_heads,\n                            function (option) {\n                              return _c(\n                                \"option\",\n                                { domProps: { value: option.value } },\n                                [\n                                  _vm._v(\n                                    \"\\n                            \" +\n                                      _vm._s(option.text) +\n                                      \"\\n                          \"\n                                  ),\n                                ]\n                              )\n                            }\n                          ),\n                          0\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.payrollTransactionForm,\n                            \"prop-name\": \"head\",\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"label\", { attrs: { for: \"\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"v-select\",\n                          {\n                            attrs: {\n                              label: \"name\",\n                              name: \"employee_id\",\n                              id: \"employee_id\",\n                              options: _vm.employees,\n                              placeholder: _vm.trans(\n                                \"employee.select_employee\"\n                              ),\n                            },\n                            on: {\n                              select: _vm.onEmployeeSelect,\n                              close: function ($event) {\n                                return _vm.payrollTransactionForm.errors.clear(\n                                  \"employee_id\"\n                                )\n                              },\n                              remove: function ($event) {\n                                _vm.payrollTransactionForm.employee_id = \"\"\n                              },\n                            },\n                            model: {\n                              value: _vm.selected_employee,\n                              callback: function ($$v) {\n                                _vm.selected_employee = $$v\n                              },\n                              expression: \"selected_employee\",\n                            },\n                          },\n                          [\n                            !_vm.employees.length\n                              ? _c(\n                                  \"div\",\n                                  {\n                                    staticClass: \"multiselect__option\",\n                                    attrs: { slot: \"afterList\" },\n                                    slot: \"afterList\",\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                \" +\n                                        _vm._s(\n                                          _vm.trans(\"general.no_option_found\")\n                                        ) +\n                                        \"\\n                            \"\n                                    ),\n                                  ]\n                                )\n                              : _vm._e(),\n                          ]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.payrollTransactionForm,\n                            \"prop-name\": \"employee_id\",\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _vm.payrollTransactionForm.head == \"salary\" &&\n                        _vm.payrollTransactionForm.employee_id\n                          ? _c(\n                              \"span\",\n                              { staticClass: \"help-block font-80pc\" },\n                              [\n                                _vm.payroll.id\n                                  ? _c(\n                                      \"span\",\n                                      { staticClass: \"text-success\" },\n                                      [\n                                        _vm._v(\n                                          _vm._s(\n                                            _vm.trans(\n                                              \"employee.payroll_transaction_unpaid_payroll_info\",\n                                              {\n                                                number: _vm.payroll.number,\n                                                balance: _vm.formatCurrency(\n                                                  _vm.payroll.balance\n                                                ),\n                                                period:\n                                                  _vm.getUnpaidPayrollPeriod,\n                                              }\n                                            )\n                                          )\n                                        ),\n                                      ]\n                                    )\n                                  : _c(\"span\", { staticClass: \"text-danger\" }, [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.trans(\n                                            \"employee.payroll_transaction_no_unpaid_payroll\"\n                                          )\n                                        )\n                                      ),\n                                    ]),\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm._v(\" \"),\n                        _vm.payrollTransactionForm.head == \"advance_return\" &&\n                        _vm.payrollTransactionForm.employee_id\n                          ? _c(\n                              \"span\",\n                              { staticClass: \"help-block font-80pc\" },\n                              [\n                                _vm._v(\n                                  \"\\n                            \" +\n                                    _vm._s(\n                                      _vm.trans(\n                                        \"employee.payroll_transaction_advance_returnable\",\n                                        {\n                                          balance: _vm.formatCurrency(\n                                            _vm.advance_balance\n                                          ),\n                                        }\n                                      )\n                                    ) +\n                                    \"\\n                        \"\n                                ),\n                              ]\n                            )\n                          : _vm._e(),\n                      ],\n                      1\n                    ),\n                  ]),\n                ]\n              : [\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\"div\", { staticClass: \"form-group\" }, [\n                      _c(\"p\", { staticClass: \"m-t-20\" }, [\n                        _vm._v(\n                          \"\\n                            \" +\n                            _vm._s(\n                              _vm.trans(\n                                \"employee.payroll_transaction_\" +\n                                  _vm.payroll_transaction.head\n                              )\n                            ) +\n                            \"\\n                        \"\n                        ),\n                      ]),\n                    ]),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                    _c(\"div\", { staticClass: \"form-group\" }, [\n                      _vm.payroll_transaction.id\n                        ? _c(\"p\", { staticClass: \"m-t-20\" }, [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(\n                                  _vm.getEmployeeNameWithCode(\n                                    _vm.payroll_transaction.employee\n                                  )\n                                ) +\n                                \" \"\n                            ),\n                            _c(\"br\"),\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(\n                                  _vm.getEmployeeDesignationOnDate(\n                                    _vm.payroll_transaction.employee,\n                                    _vm.payroll_transaction.date_of_transaction\n                                  )\n                                ) +\n                                \" \"\n                            ),\n                            _c(\"br\"),\n                          ])\n                        : _vm._e(),\n                    ]),\n                  ]),\n                ],\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"finance.account\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"account_id\",\n                        id: \"account_id\",\n                        options: _vm.accounts,\n                        placeholder: _vm.trans(\"finance.select_account\"),\n                      },\n                      on: {\n                        select: _vm.onAccountSelect,\n                        close: function ($event) {\n                          return _vm.payrollTransactionForm.errors.clear(\n                            \"account_id\"\n                          )\n                        },\n                        remove: function ($event) {\n                          _vm.payrollTransactionForm.account_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_account,\n                        callback: function ($$v) {\n                          _vm.selected_account = $$v\n                        },\n                        expression: \"selected_account\",\n                      },\n                    },\n                    [\n                      !_vm.accounts.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                            \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                        \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.payrollTransactionForm,\n                      \"prop-name\": \"account_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"finance.amount\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"currency-input\", {\n                    attrs: {\n                      position: _vm.default_currency.position,\n                      symbol: _vm.default_currency.symbol,\n                      name: \"amount\",\n                      placeholder: _vm.trans(\"finance.amount\"),\n                    },\n                    nativeOn: {\n                      input: function ($event) {\n                        return _vm.payrollTransactionForm.errors.clear(\"amount\")\n                      },\n                    },\n                    model: {\n                      value: _vm.payrollTransactionForm.amount,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.payrollTransactionForm, \"amount\", $$v)\n                      },\n                      expression: \"payrollTransactionForm.amount\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.payrollTransactionForm,\n                      \"prop-name\": \"amount\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"finance.date_of_transaction\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"datepicker\", {\n                    attrs: {\n                      bootstrapStyling: true,\n                      placeholder: _vm.trans(\"finance.date_of_transaction\"),\n                    },\n                    on: {\n                      selected: function ($event) {\n                        return _vm.payrollTransactionForm.errors.clear(\n                          \"date_of_transaction\"\n                        )\n                      },\n                    },\n                    model: {\n                      value: _vm.payrollTransactionForm.date_of_transaction,\n                      callback: function ($$v) {\n                        _vm.$set(\n                          _vm.payrollTransactionForm,\n                          \"date_of_transaction\",\n                          $$v\n                        )\n                      },\n                      expression: \"payrollTransactionForm.date_of_transaction\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.payrollTransactionForm,\n                      \"prop-name\": \"date_of_transaction\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"finance.payment_method\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"payment_method_id\",\n                        id: \"payment_method_id\",\n                        options: _vm.payment_methods,\n                        placeholder: _vm.trans(\"finance.select_payment_method\"),\n                      },\n                      on: {\n                        select: _vm.onPaymentMethodSelect,\n                        close: function ($event) {\n                          return _vm.payrollTransactionForm.errors.clear(\n                            \"payment_method_id\"\n                          )\n                        },\n                        remove: function ($event) {\n                          _vm.payrollTransactionForm.payment_method_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_payment_method,\n                        callback: function ($$v) {\n                          _vm.selected_payment_method = $$v\n                        },\n                        expression: \"selected_payment_method\",\n                      },\n                    },\n                    [\n                      !_vm.payment_methods.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                            \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                        \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.payrollTransactionForm,\n                      \"prop-name\": \"payment_method_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"instrument_number\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"finance.instrument_number\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.payrollTransactionForm.instrument_number,\n                            expression:\n                              \"payrollTransactionForm.instrument_number\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"instrument_number\",\n                          placeholder: _vm.trans(\"finance.instrument_number\"),\n                        },\n                        domProps: {\n                          value: _vm.payrollTransactionForm.instrument_number,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.payrollTransactionForm,\n                              \"instrument_number\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.payrollTransactionForm,\n                          \"prop-name\": \"instrument_number\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"instrument_date\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"finance.instrument_date\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          bootstrapStyling: true,\n                          placeholder: _vm.trans(\"finance.instrument_date\"),\n                        },\n                        on: {\n                          selected: function ($event) {\n                            return _vm.payrollTransactionForm.errors.clear(\n                              \"instrument_date\"\n                            )\n                          },\n                        },\n                        model: {\n                          value: _vm.payrollTransactionForm.instrument_date,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.payrollTransactionForm,\n                              \"instrument_date\",\n                              $$v\n                            )\n                          },\n                          expression: \"payrollTransactionForm.instrument_date\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.payrollTransactionForm,\n                          \"prop-name\": \"instrument_date\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"instrument_bank_detail\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"finance.instrument_bank_detail\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value:\n                              _vm.payrollTransactionForm.instrument_bank_detail,\n                            expression:\n                              \"payrollTransactionForm.instrument_bank_detail\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"instrument_bank_detail\",\n                          placeholder: _vm.trans(\n                            \"finance.instrument_bank_detail\"\n                          ),\n                        },\n                        domProps: {\n                          value:\n                            _vm.payrollTransactionForm.instrument_bank_detail,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.payrollTransactionForm,\n                              \"instrument_bank_detail\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.payrollTransactionForm,\n                          \"prop-name\": \"instrument_bank_detail\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"instrument_clearing_date\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"finance.instrument_clearing_date\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          bootstrapStyling: true,\n                          placeholder: _vm.trans(\n                            \"finance.instrument_clearing_date\"\n                          ),\n                        },\n                        on: {\n                          selected: function ($event) {\n                            return _vm.payrollTransactionForm.errors.clear(\n                              \"instrument_clearing_date\"\n                            )\n                          },\n                        },\n                        model: {\n                          value:\n                            _vm.payrollTransactionForm.instrument_clearing_date,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.payrollTransactionForm,\n                              \"instrument_clearing_date\",\n                              $$v\n                            )\n                          },\n                          expression:\n                            \"payrollTransactionForm.instrument_clearing_date\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.payrollTransactionForm,\n                          \"prop-name\": \"instrument_clearing_date\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"reference_number\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"finance.reference_number\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.payrollTransactionForm.reference_number,\n                            expression:\n                              \"payrollTransactionForm.reference_number\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"reference_number\",\n                          placeholder: _vm.trans(\"finance.reference_number\"),\n                        },\n                        domProps: {\n                          value: _vm.payrollTransactionForm.reference_number,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.payrollTransactionForm,\n                              \"reference_number\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.payrollTransactionForm,\n                          \"prop-name\": \"reference_number\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"employee.payroll_transaction_remarks\"))\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"autosize-textarea\", {\n                    attrs: {\n                      rows: \"1\",\n                      name: \"remarks\",\n                      placeholder: _vm.trans(\n                        \"employee.payroll_transaction_remarks\"\n                      ),\n                    },\n                    model: {\n                      value: _vm.payrollTransactionForm.remarks,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.payrollTransactionForm, \"remarks\", $$v)\n                      },\n                      expression: \"payrollTransactionForm.remarks\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.payrollTransactionForm,\n                      \"prop-name\": \"remarks\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"file-upload-input\", {\n                    attrs: {\n                      \"button-text\": _vm.trans(\"general.upload_document\"),\n                      token: _vm.payrollTransactionForm.upload_token,\n                      module: \"transaction\",\n                      \"clear-file\": _vm.clearAttachment,\n                      \"module-id\": _vm.module_id,\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n          ],\n          2\n        ),\n        _vm._v(\" \"),\n        _c(\n          \"div\",\n          { staticClass: \"card-footer text-right\" },\n          [\n            _c(\n              \"router-link\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.uuid,\n                    expression: \"uuid\",\n                  },\n                ],\n                staticClass: \"btn btn-danger waves-effect waves-light\",\n                attrs: { to: \"/employee/payroll/transaction\" },\n              },\n              [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n            ),\n            _vm._v(\" \"),\n            !_vm.uuid\n              ? _c(\n                  \"button\",\n                  {\n                    staticClass: \"btn btn-danger waves-effect waves-light\",\n                    attrs: { type: \"button\" },\n                    on: {\n                      click: function ($event) {\n                        return _vm.$emit(\"cancel\")\n                      },\n                    },\n                  },\n                  [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info waves-effect waves-light\",\n                attrs: { type: \"submit\" },\n              },\n              [\n                _vm.uuid\n                  ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                  : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n              ]\n            ),\n          ],\n          1\n        ),\n      ]\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"employee.payroll_transaction\")) +\n                  \" \\n                    \"\n              ),\n              _vm.payroll_transactions.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.payroll_transactions.total,\n                            from: _vm.payroll_transactions.from,\n                            to: _vm.payroll_transactions.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _vm.payroll_transactions.total &&\n                !_vm.showCreatePanel &&\n                _vm.hasPermission(\"create-payroll-transaction\")\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"general.add_new\"),\n                            expression: \"trans('general.add_new')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showCreatePanel = !_vm.showCreatePanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(\n                            _vm._s(\n                              _vm.trans(\"employee.add_new_payroll_transaction\")\n                            )\n                          ),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"employee.payroll.transaction\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"employee_id\",\n                                  id: \"employee_id\",\n                                  options: _vm.employees,\n                                  placeholder: _vm.trans(\n                                    \"employee.select_employee\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_employees,\n                                },\n                                on: {\n                                  select: _vm.onEmployeeSelect,\n                                  remove: _vm.onEmployeeRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_employees,\n                                  callback: function ($$v) {\n                                    _vm.selected_employees = $$v\n                                  },\n                                  expression: \"selected_employees\",\n                                },\n                              },\n                              [\n                                !_vm.employees.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getPayrollTransactions },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _vm.hasPermission(\"create-payroll-transaction\")\n            ? _c(\"transition\", { attrs: { name: \"fade\" } }, [\n                _vm.showCreatePanel\n                  ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"card-body\" },\n                        [\n                          _c(\"h4\", { staticClass: \"card-title\" }, [\n                            _vm._v(\n                              _vm._s(\n                                _vm.trans(\n                                  \"employee.add_new_payroll_transaction\"\n                                )\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"payroll-transaction-form\", {\n                            on: {\n                              completed: _vm.getPayrollTransactions,\n                              cancel: function ($event) {\n                                _vm.showCreatePanel = !_vm.showCreatePanel\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.payroll_transactions.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"finance.voucher_number\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"employee.payroll_transaction_head\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"finance.account\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"finance.payment_method\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"finance.amount\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"finance.date_of_transaction\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"general.created_by\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"general.created_at\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", { staticClass: \"table-option\" }, [\n                              _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(\n                            _vm.payroll_transactions.data,\n                            function (payroll_transaction) {\n                              return _c(\"tr\", [\n                                _c(\"td\", {\n                                  domProps: {\n                                    textContent: _vm._s(\n                                      _vm.getVoucherNumber(payroll_transaction)\n                                    ),\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    \"\\n                                    \" +\n                                      _vm._s(\n                                        _vm.getEmployeeNameWithCode(\n                                          payroll_transaction.employee\n                                        )\n                                      ) +\n                                      \" \"\n                                  ),\n                                  _c(\"br\"),\n                                  _vm._v(\n                                    \" \" +\n                                      _vm._s(\n                                        _vm.getEmployeeDesignationOnDate(\n                                          payroll_transaction.employee,\n                                          payroll_transaction.date\n                                        )\n                                      ) +\n                                      \"\\n                                \"\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    \"\\n                                    \" +\n                                      _vm._s(\n                                        _vm.trans(\n                                          \"employee.payroll_transaction_\" +\n                                            payroll_transaction.head\n                                        )\n                                      ) +\n                                      \"\\n                                    \"\n                                  ),\n                                  payroll_transaction.head == \"salary\"\n                                    ? _c(\"span\", [\n                                        _vm._v(\n                                          \"(\" +\n                                            _vm._s(\n                                              \"#\" +\n                                                _vm.getPayrollNumber(\n                                                  payroll_transaction.payroll\n                                                )\n                                            ) +\n                                            \")\"\n                                        ),\n                                      ])\n                                    : _vm._e(),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", {\n                                  domProps: {\n                                    textContent: _vm._s(\n                                      payroll_transaction.account.name\n                                    ),\n                                  },\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _c(\"span\", {\n                                    domProps: {\n                                      textContent: _vm._s(\n                                        payroll_transaction.payment_method.name\n                                      ),\n                                    },\n                                  }),\n                                  _vm._v(\" \"),\n                                  payroll_transaction.instrument_number\n                                    ? _c(\"span\", [\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \" \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"finance.instrument_number\"\n                                              )\n                                            ) +\n                                            \" \"\n                                        ),\n                                        _c(\"u\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              payroll_transaction.instrument_number\n                                            ) + \" \"\n                                          ),\n                                        ]),\n                                      ])\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  payroll_transaction.instrument_date\n                                    ? _c(\"span\", [\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \" \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"finance.instrument_date\"\n                                              )\n                                            ) +\n                                            \" \"\n                                        ),\n                                        _c(\"u\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm._f(\"moment\")(\n                                                payroll_transaction.instrument_date\n                                              )\n                                            ) + \" \"\n                                          ),\n                                        ]),\n                                      ])\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  payroll_transaction.instrument_bank_detail\n                                    ? _c(\"span\", [\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \" \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"finance.instrument_bank_detail\"\n                                              )\n                                            ) +\n                                            \" \"\n                                        ),\n                                        _c(\"u\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              payroll_transaction.instrument_bank_detail\n                                            ) + \" \"\n                                          ),\n                                        ]),\n                                      ])\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  payroll_transaction.instrument_clearing_date\n                                    ? _c(\"span\", [\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \" \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"finance.instrument_clearing_date\"\n                                              )\n                                            ) +\n                                            \" \"\n                                        ),\n                                        _c(\"u\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              _vm._f(\"moment\")(\n                                                payroll_transaction.instrument_clearing_date\n                                              )\n                                            ) + \" \"\n                                          ),\n                                        ]),\n                                      ])\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  payroll_transaction.reference_number\n                                    ? _c(\"span\", [\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \" \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"finance.reference_number\"\n                                              )\n                                            ) +\n                                            \" \"\n                                        ),\n                                        _c(\"u\", [\n                                          _vm._v(\n                                            _vm._s(\n                                              payroll_transaction.reference_number\n                                            )\n                                          ),\n                                        ]),\n                                      ])\n                                    : _vm._e(),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.formatCurrency(\n                                        payroll_transaction.amount\n                                      )\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm._f(\"moment\")(payroll_transaction.date)\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.getEmployeeNameWithCode(\n                                        payroll_transaction.user.employee\n                                      )\n                                    ) + \" \"\n                                  ),\n                                  _c(\"br\"),\n                                  _vm._v(\n                                    \" \" +\n                                      _vm._s(\n                                        _vm.getEmployeeDesignationOnDate(\n                                          payroll_transaction.user.employee,\n                                          payroll_transaction.date\n                                        )\n                                      )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm._f(\"momentDateTime\")(\n                                        payroll_transaction.created_at\n                                      )\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", { staticClass: \"table-option\" }, [\n                                  _c(\"div\", { staticClass: \"btn-group\" }, [\n                                    _vm.hasPermission(\n                                      \"edit-payroll-transaction\"\n                                    )\n                                      ? _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"tooltip\",\n                                                rawName: \"v-tooltip\",\n                                                value: _vm.trans(\n                                                  \"employee.edit_payroll_transaction\"\n                                                ),\n                                                expression:\n                                                  \"trans('employee.edit_payroll_transaction')\",\n                                              },\n                                            ],\n                                            staticClass: \"btn btn-info btn-sm\",\n                                            on: {\n                                              click: function ($event) {\n                                                $event.preventDefault()\n                                                return _vm.editPayrollTransaction(\n                                                  payroll_transaction\n                                                )\n                                              },\n                                            },\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-edit\",\n                                            }),\n                                          ]\n                                        )\n                                      : _vm._e(),\n                                    _vm._v(\" \"),\n                                    _vm.hasPermission(\n                                      \"cancel-payroll-transaction\"\n                                    )\n                                      ? _c(\n                                          \"button\",\n                                          {\n                                            directives: [\n                                              {\n                                                name: \"confirm\",\n                                                rawName: \"v-confirm\",\n                                                value: {\n                                                  ok: _vm.confirmDelete(\n                                                    payroll_transaction\n                                                  ),\n                                                },\n                                                expression:\n                                                  \"{ok: confirmDelete(payroll_transaction)}\",\n                                              },\n                                              {\n                                                name: \"tooltip\",\n                                                rawName: \"v-tooltip\",\n                                                value: _vm.trans(\n                                                  \"employee.delete_payroll_transaction\"\n                                                ),\n                                                expression:\n                                                  \"trans('employee.delete_payroll_transaction')\",\n                                              },\n                                            ],\n                                            key: payroll_transaction.id,\n                                            staticClass:\n                                              \"btn btn-danger btn-sm\",\n                                          },\n                                          [\n                                            _c(\"i\", {\n                                              staticClass: \"fas fa-times\",\n                                            }),\n                                          ]\n                                        )\n                                      : _vm._e(),\n                                  ]),\n                                ]),\n                              ])\n                            }\n                          ),\n                          0\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.payroll_transactions.total\n                  ? _c(\n                      \"module-info\",\n                      {\n                        attrs: {\n                          module: \"employee\",\n                          title: \"payroll_transaction_module_title\",\n                          description: \"payroll_transaction_module_description\",\n                          icon: \"list\",\n                        },\n                      },\n                      [\n                        _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                          !_vm.showCreatePanel &&\n                          _vm.hasPermission(\"create-payroll-transaction\")\n                            ? _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-info btn-md\",\n                                  on: {\n                                    click: function ($event) {\n                                      _vm.showCreatePanel = !_vm.showCreatePanel\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                  _vm._v(\n                                    \" \" + _vm._s(_vm.trans(\"general.add_new\"))\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.payroll_transactions,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getPayrollTransactions,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=cb76875e&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('cb76875e')) {\n      api.createRecord('cb76875e', component.options)\n    } else {\n      api.reload('cb76875e', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=cb76875e&\", function () {\n      api.rerender('cb76875e', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/payroll/transaction/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=14f30215&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('14f30215')) {\n      api.createRecord('14f30215', component.options)\n    } else {\n      api.reload('14f30215', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=14f30215&\", function () {\n      api.rerender('14f30215', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/payroll/transaction/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=cb76875e&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=14f30215&\""],"names":[],"sourceRoot":""}