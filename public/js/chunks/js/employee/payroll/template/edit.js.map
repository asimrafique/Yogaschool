{"version":3,"file":"js/chunks/js/employee/payroll/template/edit.js?id=f16d2c061f70a704","mappings":";;;;;;;;;;;;;;AAyBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClPA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAIA;AAKA;AAAA;AAGA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AASA;AAMA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AAEA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AASA;AAEA;AAAA;AAAA;AAAA;AAWA;AAMA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAIA;AAAA;AAGA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAWA;AACA;AACA;;;;;;;;;;;;;;;;;;AC1bA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/employee/payroll/template/edit.vue","webpack://InstiKit/resources/js/views/employee/payroll/template/form.vue","webpack://InstiKit/./resources/js/views/employee/payroll/template/edit.vue","webpack://InstiKit/./resources/js/views/employee/payroll/template/form.vue","webpack://InstiKit/./resources/js/views/employee/payroll/template/edit.vue?fdca","webpack://InstiKit/./resources/js/views/employee/payroll/template/form.vue?eb5d","webpack://InstiKit/./resources/js/views/employee/payroll/template/edit.vue?4ffc","webpack://InstiKit/./resources/js/views/employee/payroll/template/form.vue?32cb","webpack://InstiKit/./resources/js/views/employee/payroll/template/edit.vue?34a9"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('employee.edit_payroll_template')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/employee/payroll/template')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('employee.payroll_template')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card card-form\">\r\n                <div class=\"card-body p-t-20\">\r\n                    <payroll-template-form :uuid=\"uuid\"></payroll-template-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import payrollTemplateForm from './form';\r\n\r\n    export default {\r\n        components : { payrollTemplateForm },\r\n        data() {\r\n            return {\r\n                uuid:this.$route.params.uuid\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('manage-payroll-template')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","<template>\r\n    <div class=\"p-t-20\">\r\n        <form @submit.prevent=\"proceed\" @keydown=\"payrollTemplateForm.errors.clear($event.target.name)\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('employee.payroll_template_name')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"payrollTemplateForm.name\" name=\"name\" :placeholder=\"trans('employee.payroll_template_name')\">\r\n                        <show-error :form-name=\"payrollTemplateForm\" prop-name=\"name\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('employee.payroll_template_is_active')}}</label>\r\n                        <br />\r\n                        <switches class=\"\" v-model=\"payrollTemplateForm.is_active\" theme=\"bootstrap\" color=\"success\"></switches> \r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('employee.payroll_template_description')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"payrollTemplateForm.description\" name=\"description\" :placeholder=\"trans('employee.payroll_template_description')\">\r\n                        <show-error :form-name=\"payrollTemplateForm\" prop-name=\"description\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <draggable v-model=\"payrollTemplateForm.pay_heads\" @start=\"drag=true\" @end=\"drag=false\" class=\"list-group\">\r\n                <div class=\"row\" v-for=\"(pay_head,index) in payrollTemplateForm.pay_heads\" :key=\"pay_head.id\">\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <i class=\"fas fa-arrows-alt pointer m-r-20\"></i> <span :class=\"pay_head.type == 'earning' ? 'text-success' : 'text-danger'\">{{getPayHeadNameWithAlias(pay_head)}}</span>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-3\">\r\n                        <div class=\"form-group\">\r\n                            <select v-model=\"pay_head.category\" class=\"custom-select col-12\" :name=\"getCategoryName(index)\" @change=\"payrollTemplateForm.errors.clear(getCategoryName(index))\">\r\n                              <option value=\"null\">{{trans('general.select_one')}}</option>\r\n                              <option v-for=\"option in categories\" v-bind:value=\"option.value\">\r\n                                {{ option.text }}\r\n                              </option>\r\n                            </select>\r\n                            <show-error :form-name=\"payrollTemplateForm\" :prop-name=\"getCategoryName(index)\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-4\" v-if=\"pay_head.category == 'production'\">\r\n                        <div class=\"form-group\">\r\n                            <select v-model=\"pay_head.attendance_type_id\" class=\"custom-select col-12\" :name=\"getAttendanceTypeName(index)\" @change=\"payrollTemplateForm.errors.clear(getAttendanceTypeName(index))\">\r\n                              <option value=\"null\">{{trans('employee.select_attendance_type')}}</option>\r\n                              <option v-for=\"option in attendance_types\" v-bind:value=\"option.id\">\r\n                                {{ option.name }} ({{option.unit}})\r\n                              </option>\r\n                            </select>\r\n                            <show-error :form-name=\"payrollTemplateForm\" :prop-name=\"getAttendanceTypeName(index)\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-12 col-sm-6\" v-if=\"pay_head.category == 'computation'\">\r\n                        <div class=\"form-group\">\r\n                            <input class=\"form-control\" type=\"text\" v-model=\"pay_head.computation\" :name=\"getComputationName(index)\" :placeholder=\"trans('employee.pay_head_computation')\">\r\n                            <show-error :form-name=\"payrollTemplateForm\" :prop-name=\"getComputationName(index)\"></show-error>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </draggable>\r\n            <div class=\"card-footer\">\r\n                <div class=\"text-right\">\r\n                    <router-link to=\"/employee/payroll/template\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"uuid\">{{trans('general.cancel')}}</router-link>\r\n                    <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.save')}}</button>\r\n                </div>\r\n            </div> \r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        components: {},\r\n        props: ['uuid'],\r\n        data(){\r\n            return {\r\n                payrollTemplateForm: new Form({\r\n                    name: '',\r\n                    is_active: '',\r\n                    description: '',\r\n                    pay_heads: []\r\n                }),\r\n                pay_heads: [],\r\n                attendance_types: [],\r\n                categories: [\r\n                    {\r\n                        text: i18n.employee.pay_head_category_not_applicable,\r\n                        value: 'not_applicable'\r\n                    },\r\n                    {\r\n                        text: i18n.employee.pay_head_category_attendance,\r\n                        value: 'attendance'\r\n                    },\r\n                    {\r\n                        text: i18n.employee.pay_head_category_flat_rate,\r\n                        value: 'flat_rate'\r\n                    },\r\n                    {\r\n                        text: i18n.employee.pay_head_category_user_defined,\r\n                        value: 'user_defined'\r\n                    },\r\n                    {\r\n                        text: i18n.employee.pay_head_category_computation,\r\n                        value: 'computation'\r\n                    },\r\n                    {\r\n                        text: i18n.employee.pay_head_category_production,\r\n                        value: 'production'\r\n                    }\r\n                ]\r\n            }\r\n        },\r\n        mounted(){\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            getPayHeadNameWithAlias(pay_head){\r\n                return helper.getPayHeadNameWithAlias(pay_head);\r\n            },\r\n            getCategoryName(index){\r\n                return 'pay_head_category_'+index;\r\n            },\r\n            getComputationName(index){\r\n                return 'pay_head_computation_'+index;\r\n            },\r\n            getAttendanceTypeName(index){\r\n                return 'attendance_type_'+index;\r\n            },\r\n            populatePayHeads(){\r\n                this.pay_heads.forEach(pay_head => {\r\n                    this.payrollTemplateForm.pay_heads.push({\r\n                        id: pay_head.id,\r\n                        name: pay_head.name,\r\n                        alias: pay_head.alias,\r\n                        type: pay_head.type,\r\n                        category: null,\r\n                        attendance_type_id: null,\r\n                        computation: ''\r\n                    })\r\n                })\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/employee/payroll/template/pre-requisite')\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        this.pay_heads = response.pay_heads;\r\n                        this.attendance_types = response.attendance_types;\r\n                        this.payrollTemplateForm.pay_heads = [];\r\n                        if(this.uuid)\r\n                            this.get();\r\n                        else {\r\n                            this.populatePayHeads();\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            proceed(){\r\n                if(this.uuid)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.payrollTemplateForm.post('/api/employee/payroll/template')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.payrollTemplateForm.pay_heads = [];\r\n                        this.populatePayHeads();\r\n                        loader.hide();\r\n                        this.$emit('completed');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/employee/payroll/template/'+this.uuid)\r\n                    .then(response => {\r\n                        let payroll_template = response.payroll_template;\r\n                        this.payrollTemplateForm.name = payroll_template.name;\r\n                        this.payrollTemplateForm.is_active = payroll_template.is_active;\r\n                        this.payrollTemplateForm.description = payroll_template.description;\r\n                        payroll_template.payroll_template_details.forEach(payroll_template_detail => {\r\n                            this.payrollTemplateForm.pay_heads.push({\r\n                                id: payroll_template_detail.pay_head.id,\r\n                                name: payroll_template_detail.pay_head.name,\r\n                                alias: payroll_template_detail.pay_head.alias,\r\n                                type: payroll_template_detail.pay_head.type,\r\n                                category: payroll_template_detail.category,\r\n                                computation: payroll_template_detail.computation,\r\n                                attendance_type_id: payroll_template_detail.employee_attendance_type_id\r\n                            })\r\n                        });\r\n\r\n                        this.pay_heads.forEach(pay_head => {\r\n                            const detail = this.payrollTemplateForm.pay_heads.find(o => o.id == pay_head.id);\r\n\r\n                            if (typeof detail == 'undefined') {\r\n                                this.payrollTemplateForm.pay_heads.push({\r\n                                    id: pay_head.id,\r\n                                    name: pay_head.name,\r\n                                    alias: pay_head.alias,\r\n                                    type: pay_head.type,\r\n                                    category: null,\r\n                                    computation: '',\r\n                                    attendance_type_id: null\r\n                                })\r\n                            }\r\n                        })\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/employee/payroll/template');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.payrollTemplateForm.patch('/api/employee/payroll/template/'+this.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/employee/payroll/template');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"employee.edit_payroll_template\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/employee/payroll/template\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.payroll_template\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"card-body p-t-20\" },\n          [_c(\"payroll-template-form\", { attrs: { uuid: _vm.uuid } })],\n          1\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", { staticClass: \"p-t-20\" }, [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.payrollTemplateForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.payroll_template_name\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.payrollTemplateForm.name,\n                      expression: \"payrollTemplateForm.name\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"name\",\n                    placeholder: _vm.trans(\"employee.payroll_template_name\"),\n                  },\n                  domProps: { value: _vm.payrollTemplateForm.name },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.payrollTemplateForm,\n                        \"name\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.payrollTemplateForm,\n                    \"prop-name\": \"name\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"employee.payroll_template_is_active\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"br\"),\n                _vm._v(\" \"),\n                _c(\"switches\", {\n                  attrs: { theme: \"bootstrap\", color: \"success\" },\n                  model: {\n                    value: _vm.payrollTemplateForm.is_active,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.payrollTemplateForm, \"is_active\", $$v)\n                    },\n                    expression: \"payrollTemplateForm.is_active\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"employee.payroll_template_description\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.payrollTemplateForm.description,\n                      expression: \"payrollTemplateForm.description\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"description\",\n                    placeholder: _vm.trans(\n                      \"employee.payroll_template_description\"\n                    ),\n                  },\n                  domProps: { value: _vm.payrollTemplateForm.description },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.payrollTemplateForm,\n                        \"description\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.payrollTemplateForm,\n                    \"prop-name\": \"description\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\n          \"draggable\",\n          {\n            staticClass: \"list-group\",\n            on: {\n              start: function ($event) {\n                _vm.drag = true\n              },\n              end: function ($event) {\n                _vm.drag = false\n              },\n            },\n            model: {\n              value: _vm.payrollTemplateForm.pay_heads,\n              callback: function ($$v) {\n                _vm.$set(_vm.payrollTemplateForm, \"pay_heads\", $$v)\n              },\n              expression: \"payrollTemplateForm.pay_heads\",\n            },\n          },\n          _vm._l(_vm.payrollTemplateForm.pay_heads, function (pay_head, index) {\n            return _c(\"div\", { key: pay_head.id, staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\"i\", { staticClass: \"fas fa-arrows-alt pointer m-r-20\" }),\n                _vm._v(\" \"),\n                _c(\n                  \"span\",\n                  {\n                    class:\n                      pay_head.type == \"earning\"\n                        ? \"text-success\"\n                        : \"text-danger\",\n                  },\n                  [_vm._v(_vm._s(_vm.getPayHeadNameWithAlias(pay_head)))]\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\n                      \"select\",\n                      {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: pay_head.category,\n                            expression: \"pay_head.category\",\n                          },\n                        ],\n                        staticClass: \"custom-select col-12\",\n                        attrs: { name: _vm.getCategoryName(index) },\n                        on: {\n                          change: [\n                            function ($event) {\n                              var $$selectedVal = Array.prototype.filter\n                                .call($event.target.options, function (o) {\n                                  return o.selected\n                                })\n                                .map(function (o) {\n                                  var val = \"_value\" in o ? o._value : o.value\n                                  return val\n                                })\n                              _vm.$set(\n                                pay_head,\n                                \"category\",\n                                $event.target.multiple\n                                  ? $$selectedVal\n                                  : $$selectedVal[0]\n                              )\n                            },\n                            function ($event) {\n                              _vm.payrollTemplateForm.errors.clear(\n                                _vm.getCategoryName(index)\n                              )\n                            },\n                          ],\n                        },\n                      },\n                      [\n                        _c(\"option\", { attrs: { value: \"null\" } }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                        ]),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.categories, function (option) {\n                          return _c(\n                            \"option\",\n                            { domProps: { value: option.value } },\n                            [\n                              _vm._v(\n                                \"\\n                            \" +\n                                  _vm._s(option.text) +\n                                  \"\\n                          \"\n                              ),\n                            ]\n                          )\n                        }),\n                      ],\n                      2\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.payrollTemplateForm,\n                        \"prop-name\": _vm.getCategoryName(index),\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n              _vm._v(\" \"),\n              pay_head.category == \"production\"\n                ? _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\n                          \"select\",\n                          {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: pay_head.attendance_type_id,\n                                expression: \"pay_head.attendance_type_id\",\n                              },\n                            ],\n                            staticClass: \"custom-select col-12\",\n                            attrs: { name: _vm.getAttendanceTypeName(index) },\n                            on: {\n                              change: [\n                                function ($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function (o) {\n                                      return o.selected\n                                    })\n                                    .map(function (o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    pay_head,\n                                    \"attendance_type_id\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                },\n                                function ($event) {\n                                  _vm.payrollTemplateForm.errors.clear(\n                                    _vm.getAttendanceTypeName(index)\n                                  )\n                                },\n                              ],\n                            },\n                          },\n                          [\n                            _c(\"option\", { attrs: { value: \"null\" } }, [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"employee.select_attendance_type\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _vm._l(_vm.attendance_types, function (option) {\n                              return _c(\n                                \"option\",\n                                { domProps: { value: option.id } },\n                                [\n                                  _vm._v(\n                                    \"\\n                            \" +\n                                      _vm._s(option.name) +\n                                      \" (\" +\n                                      _vm._s(option.unit) +\n                                      \")\\n                          \"\n                                  ),\n                                ]\n                              )\n                            }),\n                          ],\n                          2\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.payrollTemplateForm,\n                            \"prop-name\": _vm.getAttendanceTypeName(index),\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              pay_head.category == \"computation\"\n                ? _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"form-group\" },\n                      [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: pay_head.computation,\n                              expression: \"pay_head.computation\",\n                            },\n                          ],\n                          staticClass: \"form-control\",\n                          attrs: {\n                            type: \"text\",\n                            name: _vm.getComputationName(index),\n                            placeholder: _vm.trans(\n                              \"employee.pay_head_computation\"\n                            ),\n                          },\n                          domProps: { value: pay_head.computation },\n                          on: {\n                            input: function ($event) {\n                              if ($event.target.composing) return\n                              _vm.$set(\n                                pay_head,\n                                \"computation\",\n                                $event.target.value\n                              )\n                            },\n                          },\n                        }),\n                        _vm._v(\" \"),\n                        _c(\"show-error\", {\n                          attrs: {\n                            \"form-name\": _vm.payrollTemplateForm,\n                            \"prop-name\": _vm.getComputationName(index),\n                          },\n                        }),\n                      ],\n                      1\n                    ),\n                  ])\n                : _vm._e(),\n            ])\n          }),\n          0\n        ),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"card-footer\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"text-right\" },\n            [\n              _c(\n                \"router-link\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.uuid,\n                      expression: \"uuid\",\n                    },\n                  ],\n                  staticClass: \"btn btn-danger waves-effect waves-light\",\n                  attrs: { to: \"/employee/payroll/template\" },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-info waves-effect waves-light\",\n                  attrs: { type: \"submit\" },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n              ),\n            ],\n            1\n          ),\n        ]),\n      ],\n      1\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=4a52059a&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4a52059a')) {\n      api.createRecord('4a52059a', component.options)\n    } else {\n      api.reload('4a52059a', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=4a52059a&\", function () {\n      api.rerender('4a52059a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/payroll/template/edit.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=d0d4a226&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('d0d4a226')) {\n      api.createRecord('d0d4a226', component.options)\n    } else {\n      api.reload('d0d4a226', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=d0d4a226&\", function () {\n      api.rerender('d0d4a226', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/payroll/template/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=4a52059a&\""],"names":[],"sourceRoot":""}