{"version":3,"file":"js/chunks/js/employee/payroll/salary/edit.js?id=a665bb32f7553133","mappings":";;;;;;;;;;;;;;AAyBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACgCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACtMA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAAA;AACA;AAAA;AAIA;AAKA;AAaA;AAAA;AAYA;AAAA;AASA;AAAA;AAKA;AACA;AAOA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAWA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/employee/payroll/salary/edit.vue","webpack://InstiKit/resources/js/views/employee/payroll/salary/form.vue","webpack://InstiKit/./resources/js/views/employee/payroll/salary/edit.vue","webpack://InstiKit/./resources/js/views/employee/payroll/salary/form.vue","webpack://InstiKit/./resources/js/views/employee/payroll/salary/edit.vue?b6a4","webpack://InstiKit/./resources/js/views/employee/payroll/salary/form.vue?19be","webpack://InstiKit/./resources/js/views/employee/payroll/salary/edit.vue?2c0e","webpack://InstiKit/./resources/js/views/employee/payroll/salary/form.vue?34c8","webpack://InstiKit/./resources/js/views/employee/payroll/salary/edit.vue?906c"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('employee.edit_salary_structure')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/employee/payroll/salary')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('employee.salary_structure')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card card-form\">\r\n                <div class=\"card-body p-t-20\">\r\n                    <salary-structure-form :uuid=\"uuid\"></salary-structure-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import salaryStructureForm from './form';\r\n\r\n    export default {\r\n        components : { salaryStructureForm },\r\n        data() {\r\n            return {\r\n                uuid:this.$route.params.uuid\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('define-employee-salary')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","<template>\r\n    <div>\r\n        <form @submit.prevent=\"proceed\" @keydown=\"salaryStructureForm.errors.clear($event.target.name)\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('employee.employee')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_employee\" name=\"employee_id\" id=\"employee_id\" :options=\"employees\" :placeholder=\"trans('employee.select_employee')\" @select=\"onEmployeeSelect\" @close=\"salaryStructureForm.errors.clear('employee_id')\" @remove=\"salaryStructureForm.employee_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employees.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"salaryStructureForm\" prop-name=\"employee_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('employee.payroll_template')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_payroll_template\" name=\"payroll_template_id\" id=\"payroll_template_id\" :options=\"payroll_templates\" :placeholder=\"trans('employee.select_payroll_template')\" @select=\"onPayrollTemplateSelect\" @close=\"salaryStructureForm.errors.clear('payroll_template_id')\" @remove=\"salaryStructureForm.payroll_template_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!payroll_templates.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"salaryStructureForm\" prop-name=\"payroll_template_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('employee.salary_structure_date_effective')}}</label>\r\n                        <datepicker v-model=\"salaryStructureForm.date_effective\" :bootstrapStyling=\"true\" @selected=\"salaryStructureForm.errors.clear('date_effective')\" :placeholder=\"trans('employee.salary_structure_date_effective')\"></datepicker>\r\n                        <show-error :form-name=\"salaryStructureForm\" prop-name=\"date_effective\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" v-for=\"(payroll_template_detail,index) in salaryStructureForm.payroll_template_details\">\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <span :class=\"[payroll_template_detail.type == 'earning' ? 'text-success' : 'text-danger']\" >{{payroll_template_detail.name}} ({{payroll_template_detail.alias}})</span> <br />\r\n                    <span class=\"font-80pc\">{{trans('employee.pay_head_category_'+payroll_template_detail.category)}}</span>\r\n                    <span class=\"font-80pc\" v-if=\"payroll_template_detail.category != 'production'\">\r\n                        ({{trans('employee.salary_structure_per_month')}})\r\n                    </span>\r\n                    <span class=\"font-80pc\" v-else>\r\n                        ({{trans('employee.salary_structure_per_unit', {unit: payroll_template_detail.unit})}})\r\n                    </span> \r\n                </div>\r\n                <div class=\"col-12 col-sm-4\">\r\n                    <div class=\"form-group\">\r\n                        <currency-input :position=\"default_currency.position\" :symbol=\"default_currency.symbol\" :name=\"getAmountName(index)\" :placeholder=\"trans('employee.salary_structure_amount')\" v-model=\"payroll_template_detail.amount\" @input.native=\"salaryStructureForm.errors.clear(getAmountName(index))\"></currency-input>\r\n                        <show-error :form-name=\"salaryStructureForm\" :prop-name=\"getAmountName(index)\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('employee.salary_structure_description')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"salaryStructureForm.description\" name=\"description\" :placeholder=\"trans('employee.salary_structure_description')\">\r\n                        <show-error :form-name=\"salaryStructureForm\" prop-name=\"description\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <div class=\"text-right\">\r\n                    <router-link to=\"/employee/payroll/salary\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"uuid\">{{trans('general.cancel')}}</router-link>\r\n                    <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">{{trans('general.save')}}</button>\r\n                </div>\r\n            </div> \r\n        </form>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        components : {},\r\n        props:['uuid'],\r\n        data() {\r\n            return {\r\n                salaryStructureForm: new Form({\r\n                    employee_id: '',\r\n                    date_effective: '',\r\n                    payroll_template_id: '',\r\n                    description: '',\r\n                    payroll_template_details: []\r\n                }),\r\n                employees: [],\r\n                payroll_templates: [],\r\n                selected_employee: null,\r\n                selected_payroll_template: null,\r\n                payroll_template_with_details: [],\r\n                default_currency: helper.getConfig('default_currency')\r\n            }\r\n        },\r\n        mounted(){\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            getAmountName(index){\r\n                return 'amount_'+index;\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/employee/payroll/salary/pre-requisite')\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        this.employees = response.employees;\r\n                        this.payroll_templates = response.payroll_templates;\r\n                        this.payroll_template_with_details = response.payroll_template_with_details;\r\n                        if(this.uuid)\r\n                            this.get();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            onEmployeeSelect(selectedOption){\r\n                this.salaryStructureForm.employee_id = selectedOption.id;\r\n            },\r\n            onPayrollTemplateSelect(selectedOption){\r\n                this.salaryStructureForm.payroll_template_id = selectedOption.id;\r\n                this.salaryStructureForm.payroll_template_details = [];\r\n                let payroll_template_with_detail = this.payroll_template_with_details.find(o => o.id == selectedOption.id);\r\n                let payroll_details = payroll_template_with_detail.payroll_template_details.filter(o => (o.category == 'attendance' || o.category == 'flat_rate' || o.category == 'production'));\r\n                payroll_details.forEach(payroll_detail => {\r\n                    this.salaryStructureForm.payroll_template_details.push({\r\n                        id: payroll_detail.id,\r\n                        name: payroll_detail.pay_head.name,\r\n                        alias: payroll_detail.pay_head.alias,\r\n                        type: payroll_detail.pay_head.type,\r\n                        category: payroll_detail.category,\r\n                        unit: payroll_detail.attendance_type ? payroll_detail.attendance_type.unit : null,\r\n                        amount: ''\r\n                    })\r\n                })\r\n            },\r\n            proceed(){\r\n                if(this.uuid)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.salaryStructureForm.post('/api/employee/payroll/salary')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.salaryStructureForm.payroll_template_details = [];\r\n                        this.selected_employee = null;\r\n                        this.selected_payroll_template = null;\r\n                        this.$emit('completed');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/employee/payroll/salary/'+this.uuid)\r\n                    .then(response => {\r\n                        let salary = response.salary;\r\n                        this.salaryStructureForm.employee_id = salary.employee_id;\r\n                        this.salaryStructureForm.payroll_template_id = salary.payroll_template_id;\r\n                        this.salaryStructureForm.date_effective = salary.date_effective;\r\n                        this.salaryStructureForm.description = salary.description;\r\n                        this.selected_payroll_template = salary.payroll_template_id ? {id: salary.payroll_template_id, name: salary.payroll_template.name} : null;\r\n                        this.onPayrollTemplateSelect(this.selected_payroll_template);\r\n                        salary.salary_details.forEach(salary_detail => {\r\n                            let detail = this.salaryStructureForm.payroll_template_details.find(o => o.id == salary_detail.payroll_template_detail_id);\r\n                            if (typeof detail != 'undefined') {\r\n                                detail.amount = salary_detail.amount;\r\n                            }\r\n                        });\r\n                        this.selected_employee = response.selected_employee;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/employee/payroll/salary');\r\n                    });\r\n\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.salaryStructureForm.patch('/api/employee/payroll/salary/'+this.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/employee/payroll/salary');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"employee.edit_salary_structure\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/employee/payroll/salary\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.salary_structure\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"card-body p-t-20\" },\n          [_c(\"salary-structure-form\", { attrs: { uuid: _vm.uuid } })],\n          1\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\n      \"form\",\n      {\n        on: {\n          submit: function ($event) {\n            $event.preventDefault()\n            return _vm.proceed.apply(null, arguments)\n          },\n          keydown: function ($event) {\n            return _vm.salaryStructureForm.errors.clear($event.target.name)\n          },\n        },\n      },\n      [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      name: \"employee_id\",\n                      id: \"employee_id\",\n                      options: _vm.employees,\n                      placeholder: _vm.trans(\"employee.select_employee\"),\n                    },\n                    on: {\n                      select: _vm.onEmployeeSelect,\n                      close: function ($event) {\n                        return _vm.salaryStructureForm.errors.clear(\n                          \"employee_id\"\n                        )\n                      },\n                      remove: function ($event) {\n                        _vm.salaryStructureForm.employee_id = \"\"\n                      },\n                    },\n                    model: {\n                      value: _vm.selected_employee,\n                      callback: function ($$v) {\n                        _vm.selected_employee = $$v\n                      },\n                      expression: \"selected_employee\",\n                    },\n                  },\n                  [\n                    !_vm.employees.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                        \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.salaryStructureForm,\n                    \"prop-name\": \"employee_id\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"employee.payroll_template\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      name: \"payroll_template_id\",\n                      id: \"payroll_template_id\",\n                      options: _vm.payroll_templates,\n                      placeholder: _vm.trans(\n                        \"employee.select_payroll_template\"\n                      ),\n                    },\n                    on: {\n                      select: _vm.onPayrollTemplateSelect,\n                      close: function ($event) {\n                        return _vm.salaryStructureForm.errors.clear(\n                          \"payroll_template_id\"\n                        )\n                      },\n                      remove: function ($event) {\n                        _vm.salaryStructureForm.payroll_template_id = \"\"\n                      },\n                    },\n                    model: {\n                      value: _vm.selected_payroll_template,\n                      callback: function ($$v) {\n                        _vm.selected_payroll_template = $$v\n                      },\n                      expression: \"selected_payroll_template\",\n                    },\n                  },\n                  [\n                    !_vm.payroll_templates.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                        \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.salaryStructureForm,\n                    \"prop-name\": \"payroll_template_id\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(\n                      _vm.trans(\"employee.salary_structure_date_effective\")\n                    )\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\n                      \"employee.salary_structure_date_effective\"\n                    ),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.salaryStructureForm.errors.clear(\n                        \"date_effective\"\n                      )\n                    },\n                  },\n                  model: {\n                    value: _vm.salaryStructureForm.date_effective,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.salaryStructureForm, \"date_effective\", $$v)\n                    },\n                    expression: \"salaryStructureForm.date_effective\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.salaryStructureForm,\n                    \"prop-name\": \"date_effective\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _vm._l(\n          _vm.salaryStructureForm.payroll_template_details,\n          function (payroll_template_detail, index) {\n            return _c(\"div\", { staticClass: \"row\" }, [\n              _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\n                  \"span\",\n                  {\n                    class: [\n                      payroll_template_detail.type == \"earning\"\n                        ? \"text-success\"\n                        : \"text-danger\",\n                    ],\n                  },\n                  [\n                    _vm._v(\n                      _vm._s(payroll_template_detail.name) +\n                        \" (\" +\n                        _vm._s(payroll_template_detail.alias) +\n                        \")\"\n                    ),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"br\"),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"font-80pc\" }, [\n                  _vm._v(\n                    _vm._s(\n                      _vm.trans(\n                        \"employee.pay_head_category_\" +\n                          payroll_template_detail.category\n                      )\n                    )\n                  ),\n                ]),\n                _vm._v(\" \"),\n                payroll_template_detail.category != \"production\"\n                  ? _c(\"span\", { staticClass: \"font-80pc\" }, [\n                      _vm._v(\n                        \"\\n                    (\" +\n                          _vm._s(\n                            _vm.trans(\"employee.salary_structure_per_month\")\n                          ) +\n                          \")\\n                \"\n                      ),\n                    ])\n                  : _c(\"span\", { staticClass: \"font-80pc\" }, [\n                      _vm._v(\n                        \"\\n                    (\" +\n                          _vm._s(\n                            _vm.trans(\"employee.salary_structure_per_unit\", {\n                              unit: payroll_template_detail.unit,\n                            })\n                          ) +\n                          \")\\n                \"\n                      ),\n                    ]),\n              ]),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"currency-input\", {\n                      attrs: {\n                        position: _vm.default_currency.position,\n                        symbol: _vm.default_currency.symbol,\n                        name: _vm.getAmountName(index),\n                        placeholder: _vm.trans(\n                          \"employee.salary_structure_amount\"\n                        ),\n                      },\n                      nativeOn: {\n                        input: function ($event) {\n                          _vm.salaryStructureForm.errors.clear(\n                            _vm.getAmountName(index)\n                          )\n                        },\n                      },\n                      model: {\n                        value: payroll_template_detail.amount,\n                        callback: function ($$v) {\n                          _vm.$set(payroll_template_detail, \"amount\", $$v)\n                        },\n                        expression: \"payroll_template_detail.amount\",\n                      },\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"show-error\", {\n                      attrs: {\n                        \"form-name\": _vm.salaryStructureForm,\n                        \"prop-name\": _vm.getAmountName(index),\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ]),\n            ])\n          }\n        ),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(\n                    _vm._s(_vm.trans(\"employee.salary_structure_description\"))\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.salaryStructureForm.description,\n                      expression: \"salaryStructureForm.description\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"description\",\n                    placeholder: _vm.trans(\n                      \"employee.salary_structure_description\"\n                    ),\n                  },\n                  domProps: { value: _vm.salaryStructureForm.description },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.salaryStructureForm,\n                        \"description\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.salaryStructureForm,\n                    \"prop-name\": \"description\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"form-group\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"text-right\" },\n            [\n              _c(\n                \"router-link\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.uuid,\n                      expression: \"uuid\",\n                    },\n                  ],\n                  staticClass: \"btn btn-danger waves-effect waves-light\",\n                  attrs: { to: \"/employee/payroll/salary\" },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-info waves-effect waves-light\",\n                  attrs: { type: \"submit\" },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.save\")))]\n              ),\n            ],\n            1\n          ),\n        ]),\n      ],\n      2\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=1dcb30e3&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('1dcb30e3')) {\n      api.createRecord('1dcb30e3', component.options)\n    } else {\n      api.reload('1dcb30e3', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=1dcb30e3&\", function () {\n      api.rerender('1dcb30e3', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/payroll/salary/edit.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=4aec3ac6&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4aec3ac6')) {\n      api.createRecord('4aec3ac6', component.options)\n    } else {\n      api.reload('4aec3ac6', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=4aec3ac6&\", function () {\n      api.rerender('4aec3ac6', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/employee/payroll/salary/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=1dcb30e3&\""],"names":[],"sourceRoot":""}