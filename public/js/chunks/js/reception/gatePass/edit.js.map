{"version":3,"file":"js/chunks/js/reception/gatePass/edit.js?id=fbf00079dc04ce5a","mappings":";;;;;;;;;;;;;;AAyBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACrMA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAUA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AASA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9XA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/reception/gate-pass/edit.vue","webpack://InstiKit/resources/js/views/reception/gate-pass/form.vue","webpack://InstiKit/./resources/js/views/reception/gate-pass/edit.vue","webpack://InstiKit/./resources/js/views/reception/gate-pass/form.vue","webpack://InstiKit/./resources/js/views/reception/gate-pass/edit.vue?03ba","webpack://InstiKit/./resources/js/views/reception/gate-pass/form.vue?4040","webpack://InstiKit/./resources/js/views/reception/gate-pass/edit.vue?10ec","webpack://InstiKit/./resources/js/views/reception/gate-pass/form.vue?1dd8","webpack://InstiKit/./resources/js/views/reception/gate-pass/edit.vue?a41a"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('reception.edit_gate_pass')}}</h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" @click=\"$router.push('/reception/gate/pass')\"><i class=\"fas fa-list\"></i> <span class=\"d-none d-sm-inline\">{{trans('reception.gate_pass')}}</span></button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card card-form\">\r\n                <div class=\"card-body p-t-20\">\r\n                    <gate-pass-form :uuid=\"uuid\"></gate-pass-form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import gatePassForm from './form';\r\n\r\n    export default {\r\n        components : { gatePassForm },\r\n        data() {\r\n            return {\r\n                uuid:this.$route.params.uuid\r\n            }\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('edit-gate-pass')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n        }\r\n    }\r\n</script>","<template>\r\n    <form @submit.prevent=\"proceed\" @keydown=\"gatePassForm.errors.clear($event.target.name)\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('reception.gate_pass_type')}}</label>\r\n                    <select v-model=\"gatePassForm.type\" class=\"custom-select col-12\" @select=\"gatePassForm.errors.clear('type')\">\r\n                      <option value=\"student\">{{trans('student.student')}}</option>\r\n                      <option value=\"employee\">{{trans('employee.employee')}}</option>\r\n                    </select>\r\n                    <show-error :form-name=\"gatePassForm\" prop-name=\"type\"></show-error>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-12 col-sm-4\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('reception.gate_pass_date')}}</label>\r\n                    <datepicker v-model=\"gatePassForm.date\" :bootstrapStyling=\"true\" @selected=\"gatePassForm.errors.clear('date')\" :placeholder=\"trans('reception.gate_pass_date')\"></datepicker>\r\n                    <show-error :form-name=\"gatePassForm\" prop-name=\"date\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-4\" v-if=\"loaded\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('reception.gate_pass_time')}}</label>\r\n                    <timepicker :hour.sync=\"time.hour\" :minute.sync=\"time.minute\" :meridiem.sync=\"time.meridiem\"></timepicker>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\" v-if=\"gatePassForm.type == 'student'\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('student.student')}}</label>\r\n                    <v-select label=\"name\" v-model=\"selected_student\" name=\"student_id\" id=\"student_id\" :options=\"students\" :placeholder=\"trans('student.select_student')\" @select=\"onStudentSelect\" @close=\"gatePassForm.errors.clear('student_id')\" @remove=\"gatePassForm.student_id = ''\">\r\n                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!students.length\">\r\n                            {{trans('general.no_option_found')}}\r\n                        </div>\r\n                    </v-select>\r\n                    <show-error :form-name=\"gatePassForm\" prop-name=\"student_id\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\" v-if=\"gatePassForm.type == 'employee'\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('employee.employee')}}</label>\r\n                    <v-select label=\"name\" v-model=\"selected_employee\" name=\"employee_id\" id=\"employee_id\" :options=\"employees\" :placeholder=\"trans('employee.select_employee')\" @select=\"onEmployeeSelect\" @close=\"gatePassForm.errors.clear('employee_id')\" @remove=\"gatePassForm.employee_id = ''\">\r\n                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employees.length\">\r\n                            {{trans('general.no_option_found')}}\r\n                        </div>\r\n                    </v-select>\r\n                    <show-error :form-name=\"gatePassForm\" prop-name=\"employee_id\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('reception.gate_pass_reason')}}</label>\r\n                    <autosize-textarea v-model=\"gatePassForm.reason\" rows=\"1\" name=\"reason\" :placeholder=\"trans('reception.gate_pass_reason')\"></autosize-textarea>\r\n                    <show-error :form-name=\"gatePassForm\" prop-name=\"reason\"></show-error>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card-footer text-right\">\r\n            <router-link to=\"/reception/gate/pass\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"uuid\">{{trans('general.cancel')}}</router-link>\r\n            <button v-if=\"!uuid\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n            <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n                <span v-if=\"uuid\">{{trans('general.update')}}</span>\r\n                <span v-else>{{trans('general.save')}}</span>\r\n            </button>\r\n        </div>\r\n    </form>\t\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        components: {},\r\n        data() {\r\n            return {\r\n                gatePassForm: new Form({\r\n                    type: 'student',\r\n                    student_id: '',\r\n                    employee_id: '',\r\n                    date: '',\r\n                    time: '',\r\n                    reason: ''\r\n                }),\r\n                loaded: false,\r\n                time: {\r\n                    hour: '',\r\n                    minute: '',\r\n                    meridiem: 'am'\r\n                },\r\n                students: [],\r\n                selected_student: null,\r\n                employees: [],\r\n                selected_employee: null\r\n            };\r\n        },\r\n        props: ['uuid'],\r\n        mounted() {\r\n            if(!helper.hasPermission('create-gate-pass') && !helper.hasPermission('edit-gate-pass')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            if(this.uuid)\r\n                this.get();\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            timePadding(time){\r\n                return helper.formatWithPadding(time,2);\r\n            },\r\n            proceed(){\r\n                if(this.uuid)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/gate/pass/pre-requisite')\r\n                    .then(response => {\r\n                        this.students = response.students;\r\n                        this.employees = response.employees;\r\n                        this.gatePassForm.date = helper.today();\r\n                        if(!this.uuid)\r\n                            this.loaded = true;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },  \r\n            store(){\r\n            \tthis.gatePassForm.time = (this.time.hour && this.time.minute) ? helper.formatWithPadding(this.time.hour,2)+':'+helper.formatWithPadding(this.time.minute,2)+' '+this.time.meridiem : '';\r\n                let loader = this.$loading.show();\r\n                this.gatePassForm.post('/api/gate/pass')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.time.hour = '';\r\n                        this.time.minute = '';\r\n                        this.time.meridiem = 'am';\r\n                        this.gatePassForm.type = 'student';\r\n                        this.selected_student = null;\r\n                        this.selected_employee = null;\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/gate/pass/'+this.uuid)\r\n                    .then(response => {\r\n                        this.gatePassForm.type = response.gate_pass.type;\r\n                        this.gatePassForm.reason = response.gate_pass.reason;\r\n                        this.gatePassForm.date = response.gate_pass.date;\r\n                        this.time.hour = response.time.hour;\r\n                        this.time.minute = response.time.minute;\r\n                        this.time.meridiem = response.time.meridiem;\r\n                        this.gatePassForm.student_id = response.gate_pass.student_id;\r\n                        this.selected_student = response.selected_student;\r\n                        this.gatePassForm.employee_id = response.gate_pass.employee_id;\r\n                        this.selected_employee = response.selected_employee;\r\n                        this.loaded = true;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/reception/gate/pass');\r\n                    });\r\n            },\r\n            update(){\r\n            \tthis.gatePassForm.time = (this.time.hour && this.time.minute) ? helper.formatWithPadding(this.time.hour,2)+':'+helper.formatWithPadding(this.time.minute,2)+' '+this.time.meridiem : '';\r\n                let loader = this.$loading.show();\r\n                this.gatePassForm.patch('/api/gate/pass/'+this.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/reception/gate/pass');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onStudentSelect(selectedOption){\r\n                return this.gatePassForm.student_id = selectedOption.id;\r\n            },\r\n            onEmployeeSelect(selectedOption){\r\n                return this.gatePassForm.employee_id = selectedOption.id;\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(_vm._s(_vm.trans(\"reception.edit_gate_pass\"))),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"div\", { staticClass: \"action-buttons pull-right\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info btn-sm\",\n                on: {\n                  click: function ($event) {\n                    return _vm.$router.push(\"/reception/gate/pass\")\n                  },\n                },\n              },\n              [\n                _c(\"i\", { staticClass: \"fas fa-list\" }),\n                _vm._v(\" \"),\n                _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                  _vm._v(_vm._s(_vm.trans(\"reception.gate_pass\"))),\n                ]),\n              ]\n            ),\n          ]),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"container-fluid\" }, [\n      _c(\"div\", { staticClass: \"card card-form\" }, [\n        _c(\n          \"div\",\n          { staticClass: \"card-body p-t-20\" },\n          [_c(\"gate-pass-form\", { attrs: { uuid: _vm.uuid } })],\n          1\n        ),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.proceed.apply(null, arguments)\n        },\n        keydown: function ($event) {\n          return _vm.gatePassForm.errors.clear($event.target.name)\n        },\n      },\n    },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"reception.gate_pass_type\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"select\",\n                {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.gatePassForm.type,\n                      expression: \"gatePassForm.type\",\n                    },\n                  ],\n                  staticClass: \"custom-select col-12\",\n                  on: {\n                    select: function ($event) {\n                      return _vm.gatePassForm.errors.clear(\"type\")\n                    },\n                    change: function ($event) {\n                      var $$selectedVal = Array.prototype.filter\n                        .call($event.target.options, function (o) {\n                          return o.selected\n                        })\n                        .map(function (o) {\n                          var val = \"_value\" in o ? o._value : o.value\n                          return val\n                        })\n                      _vm.$set(\n                        _vm.gatePassForm,\n                        \"type\",\n                        $event.target.multiple\n                          ? $$selectedVal\n                          : $$selectedVal[0]\n                      )\n                    },\n                  },\n                },\n                [\n                  _c(\"option\", { attrs: { value: \"student\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"student.student\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"option\", { attrs: { value: \"employee\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                  ]),\n                ]\n              ),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: { \"form-name\": _vm.gatePassForm, \"prop-name\": \"type\" },\n              }),\n            ],\n            1\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"reception.gate_pass_date\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"datepicker\", {\n                attrs: {\n                  bootstrapStyling: true,\n                  placeholder: _vm.trans(\"reception.gate_pass_date\"),\n                },\n                on: {\n                  selected: function ($event) {\n                    return _vm.gatePassForm.errors.clear(\"date\")\n                  },\n                },\n                model: {\n                  value: _vm.gatePassForm.date,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.gatePassForm, \"date\", $$v)\n                  },\n                  expression: \"gatePassForm.date\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: { \"form-name\": _vm.gatePassForm, \"prop-name\": \"date\" },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _vm.loaded\n          ? _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"reception.gate_pass_time\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"timepicker\", {\n                    attrs: {\n                      hour: _vm.time.hour,\n                      minute: _vm.time.minute,\n                      meridiem: _vm.time.meridiem,\n                    },\n                    on: {\n                      \"update:hour\": function ($event) {\n                        return _vm.$set(_vm.time, \"hour\", $event)\n                      },\n                      \"update:minute\": function ($event) {\n                        return _vm.$set(_vm.time, \"minute\", $event)\n                      },\n                      \"update:meridiem\": function ($event) {\n                        return _vm.$set(_vm.time, \"meridiem\", $event)\n                      },\n                    },\n                  }),\n                ],\n                1\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.gatePassForm.type == \"student\"\n          ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"student.student\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"student_id\",\n                        id: \"student_id\",\n                        options: _vm.students,\n                        placeholder: _vm.trans(\"student.select_student\"),\n                      },\n                      on: {\n                        select: _vm.onStudentSelect,\n                        close: function ($event) {\n                          return _vm.gatePassForm.errors.clear(\"student_id\")\n                        },\n                        remove: function ($event) {\n                          _vm.gatePassForm.student_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_student,\n                        callback: function ($$v) {\n                          _vm.selected_student = $$v\n                        },\n                        expression: \"selected_student\",\n                      },\n                    },\n                    [\n                      !_vm.students.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                        \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                    \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.gatePassForm,\n                      \"prop-name\": \"student_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _vm.gatePassForm.type == \"employee\"\n          ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"employee.employee\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"employee_id\",\n                        id: \"employee_id\",\n                        options: _vm.employees,\n                        placeholder: _vm.trans(\"employee.select_employee\"),\n                      },\n                      on: {\n                        select: _vm.onEmployeeSelect,\n                        close: function ($event) {\n                          return _vm.gatePassForm.errors.clear(\"employee_id\")\n                        },\n                        remove: function ($event) {\n                          _vm.gatePassForm.employee_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_employee,\n                        callback: function ($$v) {\n                          _vm.selected_employee = $$v\n                        },\n                        expression: \"selected_employee\",\n                      },\n                    },\n                    [\n                      !_vm.employees.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                        \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                    \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.gatePassForm,\n                      \"prop-name\": \"employee_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ])\n          : _vm._e(),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"reception.gate_pass_reason\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"autosize-textarea\", {\n                attrs: {\n                  rows: \"1\",\n                  name: \"reason\",\n                  placeholder: _vm.trans(\"reception.gate_pass_reason\"),\n                },\n                model: {\n                  value: _vm.gatePassForm.reason,\n                  callback: function ($$v) {\n                    _vm.$set(_vm.gatePassForm, \"reason\", $$v)\n                  },\n                  expression: \"gatePassForm.reason\",\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: { \"form-name\": _vm.gatePassForm, \"prop-name\": \"reason\" },\n              }),\n            ],\n            1\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"card-footer text-right\" },\n        [\n          _c(\n            \"router-link\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.uuid,\n                  expression: \"uuid\",\n                },\n              ],\n              staticClass: \"btn btn-danger waves-effect waves-light\",\n              attrs: { to: \"/reception/gate/pass\" },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n          ),\n          _vm._v(\" \"),\n          !_vm.uuid\n            ? _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-danger waves-effect waves-light\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.$emit(\"cancel\")\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info waves-effect waves-light\",\n              attrs: { type: \"submit\" },\n            },\n            [\n              _vm.uuid\n                ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n            ]\n          ),\n        ],\n        1\n      ),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./edit.vue?vue&type=template&id=407ac505&\"\nimport script from \"./edit.vue?vue&type=script&lang=js&\"\nexport * from \"./edit.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('407ac505')) {\n      api.createRecord('407ac505', component.options)\n    } else {\n      api.reload('407ac505', component.options)\n    }\n    module.hot.accept(\"./edit.vue?vue&type=template&id=407ac505&\", function () {\n      api.rerender('407ac505', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/reception/gate-pass/edit.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=058d1282&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('058d1282')) {\n      api.createRecord('058d1282', component.options)\n    } else {\n      api.reload('058d1282', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=058d1282&\", function () {\n      api.rerender('058d1282', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/reception/gate-pass/form.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit.vue?vue&type=template&id=407ac505&\""],"names":[],"sourceRoot":""}