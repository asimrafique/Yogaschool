{"version":3,"file":"js/chunks/js/reception/visitorLog/index.js?id=d1636becaba9ea5b","mappings":";;;;;;;;;;;;;AA2IA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC5HA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC/WA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAgcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAWA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;ACzzBA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAOA;AAMA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAQA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAOA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AASA;AAEA;AAAA;AAAA;AAAA;AASA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAuBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAsBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAuBA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAMA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAEA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAiDA;AAAA;AASA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AA4IA;AACA;AAGA;AACA;AAiEA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAOA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AACA;AASA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AAOA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;AC9hCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/reception/visitor-log/form.vue","webpack://InstiKit/resources/js/views/reception/visitor-log/index.vue","webpack://InstiKit/./resources/js/views/reception/visitor-log/form.vue","webpack://InstiKit/./resources/js/views/reception/visitor-log/index.vue","webpack://InstiKit/./resources/js/views/reception/visitor-log/form.vue?1b07","webpack://InstiKit/./resources/js/views/reception/visitor-log/index.vue?55d9","webpack://InstiKit/./resources/js/views/reception/visitor-log/form.vue?ba0f","webpack://InstiKit/./resources/js/views/reception/visitor-log/index.vue?8612","webpack://InstiKit/./resources/js/views/reception/visitor-log/form.vue?1209","webpack://InstiKit/./resources/js/views/reception/visitor-log/index.vue?0332"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"proceed\" @keydown=\"visitorLogForm.errors.clear($event.target.name)\">\r\n        <div class=\"row\">\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('reception.visitor_name')}}</label>\r\n                    <input class=\"form-control\" type=\"text\" v-model=\"visitorLogForm.name\" name=\"name\" :placeholder=\"trans('reception.visitor_name')\">\r\n                    <show-error :form-name=\"visitorLogForm\" prop-name=\"name\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <div class=\"radio radio-success m-t-20\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-6\">\r\n                                <input type=\"radio\" value=\"parent\" id=\"type_parent\" v-model=\"visitorLogForm.type\" :checked=\"visitorLogForm.type == 'parent'\" name=\"type\" @click=\"visitorLogForm.errors.clear('type')\">\r\n                                <label for=\"type_parent\">{{trans('reception.visitor_type_parent')}}</label>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <input type=\"radio\" value=\"other\" id=\"type_other\" v-model=\"visitorLogForm.type\" :checked=\"visitorLogForm.type == 'other'\" name=\"type\" @click=\"visitorLogForm.errors.clear('type')\">\r\n                                <label for=\"type_other\">{{trans('reception.visitor_type_other')}}</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <show-error :form-name=\"visitorLogForm\" prop-name=\"type\"></show-error>\r\n                </div>\r\n            </div>\r\n            <template v-if=\"visitorLogForm.type == 'parent'\">\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('student.student')}}</label>\r\n                        <v-select label=\"name\" v-model=\"selected_student\" name=\"student_id\" id=\"student_id\" :options=\"students\" :placeholder=\"trans('student.select_student')\" @select=\"onStudentSelect\" @close=\"visitorLogForm.errors.clear('student_id')\" @remove=\"visitorLogForm.student_id = ''\">\r\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!students.length\">\r\n                                {{trans('general.no_option_found')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name=\"visitorLogForm\" prop-name=\"student_id\"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 col-sm-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"\">{{trans('reception.relation_with_student')}}</label>\r\n                        <input class=\"form-control\" type=\"text\" v-model=\"visitorLogForm.relation_with_student\" name=\"relation_with_student\" :placeholder=\"trans('reception.relation_with_student')\">\r\n                        <show-error :form-name=\"visitorLogForm\" prop-name=\"relation_with_student\"></show-error>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n            <template v-if=\"visitorLogForm.type == 'other'\">\r\n\t            <div class=\"col-12 col-sm-3\">\r\n\t                <div class=\"form-group\">\r\n\t                    <label for=\"\">{{trans('reception.visitor_company_name')}}</label>\r\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"visitorLogForm.company_name\" name=\"company_name\" :placeholder=\"trans('reception.visitor_company_name')\">\r\n\t                    <show-error :form-name=\"visitorLogForm\" prop-name=\"company_name\"></show-error>\r\n\t                </div>\r\n\t            </div>\r\n\t            <div class=\"col-12 col-sm-3\">\r\n\t                <div class=\"form-group\">\r\n\t                    <label for=\"\">{{trans('reception.visitor_contact_number')}}</label>\r\n\t                    <input class=\"form-control\" type=\"text\" v-model=\"visitorLogForm.contact_number\" name=\"contact_number\" :placeholder=\"trans('reception.visitor_contact_number')\">\r\n\t                    <show-error :form-name=\"visitorLogForm\" prop-name=\"contact_number\"></show-error>\r\n\t                </div>\r\n\t            </div>\r\n\t            <div class=\"col-12 col-sm-3\">\r\n\t                <div class=\"form-group\">\r\n\t                    <label for=\"\">{{trans('reception.visitor_address')}}</label>\r\n\t                    <autosize-textarea v-model=\"visitorLogForm.address\" rows=\"1\" name=\"addres\" :placeholder=\"trans('reception.visitor_address')\"></autosize-textarea>\r\n\t                    <show-error :form-name=\"visitorLogForm\" prop-name=\"address\"></show-error>\r\n\t                </div>\r\n\t            </div>\r\n\t        </template>\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('reception.visitor_count')}}</label>\r\n\t                   <input class=\"form-control\" type=\"text\" v-model=\"visitorLogForm.visitor_count\" name=\"visitor_count\" :placeholder=\"trans('reception.visitor_count')\">\r\n                    <show-error :form-name=\"visitorLogForm\" prop-name=\"visitor_count\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('reception.visiting_purpose')}}</label>\r\n                    <v-select label=\"name\" v-model=\"selected_visiting_purpose\" name=\"visiting_purpose_id\" id=\"visiting_purpose_id\" :options=\"visiting_purposes\" :placeholder=\"trans('reception.select_visiting_purpose')\" @select=\"onVisitingPurposeSelect\" @close=\"visitorLogForm.errors.clear('visiting_purpose_id')\" @remove=\"visitorLogForm.visiting_purpose_id = ''\">\r\n                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!visiting_purposes.length\">\r\n                            {{trans('general.no_option_found')}}\r\n                        </div>\r\n                    </v-select>\r\n                    <show-error :form-name=\"visitorLogForm\" prop-name=\"visiting_purpose_id\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('reception.whom_to_meet')}}</label>\r\n                    <v-select label=\"name\" v-model=\"selected_employee\" name=\"employee_id\" id=\"employee_id\" :options=\"employees\" :placeholder=\"trans('employee.select_employee')\" @select=\"onEmployeeSelect\" @close=\"visitorLogForm.errors.clear('employee_id')\" @remove=\"visitorLogForm.employee_id = ''\">\r\n                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employees.length\">\r\n                            {{trans('general.no_option_found')}}\r\n                        </div>\r\n                    </v-select>\r\n                    <show-error :form-name=\"visitorLogForm\" prop-name=\"employee_id\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('reception.date_of_visit')}}</label>\r\n                    <datepicker v-model=\"visitorLogForm.date_of_visit\" :bootstrapStyling=\"true\" @selected=\"visitorLogForm.errors.clear('date_of_visit')\" :placeholder=\"trans('reception.date_of_visit')\"></datepicker>\r\n                    <show-error :form-name=\"visitorLogForm\" prop-name=\"date_of_visit\"></show-error>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\" v-if=\"loaded\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('reception.entry_time')}}</label>\r\n                    <timepicker :hour.sync=\"entry_time.hour\" :minute.sync=\"entry_time.minute\" :meridiem.sync=\"entry_time.meridiem\"></timepicker>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12 col-sm-3\" v-if=\"uuid\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('reception.exit_time')}}</label>\r\n                    <timepicker :hour.sync=\"exit_time.hour\" :minute.sync=\"exit_time.minute\" :meridiem.sync=\"exit_time.meridiem\"></timepicker>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-12\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"\">{{trans('reception.visitor_remarks')}}</label>\r\n                    <autosize-textarea v-model=\"visitorLogForm.remarks\" rows=\"1\" name=\"remarks\" :placeholder=\"trans('reception.visitor_remarks')\"></autosize-textarea>\r\n                    <show-error :form-name=\"visitorLogForm\" prop-name=\"remarks\"></show-error>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"card-footer text-right\">\r\n            <router-link to=\"/reception/visitor/log\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"uuid\">{{trans('general.cancel')}}</router-link>\r\n            <button v-if=\"!uuid\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\r\n            <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\r\n                <span v-if=\"uuid\">{{trans('general.update')}}</span>\r\n                <span v-else>{{trans('general.save')}}</span>\r\n            </button>\r\n        </div>\r\n    </form>\t\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        components: {},\r\n        data() {\r\n            return {\r\n                visitorLogForm: new Form({\r\n                    name: '',\r\n                    company_name: '',\r\n                    relation_with_student: '',\r\n                    contact_number: '',\r\n                    address: '',\r\n                    type: 'parent',\r\n                    student_id: '',\r\n                    visiting_purpose_id: '',\r\n                    employee_id: '',\r\n                    visitor_count: 1,\r\n                    date_of_visit: '',\r\n                    entry_time: '',\r\n                    exit_time: '',\r\n                    remarks: ''\r\n                }),\r\n                loaded: false,\r\n                entry_time: {\r\n                    hour: '',\r\n                    minute: '',\r\n                    meridiem: 'am'\r\n                },\r\n                exit_time: {\r\n                \thour: '',\r\n                \tminute: '',\r\n                \tmeridiem: ''\r\n                },\r\n                visiting_purposes: [],\r\n                selected_visiting_purpose: null,\r\n                students: [],\r\n                selected_student: null,\r\n                employees: [],\r\n                selected_employee: null\r\n            };\r\n        },\r\n        props: ['uuid'],\r\n        mounted() {\r\n            if(!helper.hasPermission('create-visitor-log') && !helper.hasPermission('edit-visitor-log')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            if(this.uuid)\r\n                this.get();\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            timePadding(time){\r\n                return helper.formatWithPadding(time,2);\r\n            },\r\n            proceed(){\r\n                if(this.uuid)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/visitor/log/pre-requisite')\r\n                    .then(response => {\r\n                        this.visiting_purposes = response.visiting_purposes;\r\n                        this.students = response.students;\r\n                        this.employees = response.employees;\r\n                        this.visitorLogForm.date_of_visit = helper.today();\r\n                        if(!this.uuid)\r\n                            this.loaded = true;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },  \r\n            store(){\r\n            \tthis.visitorLogForm.entry_time = (this.entry_time.hour && this.entry_time.minute) ? helper.formatWithPadding(this.entry_time.hour,2)+':'+helper.formatWithPadding(this.entry_time.minute,2)+' '+this.entry_time.meridiem : '';\r\n                let loader = this.$loading.show();\r\n                this.visitorLogForm.post('/api/visitor/log')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.selected_visiting_purpose = null;\r\n                        this.selected_student = null;\r\n                        this.selected_employee = null;\r\n                        this.entry_time.hour = '';\r\n                        this.entry_time.minute = '';\r\n                        this.entry_time.meridiem = 'am';\r\n                        this.visitorLogForm.type = 'parent';\r\n                        this.$emit('completed');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/visitor/log/'+this.uuid)\r\n                    .then(response => {\r\n                        this.visitorLogForm.type = response.visitor_log.type;\r\n                        this.visitorLogForm.name = response.visitor_log.name;\r\n                        this.visitorLogForm.company_name = response.visitor_log.company_name;\r\n                        this.visitorLogForm.contact_number = response.visitor_log.contact_number;\r\n                        this.visitorLogForm.address = response.visitor_log.address;\r\n                        this.visitorLogForm.student_id = response.visitor_log.student_id;\r\n                        this.selected_student = response.selected_student;\r\n                        this.visitorLogForm.relation_with_student = response.visitor_log.relation_with_student;\r\n                        this.visitorLogForm.visiting_purpose_id = response.visitor_log.visiting_purpose_id;\r\n                        this.selected_visiting_purpose = response.selected_visiting_purpose;\r\n                        this.visitorLogForm.employee_id = response.visitor_log.employee_id;\r\n                        this.selected_employee = response.selected_employee;\r\n                        this.visitorLogForm.remarks = response.visitor_log.remarks;\r\n                        this.visitorLogForm.date_of_visit = response.visitor_log.date_of_visit;\r\n                        this.entry_time.hour = response.entry_time.hour;\r\n                        this.entry_time.minute = response.entry_time.minute;\r\n                        this.entry_time.meridiem = response.entry_time.meridiem;\r\n                        if (response.visitor_log.exit_time) {\r\n                            this.exit_time.hour = response.exit_time.hour;\r\n                            this.exit_time.minute = response.exit_time.minute;\r\n                            this.exit_time.meridiem = response.exit_time.meridiem;\r\n                        }\r\n                        this.loaded = true;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        this.$router.push('/reception/visitor/log');\r\n                    });\r\n            },\r\n            update(){\r\n            \tthis.visitorLogForm.entry_time = (this.entry_time.hour && this.entry_time.minute) ? helper.formatWithPadding(this.entry_time.hour,2)+':'+helper.formatWithPadding(this.entry_time.minute,2)+' '+this.entry_time.meridiem : '';\r\n            \tthis.visitorLogForm.exit_time = (this.exit_time.hour && this.exit_time.minute) ? helper.formatWithPadding(this.exit_time.hour,2)+':'+helper.formatWithPadding(this.exit_time.minute,2)+' '+this.exit_time.meridiem : '';\r\n                let loader = this.$loading.show();\r\n                this.visitorLogForm.patch('/api/visitor/log/'+this.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push('/reception/visitor/log');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onVisitingPurposeSelect(selectedOption){\r\n                return this.visitorLogForm.visiting_purpose_id = selectedOption.id;\r\n            },\r\n            onStudentSelect(selectedOption){\r\n                return this.visitorLogForm.student_id = selectedOption.id;\r\n            },\r\n            onEmployeeSelect(selectedOption){\r\n                return this.visitorLogForm.employee_id = selectedOption.id;\r\n            }\r\n        }\r\n    }\r\n</script>","<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('reception.visitor_log')}} \r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"visitor_logs.total\">{{trans('general.total_result_found',{count : visitor_logs.total, from: visitor_logs.from, to: visitor_logs.to})}}</span>\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\r\n                    </h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"visitor_logs.total && !showCreatePanel && hasPermission('create-visitor-log')\" @click=\"showCreatePanel = !showCreatePanel\" v-tooltip=\"trans('general.add_new')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('reception.add_new_visitor_log')}}</span></button>\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\r\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\r\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\r\n                            </button>\r\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\r\n                            </div>\r\n                        </div>\r\n                        <help-button @clicked=\"help_topic = 'reception.visitor-log'\"></help-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <transition name=\"fade\">\r\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('general.filter')}}</h4>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('reception.visitor_type')}}</label>\r\n                                    <select v-model=\"filter.type\" class=\"custom-select col-12\">\r\n                                      <option value=null selected>{{trans('general.select_one')}}</option>\r\n                                      <option v-for=\"option in types\" v-bind:value=\"option.value\">\r\n                                        {{ option.text }}\r\n                                      </option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\" v-if=\"filter.type == 'parent'\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('student.student')}}</label>\r\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_students\" name=\"student_id\" id=\"student_id\" :options=\"students\" :placeholder=\"trans('student.select_student')\" @select=\"onStudentSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onStudentRemove\" :selected=\"selected_students\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!students.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\" v-if=\"filter.type == 'other'\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('employee.employee')}}</label>\r\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_employees\" name=\"employee_id\" id=\"employee_id\" :options=\"employees\" :placeholder=\"trans('employee.select_employee')\" @select=\"onEmployeeSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onEmployeeRemove\" :selected=\"selected_employees\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!employees.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('reception.visiting_purpose')}}</label>\r\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_visiting_purposes\" name=\"visiting_purpose_id\" id=\"visiting_purpose_id\" :options=\"visiting_purposes\" :placeholder=\"trans('reception.select_visiting_purpose')\" @select=\"onVisitingPurposeSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onVisitingPurposeRemove\" :selected=\"selected_visiting_purposes\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!visiting_purposes.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <date-range-picker :start-date.sync=\"filter.date_of_visit_start_date\" :end-date.sync=\"filter.date_of_visit_end_date\" :label=\"trans('general.date_between')\"></date-range-picker>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-footer text-right\">\r\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\r\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getVisitorLogs\">{{trans('general.filter')}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <transition name=\"fade\" v-if=\"hasPermission('create-visitor-log')\">\r\n                <div class=\"card card-form\" v-if=\"showCreatePanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('reception.add_new_visitor_log')}}</h4>\r\n                        <visitor-log-form @completed=\"getVisitorLogs\" @cancel=\"showCreatePanel = !showCreatePanel\"></visitor-log-form>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\" v-if=\"visitor_logs.total\">\r\n                        <table class=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>{{trans('reception.visiting_purpose')}}</th>\r\n                                    <th>{{trans('reception.visitor_detail')}}</th>\r\n                                    <th>{{trans('reception.visitor_count')}}</th>\r\n                                    <th>{{trans('reception.date_of_visit')}}</th>\r\n                                    <th>{{trans('reception.entry_time')}}</th>\r\n                                    <th>{{trans('reception.exit_time')}}</th>\r\n                                    <th>{{trans('reception.whom_to_meet')}}</th>\r\n                                    <th>{{trans('reception.visitor_remarks')}}</th>\r\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"visitor_log in visitor_logs.data\">\r\n                                    <td v-text=\"visitor_log.id\"></td>\r\n                                    <td v-text=\"visitor_log.visiting_purpose.name\"></td>\r\n                                    <td>\r\n                                        <template v-if=\"visitor_log.type == 'parent'\">\r\n                                            <template v-if=\"visitor_log.name\">{{trans('reception.visitor_name')+': '+visitor_log.name}} <br /></template>\r\n                                            <template v-if=\"visitor_log.relation_with_student\">{{trans('reception.relation_with_student')+': '+visitor_log.relation_with_student}} <br /></template>\r\n                                            {{trans('student.name')+': '+getStudentName(visitor_log.student)}} <br />\r\n                                            {{trans('student.first_guardian_name')+': '+visitor_log.student.parent.first_guardian_name}} <br />\r\n                                            {{trans('student.mother_name')+': '+visitor_log.student.parent.mother_name}} <br />\r\n                                            {{trans('student.contact_number')+': '+visitor_log.student.contact_number}} <br />\r\n                                        </template>\r\n                                        <template v-else>\r\n                                            {{trans('reception.visitor_name')+': '+visitor_log.name}} <br />\r\n                                            {{trans('reception.visitor_company_name')+': '+visitor_log.company_name}} <br />\r\n                                            {{trans('reception.visitor_contact_number')+': '+visitor_log.contact_number}} <br />\r\n                                            {{trans('reception.visitor_address')+': '+visitor_log.address}}\r\n                                        </template>\r\n                                    </td>\r\n                                    <td v-text=\"visitor_log.visitor_count\"></td>\r\n                                    <td>{{visitor_log.date_of_visit | moment}}</td>\r\n                                    <td>{{visitor_log.entry_time | momentTime}}</td>\r\n                                    <td>{{visitor_log.exit_time | momentTime}}</td>\r\n                                    <td>\r\n                                        <span v-if=\"visitor_log.employee_id\">\r\n                                            {{getEmployeeName(visitor_log.employee)}} <br />\r\n                                            {{getEmployeeDesignationOnDate(visitor_log.employee, visitor_log.date_of_visit)}}\r\n                                        </span>\r\n                                        <span v-else>\r\n                                            -\r\n                                        </span>\r\n                                    </td>\r\n                                    <td>\r\n                                        {{visitor_log.remarks}}\r\n                                    </td>\r\n                                    <td class=\"table-option\">\r\n                                        <div class=\"btn-group\">\r\n                                            <a :href=\"`/reception/visitor/pass/${visitor_log.uuid}/print?token=${authToken}`\" target=\"_blank\" class=\"btn btn-success btn-sm\" v-tooltip=\"trans('general.print')\"><i class=\"fas fa-print\"></i></a>\r\n                                            <button class=\"btn btn-info btn-sm\" v-if=\"hasPermission('edit-visitor-log')\" v-tooltip=\"trans('reception.edit_visitor_log')\" @click.prevent=\"editVisitorLog(visitor_log)\"><i class=\"fas fa-edit\"></i></button>\r\n                                            <button class=\"btn btn-danger btn-sm\" v-if=\"hasPermission('delete-visitor-log')\" :key=\"visitor_log.id\" v-confirm=\"{ok: confirmDelete(visitor_log)}\" v-tooltip=\"trans('reception.delete_visitor_log')\"><i class=\"fas fa-trash\"></i></button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <module-info v-if=\"!visitor_logs.total\" module=\"reception\" title=\"visitor_log_module_title\" description=\"visitor_log_module_description\" icon=\"list\">\r\n                        <div slot=\"btn\">\r\n                            <button class=\"btn btn-info btn-md\" v-if=\"!showCreatePanel && hasPermission('create-visitor-log')\" @click=\"showCreatePanel = !showCreatePanel\"><i class=\"fas fa-plus\"></i> {{trans('general.add_new')}}</button>\r\n                        </div>\r\n                    </module-info>\r\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"visitor_logs\" @updateRecords=\"getVisitorLogs\"></pagination-record>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <right-panel :topic=\"help_topic\"></right-panel>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import visitorLogForm from './form'\r\n\r\n    export default {\r\n        components : { visitorLogForm},\r\n        data() {\r\n            return {\r\n                visitor_logs: {\r\n                    total: 0,\r\n                    data: []\r\n                },\r\n                filter: {\r\n                    sort_by : 'entry_time',\r\n                    order: 'desc',\r\n                    type: '',\r\n                    student_id: [],\r\n                    employee_id: [],\r\n                    visiting_purpose_id: [],\r\n                    date_of_visit_start_date: '',\r\n                    date_of_visit_end_date: '',\r\n                    page_length: helper.getConfig('page_length')\r\n                },\r\n                orderByOptions: [\r\n                    {\r\n                        value: 'entry_time',\r\n                        translation: i18n.reception.entry_time\r\n                    },\r\n                    {\r\n                        value: 'created_at',\r\n                        translation: i18n.general.created_at\r\n                    }\r\n                ],\r\n                types: [\r\n                    {\r\n                        text: i18n.reception.visitor_type_parent,\r\n                        value: 'parent'\r\n                    },\r\n                    {\r\n                        text: i18n.reception.visitor_type_other,\r\n                        value: 'other'\r\n                    }\r\n                ],\r\n                showFilterPanel: false,\r\n                showCreatePanel: false,\r\n                students: [],\r\n                selected_students: null,\r\n                employees: [],\r\n                selected_employees: null,\r\n                visiting_purposes: [],\r\n                selected_visiting_purposes: null,\r\n                help_topic: '',\r\n                showUuid: '',\r\n                showModal: false\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('list-visitor-log')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.getVisitorLogs();\r\n            helper.showDemoNotification(['reception']);\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            showAction(visitor_log){\r\n                this.showUuid = visitor_log.uuid;\r\n                this.showModal = true;\r\n            },\r\n            getStudentName(student){\r\n                return helper.getStudentName(student);\r\n            },\r\n            getEmployeeName(employee){\r\n                return helper.getEmployeeName(employee);\r\n            },\r\n            getVisitorLogs(page){\r\n                let loader = this.$loading.show();\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                this.filter.date_of_visit_start_date = helper.toDate(this.filter.date_of_visit_start_date);\r\n                this.filter.date_of_visit_end_date = helper.toDate(this.filter.date_of_visit_end_date);\r\n                let url = helper.getFilterURL(this.filter);\r\n                axios.get('/api/visitor/log?page=' + page + url)\r\n                    .then(response => {\r\n                        this.visitor_logs = response.visitor_logs;\r\n                        this.students = response.filters.students;\r\n                        this.employees = response.filters.employees;\r\n                        this.visiting_purposes = response.filters.visiting_purposes;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            editVisitorLog(visitor_log){\r\n                this.$router.push('/reception/visitor/log/'+visitor_log.uuid+'/edit');\r\n            },\r\n            confirmDelete(visitor_log){\r\n                return dialog => this.deleteVisitorLog(visitor_log);\r\n            },\r\n            deleteVisitorLog(visitor_log){\r\n                let loader = this.$loading.show();\r\n                axios.delete('/api/visitor/log/'+visitor_log.uuid)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getVisitorLogs();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            getConfig(config) {\r\n                return helper.getConfig(config)\r\n            },\r\n            print(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/visitor/log/print',{filter: this.filter})\r\n                    .then(response => {\r\n                        let print = window.open(\"/print\");\r\n                        loader.hide();\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            pdf(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/visitor/log/pdf',{filter: this.filter})\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        window.open('/download/report/'+response+'?token='+this.authToken);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onStudentSelect(selectedOption){\r\n                this.filter.student_id.push(selectedOption.id);\r\n            },\r\n            onStudentRemove(removedOption){\r\n                this.filter.student_id.splice(this.filter.student_id.indexOf(removedOption.id), 1);\r\n            },\r\n            onEmployeeSelect(selectedOption){\r\n                this.filter.employee_id.push(selectedOption.id);\r\n            },\r\n            onEmployeeRemove(removedOption){\r\n                this.filter.employee_id.splice(this.filter.employee_id.indexOf(removedOption.id), 1);\r\n            },\r\n            onVisitingPurposeSelect(selectedOption){\r\n                this.filter.visiting_purpose_id.push(selectedOption.id);\r\n            },\r\n            onVisitingPurposeRemove(removedOption){\r\n                this.filter.visiting_purpose_id.splice(this.filter.visiting_purpose_id.indexOf(removedOption.id), 1);\r\n            },\r\n            getEmployeeDesignationOnDate(employee, date){\r\n                return helper.getEmployeeDesignationOnDate(employee, date);\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          },\r\n          momentTime(time) {\r\n            return helper.formatTime(time);\r\n          }\r\n        },\r\n        watch: {\r\n            'filter.sort_by': function(val){\r\n                this.getVisitorLogs();\r\n            },\r\n            'filter.order': function(val){\r\n                this.getVisitorLogs();\r\n            },\r\n            'filter.page_length': function(val){\r\n                this.getVisitorLogs();\r\n            }\r\n        },\r\n        computed: {\r\n            authToken(){\r\n                return helper.getAuthToken();\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.proceed.apply(null, arguments)\n        },\n        keydown: function ($event) {\n          return _vm.visitorLogForm.errors.clear($event.target.name)\n        },\n      },\n    },\n    [\n      _c(\n        \"div\",\n        { staticClass: \"row\" },\n        [\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"reception.visitor_name\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.visitorLogForm.name,\n                      expression: \"visitorLogForm.name\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"name\",\n                    placeholder: _vm.trans(\"reception.visitor_name\"),\n                  },\n                  domProps: { value: _vm.visitorLogForm.name },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(_vm.visitorLogForm, \"name\", $event.target.value)\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.visitorLogForm,\n                    \"prop-name\": \"name\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"div\", { staticClass: \"radio radio-success m-t-20\" }, [\n                  _c(\"div\", { staticClass: \"row\" }, [\n                    _c(\"div\", { staticClass: \"col-6\" }, [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.visitorLogForm.type,\n                            expression: \"visitorLogForm.type\",\n                          },\n                        ],\n                        attrs: {\n                          type: \"radio\",\n                          value: \"parent\",\n                          id: \"type_parent\",\n                          name: \"type\",\n                        },\n                        domProps: {\n                          checked: _vm.visitorLogForm.type == \"parent\",\n                          checked: _vm._q(_vm.visitorLogForm.type, \"parent\"),\n                        },\n                        on: {\n                          click: function ($event) {\n                            return _vm.visitorLogForm.errors.clear(\"type\")\n                          },\n                          change: function ($event) {\n                            return _vm.$set(\n                              _vm.visitorLogForm,\n                              \"type\",\n                              \"parent\"\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"label\", { attrs: { for: \"type_parent\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"reception.visitor_type_parent\"))\n                        ),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"col-6\" }, [\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.visitorLogForm.type,\n                            expression: \"visitorLogForm.type\",\n                          },\n                        ],\n                        attrs: {\n                          type: \"radio\",\n                          value: \"other\",\n                          id: \"type_other\",\n                          name: \"type\",\n                        },\n                        domProps: {\n                          checked: _vm.visitorLogForm.type == \"other\",\n                          checked: _vm._q(_vm.visitorLogForm.type, \"other\"),\n                        },\n                        on: {\n                          click: function ($event) {\n                            return _vm.visitorLogForm.errors.clear(\"type\")\n                          },\n                          change: function ($event) {\n                            return _vm.$set(_vm.visitorLogForm, \"type\", \"other\")\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"label\", { attrs: { for: \"type_other\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"reception.visitor_type_other\"))\n                        ),\n                      ]),\n                    ]),\n                  ]),\n                ]),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.visitorLogForm,\n                    \"prop-name\": \"type\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _vm.visitorLogForm.type == \"parent\"\n            ? [\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"student.student\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"v-select\",\n                        {\n                          attrs: {\n                            label: \"name\",\n                            name: \"student_id\",\n                            id: \"student_id\",\n                            options: _vm.students,\n                            placeholder: _vm.trans(\"student.select_student\"),\n                          },\n                          on: {\n                            select: _vm.onStudentSelect,\n                            close: function ($event) {\n                              return _vm.visitorLogForm.errors.clear(\n                                \"student_id\"\n                              )\n                            },\n                            remove: function ($event) {\n                              _vm.visitorLogForm.student_id = \"\"\n                            },\n                          },\n                          model: {\n                            value: _vm.selected_student,\n                            callback: function ($$v) {\n                              _vm.selected_student = $$v\n                            },\n                            expression: \"selected_student\",\n                          },\n                        },\n                        [\n                          !_vm.students.length\n                            ? _c(\n                                \"div\",\n                                {\n                                  staticClass: \"multiselect__option\",\n                                  attrs: { slot: \"afterList\" },\n                                  slot: \"afterList\",\n                                },\n                                [\n                                  _vm._v(\n                                    \"\\n                                \" +\n                                      _vm._s(\n                                        _vm.trans(\"general.no_option_found\")\n                                      ) +\n                                      \"\\n                            \"\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.visitorLogForm,\n                          \"prop-name\": \"student_id\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"reception.relation_with_student\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.visitorLogForm.relation_with_student,\n                            expression: \"visitorLogForm.relation_with_student\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"relation_with_student\",\n                          placeholder: _vm.trans(\n                            \"reception.relation_with_student\"\n                          ),\n                        },\n                        domProps: {\n                          value: _vm.visitorLogForm.relation_with_student,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.visitorLogForm,\n                              \"relation_with_student\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.visitorLogForm,\n                          \"prop-name\": \"relation_with_student\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.visitorLogForm.type == \"other\"\n            ? [\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"reception.visitor_company_name\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.visitorLogForm.company_name,\n                            expression: \"visitorLogForm.company_name\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"company_name\",\n                          placeholder: _vm.trans(\n                            \"reception.visitor_company_name\"\n                          ),\n                        },\n                        domProps: { value: _vm.visitorLogForm.company_name },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.visitorLogForm,\n                              \"company_name\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.visitorLogForm,\n                          \"prop-name\": \"company_name\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"reception.visitor_contact_number\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.visitorLogForm.contact_number,\n                            expression: \"visitorLogForm.contact_number\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"contact_number\",\n                          placeholder: _vm.trans(\n                            \"reception.visitor_contact_number\"\n                          ),\n                        },\n                        domProps: { value: _vm.visitorLogForm.contact_number },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.visitorLogForm,\n                              \"contact_number\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.visitorLogForm,\n                          \"prop-name\": \"contact_number\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"reception.visitor_address\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"autosize-textarea\", {\n                        attrs: {\n                          rows: \"1\",\n                          name: \"addres\",\n                          placeholder: _vm.trans(\"reception.visitor_address\"),\n                        },\n                        model: {\n                          value: _vm.visitorLogForm.address,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.visitorLogForm, \"address\", $$v)\n                          },\n                          expression: \"visitorLogForm.address\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.visitorLogForm,\n                          \"prop-name\": \"address\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ]),\n              ]\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"reception.visitor_count\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.visitorLogForm.visitor_count,\n                      expression: \"visitorLogForm.visitor_count\",\n                    },\n                  ],\n                  staticClass: \"form-control\",\n                  attrs: {\n                    type: \"text\",\n                    name: \"visitor_count\",\n                    placeholder: _vm.trans(\"reception.visitor_count\"),\n                  },\n                  domProps: { value: _vm.visitorLogForm.visitor_count },\n                  on: {\n                    input: function ($event) {\n                      if ($event.target.composing) return\n                      _vm.$set(\n                        _vm.visitorLogForm,\n                        \"visitor_count\",\n                        $event.target.value\n                      )\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.visitorLogForm,\n                    \"prop-name\": \"visitor_count\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"reception.visiting_purpose\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      name: \"visiting_purpose_id\",\n                      id: \"visiting_purpose_id\",\n                      options: _vm.visiting_purposes,\n                      placeholder: _vm.trans(\n                        \"reception.select_visiting_purpose\"\n                      ),\n                    },\n                    on: {\n                      select: _vm.onVisitingPurposeSelect,\n                      close: function ($event) {\n                        return _vm.visitorLogForm.errors.clear(\n                          \"visiting_purpose_id\"\n                        )\n                      },\n                      remove: function ($event) {\n                        _vm.visitorLogForm.visiting_purpose_id = \"\"\n                      },\n                    },\n                    model: {\n                      value: _vm.selected_visiting_purpose,\n                      callback: function ($$v) {\n                        _vm.selected_visiting_purpose = $$v\n                      },\n                      expression: \"selected_visiting_purpose\",\n                    },\n                  },\n                  [\n                    !_vm.visiting_purposes.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                        \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.visitorLogForm,\n                    \"prop-name\": \"visiting_purpose_id\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"reception.whom_to_meet\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"v-select\",\n                  {\n                    attrs: {\n                      label: \"name\",\n                      name: \"employee_id\",\n                      id: \"employee_id\",\n                      options: _vm.employees,\n                      placeholder: _vm.trans(\"employee.select_employee\"),\n                    },\n                    on: {\n                      select: _vm.onEmployeeSelect,\n                      close: function ($event) {\n                        return _vm.visitorLogForm.errors.clear(\"employee_id\")\n                      },\n                      remove: function ($event) {\n                        _vm.visitorLogForm.employee_id = \"\"\n                      },\n                    },\n                    model: {\n                      value: _vm.selected_employee,\n                      callback: function ($$v) {\n                        _vm.selected_employee = $$v\n                      },\n                      expression: \"selected_employee\",\n                    },\n                  },\n                  [\n                    !_vm.employees.length\n                      ? _c(\n                          \"div\",\n                          {\n                            staticClass: \"multiselect__option\",\n                            attrs: { slot: \"afterList\" },\n                            slot: \"afterList\",\n                          },\n                          [\n                            _vm._v(\n                              \"\\n                            \" +\n                                _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                \"\\n                        \"\n                            ),\n                          ]\n                        )\n                      : _vm._e(),\n                  ]\n                ),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.visitorLogForm,\n                    \"prop-name\": \"employee_id\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"reception.date_of_visit\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"datepicker\", {\n                  attrs: {\n                    bootstrapStyling: true,\n                    placeholder: _vm.trans(\"reception.date_of_visit\"),\n                  },\n                  on: {\n                    selected: function ($event) {\n                      return _vm.visitorLogForm.errors.clear(\"date_of_visit\")\n                    },\n                  },\n                  model: {\n                    value: _vm.visitorLogForm.date_of_visit,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.visitorLogForm, \"date_of_visit\", $$v)\n                    },\n                    expression: \"visitorLogForm.date_of_visit\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.visitorLogForm,\n                    \"prop-name\": \"date_of_visit\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n          _vm._v(\" \"),\n          _vm.loaded\n            ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"reception.entry_time\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"timepicker\", {\n                      attrs: {\n                        hour: _vm.entry_time.hour,\n                        minute: _vm.entry_time.minute,\n                        meridiem: _vm.entry_time.meridiem,\n                      },\n                      on: {\n                        \"update:hour\": function ($event) {\n                          return _vm.$set(_vm.entry_time, \"hour\", $event)\n                        },\n                        \"update:minute\": function ($event) {\n                          return _vm.$set(_vm.entry_time, \"minute\", $event)\n                        },\n                        \"update:meridiem\": function ($event) {\n                          return _vm.$set(_vm.entry_time, \"meridiem\", $event)\n                        },\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.uuid\n            ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"form-group\" },\n                  [\n                    _c(\"label\", { attrs: { for: \"\" } }, [\n                      _vm._v(_vm._s(_vm.trans(\"reception.exit_time\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"timepicker\", {\n                      attrs: {\n                        hour: _vm.exit_time.hour,\n                        minute: _vm.exit_time.minute,\n                        meridiem: _vm.exit_time.meridiem,\n                      },\n                      on: {\n                        \"update:hour\": function ($event) {\n                          return _vm.$set(_vm.exit_time, \"hour\", $event)\n                        },\n                        \"update:minute\": function ($event) {\n                          return _vm.$set(_vm.exit_time, \"minute\", $event)\n                        },\n                        \"update:meridiem\": function ($event) {\n                          return _vm.$set(_vm.exit_time, \"meridiem\", $event)\n                        },\n                      },\n                    }),\n                  ],\n                  1\n                ),\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"form-group\" },\n              [\n                _c(\"label\", { attrs: { for: \"\" } }, [\n                  _vm._v(_vm._s(_vm.trans(\"reception.visitor_remarks\"))),\n                ]),\n                _vm._v(\" \"),\n                _c(\"autosize-textarea\", {\n                  attrs: {\n                    rows: \"1\",\n                    name: \"remarks\",\n                    placeholder: _vm.trans(\"reception.visitor_remarks\"),\n                  },\n                  model: {\n                    value: _vm.visitorLogForm.remarks,\n                    callback: function ($$v) {\n                      _vm.$set(_vm.visitorLogForm, \"remarks\", $$v)\n                    },\n                    expression: \"visitorLogForm.remarks\",\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"show-error\", {\n                  attrs: {\n                    \"form-name\": _vm.visitorLogForm,\n                    \"prop-name\": \"remarks\",\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ],\n        2\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"card-footer text-right\" },\n        [\n          _c(\n            \"router-link\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.uuid,\n                  expression: \"uuid\",\n                },\n              ],\n              staticClass: \"btn btn-danger waves-effect waves-light\",\n              attrs: { to: \"/reception/visitor/log\" },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n          ),\n          _vm._v(\" \"),\n          !_vm.uuid\n            ? _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-danger waves-effect waves-light\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.$emit(\"cancel\")\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info waves-effect waves-light\",\n              attrs: { type: \"submit\" },\n            },\n            [\n              _vm.uuid\n                ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n            ]\n          ),\n        ],\n        1\n      ),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"reception.visitor_log\")) +\n                  \" \\n                    \"\n              ),\n              _vm.visitor_logs.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.visitor_logs.total,\n                            from: _vm.visitor_logs.from,\n                            to: _vm.visitor_logs.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _vm.visitor_logs.total &&\n                !_vm.showCreatePanel &&\n                _vm.hasPermission(\"create-visitor-log\")\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"general.add_new\"),\n                            expression: \"trans('general.add_new')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showCreatePanel = !_vm.showCreatePanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"reception.add_new_visitor_log\"))\n                          ),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"reception.visitor-log\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"reception.visitor_type\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"select\",\n                            {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.filter.type,\n                                  expression: \"filter.type\",\n                                },\n                              ],\n                              staticClass: \"custom-select col-12\",\n                              on: {\n                                change: function ($event) {\n                                  var $$selectedVal = Array.prototype.filter\n                                    .call($event.target.options, function (o) {\n                                      return o.selected\n                                    })\n                                    .map(function (o) {\n                                      var val =\n                                        \"_value\" in o ? o._value : o.value\n                                      return val\n                                    })\n                                  _vm.$set(\n                                    _vm.filter,\n                                    \"type\",\n                                    $event.target.multiple\n                                      ? $$selectedVal\n                                      : $$selectedVal[0]\n                                  )\n                                },\n                              },\n                            },\n                            [\n                              _c(\n                                \"option\",\n                                { attrs: { value: \"null\", selected: \"\" } },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"general.select_one\"))\n                                  ),\n                                ]\n                              ),\n                              _vm._v(\" \"),\n                              _vm._l(_vm.types, function (option) {\n                                return _c(\n                                  \"option\",\n                                  { domProps: { value: option.value } },\n                                  [\n                                    _vm._v(\n                                      \"\\n                                    \" +\n                                        _vm._s(option.text) +\n                                        \"\\n                                  \"\n                                    ),\n                                  ]\n                                )\n                              }),\n                            ],\n                            2\n                          ),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _vm.filter.type == \"parent\"\n                        ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(_vm._s(_vm.trans(\"student.student\"))),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"v-select\",\n                                  {\n                                    attrs: {\n                                      label: \"name\",\n                                      \"track-by\": \"id\",\n                                      name: \"student_id\",\n                                      id: \"student_id\",\n                                      options: _vm.students,\n                                      placeholder: _vm.trans(\n                                        \"student.select_student\"\n                                      ),\n                                      multiple: true,\n                                      \"close-on-select\": false,\n                                      \"clear-on-select\": false,\n                                      \"hide-selected\": true,\n                                      selected: _vm.selected_students,\n                                    },\n                                    on: {\n                                      select: _vm.onStudentSelect,\n                                      remove: _vm.onStudentRemove,\n                                    },\n                                    model: {\n                                      value: _vm.selected_students,\n                                      callback: function ($$v) {\n                                        _vm.selected_students = $$v\n                                      },\n                                      expression: \"selected_students\",\n                                    },\n                                  },\n                                  [\n                                    !_vm.students.length\n                                      ? _c(\n                                          \"div\",\n                                          {\n                                            staticClass: \"multiselect__option\",\n                                            attrs: { slot: \"afterList\" },\n                                            slot: \"afterList\",\n                                          },\n                                          [\n                                            _vm._v(\n                                              \"\\n                                        \" +\n                                                _vm._s(\n                                                  _vm.trans(\n                                                    \"general.no_option_found\"\n                                                  )\n                                                ) +\n                                                \"\\n                                    \"\n                                            ),\n                                          ]\n                                        )\n                                      : _vm._e(),\n                                  ]\n                                ),\n                              ],\n                              1\n                            ),\n                          ])\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _vm.filter.type == \"other\"\n                        ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group\" },\n                              [\n                                _c(\"label\", { attrs: { for: \"\" } }, [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"employee.employee\"))\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"v-select\",\n                                  {\n                                    attrs: {\n                                      label: \"name\",\n                                      \"track-by\": \"id\",\n                                      name: \"employee_id\",\n                                      id: \"employee_id\",\n                                      options: _vm.employees,\n                                      placeholder: _vm.trans(\n                                        \"employee.select_employee\"\n                                      ),\n                                      multiple: true,\n                                      \"close-on-select\": false,\n                                      \"clear-on-select\": false,\n                                      \"hide-selected\": true,\n                                      selected: _vm.selected_employees,\n                                    },\n                                    on: {\n                                      select: _vm.onEmployeeSelect,\n                                      remove: _vm.onEmployeeRemove,\n                                    },\n                                    model: {\n                                      value: _vm.selected_employees,\n                                      callback: function ($$v) {\n                                        _vm.selected_employees = $$v\n                                      },\n                                      expression: \"selected_employees\",\n                                    },\n                                  },\n                                  [\n                                    !_vm.employees.length\n                                      ? _c(\n                                          \"div\",\n                                          {\n                                            staticClass: \"multiselect__option\",\n                                            attrs: { slot: \"afterList\" },\n                                            slot: \"afterList\",\n                                          },\n                                          [\n                                            _vm._v(\n                                              \"\\n                                        \" +\n                                                _vm._s(\n                                                  _vm.trans(\n                                                    \"general.no_option_found\"\n                                                  )\n                                                ) +\n                                                \"\\n                                    \"\n                                            ),\n                                          ]\n                                        )\n                                      : _vm._e(),\n                                  ]\n                                ),\n                              ],\n                              1\n                            ),\n                          ])\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"reception.visiting_purpose\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"visiting_purpose_id\",\n                                  id: \"visiting_purpose_id\",\n                                  options: _vm.visiting_purposes,\n                                  placeholder: _vm.trans(\n                                    \"reception.select_visiting_purpose\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_visiting_purposes,\n                                },\n                                on: {\n                                  select: _vm.onVisitingPurposeSelect,\n                                  remove: _vm.onVisitingPurposeRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_visiting_purposes,\n                                  callback: function ($$v) {\n                                    _vm.selected_visiting_purposes = $$v\n                                  },\n                                  expression: \"selected_visiting_purposes\",\n                                },\n                              },\n                              [\n                                !_vm.visiting_purposes.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-sm-6\" },\n                        [\n                          _c(\"date-range-picker\", {\n                            attrs: {\n                              \"start-date\": _vm.filter.date_of_visit_start_date,\n                              \"end-date\": _vm.filter.date_of_visit_end_date,\n                              label: _vm.trans(\"general.date_between\"),\n                            },\n                            on: {\n                              \"update:startDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_visit_start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:start-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_visit_start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:endDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_visit_end_date\",\n                                  $event\n                                )\n                              },\n                              \"update:end-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_visit_end_date\",\n                                  $event\n                                )\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getVisitorLogs },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _vm.hasPermission(\"create-visitor-log\")\n            ? _c(\"transition\", { attrs: { name: \"fade\" } }, [\n                _vm.showCreatePanel\n                  ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"card-body\" },\n                        [\n                          _c(\"h4\", { staticClass: \"card-title\" }, [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"reception.add_new_visitor_log\"))\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"visitor-log-form\", {\n                            on: {\n                              completed: _vm.getVisitorLogs,\n                              cancel: function ($event) {\n                                _vm.showCreatePanel = !_vm.showCreatePanel\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.visitor_logs.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _c(\"th\", [_vm._v(\"#\")]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"reception.visiting_purpose\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"reception.visitor_detail\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"reception.visitor_count\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"reception.date_of_visit\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"reception.entry_time\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"reception.exit_time\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"reception.whom_to_meet\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"reception.visitor_remarks\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", { staticClass: \"table-option\" }, [\n                              _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(_vm.visitor_logs.data, function (visitor_log) {\n                            return _c(\"tr\", [\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(visitor_log.id),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(\n                                    visitor_log.visiting_purpose.name\n                                  ),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\n                                \"td\",\n                                [\n                                  visitor_log.type == \"parent\"\n                                    ? [\n                                        visitor_log.name\n                                          ? [\n                                              _vm._v(\n                                                _vm._s(\n                                                  _vm.trans(\n                                                    \"reception.visitor_name\"\n                                                  ) +\n                                                    \": \" +\n                                                    visitor_log.name\n                                                ) + \" \"\n                                              ),\n                                              _c(\"br\"),\n                                            ]\n                                          : _vm._e(),\n                                        _vm._v(\" \"),\n                                        visitor_log.relation_with_student\n                                          ? [\n                                              _vm._v(\n                                                _vm._s(\n                                                  _vm.trans(\n                                                    \"reception.relation_with_student\"\n                                                  ) +\n                                                    \": \" +\n                                                    visitor_log.relation_with_student\n                                                ) + \" \"\n                                              ),\n                                              _c(\"br\"),\n                                            ]\n                                          : _vm._e(),\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\"student.name\") +\n                                                \": \" +\n                                                _vm.getStudentName(\n                                                  visitor_log.student\n                                                )\n                                            ) +\n                                            \" \"\n                                        ),\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"student.first_guardian_name\"\n                                              ) +\n                                                \": \" +\n                                                visitor_log.student.parent\n                                                  .first_guardian_name\n                                            ) +\n                                            \" \"\n                                        ),\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\"student.mother_name\") +\n                                                \": \" +\n                                                visitor_log.student.parent\n                                                  .mother_name\n                                            ) +\n                                            \" \"\n                                        ),\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"student.contact_number\"\n                                              ) +\n                                                \": \" +\n                                                visitor_log.student\n                                                  .contact_number\n                                            ) +\n                                            \" \"\n                                        ),\n                                        _c(\"br\"),\n                                      ]\n                                    : [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"reception.visitor_name\"\n                                              ) +\n                                                \": \" +\n                                                visitor_log.name\n                                            ) +\n                                            \" \"\n                                        ),\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"reception.visitor_company_name\"\n                                              ) +\n                                                \": \" +\n                                                visitor_log.company_name\n                                            ) +\n                                            \" \"\n                                        ),\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"reception.visitor_contact_number\"\n                                              ) +\n                                                \": \" +\n                                                visitor_log.contact_number\n                                            ) +\n                                            \" \"\n                                        ),\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"reception.visitor_address\"\n                                              ) +\n                                                \": \" +\n                                                visitor_log.address\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ],\n                                ],\n                                2\n                              ),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(\n                                    visitor_log.visitor_count\n                                  ),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"moment\")(visitor_log.date_of_visit)\n                                  )\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"momentTime\")(visitor_log.entry_time)\n                                  )\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"momentTime\")(visitor_log.exit_time)\n                                  )\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                visitor_log.employee_id\n                                  ? _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n                                        \" +\n                                          _vm._s(\n                                            _vm.getEmployeeName(\n                                              visitor_log.employee\n                                            )\n                                          ) +\n                                          \" \"\n                                      ),\n                                      _c(\"br\"),\n                                      _vm._v(\n                                        \"\\n                                        \" +\n                                          _vm._s(\n                                            _vm.getEmployeeDesignationOnDate(\n                                              visitor_log.employee,\n                                              visitor_log.date_of_visit\n                                            )\n                                          ) +\n                                          \"\\n                                    \"\n                                      ),\n                                    ])\n                                  : _c(\"span\", [\n                                      _vm._v(\n                                        \"\\n                                        -\\n                                    \"\n                                      ),\n                                    ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  \"\\n                                    \" +\n                                    _vm._s(visitor_log.remarks) +\n                                    \"\\n                                \"\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", { staticClass: \"table-option\" }, [\n                                _c(\"div\", { staticClass: \"btn-group\" }, [\n                                  _c(\n                                    \"a\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"tooltip\",\n                                          rawName: \"v-tooltip\",\n                                          value: _vm.trans(\"general.print\"),\n                                          expression: \"trans('general.print')\",\n                                        },\n                                      ],\n                                      staticClass: \"btn btn-success btn-sm\",\n                                      attrs: {\n                                        href: `/reception/visitor/pass/${visitor_log.uuid}/print?token=${_vm.authToken}`,\n                                        target: \"_blank\",\n                                      },\n                                    },\n                                    [_c(\"i\", { staticClass: \"fas fa-print\" })]\n                                  ),\n                                  _vm._v(\" \"),\n                                  _vm.hasPermission(\"edit-visitor-log\")\n                                    ? _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"tooltip\",\n                                              rawName: \"v-tooltip\",\n                                              value: _vm.trans(\n                                                \"reception.edit_visitor_log\"\n                                              ),\n                                              expression:\n                                                \"trans('reception.edit_visitor_log')\",\n                                            },\n                                          ],\n                                          staticClass: \"btn btn-info btn-sm\",\n                                          on: {\n                                            click: function ($event) {\n                                              $event.preventDefault()\n                                              return _vm.editVisitorLog(\n                                                visitor_log\n                                              )\n                                            },\n                                          },\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-edit\",\n                                          }),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _vm.hasPermission(\"delete-visitor-log\")\n                                    ? _c(\n                                        \"button\",\n                                        {\n                                          directives: [\n                                            {\n                                              name: \"confirm\",\n                                              rawName: \"v-confirm\",\n                                              value: {\n                                                ok: _vm.confirmDelete(\n                                                  visitor_log\n                                                ),\n                                              },\n                                              expression:\n                                                \"{ok: confirmDelete(visitor_log)}\",\n                                            },\n                                            {\n                                              name: \"tooltip\",\n                                              rawName: \"v-tooltip\",\n                                              value: _vm.trans(\n                                                \"reception.delete_visitor_log\"\n                                              ),\n                                              expression:\n                                                \"trans('reception.delete_visitor_log')\",\n                                            },\n                                          ],\n                                          key: visitor_log.id,\n                                          staticClass: \"btn btn-danger btn-sm\",\n                                        },\n                                        [\n                                          _c(\"i\", {\n                                            staticClass: \"fas fa-trash\",\n                                          }),\n                                        ]\n                                      )\n                                    : _vm._e(),\n                                ]),\n                              ]),\n                            ])\n                          }),\n                          0\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.visitor_logs.total\n                  ? _c(\n                      \"module-info\",\n                      {\n                        attrs: {\n                          module: \"reception\",\n                          title: \"visitor_log_module_title\",\n                          description: \"visitor_log_module_description\",\n                          icon: \"list\",\n                        },\n                      },\n                      [\n                        _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                          !_vm.showCreatePanel &&\n                          _vm.hasPermission(\"create-visitor-log\")\n                            ? _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-info btn-md\",\n                                  on: {\n                                    click: function ($event) {\n                                      _vm.showCreatePanel = !_vm.showCreatePanel\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                  _vm._v(\n                                    \" \" + _vm._s(_vm.trans(\"general.add_new\"))\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.visitor_logs,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getVisitorLogs,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=157ab0a6&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('157ab0a6')) {\n      api.createRecord('157ab0a6', component.options)\n    } else {\n      api.reload('157ab0a6', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=157ab0a6&\", function () {\n      api.rerender('157ab0a6', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/reception/visitor-log/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=19b28239&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('19b28239')) {\n      api.createRecord('19b28239', component.options)\n    } else {\n      api.reload('19b28239', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=19b28239&\", function () {\n      api.rerender('19b28239', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/reception/visitor-log/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=157ab0a6&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=19b28239&\""],"names":[],"sourceRoot":""}