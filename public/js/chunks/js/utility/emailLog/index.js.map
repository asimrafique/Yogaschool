{"version":3,"file":"js/chunks/js/utility/emailLog/index.js?id=18b09e1fd1509d3d","mappings":";;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AC9KA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAEA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAeA;AAAA;AASA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAQA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAKA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AAMA;AAAA;AA8BA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAaA;AACA;AACA;;;;;;;;;;;;;;;;;;AC5TA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA","sources":["webpack://InstiKit/resources/js/views/utility/email-log/index.vue","webpack://InstiKit/./resources/js/views/utility/email-log/index.vue","webpack://InstiKit/./resources/js/views/utility/email-log/index.vue?5306","webpack://InstiKit/./resources/js/views/utility/email-log/index.vue?95e1","webpack://InstiKit/./resources/js/views/utility/email-log/index.vue?665b"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('utility.email_log')}}\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"email_logs.total\">{{trans('general.total_result_found',{count : email_logs.total, from: email_logs.from, to: email_logs.to})}}</span>\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\r\n                    </h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\" v-if=\"email_logs.total\">\r\n                        <table class=\"table table-hover\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>{{trans('utility.email_receiver')}}</th>\r\n                                    <th>{{trans('utility.email_subject')}}</th>\r\n                                    <th>{{trans('utility.sent_at')}}</th>\r\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"email_log in email_logs.data\">\r\n                                    <td v-text=\"email_log.to_address\"></td>\r\n                                    <td v-text=\"email_log.subject\"></td>\r\n                                    <td>{{email_log.created_at | moment }}</td>\r\n                                    <td class=\"table-option\">\r\n                                        <div class=\"btn-group\">\r\n                                            <button type=\"button\" class=\"btn btn-info btn-sm\" @click=\"showDetailAction(email_log)\" v-tooltip=\"trans('utility.view_email')\"><i class=\"fas fa-arrow-circle-right\"></i></button>\r\n                                            <button class=\"btn btn-danger btn-sm\" :key=\"email_log.id\" v-confirm=\"{ok: confirmDelete(email_log)}\" v-tooltip=\"trans('utility.delete_email_log')\"><i class=\"fas fa-trash\"></i></button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                    <module-info v-if=\"!email_logs.total\" module=\"utility\" title=\"email_log_module_title\" description=\"email_log_module_description\" icon=\"list\"></module-info>\r\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"email_logs\" @updateRecords=\"getEmailLogs\" @change.native=\"getEmailLogs\"></pagination-record>\r\n                </div>\r\n            </div>\r\n\r\n            <transition name=\"modal\" v-if=\"showDetailModal\">\r\n                <div class=\"modal-mask\">\r\n                    <div class=\"modal-wrapper\">\r\n                        <div class=\"modal-container modal-lg\">\r\n                            <div class=\"modal-header\">\r\n                                <slot name=\"header\">\r\n                                    {{trans('utility.email_log')}}\r\n                                    <span class=\"float-right pointer\" @click=\"showDetailModal = false\">x</span>\r\n                                </slot>\r\n                            </div>\r\n                            <div class=\"modal-body\">\r\n                                <slot name=\"body\">\r\n                                    <h4>{{utility.email_subject}}\r\n                                        <span class=\"pull-right\">{{email_log.created_at | moment}}</span>\r\n                                    </h4>\r\n                                    <p>{{trans('utility.email_sender')+': '+email_log.from_address}}</p>\r\n                                    <p>{{trans('utility.email_receiver')+': '+email_log.to_address}}</p>\r\n                                    <div v-html=\"email_log.body\"></div>\r\n                                    <div class=\"clearfix\"></div>\r\n                                </slot>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        components: {},\r\n        data(){\r\n            return {\r\n                email_logs: {\r\n                    total: 0,\r\n                    data: []\r\n                },\r\n                filter: {\r\n                    page_length: helper.getConfig('page_length'),\r\n                    sort_by: 'created_at',\r\n                    order: 'desc'\r\n                },\r\n                email_log: {},\r\n                orderByOptions: [\r\n                    {\r\n                        value: 'created_at',\r\n                        translation: i18n.general.created_at\r\n                    }\r\n                ],\r\n                showDetailModal: false\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.featureAvailable('email_log')){\r\n                helper.featureNotAvailableMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            if(!helper.hasPermission('access-configuration')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.getEmailLogs();\r\n        },\r\n        methods: {\r\n            getEmailLogs(page){\r\n                let loader = this.$loading.show();\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                let url = helper.getFilterURL(this.filter);\r\n                axios.get('/api/email-log?page=' + page + url)\r\n                    .then(response => {\r\n                        this.email_logs = response;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            showDetailAction(email_log){\r\n                this.showDetailModal = true;\r\n                let loader = this.$loading.show();\r\n                axios.get('/api/email-log/'+email_log.id)\r\n                    .then(response => {\r\n                        this.email_log = response;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            confirmDelete(email_log){\r\n                return dialog => this.deleteEmailLog(email_log);\r\n            },\r\n            deleteEmailLog(email_log){\r\n                let loader = this.$loading.show();\r\n                axios.delete('/api/email-log/'+email_log.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.getEmailLogs();\r\n                        loader.hide();\r\n                    }).catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        },\r\n        watch: {\r\n            filter: {\r\n                handler(val){\r\n                    this.getEmailLogs();\r\n                },\r\n                deep: true\r\n            }\r\n        }\r\n    }\r\n</script>\r\n","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"page-titles\" }, [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n            _vm._v(\n              _vm._s(_vm.trans(\"utility.email_log\")) + \"\\n                    \"\n            ),\n            _vm.email_logs.total\n              ? _c(\n                  \"span\",\n                  { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                  [\n                    _vm._v(\n                      _vm._s(\n                        _vm.trans(\"general.total_result_found\", {\n                          count: _vm.email_logs.total,\n                          from: _vm.email_logs.from,\n                          to: _vm.email_logs.to,\n                        })\n                      )\n                    ),\n                  ]\n                )\n              : _c(\n                  \"span\",\n                  { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                  [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"action-buttons pull-right\" },\n            [\n              _c(\"sort-by\", {\n                attrs: {\n                  \"order-by-options\": _vm.orderByOptions,\n                  \"sort-by\": _vm.filter.sort_by,\n                  order: _vm.filter.order,\n                },\n                on: {\n                  updateSortBy: (value) => {\n                    _vm.filter.sort_by = value\n                  },\n                  updateOrder: (value) => {\n                    _vm.filter.order = value\n                  },\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n      ]),\n    ]),\n    _vm._v(\" \"),\n    _c(\n      \"div\",\n      { staticClass: \"container-fluid\" },\n      [\n        _c(\"div\", { staticClass: \"card\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"card-body\" },\n            [\n              _vm.email_logs.total\n                ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                    _c(\"table\", { staticClass: \"table table-hover\" }, [\n                      _c(\"thead\", [\n                        _c(\"tr\", [\n                          _c(\"th\", [\n                            _vm._v(_vm._s(_vm.trans(\"utility.email_receiver\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"th\", [\n                            _vm._v(_vm._s(_vm.trans(\"utility.email_subject\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"th\", [\n                            _vm._v(_vm._s(_vm.trans(\"utility.sent_at\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"th\", { staticClass: \"table-option\" }, [\n                            _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                          ]),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"tbody\",\n                        _vm._l(_vm.email_logs.data, function (email_log) {\n                          return _c(\"tr\", [\n                            _c(\"td\", {\n                              domProps: {\n                                textContent: _vm._s(email_log.to_address),\n                              },\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"td\", {\n                              domProps: {\n                                textContent: _vm._s(email_log.subject),\n                              },\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"td\", [\n                              _vm._v(\n                                _vm._s(_vm._f(\"moment\")(email_log.created_at))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"td\", { staticClass: \"table-option\" }, [\n                              _c(\"div\", { staticClass: \"btn-group\" }, [\n                                _c(\n                                  \"button\",\n                                  {\n                                    directives: [\n                                      {\n                                        name: \"tooltip\",\n                                        rawName: \"v-tooltip\",\n                                        value: _vm.trans(\"utility.view_email\"),\n                                        expression:\n                                          \"trans('utility.view_email')\",\n                                      },\n                                    ],\n                                    staticClass: \"btn btn-info btn-sm\",\n                                    attrs: { type: \"button\" },\n                                    on: {\n                                      click: function ($event) {\n                                        return _vm.showDetailAction(email_log)\n                                      },\n                                    },\n                                  },\n                                  [\n                                    _c(\"i\", {\n                                      staticClass: \"fas fa-arrow-circle-right\",\n                                    }),\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"button\",\n                                  {\n                                    directives: [\n                                      {\n                                        name: \"confirm\",\n                                        rawName: \"v-confirm\",\n                                        value: {\n                                          ok: _vm.confirmDelete(email_log),\n                                        },\n                                        expression:\n                                          \"{ok: confirmDelete(email_log)}\",\n                                      },\n                                      {\n                                        name: \"tooltip\",\n                                        rawName: \"v-tooltip\",\n                                        value: _vm.trans(\n                                          \"utility.delete_email_log\"\n                                        ),\n                                        expression:\n                                          \"trans('utility.delete_email_log')\",\n                                      },\n                                    ],\n                                    key: email_log.id,\n                                    staticClass: \"btn btn-danger btn-sm\",\n                                  },\n                                  [_c(\"i\", { staticClass: \"fas fa-trash\" })]\n                                ),\n                              ]),\n                            ]),\n                          ])\n                        }),\n                        0\n                      ),\n                    ]),\n                  ])\n                : _vm._e(),\n              _vm._v(\" \"),\n              !_vm.email_logs.total\n                ? _c(\"module-info\", {\n                    attrs: {\n                      module: \"utility\",\n                      title: \"email_log_module_title\",\n                      description: \"email_log_module_description\",\n                      icon: \"list\",\n                    },\n                  })\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\"pagination-record\", {\n                attrs: {\n                  \"page-length\": _vm.filter.page_length,\n                  records: _vm.email_logs,\n                },\n                on: {\n                  \"update:pageLength\": function ($event) {\n                    return _vm.$set(_vm.filter, \"page_length\", $event)\n                  },\n                  \"update:page-length\": function ($event) {\n                    return _vm.$set(_vm.filter, \"page_length\", $event)\n                  },\n                  updateRecords: _vm.getEmailLogs,\n                },\n                nativeOn: {\n                  change: function ($event) {\n                    return _vm.getEmailLogs.apply(null, arguments)\n                  },\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _vm.showDetailModal\n          ? _c(\"transition\", { attrs: { name: \"modal\" } }, [\n              _c(\"div\", { staticClass: \"modal-mask\" }, [\n                _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n                  _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"modal-header\" },\n                      [\n                        _vm._t(\"header\", function () {\n                          return [\n                            _vm._v(\n                              \"\\n                                \" +\n                                _vm._s(_vm.trans(\"utility.email_log\")) +\n                                \"\\n                                \"\n                            ),\n                            _c(\n                              \"span\",\n                              {\n                                staticClass: \"float-right pointer\",\n                                on: {\n                                  click: function ($event) {\n                                    _vm.showDetailModal = false\n                                  },\n                                },\n                              },\n                              [_vm._v(\"x\")]\n                            ),\n                          ]\n                        }),\n                      ],\n                      2\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"modal-body\" },\n                      [\n                        _vm._t(\"body\", function () {\n                          return [\n                            _c(\"h4\", [\n                              _vm._v(\n                                _vm._s(_vm.utility.email_subject) +\n                                  \"\\n                                    \"\n                              ),\n                              _c(\"span\", { staticClass: \"pull-right\" }, [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"moment\")(_vm.email_log.created_at)\n                                  )\n                                ),\n                              ]),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"p\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"utility.email_sender\") +\n                                    \": \" +\n                                    _vm.email_log.from_address\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"p\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"utility.email_receiver\") +\n                                    \": \" +\n                                    _vm.email_log.to_address\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"div\", {\n                              domProps: {\n                                innerHTML: _vm._s(_vm.email_log.body),\n                              },\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"div\", { staticClass: \"clearfix\" }),\n                          ]\n                        }),\n                      ],\n                      2\n                    ),\n                  ]),\n                ]),\n              ]),\n            ])\n          : _vm._e(),\n      ],\n      1\n    ),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=becfb0f8&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('becfb0f8')) {\n      api.createRecord('becfb0f8', component.options)\n    } else {\n      api.reload('becfb0f8', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=becfb0f8&\", function () {\n      api.rerender('becfb0f8', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/utility/email-log/index.vue\"\nexport default component.exports","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=becfb0f8&\""],"names":[],"sourceRoot":""}