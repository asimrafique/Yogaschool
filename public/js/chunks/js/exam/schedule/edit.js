"use strict";(self.webpackChunkInstiKit=self.webpackChunkInstiKit||[]).push([[9722],{50520:(e,s,a)=>{a.d(s,{Z:()=>i});var r=a(94015),t=a.n(r),n=a(23645),o=a.n(n)()(t());o.push([e.id,".loading-overlay.is-full-page{z-index:1060}","",{version:3,sources:["webpack://./resources/js/views/exam/schedule/form.vue"],names:[],mappings:"AAsZA,8BACA,YACA",sourcesContent:['<template>\r\n    <div>\r\n        <form @submit.prevent="proceed" @keydown="scheduleForm.errors.clear($event.target.name)">\r\n            <div class="row">\r\n                <div class="col-12 col-sm-3">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'exam.exam\')}} </label> <button type="button" class="btn btn-xs btn-info pull-right" v-if="hasPermission(\'create-exam\')" @click="showExamModal = true">{{trans(\'general.add_new\')}}</button>\r\n                        <v-select label="name" v-model="selected_exam" name="exam_id" id="exam_id" :options="exams" :placeholder="trans(\'exam.select_exam\')" @select="onExamSelect" @close="scheduleForm.errors.clear(\'exam_id\')" @remove="scheduleForm.exam_id = \'\'" :disabled="id ? true : false">\r\n                            <div class="multiselect__option" slot="afterList" v-if="!exams.length">\r\n                                {{trans(\'general.no_option_found\')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name="scheduleForm" prop-name="exam_id"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class="col-12 col-sm-3">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'academic.batch\')}} </label>\r\n                        <v-select label="name" v-model="selected_batch" group-values="batches" group-label="course_group" :group-select="false" name="batch_id" id="batch_id" :options="batches" :placeholder="trans(\'academic.select_batch\')" @select="onBatchSelect" @close="scheduleForm.errors.clear(\'batch_id\')" @remove="scheduleForm.batch_id = \'\'" :disabled="id ? true : false">\r\n                            <div class="multiselect__option" slot="afterList" v-if="!batches.length">\r\n                                {{trans(\'general.no_option_found\')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name="scheduleForm" prop-name="batch_id"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class="col-12 col-sm-3">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'exam.grade\')}} </label>\r\n                        <v-select label="name" v-model="selected_exam_grade" name="exam_grade_id" id="exam_grade_id" :options="exam_grades" :placeholder="trans(\'exam.select_grade\')" @select="onExamGradeSelect" @close="scheduleForm.errors.clear(\'exam_grade_id\')" @remove="scheduleForm.exam_grade_id = \'\'">\r\n                            <div class="multiselect__option" slot="afterList" v-if="!exam_grades.length">\r\n                                {{trans(\'general.no_option_found\')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name="scheduleForm" prop-name="exam_grade_id"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class="col-12 col-sm-3">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'exam.assessment\')}} </label>\r\n                        <v-select label="name" v-model="selected_exam_assessment" name="exam_assessment_id" id="exam_assessment_id" :options="exam_assessments" :placeholder="trans(\'exam.select_assessment\')" @select="onExamAssessmentSelect" @close="scheduleForm.errors.clear(\'exam_assessment_id\')" @remove="scheduleForm.exam_assessment_id = \'\'">\r\n                            <div class="multiselect__option" slot="afterList" v-if="!exam_assessments.length">\r\n                                {{trans(\'general.no_option_found\')}}\r\n                            </div>\r\n                        </v-select>\r\n                        <show-error :form-name="scheduleForm" prop-name="exam_assessment_id"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class="col-12 col-sm-3">\r\n                    <div class="form-group">\r\n                        <label for="">{{trans(\'exam.overall_pass_percentage\')}}</label>\r\n                        <input class="form-control" type="text" v-model="scheduleForm.overall_pass_percentage" name="overall_pass_percentage" :placeholder="trans(\'exam.overall_pass_percentage\')">\r\n                        <show-error :form-name="scheduleForm" prop-name="overall_pass_percentage"></show-error>\r\n                    </div>\r\n                </div>\r\n                <div class="col-12 col-sm-3">\r\n                    <div class="form-group">\r\n                        <switches class="m-l-20" v-model="scheduleForm.show_result" theme="bootstrap" color="success"></switches> {{trans(\'exam.show_result\')}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="row m-b-10" v-if="scheduleForm.records.length && exam_assessment">\r\n                <div class="col-12 col-sm-3">\r\n\r\n                </div>\r\n                <div class="col-12 col-sm-3">\r\n\r\n                </div>\r\n                <div class="col-12 col-sm-3" v-for="detail in exam_assessment.details">\r\n                    {{detail.name}} {{trans(\'exam.observation_detail_max_mark\')}}\r\n                </div>\r\n            </div>\r\n\r\n            <div class="row" v-for="(record,index) in scheduleForm.records">\r\n                <div class="col-12 col-sm-3">\r\n                    <div class="form-group">\r\n                        {{record.subject_name}}\r\n                        <div class="form-group">\r\n                            <label class="custom-control custom-checkbox">\r\n                                <input type="checkbox" class="custom-control-input" value="1" v-model="record.has_no_exam">\r\n                                <span class="custom-control-label">{{trans(\'academic.subject_has_no_exam\')}}</span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <template v-if="! record.has_no_exam">\r\n                    <div class="col-12 col-sm-3">\r\n                        <div class="form-group">\r\n                            <datepicker v-model="record.date" :bootstrapStyling="true" @selected="scheduleForm.errors.clear(getScheduleDateName(index))" :placeholder="trans(\'exam.schedule_date\')"></datepicker>\r\n                            <show-error :form-name="scheduleForm" :prop-name="getScheduleDateName(index)"></show-error>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-12 col-sm-3" v-for="(detail,idx) in record.assessment_details">\r\n                        <div class="row">\r\n                            <div class="col-12 col-sm-3">\r\n                                <div class="form-group">\r\n                                    <label class="custom-control custom-checkbox">\r\n                                        <input type="checkbox" class="custom-control-input" value="1" v-model="detail.is_applicable">\r\n                                        <span class="custom-control-label">{{trans(\'assessment.is_applicable\')}}</span>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-12 col-sm-9" v-if="detail.is_applicable">\r\n                                <div class="form-group">\r\n                                    <input class="form-control" type="text" v-model="detail.max_mark" :name="getDetailMaxMark(index, idx)" :placeholder="trans(\'exam.assessment_detail_max_mark\')">\r\n                                    <show-error :form-name="scheduleForm" :prop-name="getDetailMaxMark(index, idx)"></show-error>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </template>\r\n            </div>\r\n            <div class="card-footer text-right">\r\n                <router-link to="/exam/schedule" class="btn btn-danger waves-effect waves-light ">{{trans(\'general.cancel\')}}</router-link>\r\n                <button type="submit" class="btn btn-info waves-effect waves-light">\r\n                    <span v-if="id">{{trans(\'general.update\')}}</span>\r\n                    <span v-else>{{trans(\'general.save\')}}</span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n\r\n        <transition name="modal" v-if="showExamModal">\r\n            <div class="modal-mask">\r\n                <div class="modal-wrapper">\r\n                    <div class="modal-container modal-lg">\r\n                        <div class="modal-header">\r\n                            <slot name="header">\r\n                                {{trans(\'exam.add_new_exam\')}}\r\n                                <span class="float-right pointer" @click="showExamModal = false">x</span>\r\n                            </slot>\r\n                        </div>\r\n                        <div class="modal-body">\r\n                            <slot name="body">\r\n                                <exam-form @completed="getPreRequisite" @cancel="showExamModal = false"></exam-form>\r\n                                <div class="clearfix"></div>\r\n                            </slot>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </transition>\r\n    </div>\r\n</template>\r\n\r\n\r\n<script>\r\n    import examForm from \'../form\'\r\n\r\n    export default {\r\n        components: {examForm},\r\n        data() {\r\n            return {\r\n                scheduleForm: new Form({\r\n                    batch_id: \'\',\r\n                    exam_id: \'\',\r\n                    exam_grade_id: \'\',\r\n                    exam_assessment_id: \'\',\r\n                    description: \'\',\r\n                    overall_pass_percentage: \'\',\r\n                    show_result: 0,\r\n                    records: []\r\n                }),\r\n                all_batches: [],\r\n                batches: [],\r\n                selected_batch: null,\r\n                exams: [],\r\n                selected_exam: null,\r\n                exam_grades: [],\r\n                selected_exam_grade: null,\r\n                exam_assessments: [],\r\n                selected_exam_assessment: null,\r\n                exam_assessments: [],\r\n                batch_with_subjects: [],\r\n                exam_assessment_with_details: [],\r\n                exam_assessment: {},\r\n                showExamModal: false\r\n            };\r\n        },\r\n        props: [\'id\'],\r\n        mounted() {\r\n            if(!helper.hasPermission(\'create-exam-schedule\') && !helper.hasPermission(\'edit-exam-schedule\')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push(\'/dashboard\');\r\n            }\r\n\r\n            this.getPreRequisite();\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            getScheduleDateName(index){\r\n                return index+\'_schedule_date\';\r\n            },\r\n            getDetailMaxMark(index, idx){\r\n                return index+\'_\'+idx+\'_max_mark\';\r\n            },\r\n            getPreRequisite(){\r\n                let loader = this.$loading.show();\r\n                axios.get(\'/api/exam/schedule/pre-requisite\')\r\n                    .then(response => {\r\n                        this.all_batches = response.batches;\r\n                        this.exams = response.exams;\r\n                        this.exam_grades = response.exam_grades;\r\n                        this.exam_assessments = response.exam_assessments;\r\n                        this.batch_with_subjects = response.batch_with_subjects;\r\n                        this.exam_assessment_with_details = response.exam_assessment_with_details;\r\n\r\n                        if(this.id)\r\n                            this.get();\r\n\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            },\r\n            getSubjects(){\r\n                let loader = this.$loading.show();\r\n\r\n                let batch = this.batch_with_subjects.find(o => o.id == this.scheduleForm.batch_id);\r\n\r\n                if (typeof batch == \'undefined\') {\r\n                    loader.hide();\r\n                    return;\r\n                }\r\n\r\n                this.scheduleForm.records = [];\r\n\r\n                batch.subjects.forEach(subject => {\r\n                    this.scheduleForm.records.push({\r\n                        subject_id: subject.id,\r\n                        subject_name: subject.name+\' (\'+subject.code+\')\',\r\n                        has_no_exam: subject.has_no_exam,\r\n                        date: \'\',\r\n                        assessment_details: []\r\n                    })\r\n                });\r\n                this.selected_exam_assessment = null;\r\n                this.scheduleForm.exam_assessment_id = \'\';\r\n                \r\n                loader.hide();\r\n            },\r\n            proceed(){\r\n                if(this.id)\r\n                    this.update();\r\n                else\r\n                    this.store();\r\n            },\r\n            store(){\r\n                let loader = this.$loading.show();\r\n                this.scheduleForm.post(\'/api/exam/schedule\')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.selected_batch = null;\r\n                        this.selected_exam = null;\r\n                        this.selected_exam_grade = null;\r\n                        this.selected_exam_assessment = null;\r\n                        this.scheduleForm.records = [];\r\n                        this.$emit(\'completed\');\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            get(){\r\n                let loader = this.$loading.show();\r\n                axios.get(\'/api/exam/schedule/\'+this.id)\r\n                    .then(response => {\r\n                        this.selected_exam = response.selected_exam;\r\n                        response = response.exam_schedule;\r\n\r\n                        this.scheduleForm.overall_pass_percentage = response.options.overall_pass_percentage;\r\n                        this.scheduleForm.show_result = response.options.show_result;\r\n\r\n                        if (this.selected_exam && this.selected_exam.course_group_id)\r\n                            this.batches = this.all_batches.filter(o => o.course_group === this.selected_exam.course_group_name);\r\n                        else\r\n                            this.batches = this.all_batches;\r\n\r\n                        this.scheduleForm.batch_id = response.batch_id;\r\n                        this.selected_batch = this.scheduleForm.batch_id ? {id: response.batch_id, name: response.batch.course.name+\' \'+response.batch.name} : null;\r\n\r\n                        this.scheduleForm.exam_id = response.exam_id;\r\n\r\n                        this.scheduleForm.exam_grade_id = response.exam_grade_id;\r\n                        this.selected_exam_grade = this.scheduleForm.exam_grade_id ? {id: response.exam_grade_id, name: response.grade.name} : null;\r\n\r\n                        this.scheduleForm.exam_assessment_id = response.exam_assessment_id;\r\n                        this.selected_exam_assessment = this.scheduleForm.exam_assessment_id ? {id: response.exam_assessment_id, name: response.assessment.name} : null;\r\n                        this.exam_assessment = this.scheduleForm.exam_assessment_id ? response.assessment : {};\r\n\r\n                        let batch = this.batch_with_subjects.find(o => o.id == this.scheduleForm.batch_id);\r\n                        this.scheduleForm.records = [];\r\n\r\n                        let record = {};\r\n                        batch.subjects.forEach(subject => {\r\n                            record = response.records.find(o => o.subject_id == subject.id);\r\n\r\n                            if (typeof record == \'undefined\') {\r\n                                record = {\r\n                                    options: {has_no_exam: 0},\r\n                                    date: \'\'\r\n                                }\r\n                            }\r\n\r\n                            let assessment_details = [];\r\n                            if (record.options.assessment_details && Array.isArray(record.options.assessment_details)) {\r\n                                record.options.assessment_details.forEach(detail => {\r\n                                    assessment_details.push({\r\n                                        id: detail.id,\r\n                                        is_applicable: detail.is_applicable,\r\n                                        max_mark: detail.max_mark,\r\n                                        pass_percentage: detail.pass_percentage\r\n                                    })\r\n                                })\r\n                            } else {\r\n                                response.assessment.details.forEach(detail => {\r\n                                    assessment_details.push({\r\n                                        id: detail.id,\r\n                                        is_applicable: true,\r\n                                        max_mark: detail.max_mark,\r\n                                        pass_percentage: detail.pass_percentage\r\n                                    })\r\n                                })\r\n                            }\r\n\r\n                            this.scheduleForm.records.push({\r\n                                subject_id: subject.id,\r\n                                subject_name: subject.name+\' (\'+subject.code+\')\',\r\n                                has_no_exam: record.date ? 0 : 1,\r\n                                date: record.date,\r\n                                assessment_details: assessment_details\r\n                            });\r\n                        });\r\n                        \r\n                        this.module_id = response.id;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                        // this.$router.push(\'/exam/schedule\');\r\n                    });\r\n            },\r\n            update(){\r\n                let loader = this.$loading.show();\r\n                this.scheduleForm.patch(\'/api/exam/schedule/\'+this.id)\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        loader.hide();\r\n                        this.$router.push(\'/exam/schedule\');\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onBatchSelect(selectedOption){\r\n                this.scheduleForm.batch_id = selectedOption.id;\r\n            },\r\n            onExamSelect(selectedOption){\r\n                this.scheduleForm.batch_id = \'\';\r\n                this.selected_batch = null;\r\n                this.scheduleForm.records = [];\r\n                if (selectedOption.course_group_id)\r\n                    this.batches = this.all_batches.filter(o => o.course_group === selectedOption.course_group_name);\r\n                else\r\n                    this.batches = this.all_batches;\r\n                this.scheduleForm.exam_id = selectedOption.id;\r\n            },\r\n            onExamGradeSelect(selectedOption){\r\n                this.scheduleForm.exam_grade_id = selectedOption.id;\r\n            },\r\n            onExamAssessmentSelect(selectedOption){\r\n                this.scheduleForm.exam_assessment_id = selectedOption.id;\r\n                this.exam_assessment = this.exam_assessment_with_details.find(o => o.id == selectedOption.id);\r\n                this.scheduleForm.records.forEach(record => {\r\n                    record.assessment_details = [];\r\n                    this.exam_assessment.details.forEach(detail => {\r\n                        record.assessment_details.push({\r\n                            id: detail.id,\r\n                            is_applicable: true,\r\n                            max_mark: detail.max_mark,\r\n                            pass_percentage: detail.pass_percentage\r\n                        });\r\n                    });\r\n                })\r\n            },\r\n            hideExamForm(){\r\n                $(\'.add-exam-form\').modal(\'hide\');\r\n            }\r\n        },\r\n        watch: {\r\n            \'scheduleForm.batch_id\': function(val) {\r\n                if (!this.id)\r\n                    this.getSubjects();\r\n            }\r\n        }\r\n    }\r\n<\/script>\r\n\r\n<style>\r\n.loading-overlay.is-full-page{\r\n    z-index: 1060;\r\n}\r\n</style>'],sourceRoot:""}]);const i=o},96489:(e,s,a)=>{a.d(s,{Z:()=>t});const r={components:{},data:function(){return{examForm:new Form({name:"",exam_term_id:"",description:""}),exam_terms:[],selected_exam_term:null}},props:["id"],mounted:function(){helper.hasPermission("create-exam")||helper.hasPermission("edit-exam")||(helper.notAccessibleMsg(),this.$router.push("/dashboard")),this.getPreRequisite()},methods:{proceed:function(){this.id?this.update():this.store()},getPreRequisite:function(){var e=this,s=this.$loading.show();axios.get("/api/exam/pre-requisite").then((function(a){e.exam_terms=a.exam_terms,e.id&&e.get(),s.hide()})).catch((function(e){s.hide(),helper.showErrorMsg(e)}))},store:function(){var e=this,s=this.$loading.show();this.examForm.post("/api/exam").then((function(a){toastr.success(a.message),e.selected_exam_term=null,e.$emit("completed"),s.hide()})).catch((function(e){s.hide(),helper.showErrorMsg(e)}))},get:function(){var e=this,s=this.$loading.show();axios.get("/api/exam/"+this.id).then((function(a){e.examForm.name=a.name,e.examForm.exam_term_id=a.exam_term_id,e.selected_exam_term=a.exam_term_id?{id:a.exam_term_id,name:a.term.name+" ("+a.term.course_group.name+")"}:null,e.examForm.description=a.description,s.hide()})).catch((function(a){s.hide(),helper.showErrorMsg(a),e.$router.push("/exam")}))},update:function(){var e=this,s=this.$loading.show();this.examForm.patch("/api/exam/"+this.id).then((function(a){toastr.success(a.message),s.hide(),e.$router.push("/exam")})).catch((function(e){s.hide(),helper.showErrorMsg(e)}))},getConfig:function(e){return helper.getConfig(e)},onExamTermSelect:function(e){this.examForm.exam_term_id=e.id}}};const t=(0,a(51900).Z)(r,(function(){var e=this,s=e._self._c;return s("form",{on:{submit:function(s){return s.preventDefault(),e.proceed.apply(null,arguments)},keydown:function(s){return e.examForm.errors.clear(s.target.name)}}},[s("div",{staticClass:"row"},[s("div",{staticClass:"col-12 col-sm-4"},[s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("exam.term"))+" ")]),e._v(" "),s("v-select",{attrs:{label:"name",name:"exam_term_id",id:"exam_term_id",options:e.exam_terms,placeholder:e.trans("exam.select_term")},on:{select:e.onExamTermSelect,close:function(s){return e.examForm.errors.clear("exam_term_id")},remove:function(s){e.examForm.exam_term_id=""}},model:{value:e.selected_exam_term,callback:function(s){e.selected_exam_term=s},expression:"selected_exam_term"}},[e.exam_terms.length?e._e():s("div",{staticClass:"multiselect__option",attrs:{slot:"afterList"},slot:"afterList"},[e._v("\n                        "+e._s(e.trans("general.no_option_found"))+"\n                    ")])]),e._v(" "),s("show-error",{attrs:{"form-name":e.examForm,"prop-name":"exam_term_id"}})],1)]),e._v(" "),s("div",{staticClass:"col-12 col-sm-4"},[s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("exam.exam_name")))]),e._v(" "),s("input",{directives:[{name:"model",rawName:"v-model",value:e.examForm.name,expression:"examForm.name"}],staticClass:"form-control",attrs:{type:"text",name:"name",placeholder:e.trans("exam.exam_name")},domProps:{value:e.examForm.name},on:{input:function(s){s.target.composing||e.$set(e.examForm,"name",s.target.value)}}}),e._v(" "),s("show-error",{attrs:{"form-name":e.examForm,"prop-name":"name"}})],1)]),e._v(" "),s("div",{staticClass:"col-12 col-sm-4"},[s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("exam.exam_description")))]),e._v(" "),s("input",{directives:[{name:"model",rawName:"v-model",value:e.examForm.description,expression:"examForm.description"}],staticClass:"form-control",attrs:{type:"text",name:"description",placeholder:e.trans("exam.exam_description")},domProps:{value:e.examForm.description},on:{input:function(s){s.target.composing||e.$set(e.examForm,"description",s.target.value)}}}),e._v(" "),s("show-error",{attrs:{"form-name":e.examForm,"prop-name":"description"}})],1)])]),e._v(" "),s("div",{staticClass:"card-footer text-right"},[s("router-link",{directives:[{name:"show",rawName:"v-show",value:e.id,expression:"id"}],staticClass:"btn btn-danger waves-effect waves-light",attrs:{to:"/exam"}},[e._v(e._s(e.trans("general.cancel")))]),e._v(" "),e.id?e._e():s("button",{staticClass:"btn btn-danger waves-effect waves-light",attrs:{type:"button"},on:{click:function(s){return e.$emit("cancel")}}},[e._v(e._s(e.trans("general.cancel")))]),e._v(" "),s("button",{staticClass:"btn btn-info waves-effect waves-light",attrs:{type:"submit"}},[e.id?s("span",[e._v(e._s(e.trans("general.update")))]):s("span",[e._v(e._s(e.trans("general.save")))])])],1)])}),[],!1,null,null,null).exports},19977:(e,s,a)=>{a.r(s),a.d(s,{default:()=>t});const r={components:{examScheduleForm:a(26292).Z},data:function(){return{id:this.$route.params.id}},mounted:function(){helper.hasPermission("edit-exam-schedule")||(helper.notAccessibleMsg(),this.$router.push("/dashboard"))}};const t=(0,a(51900).Z)(r,(function(){var e=this,s=e._self._c;return s("div",[s("div",{staticClass:"page-titles"},[s("div",{staticClass:"row"},[s("div",{staticClass:"col-12 col-sm-6"},[s("h3",{staticClass:"text-themecolor"},[e._v(e._s(e.trans("exam.edit_schedule")))])]),e._v(" "),s("div",{staticClass:"col-12 col-sm-6"},[s("div",{staticClass:"action-buttons pull-right"},[s("button",{staticClass:"btn btn-info btn-sm",on:{click:function(s){return e.$router.push("/exam/schedule")}}},[s("i",{staticClass:"fas fa-list"}),e._v(" "),s("span",{staticClass:"d-none d-sm-inline"},[e._v(e._s(e.trans("exam.schedule")))])])])])])]),e._v(" "),s("div",{staticClass:"container-fluid"},[s("div",{staticClass:"card card-form"},[s("div",{staticClass:"card-body p-t-20"},[s("exam-schedule-form",{attrs:{id:e.id}})],1)])])])}),[],!1,null,null,null).exports},26292:(e,s,a)=>{a.d(s,{Z:()=>m});function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function t(e,s,a){return(s=function(e){var s=function(e,s){if("object"!==r(e)||null===e)return e;var a=e[Symbol.toPrimitive];if(void 0!==a){var t=a.call(e,s||"default");if("object"!==r(t))return t;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===s?String:Number)(e)}(e,"string");return"symbol"===r(s)?s:String(s)}(s))in e?Object.defineProperty(e,s,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[s]=a,e}const n={components:{examForm:a(96489).Z},data:function(){var e;return t(e={scheduleForm:new Form({batch_id:"",exam_id:"",exam_grade_id:"",exam_assessment_id:"",description:"",overall_pass_percentage:"",show_result:0,records:[]}),all_batches:[],batches:[],selected_batch:null,exams:[],selected_exam:null,exam_grades:[],selected_exam_grade:null,exam_assessments:[],selected_exam_assessment:null},"exam_assessments",[]),t(e,"batch_with_subjects",[]),t(e,"exam_assessment_with_details",[]),t(e,"exam_assessment",{}),t(e,"showExamModal",!1),e},props:["id"],mounted:function(){helper.hasPermission("create-exam-schedule")||helper.hasPermission("edit-exam-schedule")||(helper.notAccessibleMsg(),this.$router.push("/dashboard")),this.getPreRequisite()},methods:{hasPermission:function(e){return helper.hasPermission(e)},getScheduleDateName:function(e){return e+"_schedule_date"},getDetailMaxMark:function(e,s){return e+"_"+s+"_max_mark"},getPreRequisite:function(){var e=this,s=this.$loading.show();axios.get("/api/exam/schedule/pre-requisite").then((function(a){e.all_batches=a.batches,e.exams=a.exams,e.exam_grades=a.exam_grades,e.exam_assessments=a.exam_assessments,e.batch_with_subjects=a.batch_with_subjects,e.exam_assessment_with_details=a.exam_assessment_with_details,e.id&&e.get(),s.hide()})).catch((function(e){s.hide(),helper.showErrorMsg(e)}))},getSubjects:function(){var e=this,s=this.$loading.show(),a=this.batch_with_subjects.find((function(s){return s.id==e.scheduleForm.batch_id}));void 0!==a?(this.scheduleForm.records=[],a.subjects.forEach((function(s){e.scheduleForm.records.push({subject_id:s.id,subject_name:s.name+" ("+s.code+")",has_no_exam:s.has_no_exam,date:"",assessment_details:[]})})),this.selected_exam_assessment=null,this.scheduleForm.exam_assessment_id="",s.hide()):s.hide()},proceed:function(){this.id?this.update():this.store()},store:function(){var e=this,s=this.$loading.show();this.scheduleForm.post("/api/exam/schedule").then((function(a){toastr.success(a.message),e.selected_batch=null,e.selected_exam=null,e.selected_exam_grade=null,e.selected_exam_assessment=null,e.scheduleForm.records=[],e.$emit("completed"),s.hide()})).catch((function(e){s.hide(),helper.showErrorMsg(e)}))},get:function(){var e=this,s=this.$loading.show();axios.get("/api/exam/schedule/"+this.id).then((function(a){e.selected_exam=a.selected_exam,a=a.exam_schedule,e.scheduleForm.overall_pass_percentage=a.options.overall_pass_percentage,e.scheduleForm.show_result=a.options.show_result,e.selected_exam&&e.selected_exam.course_group_id?e.batches=e.all_batches.filter((function(s){return s.course_group===e.selected_exam.course_group_name})):e.batches=e.all_batches,e.scheduleForm.batch_id=a.batch_id,e.selected_batch=e.scheduleForm.batch_id?{id:a.batch_id,name:a.batch.course.name+" "+a.batch.name}:null,e.scheduleForm.exam_id=a.exam_id,e.scheduleForm.exam_grade_id=a.exam_grade_id,e.selected_exam_grade=e.scheduleForm.exam_grade_id?{id:a.exam_grade_id,name:a.grade.name}:null,e.scheduleForm.exam_assessment_id=a.exam_assessment_id,e.selected_exam_assessment=e.scheduleForm.exam_assessment_id?{id:a.exam_assessment_id,name:a.assessment.name}:null,e.exam_assessment=e.scheduleForm.exam_assessment_id?a.assessment:{};var r=e.batch_with_subjects.find((function(s){return s.id==e.scheduleForm.batch_id}));e.scheduleForm.records=[];var t={};r.subjects.forEach((function(s){void 0===(t=a.records.find((function(e){return e.subject_id==s.id})))&&(t={options:{has_no_exam:0},date:""});var r=[];t.options.assessment_details&&Array.isArray(t.options.assessment_details)?t.options.assessment_details.forEach((function(e){r.push({id:e.id,is_applicable:e.is_applicable,max_mark:e.max_mark,pass_percentage:e.pass_percentage})})):a.assessment.details.forEach((function(e){r.push({id:e.id,is_applicable:!0,max_mark:e.max_mark,pass_percentage:e.pass_percentage})})),e.scheduleForm.records.push({subject_id:s.id,subject_name:s.name+" ("+s.code+")",has_no_exam:t.date?0:1,date:t.date,assessment_details:r})})),e.module_id=a.id,s.hide()})).catch((function(e){s.hide(),helper.showErrorMsg(e)}))},update:function(){var e=this,s=this.$loading.show();this.scheduleForm.patch("/api/exam/schedule/"+this.id).then((function(a){toastr.success(a.message),s.hide(),e.$router.push("/exam/schedule")})).catch((function(e){s.hide(),helper.showErrorMsg(e)}))},onBatchSelect:function(e){this.scheduleForm.batch_id=e.id},onExamSelect:function(e){this.scheduleForm.batch_id="",this.selected_batch=null,this.scheduleForm.records=[],e.course_group_id?this.batches=this.all_batches.filter((function(s){return s.course_group===e.course_group_name})):this.batches=this.all_batches,this.scheduleForm.exam_id=e.id},onExamGradeSelect:function(e){this.scheduleForm.exam_grade_id=e.id},onExamAssessmentSelect:function(e){var s=this;this.scheduleForm.exam_assessment_id=e.id,this.exam_assessment=this.exam_assessment_with_details.find((function(s){return s.id==e.id})),this.scheduleForm.records.forEach((function(e){e.assessment_details=[],s.exam_assessment.details.forEach((function(s){e.assessment_details.push({id:s.id,is_applicable:!0,max_mark:s.max_mark,pass_percentage:s.pass_percentage})}))}))},hideExamForm:function(){$(".add-exam-form").modal("hide")}},watch:{"scheduleForm.batch_id":function(e){this.id||this.getSubjects()}}};var o=a(93379),i=a.n(o),l=a(50520),c={insert:"head",singleton:!1};i()(l.Z,c);l.Z.locals;const m=(0,a(51900).Z)(n,(function(){var e=this,s=e._self._c;return s("div",[s("form",{on:{submit:function(s){return s.preventDefault(),e.proceed.apply(null,arguments)},keydown:function(s){return e.scheduleForm.errors.clear(s.target.name)}}},[s("div",{staticClass:"row"},[s("div",{staticClass:"col-12 col-sm-3"},[s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("exam.exam"))+" ")]),e._v(" "),e.hasPermission("create-exam")?s("button",{staticClass:"btn btn-xs btn-info pull-right",attrs:{type:"button"},on:{click:function(s){e.showExamModal=!0}}},[e._v(e._s(e.trans("general.add_new")))]):e._e(),e._v(" "),s("v-select",{attrs:{label:"name",name:"exam_id",id:"exam_id",options:e.exams,placeholder:e.trans("exam.select_exam"),disabled:!!e.id},on:{select:e.onExamSelect,close:function(s){return e.scheduleForm.errors.clear("exam_id")},remove:function(s){e.scheduleForm.exam_id=""}},model:{value:e.selected_exam,callback:function(s){e.selected_exam=s},expression:"selected_exam"}},[e.exams.length?e._e():s("div",{staticClass:"multiselect__option",attrs:{slot:"afterList"},slot:"afterList"},[e._v("\n                            "+e._s(e.trans("general.no_option_found"))+"\n                        ")])]),e._v(" "),s("show-error",{attrs:{"form-name":e.scheduleForm,"prop-name":"exam_id"}})],1)]),e._v(" "),s("div",{staticClass:"col-12 col-sm-3"},[s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("academic.batch"))+" ")]),e._v(" "),s("v-select",{attrs:{label:"name","group-values":"batches","group-label":"course_group","group-select":!1,name:"batch_id",id:"batch_id",options:e.batches,placeholder:e.trans("academic.select_batch"),disabled:!!e.id},on:{select:e.onBatchSelect,close:function(s){return e.scheduleForm.errors.clear("batch_id")},remove:function(s){e.scheduleForm.batch_id=""}},model:{value:e.selected_batch,callback:function(s){e.selected_batch=s},expression:"selected_batch"}},[e.batches.length?e._e():s("div",{staticClass:"multiselect__option",attrs:{slot:"afterList"},slot:"afterList"},[e._v("\n                            "+e._s(e.trans("general.no_option_found"))+"\n                        ")])]),e._v(" "),s("show-error",{attrs:{"form-name":e.scheduleForm,"prop-name":"batch_id"}})],1)]),e._v(" "),s("div",{staticClass:"col-12 col-sm-3"},[s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("exam.grade"))+" ")]),e._v(" "),s("v-select",{attrs:{label:"name",name:"exam_grade_id",id:"exam_grade_id",options:e.exam_grades,placeholder:e.trans("exam.select_grade")},on:{select:e.onExamGradeSelect,close:function(s){return e.scheduleForm.errors.clear("exam_grade_id")},remove:function(s){e.scheduleForm.exam_grade_id=""}},model:{value:e.selected_exam_grade,callback:function(s){e.selected_exam_grade=s},expression:"selected_exam_grade"}},[e.exam_grades.length?e._e():s("div",{staticClass:"multiselect__option",attrs:{slot:"afterList"},slot:"afterList"},[e._v("\n                            "+e._s(e.trans("general.no_option_found"))+"\n                        ")])]),e._v(" "),s("show-error",{attrs:{"form-name":e.scheduleForm,"prop-name":"exam_grade_id"}})],1)]),e._v(" "),s("div",{staticClass:"col-12 col-sm-3"},[s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("exam.assessment"))+" ")]),e._v(" "),s("v-select",{attrs:{label:"name",name:"exam_assessment_id",id:"exam_assessment_id",options:e.exam_assessments,placeholder:e.trans("exam.select_assessment")},on:{select:e.onExamAssessmentSelect,close:function(s){return e.scheduleForm.errors.clear("exam_assessment_id")},remove:function(s){e.scheduleForm.exam_assessment_id=""}},model:{value:e.selected_exam_assessment,callback:function(s){e.selected_exam_assessment=s},expression:"selected_exam_assessment"}},[e.exam_assessments.length?e._e():s("div",{staticClass:"multiselect__option",attrs:{slot:"afterList"},slot:"afterList"},[e._v("\n                            "+e._s(e.trans("general.no_option_found"))+"\n                        ")])]),e._v(" "),s("show-error",{attrs:{"form-name":e.scheduleForm,"prop-name":"exam_assessment_id"}})],1)]),e._v(" "),s("div",{staticClass:"col-12 col-sm-3"},[s("div",{staticClass:"form-group"},[s("label",{attrs:{for:""}},[e._v(e._s(e.trans("exam.overall_pass_percentage")))]),e._v(" "),s("input",{directives:[{name:"model",rawName:"v-model",value:e.scheduleForm.overall_pass_percentage,expression:"scheduleForm.overall_pass_percentage"}],staticClass:"form-control",attrs:{type:"text",name:"overall_pass_percentage",placeholder:e.trans("exam.overall_pass_percentage")},domProps:{value:e.scheduleForm.overall_pass_percentage},on:{input:function(s){s.target.composing||e.$set(e.scheduleForm,"overall_pass_percentage",s.target.value)}}}),e._v(" "),s("show-error",{attrs:{"form-name":e.scheduleForm,"prop-name":"overall_pass_percentage"}})],1)]),e._v(" "),s("div",{staticClass:"col-12 col-sm-3"},[s("div",{staticClass:"form-group"},[s("switches",{staticClass:"m-l-20",attrs:{theme:"bootstrap",color:"success"},model:{value:e.scheduleForm.show_result,callback:function(s){e.$set(e.scheduleForm,"show_result",s)},expression:"scheduleForm.show_result"}}),e._v(" "+e._s(e.trans("exam.show_result"))+"\n                ")],1)])]),e._v(" "),e.scheduleForm.records.length&&e.exam_assessment?s("div",{staticClass:"row m-b-10"},[s("div",{staticClass:"col-12 col-sm-3"}),e._v(" "),s("div",{staticClass:"col-12 col-sm-3"}),e._v(" "),e._l(e.exam_assessment.details,(function(a){return s("div",{staticClass:"col-12 col-sm-3"},[e._v("\n                "+e._s(a.name)+" "+e._s(e.trans("exam.observation_detail_max_mark"))+"\n            ")])}))],2):e._e(),e._v(" "),e._l(e.scheduleForm.records,(function(a,r){return s("div",{staticClass:"row"},[s("div",{staticClass:"col-12 col-sm-3"},[s("div",{staticClass:"form-group"},[e._v("\n                    "+e._s(a.subject_name)+"\n                    "),s("div",{staticClass:"form-group"},[s("label",{staticClass:"custom-control custom-checkbox"},[s("input",{directives:[{name:"model",rawName:"v-model",value:a.has_no_exam,expression:"record.has_no_exam"}],staticClass:"custom-control-input",attrs:{type:"checkbox",value:"1"},domProps:{checked:Array.isArray(a.has_no_exam)?e._i(a.has_no_exam,"1")>-1:a.has_no_exam},on:{change:function(s){var r=a.has_no_exam,t=s.target,n=!!t.checked;if(Array.isArray(r)){var o=e._i(r,"1");t.checked?o<0&&e.$set(a,"has_no_exam",r.concat(["1"])):o>-1&&e.$set(a,"has_no_exam",r.slice(0,o).concat(r.slice(o+1)))}else e.$set(a,"has_no_exam",n)}}}),e._v(" "),s("span",{staticClass:"custom-control-label"},[e._v(e._s(e.trans("academic.subject_has_no_exam")))])])])])]),e._v(" "),a.has_no_exam?e._e():[s("div",{staticClass:"col-12 col-sm-3"},[s("div",{staticClass:"form-group"},[s("datepicker",{attrs:{bootstrapStyling:!0,placeholder:e.trans("exam.schedule_date")},on:{selected:function(s){e.scheduleForm.errors.clear(e.getScheduleDateName(r))}},model:{value:a.date,callback:function(s){e.$set(a,"date",s)},expression:"record.date"}}),e._v(" "),s("show-error",{attrs:{"form-name":e.scheduleForm,"prop-name":e.getScheduleDateName(r)}})],1)]),e._v(" "),e._l(a.assessment_details,(function(a,t){return s("div",{staticClass:"col-12 col-sm-3"},[s("div",{staticClass:"row"},[s("div",{staticClass:"col-12 col-sm-3"},[s("div",{staticClass:"form-group"},[s("label",{staticClass:"custom-control custom-checkbox"},[s("input",{directives:[{name:"model",rawName:"v-model",value:a.is_applicable,expression:"detail.is_applicable"}],staticClass:"custom-control-input",attrs:{type:"checkbox",value:"1"},domProps:{checked:Array.isArray(a.is_applicable)?e._i(a.is_applicable,"1")>-1:a.is_applicable},on:{change:function(s){var r=a.is_applicable,t=s.target,n=!!t.checked;if(Array.isArray(r)){var o=e._i(r,"1");t.checked?o<0&&e.$set(a,"is_applicable",r.concat(["1"])):o>-1&&e.$set(a,"is_applicable",r.slice(0,o).concat(r.slice(o+1)))}else e.$set(a,"is_applicable",n)}}}),e._v(" "),s("span",{staticClass:"custom-control-label"},[e._v(e._s(e.trans("assessment.is_applicable")))])])])]),e._v(" "),a.is_applicable?s("div",{staticClass:"col-12 col-sm-9"},[s("div",{staticClass:"form-group"},[s("input",{directives:[{name:"model",rawName:"v-model",value:a.max_mark,expression:"detail.max_mark"}],staticClass:"form-control",attrs:{type:"text",name:e.getDetailMaxMark(r,t),placeholder:e.trans("exam.assessment_detail_max_mark")},domProps:{value:a.max_mark},on:{input:function(s){s.target.composing||e.$set(a,"max_mark",s.target.value)}}}),e._v(" "),s("show-error",{attrs:{"form-name":e.scheduleForm,"prop-name":e.getDetailMaxMark(r,t)}})],1)]):e._e()])])}))]],2)})),e._v(" "),s("div",{staticClass:"card-footer text-right"},[s("router-link",{staticClass:"btn btn-danger waves-effect waves-light",attrs:{to:"/exam/schedule"}},[e._v(e._s(e.trans("general.cancel")))]),e._v(" "),s("button",{staticClass:"btn btn-info waves-effect waves-light",attrs:{type:"submit"}},[e.id?s("span",[e._v(e._s(e.trans("general.update")))]):s("span",[e._v(e._s(e.trans("general.save")))])])],1)],2),e._v(" "),e.showExamModal?s("transition",{attrs:{name:"modal"}},[s("div",{staticClass:"modal-mask"},[s("div",{staticClass:"modal-wrapper"},[s("div",{staticClass:"modal-container modal-lg"},[s("div",{staticClass:"modal-header"},[e._t("header",(function(){return[e._v("\n                            "+e._s(e.trans("exam.add_new_exam"))+"\n                            "),s("span",{staticClass:"float-right pointer",on:{click:function(s){e.showExamModal=!1}}},[e._v("x")])]}))],2),e._v(" "),s("div",{staticClass:"modal-body"},[e._t("body",(function(){return[s("exam-form",{on:{completed:e.getPreRequisite,cancel:function(s){e.showExamModal=!1}}}),e._v(" "),s("div",{staticClass:"clearfix"})]}))],2)])])])]):e._e()],1)}),[],!1,null,null,null).exports}}]);