{"version":3,"file":"js/chunks/js/finance/fee/report/summary.js?id=2d6bac85bec0eb23","mappings":";;;;;;;;;;;;;AA2KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAOA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACzXA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAQA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAOA;AAMA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAQA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAIA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AASA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAKA;AAAA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AASA;AAAA;AAGA;AAAA;AAGA;AAAA;AACA;AAAA;AAIA;AAAA;AAIA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAIA;AACA;AAMA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AA8DA;AAAA;AASA;AAEA;AAAA;AAIA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AACA;AAUA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AAOA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AAAA;AAIA;AAEA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAMA;AACA;AACA;AAGA;AAEA;AAMA;AAMA;AAAA;AAAA;AAAA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AAAA;AAQA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAEA;AAAA;AAUA;AAAA;AAYA;AACA;AACA;AACA;AACA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAcA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAYA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;AC15BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA","sources":["webpack://InstiKit/resources/js/views/finance/fee/report/summary.vue","webpack://InstiKit/./resources/js/views/finance/fee/report/summary.vue","webpack://InstiKit/./resources/js/views/finance/fee/report/summary.vue?6153","webpack://InstiKit/./resources/js/views/finance/fee/report/summary.vue?e2c1","webpack://InstiKit/./resources/js/views/finance/fee/report/summary.vue?28e2"],"sourcesContent":["<template>\r\n    <div>\r\n        <div class=\"page-titles\">\r\n            <div class=\"row\">\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <h3 class=\"text-themecolor\">{{trans('finance.fee_summary_report')}} \r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"list.total\">{{trans('general.total_result_found',{count : list.total, from: list.from, to: list.to})}}</span>\r\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\r\n                    </h3>\r\n                </div>\r\n                <div class=\"col-12 col-sm-6\">\r\n                    <div class=\"action-buttons pull-right\">\r\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\r\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\r\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\r\n                            </button>\r\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\r\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\r\n                            </div>\r\n                        </div>\r\n                        <help-button @clicked=\"help_topic = 'finance.fee.report.summary'\"></help-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"container-fluid\">\r\n            <transition name=\"fade\">\r\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\r\n                    <div class=\"card-body\">\r\n                        <h4 class=\"card-title\">{{trans('general.filter')}}</h4>\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('student.first_name')}}</label>\r\n                                    <input class=\"form-control\" type=\"text\" v-model=\"filter.first_name\" name=\"first_name\" :placeholder=\"trans('student.first_name')\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('student.last_name')}}</label>\r\n                                    <input class=\"form-control\" type=\"text\" v-model=\"filter.last_name\" name=\"last_name\" :placeholder=\"trans('student.last_name')\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('academic.batch')}}</label>\r\n                                    <v-select label=\"name\" track-by=\"id\" group-values=\"batches\" group-label=\"course_group\" :group-select=\"false\" v-model=\"selected_batches\" name=\"batch_id\" id=\"batch_id\" :options=\"batches\" :placeholder=\"trans('academic.select_batch')\" @select=\"onBatchSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onBatchRemove\" :selected=\"selected_batches\">\r\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!batches.length\">\r\n                                            {{trans('general.no_option_found')}}\r\n                                        </div>\r\n                                    </v-select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-3\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('finance.balance_fee_greater_than')}}</label>\r\n                                    <input class=\"form-control\" type=\"text\" v-model=\"filter.min_balance\" name=\"min_balance\" :placeholder=\"trans('student.min_balance')\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"card-footer text-right\">\r\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\r\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getSummary\">{{trans('general.filter')}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </transition>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"table-responsive\" v-if=\"list.total\">\r\n                        <table class=\"table table-sm\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th class=\"select-all\" v-if=\"hasPermission('send-sms')\">\r\n                                        <label class=\"custom-control custom-checkbox\">\r\n                                            <input type=\"checkbox\" class=\"custom-control-input\" value=\"1\" v-model=\"selectAll\" @change=\"toggleSelectAll\">\r\n                                            <span class=\"custom-control-label\"></span>\r\n                                        </label>\r\n                                    </th>\r\n                                    <th>{{trans('student.admission_number_short')}}</th>\r\n                                    <th>{{trans('student.name')}}</th>\r\n                                    <th>{{trans('academic.batch')}}</th>\r\n                                    <th>{{trans('student.first_guardian_name')}}</th>\r\n                                    <th>{{trans('student.contact_number')}}</th>\r\n                                    <th>{{trans('finance.total_fee')}}</th>\r\n                                    <th>{{trans('finance.other')}}</th>\r\n                                    <th>{{trans('finance.total_concession')}}</th>\r\n                                    <th>{{trans('finance.paid_fee')}}</th>\r\n                                    <th>{{trans('finance.balance_fee')}}</th>\r\n                                    <th>{{trans('finance.late_fee_charged')}}</th>\r\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr v-for=\"item in list.data\">\r\n                                    <td class=\"select-all\" v-if=\"hasPermission('send-sms')\">\r\n                                        <label class=\"custom-control custom-checkbox\">\r\n                                            <input type=\"checkbox\" class=\"custom-control-input\" :value=\"item.id\" v-model=\"sendSMSForm.ids\">\r\n                                            <span class=\"custom-control-label\"></span>\r\n                                        </label>\r\n                                    </td>\r\n                                    <td v-text=\"item.admission_number\"></td>\r\n                                    <td v-text=\"item.name\"></td>\r\n                                    <td v-text=\"item.batch\"></td>\r\n                                    <td v-text=\"item.first_guardian_name\"></td>\r\n                                    <td v-text=\"item.contact_number\"></td>\r\n                                    <td v-text=\"item.total\"></td>\r\n                                    <td v-text=\"item.other\"></td>\r\n                                    <td v-text=\"item.concession\"></td>\r\n                                    <td v-text=\"item.paid\"></td>\r\n                                    <td v-text=\"item.balance\"></td>\r\n                                    <td v-text=\"item.late\"></td>\r\n                                    <td class=\"table-option\">\r\n                                        <div class=\"btn-group\">\r\n                                            <button class=\"btn btn-info btn-sm\" v-tooltip=\"trans('general.view_detail')\" @click=\"$router.push('/student/'+item.uuid+'/fee/'+item.id)\"><i class=\"fas fa-arrow-circle-right\"></i></button>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                            <tfoot>\r\n                                <tr>\r\n                                    <th colspan=\"6\"></th>\r\n                                    <th>{{footer.grand_total}}</th>\r\n                                    <th>{{footer.grand_other}}</th>\r\n                                    <th>{{footer.grand_concession}}</th>\r\n                                    <th>{{footer.grand_paid}}</th>\r\n                                    <th>{{footer.grand_balance}}</th>\r\n                                    <th>{{footer.grand_late}}</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </tfoot>\r\n                        </table>\r\n                    </div>\r\n                    <module-info v-if=\"!list.total\" module=\"finance\" title=\"fee_summary_report_module_title\" description=\"fee_summary_report_module_description\" icon=\"list\">\r\n                    </module-info>\r\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"list\" @updateRecords=\"getSummary\"></pagination-record>\r\n                </div>\r\n                <div class=\"m-t-10 card-body border-top p-4\" v-if=\"sendSMSForm.ids.length && hasPermission('send-sms')\">\r\n                    <h4 class=\"card-title\">{{trans('communication.send_sms')}}</h4>\r\n                    <p>{{trans('general.total_selected', {type: trans('student.student'), count: sendSMSForm.ids.length})}}</p>\r\n                    <form @submit.prevent=\"submit\" @keydown=\"sendSMSForm.errors.clear($event.target.name)\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('communication.sms')}} {{trans('communication.character_count', {count: characterCount})}} </label>\r\n                                    <textarea class=\"form-control\" v-model=\"sendSMSForm.sms\" rows=\"2\" name=\"sms\" :placeholder=\"trans('communication.sms')\"></textarea>\r\n                                    <p class=\"help-block font-80pc\">{{trans('communication.template_variable_tip')}}</p>\r\n                                    <p class=\"help-block font-90pc\">{{trans('communication.available_variables')}}: NAME, BATCH, FIRST_GUARDIAN_NAME, LATE_FEE, TOTAL_FEE, PAID_FEE, BALANCE_FEE</p>\r\n                                    <show-error :form-name=\"sendSMSForm\" prop-name=\"sms\"></show-error>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-12 col-sm-6\">\r\n                                <div class=\"form-group\">\r\n                                    <label for=\"\">{{trans('communication.sample_sms')}}</label>\r\n                                    <p>{{sampleMessage}}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" key=\"send-summary\" v-confirm=\"{ok: confirmSendAction()}\">{{trans('general.send')}}</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <right-panel :topic=\"help_topic\"></right-panel>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    export default {\r\n        components : {  },\r\n        data() {\r\n            return {\r\n                list: {\r\n                    total: 0,\r\n                    data: []\r\n                },\r\n                batches: [],\r\n                selected_batches: null,\r\n                footer: [],\r\n                filter: {\r\n                    sort_by : 'name',\r\n                    order: 'asc',\r\n                    first_name: '',\r\n                    last_name: '',\r\n                    min_balance: '',\r\n                    batch_id: [],\r\n                    page_length: helper.getConfig('page_length')\r\n                },\r\n                selectAll: false,\r\n                sendSMSForm: new Form({\r\n                    ids: [],\r\n                    sms: ''\r\n                }),\r\n                orderByOptions: [\r\n                    {\r\n                        value: 'admission_number',\r\n                        translation: i18n.student.admission_number\r\n                    },\r\n                    {\r\n                        value: 'name',\r\n                        translation: i18n.student.name\r\n                    },\r\n                    {\r\n                        value: 'first_guardian_name',\r\n                        translation: i18n.student.first_guardian_name\r\n                    },\r\n                    {\r\n                        value: 'total',\r\n                        translation: i18n.finance.total_fee\r\n                    },\r\n                    {\r\n                        value: 'concession',\r\n                        translation: i18n.finance.total_concession\r\n                    },\r\n                    {\r\n                        value: 'paid',\r\n                        translation: i18n.finance.paid_fee\r\n                    },\r\n                    {\r\n                        value: 'balance',\r\n                        translation: i18n.finance.balance_fee\r\n                    },\r\n                    {\r\n                        value: 'late',\r\n                        translation: i18n.finance.late_fee_charged\r\n                    }\r\n                ],\r\n                showFilterPanel: false,\r\n                help_topic: ''\r\n            };\r\n        },\r\n        mounted(){\r\n            if(!helper.hasPermission('access-fee-report')){\r\n                helper.notAccessibleMsg();\r\n                this.$router.push('/dashboard');\r\n            }\r\n\r\n            this.getSummary();\r\n        },\r\n        methods: {\r\n            hasPermission(permission){\r\n                return helper.hasPermission(permission);\r\n            },\r\n            getSummary(page){\r\n                let loader = this.$loading.show();\r\n                if (typeof page !== 'number') {\r\n                    page = 1;\r\n                }\r\n                this.selectAll = false;\r\n                let url = helper.getFilterURL(this.filter);\r\n                axios.get('/api/fee/report/summary?page=' + page + url)\r\n                    .then(response => {\r\n                        this.list = response.list;\r\n                        this.footer = response.footer;\r\n                        this.batches = response.filters.batches;\r\n                        let ids = [];\r\n                        this.list.data.forEach(item => {\r\n                            ids.push(item.id);\r\n                        })\r\n                        this.selectAll = ids.every(elem => this.sendSMSForm.ids.indexOf(elem) > -1) ? 1 : 0;\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            toggleSelectAll(){\r\n                if(this.selectAll) {\r\n                    this.list.data.forEach(item => {\r\n                        if (this.sendSMSForm.ids.indexOf(item.id) < 0)\r\n                            this.sendSMSForm.ids.push(item.id);\r\n                    });\r\n                } else {\r\n                    this.list.data.forEach(item => {\r\n                        let index = this.sendSMSForm.ids.indexOf(item.id);\r\n                        if (index >= 0) {\r\n                            this.sendSMSForm.ids.splice(index, 1);\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            getConfig(config){\r\n                return helper.getConfig(config);\r\n            },\r\n            print(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/fee/report/summary/print',{filter: this.filter})\r\n                    .then(response => {\r\n                        let print = window.open(\"/print\");\r\n                        loader.hide();\r\n                        print.document.write(response);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            pdf(){\r\n                let loader = this.$loading.show();\r\n                axios.post('/api/fee/report/summary/pdf',{filter: this.filter})\r\n                    .then(response => {\r\n                        loader.hide();\r\n                        window.open('/download/report/'+response+'?token='+this.authToken);\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    });\r\n            },\r\n            onBatchSelect(selectedOption){\r\n                this.filter.batch_id.push(selectedOption.id);\r\n            },\r\n            onBatchRemove(removedOption){\r\n                this.filter.batch_id.splice(this.filter.batch_id.indexOf(removedOption.id), 1);\r\n            },\r\n            confirmSendAction(){\r\n                return dialog => this.sendSMS();\r\n            },\r\n            sendSMS(){\r\n                let loader = this.$loading.show();\r\n                this.sendSMSForm.filter = this.filter;\r\n                this.sendSMSForm.post('/api/fee/report/summary/sms')\r\n                    .then(response => {\r\n                        toastr.success(response.message);\r\n                        this.sendSMSForm.ids = [];\r\n                        loader.hide();\r\n                    })\r\n                    .catch(error => {\r\n                        loader.hide();\r\n                        helper.showErrorMsg(error);\r\n                    })\r\n            }\r\n        },\r\n        filters: {\r\n          moment(date) {\r\n            return helper.formatDate(date);\r\n          },\r\n          momentDateTime(date) {\r\n            return helper.formatDateTime(date);\r\n          }\r\n        },\r\n        watch: {\r\n            'filter.sort_by': function(val){\r\n                this.getSummary();\r\n            },\r\n            'filter.order': function(val){\r\n                this.getSummary();\r\n            },\r\n            'filter.page_length': function(val){\r\n                this.getSummary();\r\n            }\r\n        },\r\n        computed: {\r\n            authToken(){\r\n                return helper.getAuthToken();\r\n            },\r\n            sampleMessage(){\r\n                let item = this.list.data[0];\r\n\r\n                let sms = this.sendSMSForm.sms;\r\n\r\n                return sms.replace(\"#NAME#\", item.name)\r\n                    .replace(\"#BATCH#\", item.batch)\r\n                    .replace(\"#FIRST_GUARDIAN_NAME#\", item.first_guardian_name)\r\n                    .replace(\"#LATE_FEE#\", item.late)\r\n                    .replace(\"#TOTAL_FEE#\", item.total)\r\n                    .replace(\"#PAID_FEE#\", item.paid)\r\n                    .replace(\"#BALANCE_FEE#\", item.balance);\r\n            },\r\n            characterCount(){\r\n                return this.sendSMSForm.sms.length;\r\n            }\r\n        }\r\n    }\r\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"finance.fee_summary_report\")) +\n                  \" \\n                    \"\n              ),\n              _vm.list.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.list.total,\n                            from: _vm.list.from,\n                            to: _vm.list.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"finance.fee.report.summary\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"student.first_name\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.filter.first_name,\n                                expression: \"filter.first_name\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: \"first_name\",\n                              placeholder: _vm.trans(\"student.first_name\"),\n                            },\n                            domProps: { value: _vm.filter.first_name },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.filter,\n                                  \"first_name\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(_vm._s(_vm.trans(\"student.last_name\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.filter.last_name,\n                                expression: \"filter.last_name\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: \"last_name\",\n                              placeholder: _vm.trans(\"student.last_name\"),\n                            },\n                            domProps: { value: _vm.filter.last_name },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.filter,\n                                  \"last_name\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"academic.batch\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  \"group-values\": \"batches\",\n                                  \"group-label\": \"course_group\",\n                                  \"group-select\": false,\n                                  name: \"batch_id\",\n                                  id: \"batch_id\",\n                                  options: _vm.batches,\n                                  placeholder: _vm.trans(\n                                    \"academic.select_batch\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_batches,\n                                },\n                                on: {\n                                  select: _vm.onBatchSelect,\n                                  remove: _vm.onBatchRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_batches,\n                                  callback: function ($$v) {\n                                    _vm.selected_batches = $$v\n                                  },\n                                  expression: \"selected_batches\",\n                                },\n                              },\n                              [\n                                !_vm.batches.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\"div\", { staticClass: \"form-group\" }, [\n                          _c(\"label\", { attrs: { for: \"\" } }, [\n                            _vm._v(\n                              _vm._s(\n                                _vm.trans(\"finance.balance_fee_greater_than\")\n                              )\n                            ),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.filter.min_balance,\n                                expression: \"filter.min_balance\",\n                              },\n                            ],\n                            staticClass: \"form-control\",\n                            attrs: {\n                              type: \"text\",\n                              name: \"min_balance\",\n                              placeholder: _vm.trans(\"student.min_balance\"),\n                            },\n                            domProps: { value: _vm.filter.min_balance },\n                            on: {\n                              input: function ($event) {\n                                if ($event.target.composing) return\n                                _vm.$set(\n                                  _vm.filter,\n                                  \"min_balance\",\n                                  $event.target.value\n                                )\n                              },\n                            },\n                          }),\n                        ]),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getSummary },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.list.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _vm.hasPermission(\"send-sms\")\n                              ? _c(\"th\", { staticClass: \"select-all\" }, [\n                                  _c(\n                                    \"label\",\n                                    {\n                                      staticClass:\n                                        \"custom-control custom-checkbox\",\n                                    },\n                                    [\n                                      _c(\"input\", {\n                                        directives: [\n                                          {\n                                            name: \"model\",\n                                            rawName: \"v-model\",\n                                            value: _vm.selectAll,\n                                            expression: \"selectAll\",\n                                          },\n                                        ],\n                                        staticClass: \"custom-control-input\",\n                                        attrs: { type: \"checkbox\", value: \"1\" },\n                                        domProps: {\n                                          checked: Array.isArray(_vm.selectAll)\n                                            ? _vm._i(_vm.selectAll, \"1\") > -1\n                                            : _vm.selectAll,\n                                        },\n                                        on: {\n                                          change: [\n                                            function ($event) {\n                                              var $$a = _vm.selectAll,\n                                                $$el = $event.target,\n                                                $$c = $$el.checked\n                                                  ? true\n                                                  : false\n                                              if (Array.isArray($$a)) {\n                                                var $$v = \"1\",\n                                                  $$i = _vm._i($$a, $$v)\n                                                if ($$el.checked) {\n                                                  $$i < 0 &&\n                                                    (_vm.selectAll = $$a.concat(\n                                                      [$$v]\n                                                    ))\n                                                } else {\n                                                  $$i > -1 &&\n                                                    (_vm.selectAll = $$a\n                                                      .slice(0, $$i)\n                                                      .concat(\n                                                        $$a.slice($$i + 1)\n                                                      ))\n                                                }\n                                              } else {\n                                                _vm.selectAll = $$c\n                                              }\n                                            },\n                                            _vm.toggleSelectAll,\n                                          ],\n                                        },\n                                      }),\n                                      _vm._v(\" \"),\n                                      _c(\"span\", {\n                                        staticClass: \"custom-control-label\",\n                                      }),\n                                    ]\n                                  ),\n                                ])\n                              : _vm._e(),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"student.admission_number_short\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"student.name\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"academic.batch\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"student.first_guardian_name\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"student.contact_number\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"finance.total_fee\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"finance.other\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"finance.total_concession\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"finance.paid_fee\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"finance.balance_fee\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"finance.late_fee_charged\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", { staticClass: \"table-option\" }, [\n                              _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(_vm.list.data, function (item) {\n                            return _c(\"tr\", [\n                              _vm.hasPermission(\"send-sms\")\n                                ? _c(\"td\", { staticClass: \"select-all\" }, [\n                                    _c(\n                                      \"label\",\n                                      {\n                                        staticClass:\n                                          \"custom-control custom-checkbox\",\n                                      },\n                                      [\n                                        _c(\"input\", {\n                                          directives: [\n                                            {\n                                              name: \"model\",\n                                              rawName: \"v-model\",\n                                              value: _vm.sendSMSForm.ids,\n                                              expression: \"sendSMSForm.ids\",\n                                            },\n                                          ],\n                                          staticClass: \"custom-control-input\",\n                                          attrs: { type: \"checkbox\" },\n                                          domProps: {\n                                            value: item.id,\n                                            checked: Array.isArray(\n                                              _vm.sendSMSForm.ids\n                                            )\n                                              ? _vm._i(\n                                                  _vm.sendSMSForm.ids,\n                                                  item.id\n                                                ) > -1\n                                              : _vm.sendSMSForm.ids,\n                                          },\n                                          on: {\n                                            change: function ($event) {\n                                              var $$a = _vm.sendSMSForm.ids,\n                                                $$el = $event.target,\n                                                $$c = $$el.checked\n                                                  ? true\n                                                  : false\n                                              if (Array.isArray($$a)) {\n                                                var $$v = item.id,\n                                                  $$i = _vm._i($$a, $$v)\n                                                if ($$el.checked) {\n                                                  $$i < 0 &&\n                                                    _vm.$set(\n                                                      _vm.sendSMSForm,\n                                                      \"ids\",\n                                                      $$a.concat([$$v])\n                                                    )\n                                                } else {\n                                                  $$i > -1 &&\n                                                    _vm.$set(\n                                                      _vm.sendSMSForm,\n                                                      \"ids\",\n                                                      $$a\n                                                        .slice(0, $$i)\n                                                        .concat(\n                                                          $$a.slice($$i + 1)\n                                                        )\n                                                    )\n                                                }\n                                              } else {\n                                                _vm.$set(\n                                                  _vm.sendSMSForm,\n                                                  \"ids\",\n                                                  $$c\n                                                )\n                                              }\n                                            },\n                                          },\n                                        }),\n                                        _vm._v(\" \"),\n                                        _c(\"span\", {\n                                          staticClass: \"custom-control-label\",\n                                        }),\n                                      ]\n                                    ),\n                                  ])\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(item.admission_number),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: { textContent: _vm._s(item.name) },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: { textContent: _vm._s(item.batch) },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(item.first_guardian_name),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(item.contact_number),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: { textContent: _vm._s(item.total) },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: { textContent: _vm._s(item.other) },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(item.concession),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: { textContent: _vm._s(item.paid) },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: { textContent: _vm._s(item.balance) },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: { textContent: _vm._s(item.late) },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", { staticClass: \"table-option\" }, [\n                                _c(\"div\", { staticClass: \"btn-group\" }, [\n                                  _c(\n                                    \"button\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"tooltip\",\n                                          rawName: \"v-tooltip\",\n                                          value: _vm.trans(\n                                            \"general.view_detail\"\n                                          ),\n                                          expression:\n                                            \"trans('general.view_detail')\",\n                                        },\n                                      ],\n                                      staticClass: \"btn btn-info btn-sm\",\n                                      on: {\n                                        click: function ($event) {\n                                          return _vm.$router.push(\n                                            \"/student/\" +\n                                              item.uuid +\n                                              \"/fee/\" +\n                                              item.id\n                                          )\n                                        },\n                                      },\n                                    },\n                                    [\n                                      _c(\"i\", {\n                                        staticClass:\n                                          \"fas fa-arrow-circle-right\",\n                                      }),\n                                    ]\n                                  ),\n                                ]),\n                              ]),\n                            ])\n                          }),\n                          0\n                        ),\n                        _vm._v(\" \"),\n                        _c(\"tfoot\", [\n                          _c(\"tr\", [\n                            _c(\"th\", { attrs: { colspan: \"6\" } }),\n                            _vm._v(\" \"),\n                            _c(\"th\", [_vm._v(_vm._s(_vm.footer.grand_total))]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [_vm._v(_vm._s(_vm.footer.grand_other))]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.footer.grand_concession)),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [_vm._v(_vm._s(_vm.footer.grand_paid))]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.footer.grand_balance)),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [_vm._v(_vm._s(_vm.footer.grand_late))]),\n                            _vm._v(\" \"),\n                            _c(\"th\"),\n                          ]),\n                        ]),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.list.total\n                  ? _c(\"module-info\", {\n                      attrs: {\n                        module: \"finance\",\n                        title: \"fee_summary_report_module_title\",\n                        description: \"fee_summary_report_module_description\",\n                        icon: \"list\",\n                      },\n                    })\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.list,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getSummary,\n                  },\n                }),\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _vm.sendSMSForm.ids.length && _vm.hasPermission(\"send-sms\")\n              ? _c(\"div\", { staticClass: \"m-t-10 card-body border-top p-4\" }, [\n                  _c(\"h4\", { staticClass: \"card-title\" }, [\n                    _vm._v(_vm._s(_vm.trans(\"communication.send_sms\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"p\", [\n                    _vm._v(\n                      _vm._s(\n                        _vm.trans(\"general.total_selected\", {\n                          type: _vm.trans(\"student.student\"),\n                          count: _vm.sendSMSForm.ids.length,\n                        })\n                      )\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"form\",\n                    {\n                      on: {\n                        submit: function ($event) {\n                          $event.preventDefault()\n                          return _vm.submit.apply(null, arguments)\n                        },\n                        keydown: function ($event) {\n                          return _vm.sendSMSForm.errors.clear(\n                            $event.target.name\n                          )\n                        },\n                      },\n                    },\n                    [\n                      _c(\"div\", { staticClass: \"row\" }, [\n                        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group\" },\n                            [\n                              _c(\"label\", { attrs: { for: \"\" } }, [\n                                _vm._v(\n                                  _vm._s(_vm.trans(\"communication.sms\")) +\n                                    \" \" +\n                                    _vm._s(\n                                      _vm.trans(\n                                        \"communication.character_count\",\n                                        { count: _vm.characterCount }\n                                      )\n                                    ) +\n                                    \" \"\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"textarea\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model\",\n                                    value: _vm.sendSMSForm.sms,\n                                    expression: \"sendSMSForm.sms\",\n                                  },\n                                ],\n                                staticClass: \"form-control\",\n                                attrs: {\n                                  rows: \"2\",\n                                  name: \"sms\",\n                                  placeholder: _vm.trans(\"communication.sms\"),\n                                },\n                                domProps: { value: _vm.sendSMSForm.sms },\n                                on: {\n                                  input: function ($event) {\n                                    if ($event.target.composing) return\n                                    _vm.$set(\n                                      _vm.sendSMSForm,\n                                      \"sms\",\n                                      $event.target.value\n                                    )\n                                  },\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"p\", { staticClass: \"help-block font-80pc\" }, [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.trans(\n                                      \"communication.template_variable_tip\"\n                                    )\n                                  )\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"p\", { staticClass: \"help-block font-90pc\" }, [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.trans(\n                                      \"communication.available_variables\"\n                                    )\n                                  ) +\n                                    \": NAME, BATCH, FIRST_GUARDIAN_NAME, LATE_FEE, TOTAL_FEE, PAID_FEE, BALANCE_FEE\"\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"show-error\", {\n                                attrs: {\n                                  \"form-name\": _vm.sendSMSForm,\n                                  \"prop-name\": \"sms\",\n                                },\n                              }),\n                            ],\n                            1\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n                          _c(\"div\", { staticClass: \"form-group\" }, [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"communication.sample_sms\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"p\", [_vm._v(_vm._s(_vm.sampleMessage))]),\n                          ]),\n                        ]),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          directives: [\n                            {\n                              name: \"confirm\",\n                              rawName: \"v-confirm\",\n                              value: { ok: _vm.confirmSendAction() },\n                              expression: \"{ok: confirmSendAction()}\",\n                            },\n                          ],\n                          key: \"send-summary\",\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.send\")))]\n                      ),\n                    ]\n                  ),\n                ])\n              : _vm._e(),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./summary.vue?vue&type=template&id=f121f0f0&\"\nimport script from \"./summary.vue?vue&type=script&lang=js&\"\nexport * from \"./summary.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\Php_Labs\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('f121f0f0')) {\n      api.createRecord('f121f0f0', component.options)\n    } else {\n      api.reload('f121f0f0', component.options)\n    }\n    module.hot.accept(\"./summary.vue?vue&type=template&id=f121f0f0&\", function () {\n      api.rerender('f121f0f0', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/finance/fee/report/summary.vue\"\nexport default component.exports","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./summary.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./summary.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./summary.vue?vue&type=template&id=f121f0f0&\""],"names":[],"sourceRoot":""}