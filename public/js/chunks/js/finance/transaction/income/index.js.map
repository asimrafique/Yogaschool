{"version":3,"file":"js/chunks/js/finance/transaction/income/index.js?id=bf35e6968a5f6131","mappings":";;;;;;;;;;;;;AA4CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACgBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACplOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpJA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAOA;AAEA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAOA;AAMA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AASA;AAAA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;AC3PA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAQA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AAAA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AAAA;AAKA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AACA;AAcA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AAGA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAOA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;ACvvBA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAOA;AAAA;AAKA;AACA;AACA;AACA;AAOA;AAAA;AAMA;AAAA;AAGA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAOA;AAMA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAQA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AAUA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAqBA;AAAA;AAGA;AAAA;AAEA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AAuaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;AC92BA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAGA;AAWA;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AASA;AAAA;AAGA;AACA;AAAA;AAGA;AAAA;AAIA;AAAA;AAgBA;AAAA;AAcA;AAAA;AAkBA;AAAA;AAYA;AAAA;AA+HA;AAAA;AAcA;AAAA;AAcA;AAAA;AAmCA;AAAA;AAEA;AAEA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAGA;AAMA;AAKA;AAEA;AAcA;AASA;AAAA;AAYA;AAAA;AACA;AAAA;AAgBA;AASA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC7ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAkBA;AACA;;;;;;;;;;;;;;;ACtCA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;ACAA","sources":["webpack://InstiKit/resources/js/views/configuration/finance/transaction/category/form.vue","webpack://InstiKit/resources/js/views/finance/transaction/income/form.vue","webpack://InstiKit/resources/js/views/finance/transaction/income/index.vue","webpack://InstiKit/resources/js/views/finance/transaction/income/show.vue","webpack://InstiKit/./resources/js/views/configuration/finance/transaction/category/form.vue","webpack://InstiKit/./resources/js/views/finance/transaction/income/form.vue","webpack://InstiKit/./resources/js/views/finance/transaction/income/index.vue","webpack://InstiKit/./resources/js/views/finance/transaction/income/show.vue","webpack://InstiKit/./resources/js/views/configuration/finance/transaction/category/form.vue?54be","webpack://InstiKit/./resources/js/views/configuration/finance/transaction/category/form.vue?7a74","webpack://InstiKit/./resources/js/views/configuration/finance/transaction/category/form.vue?cfb6","webpack://InstiKit/./resources/js/views/finance/transaction/income/form.vue?8a5b","webpack://InstiKit/./resources/js/views/finance/transaction/income/index.vue?622c","webpack://InstiKit/./resources/js/views/finance/transaction/income/show.vue?7b58","webpack://InstiKit/./resources/js/views/configuration/finance/transaction/category/form.vue?8d00","webpack://InstiKit/./resources/js/views/finance/transaction/income/form.vue?ab0c","webpack://InstiKit/./resources/js/views/finance/transaction/income/index.vue?e691","webpack://InstiKit/./resources/js/views/finance/transaction/income/show.vue?bf54","webpack://InstiKit/./resources/js/views/finance/transaction/income/form.vue?454c","webpack://InstiKit/./resources/js/views/finance/transaction/income/index.vue?c523","webpack://InstiKit/./resources/js/views/finance/transaction/income/show.vue?a400"],"sourcesContent":["<template>\n    <form @submit.prevent=\"proceed\" @keydown=\"transactionCategoryForm.errors.clear($event.target.name)\">\n        <div class=\"row\">\n            <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('finance.transaction_category_name')}}</label>\n                    <input class=\"form-control\" type=\"text\" v-model=\"transactionCategoryForm.name\" name=\"name\" :placeholder=\"trans('finance.transaction_category_name')\">\n                    <show-error :form-name=\"transactionCategoryForm\" prop-name=\"name\"></show-error>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('finance.transaction_category_type')}}</label>\n                    <select v-model=\"transactionCategoryForm.type\" class=\"col-12 custom-select\" @change=\"transactionCategoryForm.errors.clear('type')\" name=\"type\">\n                      <option value=null selected>{{trans('general.select_one')}}</option>\n                      <option v-for=\"type in types\" v-bind:value=\"type.value\">\n                        {{ type.text }}\n                      </option>\n                    </select>\n                    <show-error :form-name=\"transactionCategoryForm\" prop-name=\"type\"></show-error>\n                </div>\n            </div>\n            <div class=\"col-12 col-sm-4\">\n                <div class=\"form-group\">\n                    <label for=\"\">{{trans('finance.transaction_category_description')}}</label>\n                    <input class=\"form-control\" type=\"text\" v-model=\"transactionCategoryForm.description\" name=\"description\" :placeholder=\"trans('finance.transaction_category_description')\">\n                    <show-error :form-name=\"transactionCategoryForm\" prop-name=\"description\"></show-error>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"card-footer text-right\">\n            <button v-if=\"!id\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n            <router-link to=\"/configuration/finance/transaction/category\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"id\">{{trans('general.cancel')}}</router-link>\n            <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n                <span v-if=\"id\">{{trans('general.update')}}</span>\n                <span v-else>{{trans('general.save')}}</span>\n            </button>\n        </div>\n    </form>\n</template>\n\n\n<script>\n    export default {\n        data() {\n            return {\n                transactionCategoryForm: new Form({\n                    name : '',\n                    type: '',\n                    description : ''\n                }),\n                types: [\n                    {\n                        text: i18n.finance.income,\n                        value: 'income'\n                    },\n                    {\n                        text: i18n.finance.expense,\n                        value: 'expense'\n                    }\n                ]\n            };\n        },\n        props: ['id'],\n        mounted() {\n            if(this.id)\n                this.get();\n        },\n        methods: {\n            proceed(){\n                if(this.id)\n                    this.update();\n                else\n                    this.store();\n            },\n            store(){\n                let loader = this.$loading.show();\n                this.transactionCategoryForm.post('/api/finance/transaction/category')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.$emit('completed');\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/finance/transaction/category/'+this.id)\n                    .then(response => {\n                        this.transactionCategoryForm.name = response.name;\n                        this.transactionCategoryForm.type = response.type;\n                        this.transactionCategoryForm.description = response.description;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        this.$router.push('/configuration/finance/transaction/category');\n                    });\n            },\n            update(){\n                let loader = this.$loading.show();\n                this.transactionCategoryForm.patch('/api/finance/transaction/category/'+this.id)\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/configuration/finance/transaction/category');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            }\n        }\n    }\n</script>\n\n<style>\n.loading-overlay.is-full-page{\n    z-index: 1060;\n}\n</style>\n","<template>\n    <div>\n        <form @submit.prevent=\"proceed\" @keydown=\"incomeForm.errors.clear($event.target.name)\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('finance.transaction_category')}} </label> <button type=\"button\" class=\"btn btn-xs btn-info pull-right\" v-if=\"hasPermission('access-configuration')\" @click=\"showTransactionCategoryModal = true\">{{trans('general.add_new')}}</button>\n                        <v-select label=\"name\" v-model=\"selected_transaction_category\" name=\"transaction_category_id\" id=\"transaction_category_id\" :options=\"transaction_categories\" :placeholder=\"trans('finance.select_transaction_category')\" @select=\"onTransactionCategorySelect\" @close=\"incomeForm.errors.clear('transaction_category_id')\" @remove=\"incomeForm.transaction_category_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!transaction_categories.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n                        <show-error :form-name=\"incomeForm\" prop-name=\"transaction_category_id\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('finance.account')}} </label>\n                        <v-select label=\"name\" v-model=\"selected_account\" name=\"account_id\" id=\"account_id\" :options=\"accounts\" :placeholder=\"trans('finance.select_account')\" @select=\"onAccountSelect\" @close=\"incomeForm.errors.clear('account_id')\" @remove=\"incomeForm.account_id = ''\" :disabled=\"uuid ? true : false\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!accounts.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n                        <show-error :form-name=\"incomeForm\" prop-name=\"account_id\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('finance.amount')}}</label>\n                        <currency-input :position=\"default_currency.position\" :symbol=\"default_currency.symbol\" name=\"amount\" :placeholder=\"trans('finance.amount')\" v-model=\"incomeForm.amount\" @input.native=\"incomeForm.errors.clear('amount')\"></currency-input>\n                        <show-error :form-name=\"incomeForm\" prop-name=\"amount\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('finance.date_of_income')}}</label>\n                        <datepicker v-model=\"incomeForm.date_of_income\" :bootstrapStyling=\"true\" @selected=\"incomeForm.errors.clear('date_of_income')\" :placeholder=\"trans('finance.date_of_income')\"></datepicker>\n                        <show-error :form-name=\"incomeForm\" prop-name=\"date_of_income\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12 col-sm-3\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('finance.payment_method')}} </label> \n                        <v-select label=\"name\" v-model=\"selected_payment_method\" name=\"payment_method_id\" id=\"payment_method_id\" :options=\"payment_methods\" :placeholder=\"trans('finance.select_payment_method')\" @select=\"onPaymentMethodSelect\" @close=\"incomeForm.errors.clear('payment_method_id')\" @remove=\"incomeForm.payment_method_id = ''\">\n                            <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!payment_methods.length\">\n                                {{trans('general.no_option_found')}}\n                            </div>\n                        </v-select>\n                        <show-error :form-name=\"incomeForm\" prop-name=\"payment_method_id\"></show-error>\n                    </div>\n                </div>\n\t            <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('instrument_number')\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('finance.instrument_number')}}</label>\n                \t\t<input class=\"form-control\" type=\"text\" v-model=\"incomeForm.instrument_number\" name=\"instrument_number\" :placeholder=\"trans('finance.instrument_number')\">\n\t                    <show-error :form-name=\"incomeForm\" prop-name=\"instrument_number\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('instrument_date')\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('finance.instrument_date')}}</label>\n\t                    <datepicker v-model=\"incomeForm.instrument_date\" :bootstrapStyling=\"true\" @selected=\"incomeForm.errors.clear('instrument_date')\" :placeholder=\"trans('finance.instrument_date')\"></datepicker>\n\t                    <show-error :form-name=\"incomeForm\" prop-name=\"instrument_date\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('instrument_bank_detail')\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('finance.instrument_bank_detail')}}</label>\n                \t\t<input class=\"form-control\" type=\"text\" v-model=\"incomeForm.instrument_bank_detail\" name=\"instrument_bank_detail\" :placeholder=\"trans('finance.instrument_bank_detail')\">\n\t                    <show-error :form-name=\"incomeForm\" prop-name=\"instrument_bank_detail\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('instrument_clearing_date')\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('finance.instrument_clearing_date')}}</label>\n\t                    <datepicker v-model=\"incomeForm.instrument_clearing_date\" :bootstrapStyling=\"true\" @selected=\"incomeForm.errors.clear('instrument_clearing_date')\" :placeholder=\"trans('finance.instrument_clearing_date')\"></datepicker>\n\t                    <show-error :form-name=\"incomeForm\" prop-name=\"instrument_clearing_date\"></show-error>\n\t                </div>\n\t            </div>\n\t            <div class=\"col-12 col-sm-3\" v-if=\"getPaymentMethodDetail('reference_number')\">\n\t                <div class=\"form-group\">\n\t                    <label for=\"\">{{trans('finance.reference_number')}}</label>\n                \t\t<input class=\"form-control\" type=\"text\" v-model=\"incomeForm.reference_number\" name=\"reference_number\" :placeholder=\"trans('finance.reference_number')\">\n\t                    <show-error :form-name=\"incomeForm\" prop-name=\"reference_number\"></show-error>\n\t                </div>\n\t            </div>\n                <div class=\"col-12 col-sm-9\">\n                    <div class=\"form-group\">\n                        <label for=\"\">{{trans('finance.income_description')}}</label>\n                        <autosize-textarea v-model=\"incomeForm.description\" rows=\"1\" name=\"description\" :placeholder=\"trans('finance.income_description')\"></autosize-textarea>\n                        <show-error :form-name=\"incomeForm\" prop-name=\"description\"></show-error>\n                    </div>\n                </div>\n                <div class=\"col-12\">\n                    <div class=\"form-group\">\n                        <file-upload-input :button-text=\"trans('general.upload_document')\" :token=\"incomeForm.upload_token\" module=\"income\" :clear-file=\"clearAttachment\" :module-id=\"module_id\"></file-upload-input>\n                    </div>\n                </div>\n\t        </div>\n            <div class=\"card-footer text-right\">\n                <router-link to=\"/finance/transaction/income\" class=\"btn btn-danger waves-effect waves-light \" v-show=\"uuid\">{{trans('general.cancel')}}</router-link>\n                <button v-if=\"!uuid\" type=\"button\" class=\"btn btn-danger waves-effect waves-light \" @click=\"$emit('cancel')\">{{trans('general.cancel')}}</button>\n                <button type=\"submit\" class=\"btn btn-info waves-effect waves-light\">\n                    <span v-if=\"uuid\">{{trans('general.update')}}</span>\n                    <span v-else>{{trans('general.save')}}</span>\n                </button>\n            </div>\n        </form>\n\n        <transition name=\"modal\" v-if=\"showTransactionCategoryModal\">\n            <div class=\"modal-mask\">\n                <div class=\"modal-wrapper\">\n                    <div class=\"modal-container modal-lg\">\n                        <div class=\"modal-header\">\n                            <slot name=\"header\">\n                                {{trans('finance.add_new_transaction_category')}}\n                                <span class=\"float-right pointer\" @click=\"showTransactionCategoryModal = false\">x</span>\n                            </slot>\n                        </div>\n                        <div class=\"modal-body\">\n                            <slot name=\"body\">\n                                <transaction-category-form @completed=\"getPreRequisite\" @cancel=\"showTransactionCategoryModal = false\"></transaction-category-form>\n                                <div class=\"clearfix\"></div>\n                            </slot>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </transition>\n    </div>\n</template>\n\n\n<script>\n    import transactionCategoryForm from '../../../configuration/finance/transaction/category/form'\n\n    export default {\n        components: {transactionCategoryForm},\n        data() {\n            return {\n                incomeForm: new Form({\n                    transaction_category_id: '',\n                    account_id: '',\n                    payment_method_id: '',\n                    instrument_number: '',\n                    instrument_date: '',\n                    instrument_clearing_date: '',\n                    instrument_bank_detail: '',\n                    reference_number: '',\n                    amount: '',\n                    date_of_income: '',\n                    description: '',\n                    upload_token: ''\n                }),\n                transaction_categories: [],\n                selected_transaction_category: null,\n                accounts: [],\n                selected_account: null,\n                payment_methods: [],\n                selected_payment_method: null,\n                payment_method_details: [],\n                payment_method_detail: {},\n                module_id: '',\n                clearAttachment: true,\n                showTransactionCategoryModal: false,\n                default_currency: helper.getConfig('default_currency')\n            };\n        },\n        props: ['uuid'],\n        mounted() {\n            if(!helper.hasPermission('create-income') && !helper.hasPermission('edit-income')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            if(this.uuid)\n                this.get();\n            else\n                this.incomeForm.upload_token = this.$uuid.v4();\n\n            this.getPreRequisite();\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            getPreRequisite(){\n                let loader = this.$loading.show();\n                this.showTransactionCategoryModal = false;\n                axios.get('/api/income/pre-requisite')\n                    .then(response => {\n                        this.transaction_categories = response.transaction_categories;\n                        this.accounts = response.accounts;\n                        this.payment_methods = response.payment_methods;\n                        this.payment_method_details = response.payment_method_details;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    })\n            },\n            proceed(){\n                if(this.uuid)\n                    this.update();\n                else\n                    this.store();\n            },\n            store(){\n                let loader = this.$loading.show();\n                this.incomeForm.post('/api/income')\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.clearAttachment = !this.clearAttachment;\n                        this.incomeForm.upload_token = this.$uuid.v4();\n                        this.selected_transaction_category = null;\n                        this.selected_account = null;\n                        this.selected_payment_method = null;\n                        this.payment_method_detail = null;\n                        this.$emit('completed');\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/income/'+this.uuid)\n                    .then(response => {\n                        this.incomeForm.amount = this.formatNumber(response.income.amount);\n                        this.incomeForm.date_of_income = response.income.date_of_income;\n                        this.incomeForm.description = response.income.description;\n                        this.incomeForm.transaction_category_id = response.income.transaction_category_id;\n                        this.selected_transaction_category = response.income.transaction_category_id ? {id: response.income.transaction_category_id, name: response.income.transaction_category.name} : null;\n                        this.incomeForm.account_id = response.income.transaction.account_id;\n                        this.selected_account = response.income.transaction.account_id ? {id: response.income.transaction.account_id, name: response.income.transaction.account.name} : null;\n                        this.incomeForm.payment_method_id = response.income.transaction.payment_method_id;\n                        this.selected_payment_method = response.income.transaction.payment_method_id ? {id: response.income.transaction.payment_method_id, name: response.income.transaction.payment_method.name} : null;\n                        this.incomeForm.instrument_number = response.income.transaction.instrument_number;\n                        this.incomeForm.instrument_date = response.income.transaction.instrument_date;\n                        this.incomeForm.instrument_clearing_date = response.income.transaction.instrument_clearing_date;\n                        this.incomeForm.instrument_bank_detail = response.income.transaction.instrument_bank_detail;\n                        this.incomeForm.reference_number = response.income.transaction.reference_number;\n                        this.incomeForm.upload_token = response.income.upload_token;\n                        this.module_id = response.income.id;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                        this.$router.push('/finance/transaction/income');\n                    });\n            },\n            update(){\n                let loader = this.$loading.show();\n                this.incomeForm.patch('/api/income/'+this.uuid)\n                    .then(response => {\n                        toastr.success(response.message);\n                        loader.hide();\n                        this.$router.push('/finance/transaction/income');\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            onTransactionCategorySelect(selectedOption){\n                this.incomeForm.transaction_category_id = selectedOption.id;\n            },\n            onAccountSelect(selectedOption){\n                this.incomeForm.account_id = selectedOption.id;\n            },\n            onPaymentMethodSelect(selectedOption){\n                this.incomeForm.payment_method_id = selectedOption.id;\n                this.payment_method_detail = this.payment_method_details.find(o => o.id == selectedOption.id);\n            },\n            formatCurrency(price){\n                return helper.formatCurrency(price);\n            },\n            formatNumber(number){\n                return helper.formatNumber(number, this.default_currency.decimal_place)\n            },\n            getPaymentMethodDetail(field){\n                return helper.getPaymentMethodDetail(this.payment_method_detail, field);\n            }\n        }\n    }\n</script>\n","<template>\n    <div>\n        <div class=\"page-titles\">\n            <div class=\"row\">\n                <div class=\"col-12 col-sm-6\">\n                    <h3 class=\"text-themecolor\">{{trans('finance.income')}} \n                        <span class=\"card-subtitle d-none d-sm-inline\" v-if=\"incomes.total\">{{trans('general.total_result_found',{count : incomes.total, from: incomes.from, to: incomes.to})}}</span>\n                        <span class=\"card-subtitle d-none d-sm-inline\" v-else>{{trans('general.no_result_found')}}</span>\n                    </h3>\n                </div>\n                <div class=\"col-12 col-sm-6\">\n                    <div class=\"action-buttons pull-right\">\n                        <button class=\"btn btn-info btn-sm\" v-if=\"incomes.total && !showCreatePanel && hasPermission('create-income')\" @click=\"showCreatePanel = !showCreatePanel\" v-tooltip=\"trans('general.add_new')\"><i class=\"fas fa-plus\"></i> <span class=\"d-none d-sm-inline\">{{trans('finance.add_new_income')}}</span></button>\n                        <button class=\"btn btn-info btn-sm\" v-if=\"!showFilterPanel\" @click=\"showFilterPanel = !showFilterPanel\"><i class=\"fas fa-filter\"></i> <span class=\"d-none d-sm-inline\">{{trans('general.filter')}}</span></button>\n                        <sort-by :order-by-options=\"orderByOptions\" :sort-by=\"filter.sort_by\" :order=\"filter.order\" @updateSortBy=\"value => {filter.sort_by = value}\"  @updateOrder=\"value => {filter.order = value}\"></sort-by>\n                        <div class=\"btn-group\">\n                            <button type=\"button\" class=\"btn btn-info btn-sm dropdown-toggle no-caret \" role=\"menu\" id=\"moreOption\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\" v-tooltip=\"trans('general.more_option')\">\n                                <i class=\"fas fa-ellipsis-h\"></i> <span class=\"d-none d-sm-inline\"></span>\n                            </button>\n                            <div :class=\"['dropdown-menu',getConfig('direction') == 'ltr' ? 'dropdown-menu-right' : '']\" aria-labelledby=\"moreOption\">\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"print\"><i class=\"fas fa-print\"></i> {{trans('general.print')}}</button>\n                                <button class=\"dropdown-item custom-dropdown\" @click=\"pdf\"><i class=\"fas fa-file-pdf\"></i> {{trans('general.generate_pdf')}}</button>\n                            </div>\n                        </div>\n                        <help-button @clicked=\"help_topic = 'finance.transaction.income'\"></help-button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"container-fluid\">\n            <transition name=\"fade\">\n                <div class=\"card card-form\" v-if=\"showFilterPanel\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{trans('general.filter')}}</h4>\n                        <div class=\"row\">\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('finance.transaction_category')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_transaction_categories\" name=\"transaction_category_id\" id=\"transaction_category_id\" :options=\"transaction_categories\" :placeholder=\"trans('finance.select_transaction_category')\" @select=\"onTransactionCategorySelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onTransactionCategoryRemove\" :selected=\"selected_transaction_categories\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!transaction_categories.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('finance.account')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_accounts\" name=\"account_id\" id=\"account_id\" :options=\"accounts\" :placeholder=\"trans('finance.select_account')\" @select=\"onAccountSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onAccountRemove\" :selected=\"selected_accounts\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!accounts.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-3\">\n                                <div class=\"form-group\">\n                                    <label for=\"\">{{trans('finance.payment_method')}}</label>\n                                    <v-select label=\"name\" track-by=\"id\" v-model=\"selected_payment_methods\" name=\"payment_method_id\" id=\"payment_method_id\" :options=\"payment_methods\" :placeholder=\"trans('finance.select_payment_method')\" @select=\"onPaymentMethodSelect\" :multiple=\"true\" :close-on-select=\"false\" :clear-on-select=\"false\" :hide-selected=\"true\" @remove=\"onPaymentMethodRemove\" :selected=\"selected_payment_methods\">\n                                        <div class=\"multiselect__option\" slot=\"afterList\" v-if=\"!payment_methods.length\">\n                                            {{trans('general.no_option_found')}}\n                                        </div>\n                                    </v-select>\n                                </div>\n                            </div>\n                            <div class=\"col-12 col-sm-6\">\n                                <date-range-picker :start-date.sync=\"filter.date_of_income_start_date\" :end-date.sync=\"filter.date_of_income_end_date\" :label=\"trans('finance.date_of_income_between')\"></date-range-picker>\n                            </div>\n                        </div>\n                        <div class=\"card-footer text-right\">\n                            <button type=\"button\" @click=\"showFilterPanel = false\" class=\"btn btn-danger\">{{trans('general.cancel')}}</button>\n                            <button type=\"button\" class=\"btn btn-info waves-effect waves-light\" @click=\"getIncomes\">{{trans('general.filter')}}</button>\n                        </div>\n                    </div>\n                </div>\n            </transition>\n            <transition name=\"fade\" v-if=\"hasPermission('create-income')\">\n                <div class=\"card card-form\" v-if=\"showCreatePanel\">\n                    <div class=\"card-body\">\n                        <h4 class=\"card-title\">{{trans('finance.add_new_income')}}</h4>\n                        <income-form @completed=\"getIncomes\" @cancel=\"showCreatePanel = !showCreatePanel\"></income-form>\n                    </div>\n                </div>\n            </transition>\n            <div class=\"card\">\n                <div class=\"card-body\">\n                    <div class=\"table-responsive\" v-if=\"incomes.total\">\n                        <table class=\"table table-sm\">\n                            <thead>\n                                <tr>\n                                    <th>{{trans('finance.voucher_number')}}</th>\n                                    <th>{{trans('finance.income_category')}}</th>\n                                    <th>{{trans('finance.account')}}</th>\n                                    <th>{{trans('finance.payment_method')}}</th>\n                                    <th>{{trans('finance.amount')}}</th>\n                                    <th>{{trans('finance.date_of_income')}}</th>\n                                    <th>{{trans('general.created_by')}}</th>\n                                    <th>{{trans('general.created_at')}}</th>\n                                    <th class=\"table-option\">{{trans('general.action')}}</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                <tr v-for=\"income in incomes.data\">\n                                    <td v-text=\"getVoucherNumber(income.transaction)\"></td>\n                                    <td v-text=\"income.transaction_category.name\"></td>\n                                    <td v-text=\"income.transaction.account.name\"></td>\n                                    <td v-text=\"income.transaction.payment_method.name\"></td>\n                                    <td>{{formatCurrency(income.amount)}}</td>\n                                    <td>{{income.date_of_income | moment}}</td>\n                                    <td>{{getEmployeeName(income.user.employee)}} <br > {{getEmployeeDesignationOnDate(income.user.employee, income.date_of_income)}}</td>\n                                    <td>{{income.created_at | momentDateTime}}</td>\n                                    <td class=\"table-option\">\n                                        <div class=\"btn-group\">\n                                            <a :href=\"`/finance/transaction/income/${income.uuid}/print?token=${authToken}`\" target=\"_blank\" class=\"btn btn-success btn-sm\" v-tooltip=\"trans('general.print')\"><i class=\"fas fa-print\"></i></a>\n                                            <button class=\"btn btn-success btn-sm\" v-tooltip=\"trans('general.view_detail')\" @click.prevent=\"showAction(income)\"><i class=\"fas fa-arrow-circle-right\"></i></button>\n                                            <template v-if=\"!income.is_cancelled\">\n                                                <button class=\"btn btn-info btn-sm\" v-if=\"hasPermission('edit-income')\" v-tooltip=\"trans('finance.edit_income')\" @click.prevent=\"editIncome(income)\"><i class=\"fas fa-edit\"></i></button>\n                                                <button class=\"btn btn-danger btn-sm\" v-if=\"hasPermission('cancel-income')\" :key=\"income.id\" v-confirm=\"{ok: confirmCancel(income)}\" v-tooltip=\"trans('finance.cancel_income')\"><i class=\"fas fa-times\"></i></button>\n                                            </template>\n                                        </div>\n                                    </td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                    <module-info v-if=\"!incomes.total\" module=\"finance\" title=\"income_module_title\" description=\"income_module_description\" icon=\"list\">\n                        <div slot=\"btn\">\n                            <button class=\"btn btn-info btn-md\" v-if=\"!showCreatePanel && hasPermission('create-income')\" @click=\"showCreatePanel = !showCreatePanel\"><i class=\"fas fa-plus\"></i> {{trans('general.add_new')}}</button>\n                        </div>\n                    </module-info>\n                    <pagination-record :page-length.sync=\"filter.page_length\" :records=\"incomes\" @updateRecords=\"getIncomes\"></pagination-record>\n                </div>\n            </div>\n        </div>\n        <income-detail v-if=\"showModal\" @close=\"showModal = false\" :uuid=\"showUuid\"></income-detail>\n        <right-panel :topic=\"help_topic\"></right-panel>\n    </div>\n</template>\n\n<script>\n    import incomeForm from './form'\n    import incomeDetail from './show'\n    \n    export default {\n        components : { incomeForm,incomeDetail},\n        data() {\n            return {\n                incomes: {\n                    total: 0,\n                    data: []\n                },\n                filter: {\n                    sort_by : 'date_of_income',\n                    order: 'desc',\n                    transaction_category_id: [],\n                    account_id: [],\n                    payment_method_id: [],\n                    date_of_income_start_date: '',\n                    date_of_income_end_date: '',\n                    page_length: helper.getConfig('page_length')\n                },\n                orderByOptions: [\n                    {\n                        value: 'date_of_income',\n                        translation: i18n.finance.date_of_income\n                    },\n                    {\n                        value: 'amount',\n                        translation: i18n.finance.amount\n                    }\n                ],\n                transaction_categories: [],\n                selected_transaction_categories: null,\n                accounts: [],\n                selected_accounts: null,\n                payment_methods: [],\n                selected_payment_methods: null,\n                showFilterPanel: false,\n                showCreatePanel: false,\n                help_topic: '',\n                showUuid: '',\n                showModal: false\n            };\n        },\n        mounted(){\n            if(!helper.hasPermission('list-income')){\n                helper.notAccessibleMsg();\n                this.$router.push('/dashboard');\n            }\n\n            this.getIncomes();\n        },\n        methods: {\n            hasPermission(permission){\n                return helper.hasPermission(permission);\n            },\n            showAction(income){\n                this.showUuid = income.uuid;\n                this.showModal = true;\n            },\n            getEmployeeName(employee){\n                return helper.getEmployeeName(employee);\n            },\n            getEmployeeDesignationOnDate(employee, date){\n                return helper.getEmployeeDesignationOnDate(employee, date);\n            },\n            getVoucherNumber(transaction){\n                return helper.getVoucherNumber(transaction);\n            },\n            getIncomes(page){\n                let loader = this.$loading.show();\n                if (typeof page !== 'number') {\n                    page = 1;\n                }\n                this.filter.date_of_income_start_date = helper.toDate(this.filter.date_of_income_start_date);\n                this.filter.date_of_income_end_date = helper.toDate(this.filter.date_of_income_end_date);\n                let url = helper.getFilterURL(this.filter);\n                axios.get('/api/income?page=' + page + url)\n                    .then(response => {\n                        this.incomes = response.incomes;\n                        this.transaction_categories = response.filters.transaction_categories;\n                        this.accounts = response.filters.accounts;\n                        this.payment_methods = response.filters.payment_methods;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            editIncome(income){\n                this.$router.push('/finance/transaction/income/'+income.uuid+'/edit');\n            },\n            confirmCancel(income){\n                return dialog => this.cancelIncome(income);\n            },\n            cancelIncome(income){\n                let loader = this.$loading.show();\n                axios.delete('/api/income/'+income.uuid)\n                    .then(response => {\n                        toastr.success(response.message);\n                        this.getIncomes();\n                        loader.hide();\n                    }).catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getConfig(config) {\n                return helper.getConfig(config)\n            },\n            print(){\n                let loader = this.$loading.show();\n                axios.post('/api/income/print',{filter: this.filter})\n                    .then(response => {\n                        let print = window.open(\"/print\");\n                        loader.hide();\n                        print.document.write(response);\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            pdf(){\n                let loader = this.$loading.show();\n                axios.post('/api/income/pdf',{filter: this.filter})\n                    .then(response => {\n                        loader.hide();\n                        window.open('/download/report/'+response+'?token='+this.authToken);\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            onTransactionCategorySelect(selectedOption){\n                this.filter.transaction_category_id.push(selectedOption.id);\n            },\n            onTransactionCategoryRemove(removedOption){\n                this.filter.transaction_category_id.splice(this.filter.transaction_category_id.indexOf(removedOption.id), 1);\n            },\n            onAccountSelect(selectedOption){\n                this.filter.account_id.push(selectedOption.id);\n            },\n            onAccountRemove(removedOption){\n                this.filter.account_id.splice(this.filter.account_id.indexOf(removedOption.id), 1);\n            },\n            onPaymentMethodSelect(selectedOption){\n                this.filter.payment_method.push(selectedOption.id);\n            },\n            onPaymentMethodRemove(removedOption){\n                this.filter.payment_method.splice(this.filter.payment_method.indexOf(removedOption.id), 1);\n            },\n            formatCurrency(amount){\n                return helper.formatCurrency(amount);\n            }\n        },\n        filters: {\n          moment(date) {\n            return helper.formatDate(date);\n          },\n          momentDateTime(date) {\n            return helper.formatDateTime(date);\n          }\n        },\n        watch: {\n            'filter.sort_by': function(val){\n                this.getIncomes();\n            },\n            'filter.order': function(val){\n                this.getIncomes();\n            },\n            'filter.page_length': function(val){\n                this.getIncomes();\n            }\n        },\n        computed: {\n            authToken(){\n                return helper.getAuthToken();\n            }\n        }\n    }\n</script>","<template>\n    <transition name=\"modal\">\n        <div class=\"modal-mask\">\n            <div class=\"modal-wrapper\">\n                <div class=\"modal-container modal-lg\">\n                    <div class=\"modal-header\" v-if=\"income.id\">\n                        <slot name=\"header\">\n                            <span>{{trans('finance.income')}} #{{getVoucherNumber(income.transaction)}}\n                            \t<span class=\"label label-danger\" v-if=\"income.is_cancelled\">\n                            \t\t{{trans('finance.transaction_status_cancelled')}}\n                            \t</span>\n                            </span>\n                            <span class=\"float-right pointer\" @click=\"$emit('close')\">x</span>\n                        </slot>\n                    </div>\n                    <div class=\"modal-body\" v-if=\"income.id\">\n                        <slot name=\"body\">\n                        \t<div class=\"table-responsive\">\n                                <table class=\"table table-sm custom-show-table\">\n                                    <tbody>\n\t                        \t\t\t<tr>\n\t                        \t\t\t\t<td class=\"font-weight-bold\">#</td>\n                                            <td>{{getVoucherNumber(income.transaction)}}</td>\n\t                        \t\t\t</tr>\n\t                        \t\t\t<tr>\n\t                        \t\t\t\t<td class=\"font-weight-bold\">{{trans('finance.income_category')}}</td>\n\t                        \t\t\t\t<td>{{income.transaction_category.name}}</td>\n\t                        \t\t\t</tr>\n\t                        \t\t\t<tr>\n\t                        \t\t\t\t<td class=\"font-weight-bold\">{{trans('finance.date_of_income')}}</td>\n\t                        \t\t\t\t<td>{{income.date_of_income | moment}}</td>\n\t                        \t\t\t</tr>\n\t                        \t\t\t<tr>\n\t                        \t\t\t\t<td class=\"font-weight-bold\">{{trans('finance.account')}}</td>\n\t                        \t\t\t\t<td>{{income.transaction.account.name}}</td>\n\t                        \t\t\t</tr>\n\t                        \t\t\t<tr>\n\t                        \t\t\t\t<td class=\"font-weight-bold\">{{trans('finance.payment_method')}}</td>\n\t                        \t\t\t\t<td>\n\t                        \t\t\t\t\t{{income.transaction.payment_method.name}}\n\t                        \t\t\t\t\t<span v-if=\"income.transaction.payment_method.options.requires_instrument_number\">\n\t                        \t\t\t\t\t\t<br />\t{{trans('finance.instrument_number')}}: {{income.transaction.instrument_number}}\n\t                        \t\t\t\t\t</span>\n\t                        \t\t\t\t\t<span v-if=\"income.transaction.payment_method.options.requires_instrument_date\">\n\t                        \t\t\t\t\t\t<br />\t{{trans('finance.instrument_date')}}: {{income.transaction.instrument_date | moment}}\n\t                        \t\t\t\t\t</span>\n\t                        \t\t\t\t\t<span v-if=\"income.transaction.payment_method.options.requires_instrument_bank_detail\">\n\t                        \t\t\t\t\t\t<br />\t{{trans('finance.instrument_bank_detail')}}: {{income.transaction.instrument_bank_detail}}\n\t                        \t\t\t\t\t</span>\n\t                        \t\t\t\t\t<span v-if=\"income.transaction.payment_method.options.requires_instrument_clearing_date\">\n\t                        \t\t\t\t\t\t<br />\t{{trans('finance.instrument_clearing_date')}}: {{income.transaction.instrument_clearing_date | moment}}\n\t                        \t\t\t\t\t</span>\n\t                        \t\t\t\t\t<span v-if=\"income.transaction.payment_method.options.requires_reference_number\">\n\t                        \t\t\t\t\t\t<br />\t{{trans('finance.reference_number')}}: {{income.transaction.reference_number}}\n\t                        \t\t\t\t\t</span>\n\t                        \t\t\t\t</td>\n\t                        \t\t\t</tr>\n\t                        \t\t\t<tr>\n\t                        \t\t\t\t<td class=\"font-weight-bold\">{{trans('finance.amount')}}</td>\n\t                        \t\t\t\t<td>{{formatCurrency(income.amount)}}</td>\n\t                        \t\t\t</tr>\n\t                        \t\t\t<tr>\n\t                        \t\t\t\t<td class=\"font-weight-bold\">{{trans('finance.income_description')}}</td>\n\t                        \t\t\t\t<td>{{income.description}}</td>\n\t                        \t\t\t</tr>\n\t                        \t\t\t<tr>\n\t                        \t\t\t\t<td class=\"font-weight-bold\">{{trans('general.created_by')}}</td>\n                                            <td>{{getEmployeeName(income.user.employee)}} <br > {{getEmployeeDesignationOnDate(income.user.employee, income.date_of_income)}}</td>\n\n\t                        \t\t\t</tr>\n\t                        \t\t</tbody>\n                        \t\t</table>\t\n                        \t</div>\n                            <div v-if=\"attachments.length\">\n                                <ul class=\"m-t-10 upload-file-list\">\n                                    <li class=\"upload-file-list-item\" v-for=\"attachment in attachments\">\n                                        <a :href=\"`/finance/transaction/income/${income.uuid}/attachment/${attachment.uuid}/download?token=${authToken}`\" class=\"no-link-color\"><i :class=\"['file-icon', 'fas', 'fa-lg', attachment.file_info.icon]\"></i> <span class=\"upload-file-list-item-size\">{{attachment.file_info.size}}</span> {{attachment.user_filename}}</a>\n                                    </li>\n                                </ul>\n                            </div>\n                            <hr />\n                            <p>\n                                <i class=\"far fa-clock\"></i> <small>{{trans('general.created_at')}} {{income.created_at | momentDateTime}}</small>\n                                <span class=\"pull-right\">\n                                    <i class=\"far fa-clock\"></i> <small>{{trans('general.updated_at')}} {{income.updated_at | momentDateTime}}</small>\n                                </span>\n                            </p>\n                        </slot>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </transition>\n</template>\n\n<script>\n\texport default {\n\t\tprops: ['uuid'],\n\t\tdata() {\n            return {\n                income: {},\n                attachments: []\n            }\n\t\t},\n\t\tmounted(){\n            if(this.uuid)\n                this.get();\n\t\t},\n\t\tmethods: {\n            get(){\n                let loader = this.$loading.show();\n                axios.get('/api/income/'+this.uuid)\n                    .then(response => {\n                        this.income = response.income;\n                        this.attachments = response.attachments;\n                        loader.hide();\n                    })\n                    .catch(error => {\n                        loader.hide();\n                        helper.showErrorMsg(error);\n                    });\n            },\n            getEmployeeName(employee){\n                return helper.getEmployeeName(employee);\n            },\n            getEmployeeDesignationOnDate(employee, date){\n                return helper.getEmployeeDesignationOnDate(employee, date);\n            },\n            formatCurrency(amount){\n            \treturn helper.formatCurrency(amount);\n            },\n            getVoucherNumber(transaction){\n                return helper.getVoucherNumber(transaction);\n            }\n\t\t},\n        filters: {\n          moment(date) {\n            return helper.formatDate(date);\n          },\n          momentDateTime(date) {\n            return helper.formatDateTime(date);\n          }\n        },\n        computed: {\n            authToken(){\n                return helper.getAuthToken();\n            }\n        }\n\t}\n</script>","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"form\",\n    {\n      on: {\n        submit: function ($event) {\n          $event.preventDefault()\n          return _vm.proceed.apply(null, arguments)\n        },\n        keydown: function ($event) {\n          return _vm.transactionCategoryForm.errors.clear($event.target.name)\n        },\n      },\n    },\n    [\n      _c(\"div\", { staticClass: \"row\" }, [\n        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"finance.transaction_category_name\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.transactionCategoryForm.name,\n                    expression: \"transactionCategoryForm.name\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"name\",\n                  placeholder: _vm.trans(\"finance.transaction_category_name\"),\n                },\n                domProps: { value: _vm.transactionCategoryForm.name },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(\n                      _vm.transactionCategoryForm,\n                      \"name\",\n                      $event.target.value\n                    )\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.transactionCategoryForm,\n                  \"prop-name\": \"name\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(_vm._s(_vm.trans(\"finance.transaction_category_type\"))),\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"select\",\n                {\n                  directives: [\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.transactionCategoryForm.type,\n                      expression: \"transactionCategoryForm.type\",\n                    },\n                  ],\n                  staticClass: \"col-12 custom-select\",\n                  attrs: { name: \"type\" },\n                  on: {\n                    change: [\n                      function ($event) {\n                        var $$selectedVal = Array.prototype.filter\n                          .call($event.target.options, function (o) {\n                            return o.selected\n                          })\n                          .map(function (o) {\n                            var val = \"_value\" in o ? o._value : o.value\n                            return val\n                          })\n                        _vm.$set(\n                          _vm.transactionCategoryForm,\n                          \"type\",\n                          $event.target.multiple\n                            ? $$selectedVal\n                            : $$selectedVal[0]\n                        )\n                      },\n                      function ($event) {\n                        return _vm.transactionCategoryForm.errors.clear(\"type\")\n                      },\n                    ],\n                  },\n                },\n                [\n                  _c(\"option\", { attrs: { value: \"null\", selected: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"general.select_one\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _vm._l(_vm.types, function (type) {\n                    return _c(\"option\", { domProps: { value: type.value } }, [\n                      _vm._v(\n                        \"\\n                    \" +\n                          _vm._s(type.text) +\n                          \"\\n                  \"\n                      ),\n                    ])\n                  }),\n                ],\n                2\n              ),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.transactionCategoryForm,\n                  \"prop-name\": \"type\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"col-12 col-sm-4\" }, [\n          _c(\n            \"div\",\n            { staticClass: \"form-group\" },\n            [\n              _c(\"label\", { attrs: { for: \"\" } }, [\n                _vm._v(\n                  _vm._s(_vm.trans(\"finance.transaction_category_description\"))\n                ),\n              ]),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.transactionCategoryForm.description,\n                    expression: \"transactionCategoryForm.description\",\n                  },\n                ],\n                staticClass: \"form-control\",\n                attrs: {\n                  type: \"text\",\n                  name: \"description\",\n                  placeholder: _vm.trans(\n                    \"finance.transaction_category_description\"\n                  ),\n                },\n                domProps: { value: _vm.transactionCategoryForm.description },\n                on: {\n                  input: function ($event) {\n                    if ($event.target.composing) return\n                    _vm.$set(\n                      _vm.transactionCategoryForm,\n                      \"description\",\n                      $event.target.value\n                    )\n                  },\n                },\n              }),\n              _vm._v(\" \"),\n              _c(\"show-error\", {\n                attrs: {\n                  \"form-name\": _vm.transactionCategoryForm,\n                  \"prop-name\": \"description\",\n                },\n              }),\n            ],\n            1\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"card-footer text-right\" },\n        [\n          !_vm.id\n            ? _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-danger waves-effect waves-light\",\n                  attrs: { type: \"button\" },\n                  on: {\n                    click: function ($event) {\n                      return _vm.$emit(\"cancel\")\n                    },\n                  },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"router-link\",\n            {\n              directives: [\n                {\n                  name: \"show\",\n                  rawName: \"v-show\",\n                  value: _vm.id,\n                  expression: \"id\",\n                },\n              ],\n              staticClass: \"btn btn-danger waves-effect waves-light\",\n              attrs: { to: \"/configuration/finance/transaction/category\" },\n            },\n            [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"button\",\n            {\n              staticClass: \"btn btn-info waves-effect waves-light\",\n              attrs: { type: \"submit\" },\n            },\n            [\n              _vm.id\n                ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n            ]\n          ),\n        ],\n        1\n      ),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function ($event) {\n              $event.preventDefault()\n              return _vm.proceed.apply(null, arguments)\n            },\n            keydown: function ($event) {\n              return _vm.incomeForm.errors.clear($event.target.name)\n            },\n          },\n        },\n        [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(\n                      _vm._s(_vm.trans(\"finance.transaction_category\")) + \" \"\n                    ),\n                  ]),\n                  _vm._v(\" \"),\n                  _vm.hasPermission(\"access-configuration\")\n                    ? _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-xs btn-info pull-right\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showTransactionCategoryModal = true\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.add_new\")))]\n                      )\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"transaction_category_id\",\n                        id: \"transaction_category_id\",\n                        options: _vm.transaction_categories,\n                        placeholder: _vm.trans(\n                          \"finance.select_transaction_category\"\n                        ),\n                      },\n                      on: {\n                        select: _vm.onTransactionCategorySelect,\n                        close: function ($event) {\n                          return _vm.incomeForm.errors.clear(\n                            \"transaction_category_id\"\n                          )\n                        },\n                        remove: function ($event) {\n                          _vm.incomeForm.transaction_category_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_transaction_category,\n                        callback: function ($$v) {\n                          _vm.selected_transaction_category = $$v\n                        },\n                        expression: \"selected_transaction_category\",\n                      },\n                    },\n                    [\n                      !_vm.transaction_categories.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                                \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                            \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.incomeForm,\n                      \"prop-name\": \"transaction_category_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"finance.account\")) + \" \"),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"account_id\",\n                        id: \"account_id\",\n                        options: _vm.accounts,\n                        placeholder: _vm.trans(\"finance.select_account\"),\n                        disabled: _vm.uuid ? true : false,\n                      },\n                      on: {\n                        select: _vm.onAccountSelect,\n                        close: function ($event) {\n                          return _vm.incomeForm.errors.clear(\"account_id\")\n                        },\n                        remove: function ($event) {\n                          _vm.incomeForm.account_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_account,\n                        callback: function ($$v) {\n                          _vm.selected_account = $$v\n                        },\n                        expression: \"selected_account\",\n                      },\n                    },\n                    [\n                      !_vm.accounts.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                                \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                            \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.incomeForm,\n                      \"prop-name\": \"account_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"finance.amount\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"currency-input\", {\n                    attrs: {\n                      position: _vm.default_currency.position,\n                      symbol: _vm.default_currency.symbol,\n                      name: \"amount\",\n                      placeholder: _vm.trans(\"finance.amount\"),\n                    },\n                    nativeOn: {\n                      input: function ($event) {\n                        return _vm.incomeForm.errors.clear(\"amount\")\n                      },\n                    },\n                    model: {\n                      value: _vm.incomeForm.amount,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.incomeForm, \"amount\", $$v)\n                      },\n                      expression: \"incomeForm.amount\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.incomeForm,\n                      \"prop-name\": \"amount\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"finance.date_of_income\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"datepicker\", {\n                    attrs: {\n                      bootstrapStyling: true,\n                      placeholder: _vm.trans(\"finance.date_of_income\"),\n                    },\n                    on: {\n                      selected: function ($event) {\n                        return _vm.incomeForm.errors.clear(\"date_of_income\")\n                      },\n                    },\n                    model: {\n                      value: _vm.incomeForm.date_of_income,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.incomeForm, \"date_of_income\", $$v)\n                      },\n                      expression: \"incomeForm.date_of_income\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.incomeForm,\n                      \"prop-name\": \"date_of_income\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"finance.payment_method\")) + \" \"),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"v-select\",\n                    {\n                      attrs: {\n                        label: \"name\",\n                        name: \"payment_method_id\",\n                        id: \"payment_method_id\",\n                        options: _vm.payment_methods,\n                        placeholder: _vm.trans(\"finance.select_payment_method\"),\n                      },\n                      on: {\n                        select: _vm.onPaymentMethodSelect,\n                        close: function ($event) {\n                          return _vm.incomeForm.errors.clear(\n                            \"payment_method_id\"\n                          )\n                        },\n                        remove: function ($event) {\n                          _vm.incomeForm.payment_method_id = \"\"\n                        },\n                      },\n                      model: {\n                        value: _vm.selected_payment_method,\n                        callback: function ($$v) {\n                          _vm.selected_payment_method = $$v\n                        },\n                        expression: \"selected_payment_method\",\n                      },\n                    },\n                    [\n                      !_vm.payment_methods.length\n                        ? _c(\n                            \"div\",\n                            {\n                              staticClass: \"multiselect__option\",\n                              attrs: { slot: \"afterList\" },\n                              slot: \"afterList\",\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                                \" +\n                                  _vm._s(_vm.trans(\"general.no_option_found\")) +\n                                  \"\\n                            \"\n                              ),\n                            ]\n                          )\n                        : _vm._e(),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.incomeForm,\n                      \"prop-name\": \"payment_method_id\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"instrument_number\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"finance.instrument_number\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.incomeForm.instrument_number,\n                            expression: \"incomeForm.instrument_number\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"instrument_number\",\n                          placeholder: _vm.trans(\"finance.instrument_number\"),\n                        },\n                        domProps: { value: _vm.incomeForm.instrument_number },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.incomeForm,\n                              \"instrument_number\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.incomeForm,\n                          \"prop-name\": \"instrument_number\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"instrument_date\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"finance.instrument_date\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          bootstrapStyling: true,\n                          placeholder: _vm.trans(\"finance.instrument_date\"),\n                        },\n                        on: {\n                          selected: function ($event) {\n                            return _vm.incomeForm.errors.clear(\n                              \"instrument_date\"\n                            )\n                          },\n                        },\n                        model: {\n                          value: _vm.incomeForm.instrument_date,\n                          callback: function ($$v) {\n                            _vm.$set(_vm.incomeForm, \"instrument_date\", $$v)\n                          },\n                          expression: \"incomeForm.instrument_date\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.incomeForm,\n                          \"prop-name\": \"instrument_date\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"instrument_bank_detail\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"finance.instrument_bank_detail\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.incomeForm.instrument_bank_detail,\n                            expression: \"incomeForm.instrument_bank_detail\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"instrument_bank_detail\",\n                          placeholder: _vm.trans(\n                            \"finance.instrument_bank_detail\"\n                          ),\n                        },\n                        domProps: {\n                          value: _vm.incomeForm.instrument_bank_detail,\n                        },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.incomeForm,\n                              \"instrument_bank_detail\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.incomeForm,\n                          \"prop-name\": \"instrument_bank_detail\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"instrument_clearing_date\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"finance.instrument_clearing_date\"))\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"datepicker\", {\n                        attrs: {\n                          bootstrapStyling: true,\n                          placeholder: _vm.trans(\n                            \"finance.instrument_clearing_date\"\n                          ),\n                        },\n                        on: {\n                          selected: function ($event) {\n                            return _vm.incomeForm.errors.clear(\n                              \"instrument_clearing_date\"\n                            )\n                          },\n                        },\n                        model: {\n                          value: _vm.incomeForm.instrument_clearing_date,\n                          callback: function ($$v) {\n                            _vm.$set(\n                              _vm.incomeForm,\n                              \"instrument_clearing_date\",\n                              $$v\n                            )\n                          },\n                          expression: \"incomeForm.instrument_clearing_date\",\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.incomeForm,\n                          \"prop-name\": \"instrument_clearing_date\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.getPaymentMethodDetail(\"reference_number\")\n              ? _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"form-group\" },\n                    [\n                      _c(\"label\", { attrs: { for: \"\" } }, [\n                        _vm._v(_vm._s(_vm.trans(\"finance.reference_number\"))),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.incomeForm.reference_number,\n                            expression: \"incomeForm.reference_number\",\n                          },\n                        ],\n                        staticClass: \"form-control\",\n                        attrs: {\n                          type: \"text\",\n                          name: \"reference_number\",\n                          placeholder: _vm.trans(\"finance.reference_number\"),\n                        },\n                        domProps: { value: _vm.incomeForm.reference_number },\n                        on: {\n                          input: function ($event) {\n                            if ($event.target.composing) return\n                            _vm.$set(\n                              _vm.incomeForm,\n                              \"reference_number\",\n                              $event.target.value\n                            )\n                          },\n                        },\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"show-error\", {\n                        attrs: {\n                          \"form-name\": _vm.incomeForm,\n                          \"prop-name\": \"reference_number\",\n                        },\n                      }),\n                    ],\n                    1\n                  ),\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12 col-sm-9\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"label\", { attrs: { for: \"\" } }, [\n                    _vm._v(_vm._s(_vm.trans(\"finance.income_description\"))),\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\"autosize-textarea\", {\n                    attrs: {\n                      rows: \"1\",\n                      name: \"description\",\n                      placeholder: _vm.trans(\"finance.income_description\"),\n                    },\n                    model: {\n                      value: _vm.incomeForm.description,\n                      callback: function ($$v) {\n                        _vm.$set(_vm.incomeForm, \"description\", $$v)\n                      },\n                      expression: \"incomeForm.description\",\n                    },\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"show-error\", {\n                    attrs: {\n                      \"form-name\": _vm.incomeForm,\n                      \"prop-name\": \"description\",\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"col-12\" }, [\n              _c(\n                \"div\",\n                { staticClass: \"form-group\" },\n                [\n                  _c(\"file-upload-input\", {\n                    attrs: {\n                      \"button-text\": _vm.trans(\"general.upload_document\"),\n                      token: _vm.incomeForm.upload_token,\n                      module: \"income\",\n                      \"clear-file\": _vm.clearAttachment,\n                      \"module-id\": _vm.module_id,\n                    },\n                  }),\n                ],\n                1\n              ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"card-footer text-right\" },\n            [\n              _c(\n                \"router-link\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.uuid,\n                      expression: \"uuid\",\n                    },\n                  ],\n                  staticClass: \"btn btn-danger waves-effect waves-light\",\n                  attrs: { to: \"/finance/transaction/income\" },\n                },\n                [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n              ),\n              _vm._v(\" \"),\n              !_vm.uuid\n                ? _c(\n                    \"button\",\n                    {\n                      staticClass: \"btn btn-danger waves-effect waves-light\",\n                      attrs: { type: \"button\" },\n                      on: {\n                        click: function ($event) {\n                          return _vm.$emit(\"cancel\")\n                        },\n                      },\n                    },\n                    [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                  )\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\n                \"button\",\n                {\n                  staticClass: \"btn btn-info waves-effect waves-light\",\n                  attrs: { type: \"submit\" },\n                },\n                [\n                  _vm.uuid\n                    ? _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.update\")))])\n                    : _c(\"span\", [_vm._v(_vm._s(_vm.trans(\"general.save\")))]),\n                ]\n              ),\n            ],\n            1\n          ),\n        ]\n      ),\n      _vm._v(\" \"),\n      _vm.showTransactionCategoryModal\n        ? _c(\"transition\", { attrs: { name: \"modal\" } }, [\n            _c(\"div\", { staticClass: \"modal-mask\" }, [\n              _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n                _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-header\" },\n                    [\n                      _vm._t(\"header\", function () {\n                        return [\n                          _vm._v(\n                            \"\\n                                \" +\n                              _vm._s(\n                                _vm.trans(\n                                  \"finance.add_new_transaction_category\"\n                                )\n                              ) +\n                              \"\\n                                \"\n                          ),\n                          _c(\n                            \"span\",\n                            {\n                              staticClass: \"float-right pointer\",\n                              on: {\n                                click: function ($event) {\n                                  _vm.showTransactionCategoryModal = false\n                                },\n                              },\n                            },\n                            [_vm._v(\"x\")]\n                          ),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"modal-body\" },\n                    [\n                      _vm._t(\"body\", function () {\n                        return [\n                          _c(\"transaction-category-form\", {\n                            on: {\n                              completed: _vm.getPreRequisite,\n                              cancel: function ($event) {\n                                _vm.showTransactionCategoryModal = false\n                              },\n                            },\n                          }),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"clearfix\" }),\n                        ]\n                      }),\n                    ],\n                    2\n                  ),\n                ]),\n              ]),\n            ]),\n          ])\n        : _vm._e(),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    [\n      _c(\"div\", { staticClass: \"page-titles\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\"h3\", { staticClass: \"text-themecolor\" }, [\n              _vm._v(\n                _vm._s(_vm.trans(\"finance.income\")) + \" \\n                    \"\n              ),\n              _vm.incomes.total\n                ? _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [\n                      _vm._v(\n                        _vm._s(\n                          _vm.trans(\"general.total_result_found\", {\n                            count: _vm.incomes.total,\n                            from: _vm.incomes.from,\n                            to: _vm.incomes.to,\n                          })\n                        )\n                      ),\n                    ]\n                  )\n                : _c(\n                    \"span\",\n                    { staticClass: \"card-subtitle d-none d-sm-inline\" },\n                    [_vm._v(_vm._s(_vm.trans(\"general.no_result_found\")))]\n                  ),\n            ]),\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"col-12 col-sm-6\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"action-buttons pull-right\" },\n              [\n                _vm.incomes.total &&\n                !_vm.showCreatePanel &&\n                _vm.hasPermission(\"create-income\")\n                  ? _c(\n                      \"button\",\n                      {\n                        directives: [\n                          {\n                            name: \"tooltip\",\n                            rawName: \"v-tooltip\",\n                            value: _vm.trans(\"general.add_new\"),\n                            expression: \"trans('general.add_new')\",\n                          },\n                        ],\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showCreatePanel = !_vm.showCreatePanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"finance.add_new_income\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.showFilterPanel\n                  ? _c(\n                      \"button\",\n                      {\n                        staticClass: \"btn btn-info btn-sm\",\n                        on: {\n                          click: function ($event) {\n                            _vm.showFilterPanel = !_vm.showFilterPanel\n                          },\n                        },\n                      },\n                      [\n                        _c(\"i\", { staticClass: \"fas fa-filter\" }),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"d-none d-sm-inline\" }, [\n                          _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"sort-by\", {\n                  attrs: {\n                    \"order-by-options\": _vm.orderByOptions,\n                    \"sort-by\": _vm.filter.sort_by,\n                    order: _vm.filter.order,\n                  },\n                  on: {\n                    updateSortBy: (value) => {\n                      _vm.filter.sort_by = value\n                    },\n                    updateOrder: (value) => {\n                      _vm.filter.order = value\n                    },\n                  },\n                }),\n                _vm._v(\" \"),\n                _c(\"div\", { staticClass: \"btn-group\" }, [\n                  _c(\n                    \"button\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip\",\n                          value: _vm.trans(\"general.more_option\"),\n                          expression: \"trans('general.more_option')\",\n                        },\n                      ],\n                      staticClass:\n                        \"btn btn-info btn-sm dropdown-toggle no-caret\",\n                      attrs: {\n                        type: \"button\",\n                        role: \"menu\",\n                        id: \"moreOption\",\n                        \"data-toggle\": \"dropdown\",\n                        \"aria-haspopup\": \"true\",\n                        \"aria-expanded\": \"false\",\n                      },\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"fas fa-ellipsis-h\" }),\n                      _vm._v(\" \"),\n                      _c(\"span\", { staticClass: \"d-none d-sm-inline\" }),\n                    ]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      class: [\n                        \"dropdown-menu\",\n                        _vm.getConfig(\"direction\") == \"ltr\"\n                          ? \"dropdown-menu-right\"\n                          : \"\",\n                      ],\n                      attrs: { \"aria-labelledby\": \"moreOption\" },\n                    },\n                    [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.print },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-print\" }),\n                          _vm._v(\" \" + _vm._s(_vm.trans(\"general.print\"))),\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"dropdown-item custom-dropdown\",\n                          on: { click: _vm.pdf },\n                        },\n                        [\n                          _c(\"i\", { staticClass: \"fas fa-file-pdf\" }),\n                          _vm._v(\n                            \" \" + _vm._s(_vm.trans(\"general.generate_pdf\"))\n                          ),\n                        ]\n                      ),\n                    ]\n                  ),\n                ]),\n                _vm._v(\" \"),\n                _c(\"help-button\", {\n                  on: {\n                    clicked: function ($event) {\n                      _vm.help_topic = \"finance.transaction.income\"\n                    },\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container-fluid\" },\n        [\n          _c(\"transition\", { attrs: { name: \"fade\" } }, [\n            _vm.showFilterPanel\n              ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                  _c(\"div\", { staticClass: \"card-body\" }, [\n                    _c(\"h4\", { staticClass: \"card-title\" }, [\n                      _vm._v(_vm._s(_vm.trans(\"general.filter\"))),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"row\" }, [\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(\n                                _vm._s(\n                                  _vm.trans(\"finance.transaction_category\")\n                                )\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"transaction_category_id\",\n                                  id: \"transaction_category_id\",\n                                  options: _vm.transaction_categories,\n                                  placeholder: _vm.trans(\n                                    \"finance.select_transaction_category\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_transaction_categories,\n                                },\n                                on: {\n                                  select: _vm.onTransactionCategorySelect,\n                                  remove: _vm.onTransactionCategoryRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_transaction_categories,\n                                  callback: function ($$v) {\n                                    _vm.selected_transaction_categories = $$v\n                                  },\n                                  expression: \"selected_transaction_categories\",\n                                },\n                              },\n                              [\n                                !_vm.transaction_categories.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(_vm._s(_vm.trans(\"finance.account\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"account_id\",\n                                  id: \"account_id\",\n                                  options: _vm.accounts,\n                                  placeholder: _vm.trans(\n                                    \"finance.select_account\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_accounts,\n                                },\n                                on: {\n                                  select: _vm.onAccountSelect,\n                                  remove: _vm.onAccountRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_accounts,\n                                  callback: function ($$v) {\n                                    _vm.selected_accounts = $$v\n                                  },\n                                  expression: \"selected_accounts\",\n                                },\n                              },\n                              [\n                                !_vm.accounts.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"div\", { staticClass: \"col-12 col-sm-3\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group\" },\n                          [\n                            _c(\"label\", { attrs: { for: \"\" } }, [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"finance.payment_method\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"v-select\",\n                              {\n                                attrs: {\n                                  label: \"name\",\n                                  \"track-by\": \"id\",\n                                  name: \"payment_method_id\",\n                                  id: \"payment_method_id\",\n                                  options: _vm.payment_methods,\n                                  placeholder: _vm.trans(\n                                    \"finance.select_payment_method\"\n                                  ),\n                                  multiple: true,\n                                  \"close-on-select\": false,\n                                  \"clear-on-select\": false,\n                                  \"hide-selected\": true,\n                                  selected: _vm.selected_payment_methods,\n                                },\n                                on: {\n                                  select: _vm.onPaymentMethodSelect,\n                                  remove: _vm.onPaymentMethodRemove,\n                                },\n                                model: {\n                                  value: _vm.selected_payment_methods,\n                                  callback: function ($$v) {\n                                    _vm.selected_payment_methods = $$v\n                                  },\n                                  expression: \"selected_payment_methods\",\n                                },\n                              },\n                              [\n                                !_vm.payment_methods.length\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"multiselect__option\",\n                                        attrs: { slot: \"afterList\" },\n                                        slot: \"afterList\",\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                                        \" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"general.no_option_found\"\n                                              )\n                                            ) +\n                                            \"\\n                                    \"\n                                        ),\n                                      ]\n                                    )\n                                  : _vm._e(),\n                              ]\n                            ),\n                          ],\n                          1\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"div\",\n                        { staticClass: \"col-12 col-sm-6\" },\n                        [\n                          _c(\"date-range-picker\", {\n                            attrs: {\n                              \"start-date\":\n                                _vm.filter.date_of_income_start_date,\n                              \"end-date\": _vm.filter.date_of_income_end_date,\n                              label: _vm.trans(\n                                \"finance.date_of_income_between\"\n                              ),\n                            },\n                            on: {\n                              \"update:startDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_income_start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:start-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_income_start_date\",\n                                  $event\n                                )\n                              },\n                              \"update:endDate\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_income_end_date\",\n                                  $event\n                                )\n                              },\n                              \"update:end-date\": function ($event) {\n                                return _vm.$set(\n                                  _vm.filter,\n                                  \"date_of_income_end_date\",\n                                  $event\n                                )\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"card-footer text-right\" }, [\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-danger\",\n                          attrs: { type: \"button\" },\n                          on: {\n                            click: function ($event) {\n                              _vm.showFilterPanel = false\n                            },\n                          },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.cancel\")))]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"btn btn-info waves-effect waves-light\",\n                          attrs: { type: \"button\" },\n                          on: { click: _vm.getIncomes },\n                        },\n                        [_vm._v(_vm._s(_vm.trans(\"general.filter\")))]\n                      ),\n                    ]),\n                  ]),\n                ])\n              : _vm._e(),\n          ]),\n          _vm._v(\" \"),\n          _vm.hasPermission(\"create-income\")\n            ? _c(\"transition\", { attrs: { name: \"fade\" } }, [\n                _vm.showCreatePanel\n                  ? _c(\"div\", { staticClass: \"card card-form\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"card-body\" },\n                        [\n                          _c(\"h4\", { staticClass: \"card-title\" }, [\n                            _vm._v(_vm._s(_vm.trans(\"finance.add_new_income\"))),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\"income-form\", {\n                            on: {\n                              completed: _vm.getIncomes,\n                              cancel: function ($event) {\n                                _vm.showCreatePanel = !_vm.showCreatePanel\n                              },\n                            },\n                          }),\n                        ],\n                        1\n                      ),\n                    ])\n                  : _vm._e(),\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"card\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"card-body\" },\n              [\n                _vm.incomes.total\n                  ? _c(\"div\", { staticClass: \"table-responsive\" }, [\n                      _c(\"table\", { staticClass: \"table table-sm\" }, [\n                        _c(\"thead\", [\n                          _c(\"tr\", [\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"finance.voucher_number\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"finance.income_category\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"finance.account\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"finance.payment_method\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"finance.amount\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(\n                                _vm._s(_vm.trans(\"finance.date_of_income\"))\n                              ),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"general.created_by\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", [\n                              _vm._v(_vm._s(_vm.trans(\"general.created_at\"))),\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\"th\", { staticClass: \"table-option\" }, [\n                              _vm._v(_vm._s(_vm.trans(\"general.action\"))),\n                            ]),\n                          ]),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\n                          \"tbody\",\n                          _vm._l(_vm.incomes.data, function (income) {\n                            return _c(\"tr\", [\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(\n                                    _vm.getVoucherNumber(income.transaction)\n                                  ),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(\n                                    income.transaction_category.name\n                                  ),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(\n                                    income.transaction.account.name\n                                  ),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", {\n                                domProps: {\n                                  textContent: _vm._s(\n                                    income.transaction.payment_method.name\n                                  ),\n                                },\n                              }),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(_vm.formatCurrency(income.amount))\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"moment\")(income.date_of_income)\n                                  )\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.getEmployeeName(income.user.employee)\n                                  ) + \" \"\n                                ),\n                                _c(\"br\"),\n                                _vm._v(\n                                  \" \" +\n                                    _vm._s(\n                                      _vm.getEmployeeDesignationOnDate(\n                                        income.user.employee,\n                                        income.date_of_income\n                                      )\n                                    )\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"momentDateTime\")(income.created_at)\n                                  )\n                                ),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"td\", { staticClass: \"table-option\" }, [\n                                _c(\n                                  \"div\",\n                                  { staticClass: \"btn-group\" },\n                                  [\n                                    _c(\n                                      \"a\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"tooltip\",\n                                            rawName: \"v-tooltip\",\n                                            value: _vm.trans(\"general.print\"),\n                                            expression:\n                                              \"trans('general.print')\",\n                                          },\n                                        ],\n                                        staticClass: \"btn btn-success btn-sm\",\n                                        attrs: {\n                                          href: `/finance/transaction/income/${income.uuid}/print?token=${_vm.authToken}`,\n                                          target: \"_blank\",\n                                        },\n                                      },\n                                      [_c(\"i\", { staticClass: \"fas fa-print\" })]\n                                    ),\n                                    _vm._v(\" \"),\n                                    _c(\n                                      \"button\",\n                                      {\n                                        directives: [\n                                          {\n                                            name: \"tooltip\",\n                                            rawName: \"v-tooltip\",\n                                            value: _vm.trans(\n                                              \"general.view_detail\"\n                                            ),\n                                            expression:\n                                              \"trans('general.view_detail')\",\n                                          },\n                                        ],\n                                        staticClass: \"btn btn-success btn-sm\",\n                                        on: {\n                                          click: function ($event) {\n                                            $event.preventDefault()\n                                            return _vm.showAction(income)\n                                          },\n                                        },\n                                      },\n                                      [\n                                        _c(\"i\", {\n                                          staticClass:\n                                            \"fas fa-arrow-circle-right\",\n                                        }),\n                                      ]\n                                    ),\n                                    _vm._v(\" \"),\n                                    !income.is_cancelled\n                                      ? [\n                                          _vm.hasPermission(\"edit-income\")\n                                            ? _c(\n                                                \"button\",\n                                                {\n                                                  directives: [\n                                                    {\n                                                      name: \"tooltip\",\n                                                      rawName: \"v-tooltip\",\n                                                      value: _vm.trans(\n                                                        \"finance.edit_income\"\n                                                      ),\n                                                      expression:\n                                                        \"trans('finance.edit_income')\",\n                                                    },\n                                                  ],\n                                                  staticClass:\n                                                    \"btn btn-info btn-sm\",\n                                                  on: {\n                                                    click: function ($event) {\n                                                      $event.preventDefault()\n                                                      return _vm.editIncome(\n                                                        income\n                                                      )\n                                                    },\n                                                  },\n                                                },\n                                                [\n                                                  _c(\"i\", {\n                                                    staticClass: \"fas fa-edit\",\n                                                  }),\n                                                ]\n                                              )\n                                            : _vm._e(),\n                                          _vm._v(\" \"),\n                                          _vm.hasPermission(\"cancel-income\")\n                                            ? _c(\n                                                \"button\",\n                                                {\n                                                  directives: [\n                                                    {\n                                                      name: \"confirm\",\n                                                      rawName: \"v-confirm\",\n                                                      value: {\n                                                        ok: _vm.confirmCancel(\n                                                          income\n                                                        ),\n                                                      },\n                                                      expression:\n                                                        \"{ok: confirmCancel(income)}\",\n                                                    },\n                                                    {\n                                                      name: \"tooltip\",\n                                                      rawName: \"v-tooltip\",\n                                                      value: _vm.trans(\n                                                        \"finance.cancel_income\"\n                                                      ),\n                                                      expression:\n                                                        \"trans('finance.cancel_income')\",\n                                                    },\n                                                  ],\n                                                  key: income.id,\n                                                  staticClass:\n                                                    \"btn btn-danger btn-sm\",\n                                                },\n                                                [\n                                                  _c(\"i\", {\n                                                    staticClass: \"fas fa-times\",\n                                                  }),\n                                                ]\n                                              )\n                                            : _vm._e(),\n                                        ]\n                                      : _vm._e(),\n                                  ],\n                                  2\n                                ),\n                              ]),\n                            ])\n                          }),\n                          0\n                        ),\n                      ]),\n                    ])\n                  : _vm._e(),\n                _vm._v(\" \"),\n                !_vm.incomes.total\n                  ? _c(\n                      \"module-info\",\n                      {\n                        attrs: {\n                          module: \"finance\",\n                          title: \"income_module_title\",\n                          description: \"income_module_description\",\n                          icon: \"list\",\n                        },\n                      },\n                      [\n                        _c(\"div\", { attrs: { slot: \"btn\" }, slot: \"btn\" }, [\n                          !_vm.showCreatePanel &&\n                          _vm.hasPermission(\"create-income\")\n                            ? _c(\n                                \"button\",\n                                {\n                                  staticClass: \"btn btn-info btn-md\",\n                                  on: {\n                                    click: function ($event) {\n                                      _vm.showCreatePanel = !_vm.showCreatePanel\n                                    },\n                                  },\n                                },\n                                [\n                                  _c(\"i\", { staticClass: \"fas fa-plus\" }),\n                                  _vm._v(\n                                    \" \" + _vm._s(_vm.trans(\"general.add_new\"))\n                                  ),\n                                ]\n                              )\n                            : _vm._e(),\n                        ]),\n                      ]\n                    )\n                  : _vm._e(),\n                _vm._v(\" \"),\n                _c(\"pagination-record\", {\n                  attrs: {\n                    \"page-length\": _vm.filter.page_length,\n                    records: _vm.incomes,\n                  },\n                  on: {\n                    \"update:pageLength\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    \"update:page-length\": function ($event) {\n                      return _vm.$set(_vm.filter, \"page_length\", $event)\n                    },\n                    updateRecords: _vm.getIncomes,\n                  },\n                }),\n              ],\n              1\n            ),\n          ]),\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _vm.showModal\n        ? _c(\"income-detail\", {\n            attrs: { uuid: _vm.showUuid },\n            on: {\n              close: function ($event) {\n                _vm.showModal = false\n              },\n            },\n          })\n        : _vm._e(),\n      _vm._v(\" \"),\n      _c(\"right-panel\", { attrs: { topic: _vm.help_topic } }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\"transition\", { attrs: { name: \"modal\" } }, [\n    _c(\"div\", { staticClass: \"modal-mask\" }, [\n      _c(\"div\", { staticClass: \"modal-wrapper\" }, [\n        _c(\"div\", { staticClass: \"modal-container modal-lg\" }, [\n          _vm.income.id\n            ? _c(\n                \"div\",\n                { staticClass: \"modal-header\" },\n                [\n                  _vm._t(\"header\", function () {\n                    return [\n                      _c(\"span\", [\n                        _vm._v(\n                          _vm._s(_vm.trans(\"finance.income\")) +\n                            \" #\" +\n                            _vm._s(\n                              _vm.getVoucherNumber(_vm.income.transaction)\n                            ) +\n                            \"\\n                            \\t\"\n                        ),\n                        _vm.income.is_cancelled\n                          ? _c(\"span\", { staticClass: \"label label-danger\" }, [\n                              _vm._v(\n                                \"\\n                            \\t\\t\" +\n                                  _vm._s(\n                                    _vm.trans(\n                                      \"finance.transaction_status_cancelled\"\n                                    )\n                                  ) +\n                                  \"\\n                            \\t\"\n                              ),\n                            ])\n                          : _vm._e(),\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"span\",\n                        {\n                          staticClass: \"float-right pointer\",\n                          on: {\n                            click: function ($event) {\n                              return _vm.$emit(\"close\")\n                            },\n                          },\n                        },\n                        [_vm._v(\"x\")]\n                      ),\n                    ]\n                  }),\n                ],\n                2\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.income.id\n            ? _c(\n                \"div\",\n                { staticClass: \"modal-body\" },\n                [\n                  _vm._t(\"body\", function () {\n                    return [\n                      _c(\"div\", { staticClass: \"table-responsive\" }, [\n                        _c(\n                          \"table\",\n                          { staticClass: \"table table-sm custom-show-table\" },\n                          [\n                            _c(\"tbody\", [\n                              _c(\"tr\", [\n                                _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                                  _vm._v(\"#\"),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.getVoucherNumber(\n                                        _vm.income.transaction\n                                      )\n                                    )\n                                  ),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"tr\", [\n                                _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"finance.income_category\"))\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(_vm.income.transaction_category.name)\n                                  ),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"tr\", [\n                                _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"finance.date_of_income\"))\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm._f(\"moment\")(\n                                        _vm.income.date_of_income\n                                      )\n                                    )\n                                  ),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"tr\", [\n                                _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                                  _vm._v(_vm._s(_vm.trans(\"finance.account\"))),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(_vm.income.transaction.account.name)\n                                  ),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"tr\", [\n                                _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"finance.payment_method\"))\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    \"\\n\\t                        \\t\\t\\t\\t\\t\" +\n                                      _vm._s(\n                                        _vm.income.transaction.payment_method\n                                          .name\n                                      ) +\n                                      \"\\n\\t                        \\t\\t\\t\\t\\t\"\n                                  ),\n                                  _vm.income.transaction.payment_method.options\n                                    .requires_instrument_number\n                                    ? _c(\"span\", [\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \"\\t\" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"finance.instrument_number\"\n                                              )\n                                            ) +\n                                            \": \" +\n                                            _vm._s(\n                                              _vm.income.transaction\n                                                .instrument_number\n                                            ) +\n                                            \"\\n\\t                        \\t\\t\\t\\t\\t\"\n                                        ),\n                                      ])\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _vm.income.transaction.payment_method.options\n                                    .requires_instrument_date\n                                    ? _c(\"span\", [\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \"\\t\" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"finance.instrument_date\"\n                                              )\n                                            ) +\n                                            \": \" +\n                                            _vm._s(\n                                              _vm._f(\"moment\")(\n                                                _vm.income.transaction\n                                                  .instrument_date\n                                              )\n                                            ) +\n                                            \"\\n\\t                        \\t\\t\\t\\t\\t\"\n                                        ),\n                                      ])\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _vm.income.transaction.payment_method.options\n                                    .requires_instrument_bank_detail\n                                    ? _c(\"span\", [\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \"\\t\" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"finance.instrument_bank_detail\"\n                                              )\n                                            ) +\n                                            \": \" +\n                                            _vm._s(\n                                              _vm.income.transaction\n                                                .instrument_bank_detail\n                                            ) +\n                                            \"\\n\\t                        \\t\\t\\t\\t\\t\"\n                                        ),\n                                      ])\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _vm.income.transaction.payment_method.options\n                                    .requires_instrument_clearing_date\n                                    ? _c(\"span\", [\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \"\\t\" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"finance.instrument_clearing_date\"\n                                              )\n                                            ) +\n                                            \": \" +\n                                            _vm._s(\n                                              _vm._f(\"moment\")(\n                                                _vm.income.transaction\n                                                  .instrument_clearing_date\n                                              )\n                                            ) +\n                                            \"\\n\\t                        \\t\\t\\t\\t\\t\"\n                                        ),\n                                      ])\n                                    : _vm._e(),\n                                  _vm._v(\" \"),\n                                  _vm.income.transaction.payment_method.options\n                                    .requires_reference_number\n                                    ? _c(\"span\", [\n                                        _c(\"br\"),\n                                        _vm._v(\n                                          \"\\t\" +\n                                            _vm._s(\n                                              _vm.trans(\n                                                \"finance.reference_number\"\n                                              )\n                                            ) +\n                                            \": \" +\n                                            _vm._s(\n                                              _vm.income.transaction\n                                                .reference_number\n                                            ) +\n                                            \"\\n\\t                        \\t\\t\\t\\t\\t\"\n                                        ),\n                                      ])\n                                    : _vm._e(),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"tr\", [\n                                _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                                  _vm._v(_vm._s(_vm.trans(\"finance.amount\"))),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.formatCurrency(_vm.income.amount)\n                                    )\n                                  ),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"tr\", [\n                                _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.trans(\"finance.income_description\")\n                                    )\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(_vm._s(_vm.income.description)),\n                                ]),\n                              ]),\n                              _vm._v(\" \"),\n                              _c(\"tr\", [\n                                _c(\"td\", { staticClass: \"font-weight-bold\" }, [\n                                  _vm._v(\n                                    _vm._s(_vm.trans(\"general.created_by\"))\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"td\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.getEmployeeName(\n                                        _vm.income.user.employee\n                                      )\n                                    ) + \" \"\n                                  ),\n                                  _c(\"br\"),\n                                  _vm._v(\n                                    \" \" +\n                                      _vm._s(\n                                        _vm.getEmployeeDesignationOnDate(\n                                          _vm.income.user.employee,\n                                          _vm.income.date_of_income\n                                        )\n                                      )\n                                  ),\n                                ]),\n                              ]),\n                            ]),\n                          ]\n                        ),\n                      ]),\n                      _vm._v(\" \"),\n                      _vm.attachments.length\n                        ? _c(\"div\", [\n                            _c(\n                              \"ul\",\n                              { staticClass: \"m-t-10 upload-file-list\" },\n                              _vm._l(_vm.attachments, function (attachment) {\n                                return _c(\n                                  \"li\",\n                                  { staticClass: \"upload-file-list-item\" },\n                                  [\n                                    _c(\n                                      \"a\",\n                                      {\n                                        staticClass: \"no-link-color\",\n                                        attrs: {\n                                          href: `/finance/transaction/income/${_vm.income.uuid}/attachment/${attachment.uuid}/download?token=${_vm.authToken}`,\n                                        },\n                                      },\n                                      [\n                                        _c(\"i\", {\n                                          class: [\n                                            \"file-icon\",\n                                            \"fas\",\n                                            \"fa-lg\",\n                                            attachment.file_info.icon,\n                                          ],\n                                        }),\n                                        _vm._v(\" \"),\n                                        _c(\n                                          \"span\",\n                                          {\n                                            staticClass:\n                                              \"upload-file-list-item-size\",\n                                          },\n                                          [\n                                            _vm._v(\n                                              _vm._s(attachment.file_info.size)\n                                            ),\n                                          ]\n                                        ),\n                                        _vm._v(\n                                          \" \" + _vm._s(attachment.user_filename)\n                                        ),\n                                      ]\n                                    ),\n                                  ]\n                                )\n                              }),\n                              0\n                            ),\n                          ])\n                        : _vm._e(),\n                      _vm._v(\" \"),\n                      _c(\"hr\"),\n                      _vm._v(\" \"),\n                      _c(\"p\", [\n                        _c(\"i\", { staticClass: \"far fa-clock\" }),\n                        _vm._v(\" \"),\n                        _c(\"small\", [\n                          _vm._v(\n                            _vm._s(_vm.trans(\"general.created_at\")) +\n                              \" \" +\n                              _vm._s(\n                                _vm._f(\"momentDateTime\")(_vm.income.created_at)\n                              )\n                          ),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"span\", { staticClass: \"pull-right\" }, [\n                          _c(\"i\", { staticClass: \"far fa-clock\" }),\n                          _vm._v(\" \"),\n                          _c(\"small\", [\n                            _vm._v(\n                              _vm._s(_vm.trans(\"general.updated_at\")) +\n                                \" \" +\n                                _vm._s(\n                                  _vm._f(\"momentDateTime\")(\n                                    _vm.income.updated_at\n                                  )\n                                )\n                            ),\n                          ]),\n                        ]),\n                      ]),\n                    ]\n                  }),\n                ],\n                2\n              )\n            : _vm._e(),\n        ]),\n      ]),\n    ]),\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\n.loading-overlay.is-full-page{\\n    z-index: 1060;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./resources/js/views/configuration/finance/transaction/category/form.vue\"],\"names\":[],\"mappings\":\";AA0HA;IACA,aAAA;AACA\",\"sourcesContent\":[\"<template>\\n    <form @submit.prevent=\\\"proceed\\\" @keydown=\\\"transactionCategoryForm.errors.clear($event.target.name)\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12 col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">{{trans('finance.transaction_category_name')}}</label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"transactionCategoryForm.name\\\" name=\\\"name\\\" :placeholder=\\\"trans('finance.transaction_category_name')\\\">\\n                    <show-error :form-name=\\\"transactionCategoryForm\\\" prop-name=\\\"name\\\"></show-error>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">{{trans('finance.transaction_category_type')}}</label>\\n                    <select v-model=\\\"transactionCategoryForm.type\\\" class=\\\"col-12 custom-select\\\" @change=\\\"transactionCategoryForm.errors.clear('type')\\\" name=\\\"type\\\">\\n                      <option value=null selected>{{trans('general.select_one')}}</option>\\n                      <option v-for=\\\"type in types\\\" v-bind:value=\\\"type.value\\\">\\n                        {{ type.text }}\\n                      </option>\\n                    </select>\\n                    <show-error :form-name=\\\"transactionCategoryForm\\\" prop-name=\\\"type\\\"></show-error>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12 col-sm-4\\\">\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"\\\">{{trans('finance.transaction_category_description')}}</label>\\n                    <input class=\\\"form-control\\\" type=\\\"text\\\" v-model=\\\"transactionCategoryForm.description\\\" name=\\\"description\\\" :placeholder=\\\"trans('finance.transaction_category_description')\\\">\\n                    <show-error :form-name=\\\"transactionCategoryForm\\\" prop-name=\\\"description\\\"></show-error>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"card-footer text-right\\\">\\n            <button v-if=\\\"!id\\\" type=\\\"button\\\" class=\\\"btn btn-danger waves-effect waves-light \\\" @click=\\\"$emit('cancel')\\\">{{trans('general.cancel')}}</button>\\n            <router-link to=\\\"/configuration/finance/transaction/category\\\" class=\\\"btn btn-danger waves-effect waves-light \\\" v-show=\\\"id\\\">{{trans('general.cancel')}}</router-link>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-info waves-effect waves-light\\\">\\n                <span v-if=\\\"id\\\">{{trans('general.update')}}</span>\\n                <span v-else>{{trans('general.save')}}</span>\\n            </button>\\n        </div>\\n    </form>\\n</template>\\n\\n\\n<script>\\n    export default {\\n        data() {\\n            return {\\n                transactionCategoryForm: new Form({\\n                    name : '',\\n                    type: '',\\n                    description : ''\\n                }),\\n                types: [\\n                    {\\n                        text: i18n.finance.income,\\n                        value: 'income'\\n                    },\\n                    {\\n                        text: i18n.finance.expense,\\n                        value: 'expense'\\n                    }\\n                ]\\n            };\\n        },\\n        props: ['id'],\\n        mounted() {\\n            if(this.id)\\n                this.get();\\n        },\\n        methods: {\\n            proceed(){\\n                if(this.id)\\n                    this.update();\\n                else\\n                    this.store();\\n            },\\n            store(){\\n                let loader = this.$loading.show();\\n                this.transactionCategoryForm.post('/api/finance/transaction/category')\\n                    .then(response => {\\n                        toastr.success(response.message);\\n                        this.$emit('completed');\\n                        loader.hide();\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                    });\\n            },\\n            get(){\\n                let loader = this.$loading.show();\\n                axios.get('/api/finance/transaction/category/'+this.id)\\n                    .then(response => {\\n                        this.transactionCategoryForm.name = response.name;\\n                        this.transactionCategoryForm.type = response.type;\\n                        this.transactionCategoryForm.description = response.description;\\n                        loader.hide();\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                        this.$router.push('/configuration/finance/transaction/category');\\n                    });\\n            },\\n            update(){\\n                let loader = this.$loading.show();\\n                this.transactionCategoryForm.patch('/api/finance/transaction/category/'+this.id)\\n                    .then(response => {\\n                        toastr.success(response.message);\\n                        loader.hide();\\n                        this.$router.push('/configuration/finance/transaction/category');\\n                    })\\n                    .catch(error => {\\n                        loader.hide();\\n                        helper.showErrorMsg(error);\\n                    });\\n            }\\n        }\\n    }\\n</script>\\n\\n<style>\\n.loading-overlay.is-full-page{\\n    z-index: 1060;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","import api from \"!../../../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-16.use[1]!../../../../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-16.use[2]!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=style&index=0&id=cf5c2572&lang=css&\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=cf5c2572&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\nimport style0 from \"./form.vue?vue&type=style&index=0&id=cf5c2572&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('cf5c2572')) {\n      api.createRecord('cf5c2572', component.options)\n    } else {\n      api.reload('cf5c2572', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=cf5c2572&\", function () {\n      api.rerender('cf5c2572', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/configuration/finance/transaction/category/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./form.vue?vue&type=template&id=7acbfbd5&\"\nimport script from \"./form.vue?vue&type=script&lang=js&\"\nexport * from \"./form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('7acbfbd5')) {\n      api.createRecord('7acbfbd5', component.options)\n    } else {\n      api.reload('7acbfbd5', component.options)\n    }\n    module.hot.accept(\"./form.vue?vue&type=template&id=7acbfbd5&\", function () {\n      api.rerender('7acbfbd5', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/finance/transaction/income/form.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=4553b311&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4553b311')) {\n      api.createRecord('4553b311', component.options)\n    } else {\n      api.reload('4553b311', component.options)\n    }\n    module.hot.accept(\"./index.vue?vue&type=template&id=4553b311&\", function () {\n      api.rerender('4553b311', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/finance/transaction/income/index.vue\"\nexport default component.exports","import { render, staticRenderFns } from \"./show.vue?vue&type=template&id=4a5e058e&\"\nimport script from \"./show.vue?vue&type=script&lang=js&\"\nexport * from \"./show.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"E:\\\\Work_shop\\\\laragon\\\\www\\\\Yogaschool\\\\node_modules\\\\vue-hot-reload-api\\\\dist\\\\index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('4a5e058e')) {\n      api.createRecord('4a5e058e', component.options)\n    } else {\n      api.reload('4a5e058e', component.options)\n    }\n    module.hot.accept(\"./show.vue?vue&type=template&id=4a5e058e&\", function () {\n      api.rerender('4a5e058e', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/finance/transaction/income/show.vue\"\nexport default component.exports","import mod from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./form.vue?vue&type=template&id=7acbfbd5&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=template&id=4553b311&\"","export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ruleSet[1].rules[2]!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./show.vue?vue&type=template&id=4a5e058e&\""],"names":[],"sourceRoot":""}